### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties
  commentId: T:Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties
  id: OperationsMonitoringProperties
  parent: Microsoft.Azure.Management.IotHub.Models
  children:
  - Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.#ctor
  - Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.Events
  langs:
  - csharp
  - vb
  name: OperationsMonitoringProperties
  nameWithType: OperationsMonitoringProperties
  fullName: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties
  type: Class
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/OperationsMonitoringProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OperationsMonitoringProperties
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/OperationsMonitoringProperties.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nThe Operation Monitoring properties.\n"
  example: []
  syntax:
    content: public class OperationsMonitoringProperties
    content.vb: Public Class OperationsMonitoringProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.#ctor
  commentId: M:Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties
  langs:
  - csharp
  - vb
  name: OperationsMonitoringProperties()
  nameWithType: OperationsMonitoringProperties.OperationsMonitoringProperties()
  fullName: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.OperationsMonitoringProperties()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/OperationsMonitoringProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/OperationsMonitoringProperties.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nInitializes a new instance of the OperationsMonitoringProperties\nclass.\n"
  example: []
  syntax:
    content: public OperationsMonitoringProperties()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties
  langs:
  - csharp
  - vb
  name: OperationsMonitoringProperties(IDictionary<String, String>)
  nameWithType: OperationsMonitoringProperties.OperationsMonitoringProperties(IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.OperationsMonitoringProperties(System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/OperationsMonitoringProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/OperationsMonitoringProperties.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nInitializes a new instance of the OperationsMonitoringProperties\nclass.\n"
  example: []
  syntax:
    content: public OperationsMonitoringProperties(IDictionary<string, string> events = null)
    content.vb: Public Sub New(events As IDictionary(Of String, String) = Nothing)
    parameters:
    - id: events
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.#ctor*
  nameWithType.vb: OperationsMonitoringProperties.OperationsMonitoringProperties(IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.OperationsMonitoringProperties(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: OperationsMonitoringProperties(IDictionary(Of String, String))
- uid: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.Events
  commentId: P:Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.Events
  id: Events
  parent: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: OperationsMonitoringProperties.Events
  fullName: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.Events
  type: Property
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/OperationsMonitoringProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Events
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/OperationsMonitoringProperties.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "events")]

      public IDictionary<string, string> Events { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="events")>

      Public Property Events As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.Events*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: events
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.IotHub.Models
  commentId: N:Microsoft.Azure.Management.IotHub.Models
  isExternal: false
  name: Microsoft.Azure.Management.IotHub.Models
  nameWithType: Microsoft.Azure.Management.IotHub.Models
  fullName: Microsoft.Azure.Management.IotHub.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.#ctor*
  commentId: Overload:Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.#ctor
  isExternal: false
  name: OperationsMonitoringProperties
  nameWithType: OperationsMonitoringProperties.OperationsMonitoringProperties
  fullName: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.OperationsMonitoringProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.Events*
  commentId: Overload:Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.Events
  isExternal: false
  name: Events
  nameWithType: OperationsMonitoringProperties.Events
  fullName: Microsoft.Azure.Management.IotHub.Models.OperationsMonitoringProperties.Events
