### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect
  id: ClientScriptForConnect
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.#ctor
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.#ctor(System.String,System.String,System.String)
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.OsType
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptContent
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptExtension
  langs:
  - csharp
  - vb
  name: ClientScriptForConnect
  nameWithType: ClientScriptForConnect
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ClientScriptForConnect
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nClient script details for file / folder restore.\n"
  example: []
  syntax:
    content: public class ClientScriptForConnect
    content.vb: Public Class ClientScriptForConnect
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.#ctor
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect
  langs:
  - csharp
  - vb
  name: ClientScriptForConnect()
  nameWithType: ClientScriptForConnect.ClientScriptForConnect()
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ClientScriptForConnect()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the ClientScriptForConnect class.\n"
  example: []
  syntax:
    content: public ClientScriptForConnect()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect
  langs:
  - csharp
  - vb
  name: ClientScriptForConnect(String, String, String)
  nameWithType: ClientScriptForConnect.ClientScriptForConnect(String, String, String)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ClientScriptForConnect(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the ClientScriptForConnect class.\n"
  example: []
  syntax:
    content: public ClientScriptForConnect(string scriptContent = null, string scriptExtension = null, string osType = null)
    content.vb: Public Sub New(scriptContent As String = Nothing, scriptExtension As String = Nothing, osType As String = Nothing)
    parameters:
    - id: scriptContent
      type: System.String
      description: >-
        File content of the client script for

        file / folder restore.
    - id: scriptExtension
      type: System.String
      description: >-
        File extension of the client script

        for file / folder restore - .ps1 , .sh , etc.
    - id: osType
      type: System.String
      description: >-
        OS type - Windows, Linux etc. for which this

        file / folder restore client script works.
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptContent
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptContent
  id: ScriptContent
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect
  langs:
  - csharp
  - vb
  name: ScriptContent
  nameWithType: ClientScriptForConnect.ScriptContent
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptContent
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ScriptContent
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets file content of the client script for file / folder\nrestore.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "scriptContent")]

      public string ScriptContent { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="scriptContent")>

      Public Property ScriptContent As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptContent*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: scriptContent
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptExtension
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptExtension
  id: ScriptExtension
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect
  langs:
  - csharp
  - vb
  name: ScriptExtension
  nameWithType: ClientScriptForConnect.ScriptExtension
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptExtension
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ScriptExtension
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets file extension of the client script for file / folder\nrestore - .ps1 , .sh , etc.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "scriptExtension")]

      public string ScriptExtension { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="scriptExtension")>

      Public Property ScriptExtension As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptExtension*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: scriptExtension
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.OsType
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.OsType
  id: OsType
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect
  langs:
  - csharp
  - vb
  name: OsType
  nameWithType: ClientScriptForConnect.OsType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.OsType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OsType
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ClientScriptForConnect.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets OS type - Windows, Linux etc. for which this file /\nfolder restore client script works.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "osType")]

      public string OsType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="osType")>

      Public Property OsType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.OsType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: osType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  commentId: N:Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  nameWithType: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.#ctor*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.#ctor
  isExternal: false
  name: ClientScriptForConnect
  nameWithType: ClientScriptForConnect.ClientScriptForConnect
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ClientScriptForConnect
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptContent*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptContent
  isExternal: false
  name: ScriptContent
  nameWithType: ClientScriptForConnect.ScriptContent
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptContent
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptExtension*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptExtension
  isExternal: false
  name: ScriptExtension
  nameWithType: ClientScriptForConnect.ScriptExtension
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.ScriptExtension
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.OsType*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.OsType
  isExternal: false
  name: OsType
  nameWithType: ClientScriptForConnect.OsType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ClientScriptForConnect.OsType
