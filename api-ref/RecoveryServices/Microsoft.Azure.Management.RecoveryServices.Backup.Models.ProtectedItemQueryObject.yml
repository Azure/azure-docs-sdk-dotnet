### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject
  id: ProtectedItemQueryObject
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.#ctor
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.#ctor(System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType},System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType},System.String,System.String)
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.BackupManagementType
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ContainerName
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ItemType
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.PolicyName
  langs:
  - csharp
  - vb
  name: ProtectedItemQueryObject
  nameWithType: ProtectedItemQueryObject
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProtectedItemQueryObject
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nFilters to list backup items.\n"
  example: []
  syntax:
    content: public class ProtectedItemQueryObject
    content.vb: Public Class ProtectedItemQueryObject
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.#ctor
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject
  langs:
  - csharp
  - vb
  name: ProtectedItemQueryObject()
  nameWithType: ProtectedItemQueryObject.ProtectedItemQueryObject()
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ProtectedItemQueryObject()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the ProtectedItemQueryObject class.\n"
  example: []
  syntax:
    content: public ProtectedItemQueryObject()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.#ctor(System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType},System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.#ctor(System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType},System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType},System.String,System.String)
  id: '#ctor(System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType},System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType},System.String,System.String)'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject
  langs:
  - csharp
  - vb
  name: ProtectedItemQueryObject(Nullable<BackupManagementType>, Nullable<DataSourceType>, String, String)
  nameWithType: ProtectedItemQueryObject.ProtectedItemQueryObject(Nullable<BackupManagementType>, Nullable<DataSourceType>, String, String)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ProtectedItemQueryObject(System.Nullable<Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType>, System.Nullable<Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the ProtectedItemQueryObject class.\n"
  example: []
  syntax:
    content: public ProtectedItemQueryObject(BackupManagementType? backupManagementType = null, DataSourceType? itemType = null, string policyName = null, string containerName = null)
    content.vb: Public Sub New(backupManagementType As BackupManagementType? = Nothing, itemType As DataSourceType? = Nothing, policyName As String = Nothing, containerName As String = Nothing)
    parameters:
    - id: backupManagementType
      type: System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType}
      description: >-
        Backup management type for the

        backed up item. Possible values include: 'Invalid',

        'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',

        'AzureSql'
    - id: itemType
      type: System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType}
      description: >-
        Type of workload this item represents.

        Possible values include: 'Invalid', 'VM', 'FileFolder',

        'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint',

        'DPMUnknown'
    - id: policyName
      type: System.String
      description: >-
        Backup policy name associated with the

        backup item.
    - id: containerName
      type: System.String
      description: Name of the container.
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.#ctor*
  nameWithType.vb: ProtectedItemQueryObject.ProtectedItemQueryObject(Nullable(Of BackupManagementType), Nullable(Of DataSourceType), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ProtectedItemQueryObject(System.Nullable(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType), System.Nullable(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType), System.String, System.String)
  name.vb: ProtectedItemQueryObject(Nullable(Of BackupManagementType), Nullable(Of DataSourceType), String, String)
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.BackupManagementType
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.BackupManagementType
  id: BackupManagementType
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject
  langs:
  - csharp
  - vb
  name: BackupManagementType
  nameWithType: ProtectedItemQueryObject.BackupManagementType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.BackupManagementType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackupManagementType
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets backup management type for the backed up item.\nPossible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',\n'AzureBackupServer', 'AzureSql'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "backupManagementType")]

      public BackupManagementType? BackupManagementType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="backupManagementType")>

      Public Property BackupManagementType As BackupManagementType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.BackupManagementType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: backupManagementType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ItemType
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ItemType
  id: ItemType
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject
  langs:
  - csharp
  - vb
  name: ItemType
  nameWithType: ProtectedItemQueryObject.ItemType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ItemType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ItemType
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets type of workload this item represents. Possible\nvalues include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb',\n'SQLDB', 'Exchange', 'Sharepoint', 'DPMUnknown'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "itemType")]

      public DataSourceType? ItemType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="itemType")>

      Public Property ItemType As DataSourceType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ItemType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: itemType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.PolicyName
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.PolicyName
  id: PolicyName
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject
  langs:
  - csharp
  - vb
  name: PolicyName
  nameWithType: ProtectedItemQueryObject.PolicyName
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.PolicyName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PolicyName
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets backup policy name associated with the backup item.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "policyName")]

      public string PolicyName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="policyName")>

      Public Property PolicyName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.PolicyName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: policyName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ContainerName
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ContainerName
  id: ContainerName
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject
  langs:
  - csharp
  - vb
  name: ContainerName
  nameWithType: ProtectedItemQueryObject.ContainerName
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ContainerName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContainerName
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/ProtectedItemQueryObject.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets name of the container.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "containerName")]

      public string ContainerName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="containerName")>

      Public Property ContainerName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ContainerName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: containerName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  commentId: N:Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  nameWithType: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.#ctor*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.#ctor
  isExternal: false
  name: ProtectedItemQueryObject
  nameWithType: ProtectedItemQueryObject.ProtectedItemQueryObject
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ProtectedItemQueryObject
- uid: System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType}
  commentId: T:System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<BackupManagementType>
  nameWithType: Nullable<BackupManagementType>
  fullName: System.Nullable<Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType>
  nameWithType.vb: Nullable(Of BackupManagementType)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType)
  name.vb: Nullable(Of BackupManagementType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType
    name: BackupManagementType
    nameWithType: BackupManagementType
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType
    name: BackupManagementType
    nameWithType: BackupManagementType
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType}
  commentId: T:System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DataSourceType>
  nameWithType: Nullable<DataSourceType>
  fullName: System.Nullable<Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType>
  nameWithType.vb: Nullable(Of DataSourceType)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType)
  name.vb: Nullable(Of DataSourceType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType
    name: DataSourceType
    nameWithType: DataSourceType
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType
    name: DataSourceType
    nameWithType: DataSourceType
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.DataSourceType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.BackupManagementType*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.BackupManagementType
  isExternal: false
  name: BackupManagementType
  nameWithType: ProtectedItemQueryObject.BackupManagementType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.BackupManagementType
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ItemType*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ItemType
  isExternal: false
  name: ItemType
  nameWithType: ProtectedItemQueryObject.ItemType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ItemType
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.PolicyName*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.PolicyName
  isExternal: false
  name: PolicyName
  nameWithType: ProtectedItemQueryObject.PolicyName
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.PolicyName
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ContainerName*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ContainerName
  isExternal: false
  name: ContainerName
  nameWithType: ProtectedItemQueryObject.ContainerName
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemQueryObject.ContainerName
