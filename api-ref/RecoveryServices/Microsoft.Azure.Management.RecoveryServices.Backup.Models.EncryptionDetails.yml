### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails
  id: EncryptionDetails
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.#ctor
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.#ctor(System.Nullable{System.Boolean},System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionEnabled
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekUrl
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekVaultId
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyUrl
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyVaultId
  langs:
  - csharp
  - vb
  name: EncryptionDetails
  nameWithType: EncryptionDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptionDetails
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nDetails needed if the VM was encrypted at the time of backup.\n"
  example: []
  syntax:
    content: public class EncryptionDetails
    content.vb: Public Class EncryptionDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.#ctor
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails
  langs:
  - csharp
  - vb
  name: EncryptionDetails()
  nameWithType: EncryptionDetails.EncryptionDetails()
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionDetails()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the EncryptionDetails class.\n"
  example: []
  syntax:
    content: public EncryptionDetails()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.#ctor(System.Nullable{System.Boolean},System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.#ctor(System.Nullable{System.Boolean},System.String,System.String,System.String,System.String)
  id: '#ctor(System.Nullable{System.Boolean},System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails
  langs:
  - csharp
  - vb
  name: EncryptionDetails(Nullable<Boolean>, String, String, String, String)
  nameWithType: EncryptionDetails.EncryptionDetails(Nullable<Boolean>, String, String, String, String)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionDetails(System.Nullable<System.Boolean>, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the EncryptionDetails class.\n"
  example: []
  syntax:
    content: public EncryptionDetails(bool ? encryptionEnabled = null, string kekUrl = null, string secretKeyUrl = null, string kekVaultId = null, string secretKeyVaultId = null)
    content.vb: Public Sub New(encryptionEnabled As Boolean? = Nothing, kekUrl As String = Nothing, secretKeyUrl As String = Nothing, kekVaultId As String = Nothing, secretKeyVaultId As String = Nothing)
    parameters:
    - id: encryptionEnabled
      type: System.Nullable{System.Boolean}
      description: >-
        Identifies whether this backup

        copy represents an encrypted VM at the time of backup.
    - id: kekUrl
      type: System.String
      description: Key Url.
    - id: secretKeyUrl
      type: System.String
      description: Secret Url.
    - id: kekVaultId
      type: System.String
      description: >-
        ID of Key Vault where KEK is

        stored.
    - id: secretKeyVaultId
      type: System.String
      description: >-
        ID of Key Vault where Secret is

        stored.
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.#ctor*
  nameWithType.vb: EncryptionDetails.EncryptionDetails(Nullable(Of Boolean), String, String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionDetails(System.Nullable(Of System.Boolean), System.String, System.String, System.String, System.String)
  name.vb: EncryptionDetails(Nullable(Of Boolean), String, String, String, String)
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionEnabled
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionEnabled
  id: EncryptionEnabled
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails
  langs:
  - csharp
  - vb
  name: EncryptionEnabled
  nameWithType: EncryptionDetails.EncryptionEnabled
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptionEnabled
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets identifies whether this backup copy represents an\nencrypted VM at the time of backup.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "encryptionEnabled")]

      public bool ? EncryptionEnabled { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="encryptionEnabled")>

      Public Property EncryptionEnabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionEnabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: encryptionEnabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekUrl
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekUrl
  id: KekUrl
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails
  langs:
  - csharp
  - vb
  name: KekUrl
  nameWithType: EncryptionDetails.KekUrl
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KekUrl
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets key Url.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "kekUrl")]

      public string KekUrl { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="kekUrl")>

      Public Property KekUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: kekUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyUrl
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyUrl
  id: SecretKeyUrl
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails
  langs:
  - csharp
  - vb
  name: SecretKeyUrl
  nameWithType: EncryptionDetails.SecretKeyUrl
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SecretKeyUrl
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets secret Url.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "secretKeyUrl")]

      public string SecretKeyUrl { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="secretKeyUrl")>

      Public Property SecretKeyUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: secretKeyUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekVaultId
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekVaultId
  id: KekVaultId
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails
  langs:
  - csharp
  - vb
  name: KekVaultId
  nameWithType: EncryptionDetails.KekVaultId
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekVaultId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KekVaultId
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets ID of Key Vault where KEK is stored.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "kekVaultId")]

      public string KekVaultId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="kekVaultId")>

      Public Property KekVaultId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekVaultId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: kekVaultId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyVaultId
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyVaultId
  id: SecretKeyVaultId
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails
  langs:
  - csharp
  - vb
  name: SecretKeyVaultId
  nameWithType: EncryptionDetails.SecretKeyVaultId
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyVaultId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SecretKeyVaultId
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/EncryptionDetails.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets ID of Key Vault where Secret is stored.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "secretKeyVaultId")]

      public string SecretKeyVaultId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="secretKeyVaultId")>

      Public Property SecretKeyVaultId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyVaultId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: secretKeyVaultId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  commentId: N:Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  nameWithType: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.#ctor*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.#ctor
  isExternal: false
  name: EncryptionDetails
  nameWithType: EncryptionDetails.EncryptionDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionDetails
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionEnabled*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionEnabled
  isExternal: false
  name: EncryptionEnabled
  nameWithType: EncryptionDetails.EncryptionEnabled
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.EncryptionEnabled
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekUrl*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekUrl
  isExternal: false
  name: KekUrl
  nameWithType: EncryptionDetails.KekUrl
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekUrl
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyUrl*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyUrl
  isExternal: false
  name: SecretKeyUrl
  nameWithType: EncryptionDetails.SecretKeyUrl
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyUrl
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekVaultId*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekVaultId
  isExternal: false
  name: KekVaultId
  nameWithType: EncryptionDetails.KekVaultId
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.KekVaultId
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyVaultId*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyVaultId
  isExternal: false
  name: SecretKeyVaultId
  nameWithType: EncryptionDetails.SecretKeyVaultId
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.EncryptionDetails.SecretKeyVaultId
