### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase
  id: BackupEngineBase
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.#ctor
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType},System.String,System.String,System.Nullable{System.Boolean},System.String)
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineId
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupManagementType
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.CanReRegister
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.FriendlyName
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.HealthStatus
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.RegistrationStatus
  langs:
  - csharp
  - vb
  name: BackupEngineBase
  nameWithType: BackupEngineBase
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackupEngineBase
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nThe base backup engine class. All workload specific backup engines\nderive from this class.\n"
  example: []
  syntax:
    content: public class BackupEngineBase
    content.vb: Public Class BackupEngineBase
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.AzureBackupServerEngine
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.DpmBackupEngine
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.#ctor
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase
  langs:
  - csharp
  - vb
  name: BackupEngineBase()
  nameWithType: BackupEngineBase.BackupEngineBase()
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineBase()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the BackupEngineBase class.\n"
  example: []
  syntax:
    content: public BackupEngineBase()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType},System.String,System.String,System.Nullable{System.Boolean},System.String)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType},System.String,System.String,System.Nullable{System.Boolean},System.String)
  id: '#ctor(System.String,System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType},System.String,System.String,System.Nullable{System.Boolean},System.String)'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase
  langs:
  - csharp
  - vb
  name: BackupEngineBase(String, Nullable<BackupManagementType>, String, String, Nullable<Boolean>, String)
  nameWithType: BackupEngineBase.BackupEngineBase(String, Nullable<BackupManagementType>, String, String, Nullable<Boolean>, String)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineBase(System.String, System.Nullable<Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType>, System.String, System.String, System.Nullable<System.Boolean>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the BackupEngineBase class.\n"
  example: []
  syntax:
    content: public BackupEngineBase(string friendlyName = null, BackupManagementType? backupManagementType = null, string registrationStatus = null, string healthStatus = null, bool ? canReRegister = null, string backupEngineId = null)
    content.vb: Public Sub New(friendlyName As String = Nothing, backupManagementType As BackupManagementType? = Nothing, registrationStatus As String = Nothing, healthStatus As String = Nothing, canReRegister As Boolean? = Nothing, backupEngineId As String = Nothing)
    parameters:
    - id: friendlyName
      type: System.String
      description: >-
        Friendly name of the backup

        engine.
    - id: backupManagementType
      type: System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType}
      description: >-
        Type of backup management for

        the backup engine. Possible values include: 'Invalid',

        'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',

        'AzureSql'
    - id: registrationStatus
      type: System.String
      description: >-
        Registration status of the backup

        engine with the Recovery Services Vault.
    - id: healthStatus
      type: System.String
      description: >-
        Backup status of the backup

        engine.
    - id: canReRegister
      type: System.Nullable{System.Boolean}
      description: >-
        Flag indicating if the backup engine

        be registered, once already registered.
    - id: backupEngineId
      type: System.String
      description: ID of the backup engine.
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.#ctor*
  nameWithType.vb: BackupEngineBase.BackupEngineBase(String, Nullable(Of BackupManagementType), String, String, Nullable(Of Boolean), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineBase(System.String, System.Nullable(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType), System.String, System.String, System.Nullable(Of System.Boolean), System.String)
  name.vb: BackupEngineBase(String, Nullable(Of BackupManagementType), String, String, Nullable(Of Boolean), String)
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.FriendlyName
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.FriendlyName
  id: FriendlyName
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase
  langs:
  - csharp
  - vb
  name: FriendlyName
  nameWithType: BackupEngineBase.FriendlyName
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.FriendlyName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FriendlyName
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets friendly name of the backup engine.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "friendlyName")]

      public string FriendlyName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="friendlyName")>

      Public Property FriendlyName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.FriendlyName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: friendlyName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupManagementType
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupManagementType
  id: BackupManagementType
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase
  langs:
  - csharp
  - vb
  name: BackupManagementType
  nameWithType: BackupEngineBase.BackupManagementType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupManagementType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackupManagementType
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets type of backup management for the backup engine.\nPossible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',\n'AzureBackupServer', 'AzureSql'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "backupManagementType")]

      public BackupManagementType? BackupManagementType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="backupManagementType")>

      Public Property BackupManagementType As BackupManagementType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupManagementType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: backupManagementType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.RegistrationStatus
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.RegistrationStatus
  id: RegistrationStatus
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase
  langs:
  - csharp
  - vb
  name: RegistrationStatus
  nameWithType: BackupEngineBase.RegistrationStatus
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.RegistrationStatus
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegistrationStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets registration status of the backup engine with the\nRecovery Services Vault.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "registrationStatus")]

      public string RegistrationStatus { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="registrationStatus")>

      Public Property RegistrationStatus As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.RegistrationStatus*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: registrationStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.HealthStatus
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.HealthStatus
  id: HealthStatus
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase
  langs:
  - csharp
  - vb
  name: HealthStatus
  nameWithType: BackupEngineBase.HealthStatus
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.HealthStatus
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HealthStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets backup status of the backup engine.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "healthStatus")]

      public string HealthStatus { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="healthStatus")>

      Public Property HealthStatus As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.HealthStatus*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: healthStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.CanReRegister
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.CanReRegister
  id: CanReRegister
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase
  langs:
  - csharp
  - vb
  name: CanReRegister
  nameWithType: BackupEngineBase.CanReRegister
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.CanReRegister
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CanReRegister
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets flag indicating if the backup engine be registered,\nonce already registered.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "canReRegister")]

      public bool ? CanReRegister { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="canReRegister")>

      Public Property CanReRegister As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.CanReRegister*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: canReRegister
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineId
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineId
  id: BackupEngineId
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase
  langs:
  - csharp
  - vb
  name: BackupEngineId
  nameWithType: BackupEngineBase.BackupEngineId
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackupEngineId
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/BackupEngineBase.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets ID of the backup engine.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "backupEngineId")]

      public string BackupEngineId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="backupEngineId")>

      Public Property BackupEngineId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: backupEngineId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  commentId: N:Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  nameWithType: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.#ctor*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.#ctor
  isExternal: false
  name: BackupEngineBase
  nameWithType: BackupEngineBase.BackupEngineBase
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineBase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType}
  commentId: T:System.Nullable{Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<BackupManagementType>
  nameWithType: Nullable<BackupManagementType>
  fullName: System.Nullable<Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType>
  nameWithType.vb: Nullable(Of BackupManagementType)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType)
  name.vb: Nullable(Of BackupManagementType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType
    name: BackupManagementType
    nameWithType: BackupManagementType
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType
    name: BackupManagementType
    nameWithType: BackupManagementType
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupManagementType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.FriendlyName*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.FriendlyName
  isExternal: false
  name: FriendlyName
  nameWithType: BackupEngineBase.FriendlyName
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.FriendlyName
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupManagementType*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupManagementType
  isExternal: false
  name: BackupManagementType
  nameWithType: BackupEngineBase.BackupManagementType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupManagementType
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.RegistrationStatus*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.RegistrationStatus
  isExternal: false
  name: RegistrationStatus
  nameWithType: BackupEngineBase.RegistrationStatus
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.RegistrationStatus
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.HealthStatus*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.HealthStatus
  isExternal: false
  name: HealthStatus
  nameWithType: BackupEngineBase.HealthStatus
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.HealthStatus
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.CanReRegister*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.CanReRegister
  isExternal: false
  name: CanReRegister
  nameWithType: BackupEngineBase.CanReRegister
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.CanReRegister
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineId*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineId
  isExternal: false
  name: BackupEngineId
  nameWithType: BackupEngineBase.BackupEngineId
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BackupEngineBase.BackupEngineId
