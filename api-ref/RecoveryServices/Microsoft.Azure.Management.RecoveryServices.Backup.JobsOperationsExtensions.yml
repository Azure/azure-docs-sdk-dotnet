### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions
  id: JobsOperationsExtensions
  parent: Microsoft.Azure.Management.RecoveryServices.Backup
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.Export(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject})
  - Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ExportAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.List(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.String)
  - Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNext(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String)
  - Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: JobsOperationsExtensions
  nameWithType: JobsOperationsExtensions
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobsOperationsExtensions
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup
  summary: "\nExtension methods for JobsOperations.\n"
  example: []
  syntax:
    content: public static class JobsOperationsExtensions
    content.vb: Public Module JobsOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.Export(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject})
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.Export(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject})
  id: Export(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions
  langs:
  - csharp
  - vb
  name: Export(IJobsOperations, String, String, ODataQuery<JobQueryObject>)
  nameWithType: JobsOperationsExtensions.Export(IJobsOperations, String, String, ODataQuery<JobQueryObject>)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.Export(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations, System.String, System.String, Microsoft.Rest.Azure.OData.ODataQuery<Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Export
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup
  summary: "\nExports all jobs for a given SAS URL. The SAS URL will expire within 15\nminutes of its creation.\n"
  example: []
  syntax:
    content: public static void Export(this IJobsOperations operations, string vaultName, string resourceGroupName, ODataQuery<JobQueryObject> odataQuery = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Export(operations As IJobsOperations, vaultName As String, resourceGroupName As String, odataQuery As ODataQuery(Of JobQueryObject) = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: vaultName
      type: System.String
      description: "\nThe name of the recovery services vault.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group where the recovery services vault is\npresent.\n"
    - id: odataQuery
      type: Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject}
      description: "\nOData parameters to apply to the operation.\n"
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.Export*
  nameWithType.vb: JobsOperationsExtensions.Export(IJobsOperations, String, String, ODataQuery(Of JobQueryObject))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.Export(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations, System.String, System.String, Microsoft.Rest.Azure.OData.ODataQuery(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject))
  name.vb: Export(IJobsOperations, String, String, ODataQuery(Of JobQueryObject))
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ExportAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ExportAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.Threading.CancellationToken)
  id: ExportAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExportAsync(IJobsOperations, String, String, ODataQuery<JobQueryObject>, CancellationToken)
  nameWithType: JobsOperationsExtensions.ExportAsync(IJobsOperations, String, String, ODataQuery<JobQueryObject>, CancellationToken)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ExportAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations, System.String, System.String, Microsoft.Rest.Azure.OData.ODataQuery<Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup
  summary: "\nExports all jobs for a given SAS URL. The SAS URL will expire within 15\nminutes of its creation.\n"
  example: []
  syntax:
    content: public static Task ExportAsync(this IJobsOperations operations, string vaultName, string resourceGroupName, ODataQuery<JobQueryObject> odataQuery = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExportAsync(operations As IJobsOperations, vaultName As String, resourceGroupName As String, odataQuery As ODataQuery(Of JobQueryObject) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: vaultName
      type: System.String
      description: "\nThe name of the recovery services vault.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group where the recovery services vault is\npresent.\n"
    - id: odataQuery
      type: Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject}
      description: "\nOData parameters to apply to the operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ExportAsync*
  nameWithType.vb: JobsOperationsExtensions.ExportAsync(IJobsOperations, String, String, ODataQuery(Of JobQueryObject), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ExportAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations, System.String, System.String, Microsoft.Rest.Azure.OData.ODataQuery(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject), System.Threading.CancellationToken)
  name.vb: ExportAsync(IJobsOperations, String, String, ODataQuery(Of JobQueryObject), CancellationToken)
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.List(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.String)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.List(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.String)
  id: List(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IJobsOperations, String, String, ODataQuery<JobQueryObject>, String)
  nameWithType: JobsOperationsExtensions.List(IJobsOperations, String, String, ODataQuery<JobQueryObject>, String)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.List(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations, System.String, System.String, Microsoft.Rest.Azure.OData.ODataQuery<Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject>, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup
  summary: "\nProvides a pageable list of jobs.\n"
  example: []
  syntax:
    content: public static IPage<JobResource> List(this IJobsOperations operations, string vaultName, string resourceGroupName, ODataQuery<JobQueryObject> odataQuery = null, string skipToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IJobsOperations, vaultName As String, resourceGroupName As String, odataQuery As ODataQuery(Of JobQueryObject) = Nothing, skipToken As String = Nothing) As IPage(Of JobResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: vaultName
      type: System.String
      description: "\nThe name of the recovery services vault.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group where the recovery services vault is\npresent.\n"
    - id: odataQuery
      type: Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject}
      description: "\nOData parameters to apply to the operation.\n"
    - id: skipToken
      type: System.String
      description: "\nskipToken Filter.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.List*
  nameWithType.vb: JobsOperationsExtensions.List(IJobsOperations, String, String, ODataQuery(Of JobQueryObject), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.List(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations, System.String, System.String, Microsoft.Rest.Azure.OData.ODataQuery(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject), System.String)
  name.vb: List(IJobsOperations, String, String, ODataQuery(Of JobQueryObject), String)
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.String,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject},System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IJobsOperations, String, String, ODataQuery<JobQueryObject>, String, CancellationToken)
  nameWithType: JobsOperationsExtensions.ListAsync(IJobsOperations, String, String, ODataQuery<JobQueryObject>, String, CancellationToken)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations, System.String, System.String, Microsoft.Rest.Azure.OData.ODataQuery<Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject>, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup
  summary: "\nProvides a pageable list of jobs.\n"
  example: []
  syntax:
    content: public static Task<IPage<JobResource>> ListAsync(this IJobsOperations operations, string vaultName, string resourceGroupName, ODataQuery<JobQueryObject> odataQuery = null, string skipToken = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IJobsOperations, vaultName As String, resourceGroupName As String, odataQuery As ODataQuery(Of JobQueryObject) = Nothing, skipToken As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of JobResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: vaultName
      type: System.String
      description: "\nThe name of the recovery services vault.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group where the recovery services vault is\npresent.\n"
    - id: odataQuery
      type: Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject}
      description: "\nOData parameters to apply to the operation.\n"
    - id: skipToken
      type: System.String
      description: "\nskipToken Filter.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource}}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListAsync*
  nameWithType.vb: JobsOperationsExtensions.ListAsync(IJobsOperations, String, String, ODataQuery(Of JobQueryObject), String, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations, System.String, System.String, Microsoft.Rest.Azure.OData.ODataQuery(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject), System.String, System.Threading.CancellationToken)
  name.vb: ListAsync(IJobsOperations, String, String, ODataQuery(Of JobQueryObject), String, CancellationToken)
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNext(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNext(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IJobsOperations, String)
  nameWithType: JobsOperationsExtensions.ListNext(IJobsOperations, String)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNext(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
    startLine: 125
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup
  summary: "\nProvides a pageable list of jobs.\n"
  example: []
  syntax:
    content: public static IPage<JobResource> ListNext(this IJobsOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IJobsOperations, nextPageLink As String) As IPage(Of JobResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IJobsOperations, String, CancellationToken)
  nameWithType: JobsOperationsExtensions.ListNextAsync(IJobsOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/JobsOperationsExtensions.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup
  summary: "\nProvides a pageable list of jobs.\n"
  example: []
  syntax:
    content: public static Task<IPage<JobResource>> ListNextAsync(this IJobsOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IJobsOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of JobResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource}}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup
  commentId: N:Microsoft.Azure.Management.RecoveryServices.Backup
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup
  nameWithType: Microsoft.Azure.Management.RecoveryServices.Backup
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.Export*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.Export
  isExternal: false
  name: Export
  nameWithType: JobsOperationsExtensions.Export
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.Export
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations
  parent: Microsoft.Azure.Management.RecoveryServices.Backup
  isExternal: false
  name: IJobsOperations
  nameWithType: IJobsOperations
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.IJobsOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject}
  commentId: T:Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject}
  parent: Microsoft.Rest.Azure.OData
  definition: Microsoft.Rest.Azure.OData.ODataQuery`1
  name: ODataQuery<JobQueryObject>
  nameWithType: ODataQuery<JobQueryObject>
  fullName: Microsoft.Rest.Azure.OData.ODataQuery<Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject>
  nameWithType.vb: ODataQuery(Of JobQueryObject)
  fullname.vb: Microsoft.Rest.Azure.OData.ODataQuery(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject)
  name.vb: ODataQuery(Of JobQueryObject)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.OData.ODataQuery`1
    name: ODataQuery
    nameWithType: ODataQuery
    fullName: Microsoft.Rest.Azure.OData.ODataQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject
    name: JobQueryObject
    nameWithType: JobQueryObject
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.OData.ODataQuery`1
    name: ODataQuery
    nameWithType: ODataQuery
    fullName: Microsoft.Rest.Azure.OData.ODataQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject
    name: JobQueryObject
    nameWithType: JobQueryObject
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobQueryObject
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.OData.ODataQuery`1
  commentId: T:Microsoft.Rest.Azure.OData.ODataQuery`1
  isExternal: false
  name: ODataQuery<T>
  nameWithType: ODataQuery<T>
  fullName: Microsoft.Rest.Azure.OData.ODataQuery<T>
  nameWithType.vb: ODataQuery(Of T)
  fullname.vb: Microsoft.Rest.Azure.OData.ODataQuery(Of T)
  name.vb: ODataQuery(Of T)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.OData.ODataQuery`1
    name: ODataQuery
    nameWithType: ODataQuery
    fullName: Microsoft.Rest.Azure.OData.ODataQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.OData.ODataQuery`1
    name: ODataQuery
    nameWithType: ODataQuery
    fullName: Microsoft.Rest.Azure.OData.ODataQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.OData
  commentId: N:Microsoft.Rest.Azure.OData
  isExternal: false
  name: Microsoft.Rest.Azure.OData
  nameWithType: Microsoft.Rest.Azure.OData
  fullName: Microsoft.Rest.Azure.OData
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ExportAsync*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ExportAsync
  isExternal: false
  name: ExportAsync
  nameWithType: JobsOperationsExtensions.ExportAsync
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ExportAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: JobsOperationsExtensions.List
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.List
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource}
  commentId: T:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource}
  parent: Microsoft.Rest.Azure
  definition: Microsoft.Rest.Azure.IPage`1
  name: IPage<JobResource>
  nameWithType: IPage<JobResource>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource>
  nameWithType.vb: IPage(Of JobResource)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource)
  name.vb: IPage(Of JobResource)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource
    name: JobResource
    nameWithType: JobResource
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource
    name: JobResource
    nameWithType: JobResource
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage`1
  commentId: T:Microsoft.Rest.Azure.IPage`1
  isExternal: false
  name: IPage<T>
  nameWithType: IPage<T>
  fullName: Microsoft.Rest.Azure.IPage<T>
  nameWithType.vb: IPage(Of T)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of T)
  name.vb: IPage(Of T)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: JobsOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<JobResource>>
  nameWithType: Task<IPage<JobResource>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource>>
  nameWithType.vb: Task(Of IPage(Of JobResource))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource))
  name.vb: Task(Of IPage(Of JobResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource
    name: JobResource
    nameWithType: JobResource
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource
    name: JobResource
    nameWithType: JobResource
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNext*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNext
  isExternal: false
  name: ListNext
  nameWithType: JobsOperationsExtensions.ListNext
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNext
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNextAsync*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNextAsync
  isExternal: false
  name: ListNextAsync
  nameWithType: JobsOperationsExtensions.ListNextAsync
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.JobsOperationsExtensions.ListNextAsync
