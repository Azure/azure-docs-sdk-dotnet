### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
  id: KEKDetails
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.#ctor
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.#ctor(System.String,System.String,System.String)
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyBackupData
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyUrl
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyVaultId
  langs:
  - csharp
  - vb
  name: KEKDetails
  nameWithType: KEKDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KEKDetails
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nKEK is encryption key for BEK.\n"
  example: []
  syntax:
    content: public class KEKDetails
    content.vb: Public Class KEKDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.#ctor
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
  langs:
  - csharp
  - vb
  name: KEKDetails()
  nameWithType: KEKDetails.KEKDetails()
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KEKDetails()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the KEKDetails class.\n"
  example: []
  syntax:
    content: public KEKDetails()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
  langs:
  - csharp
  - vb
  name: KEKDetails(String, String, String)
  nameWithType: KEKDetails.KEKDetails(String, String, String)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KEKDetails(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the KEKDetails class.\n"
  example: []
  syntax:
    content: public KEKDetails(string keyUrl = null, string keyVaultId = null, string keyBackupData = null)
    content.vb: Public Sub New(keyUrl As String = Nothing, keyVaultId As String = Nothing, keyBackupData As String = Nothing)
    parameters:
    - id: keyUrl
      type: System.String
      description: Key is KEK.
    - id: keyVaultId
      type: System.String
      description: >-
        Key Vault ID where this Key is

        stored.
    - id: keyBackupData
      type: System.String
      description: KEK data.
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyUrl
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyUrl
  id: KeyUrl
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
  langs:
  - csharp
  - vb
  name: KeyUrl
  nameWithType: KEKDetails.KeyUrl
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyUrl
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets key is KEK.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "keyUrl")]

      public string KeyUrl { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="keyUrl")>

      Public Property KeyUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: keyUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyVaultId
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyVaultId
  id: KeyVaultId
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
  langs:
  - csharp
  - vb
  name: KeyVaultId
  nameWithType: KEKDetails.KeyVaultId
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyVaultId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultId
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets key Vault ID where this Key is stored.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "keyVaultId")]

      public string KeyVaultId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="keyVaultId")>

      Public Property KeyVaultId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyVaultId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: keyVaultId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyBackupData
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyBackupData
  id: KeyBackupData
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
  langs:
  - csharp
  - vb
  name: KeyBackupData
  nameWithType: KEKDetails.KeyBackupData
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyBackupData
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyBackupData
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KEKDetails.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets KEK data.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "keyBackupData")]

      public string KeyBackupData { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="keyBackupData")>

      Public Property KeyBackupData As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyBackupData*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: keyBackupData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  commentId: N:Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  nameWithType: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.#ctor*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.#ctor
  isExternal: false
  name: KEKDetails
  nameWithType: KEKDetails.KEKDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KEKDetails
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyUrl*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyUrl
  isExternal: false
  name: KeyUrl
  nameWithType: KEKDetails.KeyUrl
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyUrl
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyVaultId*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyVaultId
  isExternal: false
  name: KeyVaultId
  nameWithType: KEKDetails.KeyVaultId
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyVaultId
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyBackupData*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyBackupData
  isExternal: false
  name: KeyBackupData
  nameWithType: KEKDetails.KeyBackupData
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails.KeyBackupData
