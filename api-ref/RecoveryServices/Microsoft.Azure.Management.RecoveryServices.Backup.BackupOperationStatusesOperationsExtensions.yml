### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions
  id: BackupOperationStatusesOperationsExtensions
  parent: Microsoft.Azure.Management.RecoveryServices.Backup
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.Get(Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.GetAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: BackupOperationStatusesOperationsExtensions
  nameWithType: BackupOperationStatusesOperationsExtensions
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/BackupOperationStatusesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackupOperationStatusesOperationsExtensions
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/BackupOperationStatusesOperationsExtensions.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup
  summary: "\nExtension methods for BackupOperationStatusesOperations.\n"
  example: []
  syntax:
    content: public static class BackupOperationStatusesOperationsExtensions
    content.vb: Public Module BackupOperationStatusesOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.Get(Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.Get(Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations,System.String,System.String,System.String)
  id: Get(Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IBackupOperationStatusesOperations, String, String, String)
  nameWithType: BackupOperationStatusesOperationsExtensions.Get(IBackupOperationStatusesOperations, String, String, String)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.Get(Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/BackupOperationStatusesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/BackupOperationStatusesOperationsExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup
  summary: "\nFetches the status of an operation such as triggering a backup, restore.\nThe status can be in progress, completed or failed. You can refer to the\nOperationStatus enum for all the possible states of an operation. Some\noperations create jobs. This method returns the list of jobs when the\noperation is complete.\n"
  example: []
  syntax:
    content: public static OperationStatus Get(this IBackupOperationStatusesOperations operations, string vaultName, string resourceGroupName, string operationId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IBackupOperationStatusesOperations, vaultName As String, resourceGroupName As String, operationId As String) As OperationStatus
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: vaultName
      type: System.String
      description: "\nThe name of the recovery services vault.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group where the recovery services vault is\npresent.\n"
    - id: operationId
      type: System.String
      description: "\nOperationID which represents the operation.\n"
    return:
      type: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.GetAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.GetAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IBackupOperationStatusesOperations, String, String, String, CancellationToken)
  nameWithType: BackupOperationStatusesOperationsExtensions.GetAsync(IBackupOperationStatusesOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.GetAsync(Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/BackupOperationStatusesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/BackupOperationStatusesOperationsExtensions.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup
  summary: "\nFetches the status of an operation such as triggering a backup, restore.\nThe status can be in progress, completed or failed. You can refer to the\nOperationStatus enum for all the possible states of an operation. Some\noperations create jobs. This method returns the list of jobs when the\noperation is complete.\n"
  example: []
  syntax:
    content: public static Task<OperationStatus> GetAsync(this IBackupOperationStatusesOperations operations, string vaultName, string resourceGroupName, string operationId, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IBackupOperationStatusesOperations, vaultName As String, resourceGroupName As String, operationId As String, cancellationToken As CancellationToken = Nothing) As Task(Of OperationStatus)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: vaultName
      type: System.String
      description: "\nThe name of the recovery services vault.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group where the recovery services vault is\npresent.\n"
    - id: operationId
      type: System.String
      description: "\nOperationID which represents the operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup
  commentId: N:Microsoft.Azure.Management.RecoveryServices.Backup
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup
  nameWithType: Microsoft.Azure.Management.RecoveryServices.Backup
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: BackupOperationStatusesOperationsExtensions.Get
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.Get
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations
  parent: Microsoft.Azure.Management.RecoveryServices.Backup
  isExternal: false
  name: IBackupOperationStatusesOperations
  nameWithType: IBackupOperationStatusesOperations
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.IBackupOperationStatusesOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: OperationStatus
  nameWithType: OperationStatus
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  commentId: N:Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  nameWithType: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: BackupOperationStatusesOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.BackupOperationStatusesOperationsExtensions.GetAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationStatus>
  nameWithType: Task<OperationStatus>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus>
  nameWithType.vb: Task(Of OperationStatus)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus)
  name.vb: Task(Of OperationStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus
    name: OperationStatus
    nameWithType: OperationStatus
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus
    name: OperationStatus
    nameWithType: OperationStatus
    fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
