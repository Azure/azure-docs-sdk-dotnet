### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails
  id: KeyAndSecretDetails
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.#ctor
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.#ctor(Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails,Microsoft.Azure.Management.RecoveryServices.Backup.Models.BEKDetails)
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.BekDetails
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.KekDetails
  langs:
  - csharp
  - vb
  name: KeyAndSecretDetails
  nameWithType: KeyAndSecretDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KeyAndSecretDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyAndSecretDetails
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KeyAndSecretDetails.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nBEK is bitlocker key.\nKEK is encryption key for BEK\nIf the VM was encrypted then we will store follwing\ndetails :\n1. Secret(BEK) - Url + Backup Data + vaultId.\n2. Key(KEK) - Url + Backup Data + vaultId.\nBEK and KEK can potentiallty have different vault ids.\n"
  example: []
  syntax:
    content: public class KeyAndSecretDetails
    content.vb: Public Class KeyAndSecretDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.#ctor
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails
  langs:
  - csharp
  - vb
  name: KeyAndSecretDetails()
  nameWithType: KeyAndSecretDetails.KeyAndSecretDetails()
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.KeyAndSecretDetails()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KeyAndSecretDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KeyAndSecretDetails.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the KeyAndSecretDetails class.\n"
  example: []
  syntax:
    content: public KeyAndSecretDetails()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.#ctor(Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails,Microsoft.Azure.Management.RecoveryServices.Backup.Models.BEKDetails)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.#ctor(Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails,Microsoft.Azure.Management.RecoveryServices.Backup.Models.BEKDetails)
  id: '#ctor(Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails,Microsoft.Azure.Management.RecoveryServices.Backup.Models.BEKDetails)'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails
  langs:
  - csharp
  - vb
  name: KeyAndSecretDetails(KEKDetails, BEKDetails)
  nameWithType: KeyAndSecretDetails.KeyAndSecretDetails(KEKDetails, BEKDetails)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.KeyAndSecretDetails(Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails, Microsoft.Azure.Management.RecoveryServices.Backup.Models.BEKDetails)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KeyAndSecretDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KeyAndSecretDetails.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the KeyAndSecretDetails class.\n"
  example: []
  syntax:
    content: public KeyAndSecretDetails(KEKDetails kekDetails = null, BEKDetails bekDetails = null)
    content.vb: Public Sub New(kekDetails As KEKDetails = Nothing, bekDetails As BEKDetails = Nothing)
    parameters:
    - id: kekDetails
      type: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
      description: KEK is encryption key for BEK.
    - id: bekDetails
      type: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BEKDetails
      description: BEK is bitlocker encrpytion key.
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.KekDetails
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.KekDetails
  id: KekDetails
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails
  langs:
  - csharp
  - vb
  name: KekDetails
  nameWithType: KeyAndSecretDetails.KekDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.KekDetails
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KeyAndSecretDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KekDetails
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KeyAndSecretDetails.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets KEK is encryption key for BEK.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "kekDetails")]

      public KEKDetails KekDetails { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="kekDetails")>

      Public Property KekDetails As KEKDetails
    parameters: []
    return:
      type: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.KekDetails*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: kekDetails
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.BekDetails
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.BekDetails
  id: BekDetails
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails
  langs:
  - csharp
  - vb
  name: BekDetails
  nameWithType: KeyAndSecretDetails.BekDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.BekDetails
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KeyAndSecretDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BekDetails
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/KeyAndSecretDetails.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets BEK is bitlocker encrpytion key.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "bekDetails")]

      public BEKDetails BekDetails { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="bekDetails")>

      Public Property BekDetails As BEKDetails
    parameters: []
    return:
      type: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BEKDetails
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.BekDetails*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: bekDetails
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  commentId: N:Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  nameWithType: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.#ctor*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.#ctor
  isExternal: false
  name: KeyAndSecretDetails
  nameWithType: KeyAndSecretDetails.KeyAndSecretDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.KeyAndSecretDetails
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: KEKDetails
  nameWithType: KEKDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KEKDetails
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BEKDetails
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.BEKDetails
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: BEKDetails
  nameWithType: BEKDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.BEKDetails
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.KekDetails*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.KekDetails
  isExternal: false
  name: KekDetails
  nameWithType: KeyAndSecretDetails.KekDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.KekDetails
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.BekDetails*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.BekDetails
  isExternal: false
  name: BekDetails
  nameWithType: KeyAndSecretDetails.BekDetails
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.KeyAndSecretDetails.BekDetails
