### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo
  id: OperationStatusJobsExtendedInfo
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.#ctor
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.FailedJobsError
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.JobIds
  langs:
  - csharp
  - vb
  name: OperationStatusJobsExtendedInfo
  nameWithType: OperationStatusJobsExtendedInfo
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/OperationStatusJobsExtendedInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OperationStatusJobsExtendedInfo
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/OperationStatusJobsExtendedInfo.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nOperation status extended info for list of jobs.\n"
  example: []
  syntax:
    content: 'public class OperationStatusJobsExtendedInfo : OperationStatusExtendedInfo'
    content.vb: >-
      Public Class OperationStatusJobsExtendedInfo
          Inherits OperationStatusExtendedInfo
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusExtendedInfo
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.#ctor
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo
  langs:
  - csharp
  - vb
  name: OperationStatusJobsExtendedInfo()
  nameWithType: OperationStatusJobsExtendedInfo.OperationStatusJobsExtendedInfo()
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.OperationStatusJobsExtendedInfo()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/OperationStatusJobsExtendedInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/OperationStatusJobsExtendedInfo.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the OperationStatusJobsExtendedInfo\nclass.\n"
  example: []
  syntax:
    content: public OperationStatusJobsExtendedInfo()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo
  langs:
  - csharp
  - vb
  name: OperationStatusJobsExtendedInfo(IList<String>, IDictionary<String, String>)
  nameWithType: OperationStatusJobsExtendedInfo.OperationStatusJobsExtendedInfo(IList<String>, IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.OperationStatusJobsExtendedInfo(System.Collections.Generic.IList<System.String>, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/OperationStatusJobsExtendedInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/OperationStatusJobsExtendedInfo.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nInitializes a new instance of the OperationStatusJobsExtendedInfo\nclass.\n"
  example: []
  syntax:
    content: public OperationStatusJobsExtendedInfo(IList<string> jobIds = null, IDictionary<string, string> failedJobsError = null)
    content.vb: Public Sub New(jobIds As IList(Of String) = Nothing, failedJobsError As IDictionary(Of String, String) = Nothing)
    parameters:
    - id: jobIds
      type: System.Collections.Generic.IList{System.String}
      description: >-
        IDs of the jobs created for the protected

        item.
    - id: failedJobsError
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: >-
        Stores all the failed jobs along

        with the corresponding error codes.
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.#ctor*
  nameWithType.vb: OperationStatusJobsExtendedInfo.OperationStatusJobsExtendedInfo(IList(Of String), IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.OperationStatusJobsExtendedInfo(System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: OperationStatusJobsExtendedInfo(IList(Of String), IDictionary(Of String, String))
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.JobIds
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.JobIds
  id: JobIds
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo
  langs:
  - csharp
  - vb
  name: JobIds
  nameWithType: OperationStatusJobsExtendedInfo.JobIds
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.JobIds
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/OperationStatusJobsExtendedInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobIds
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/OperationStatusJobsExtendedInfo.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets iDs of the jobs created for the protected item.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "jobIds")]

      public IList<string> JobIds { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="jobIds")>

      Public Property JobIds As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.JobIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: jobIds
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.FailedJobsError
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.FailedJobsError
  id: FailedJobsError
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo
  langs:
  - csharp
  - vb
  name: FailedJobsError
  nameWithType: OperationStatusJobsExtendedInfo.FailedJobsError
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.FailedJobsError
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/OperationStatusJobsExtendedInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FailedJobsError
    path: src/azure-sdk-for-net/src/ResourceManagement/RecoveryServices.Backup/Microsoft.Azure.Management.RecoveryServices.Backup/Generated/Models/OperationStatusJobsExtendedInfo.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\nGets or sets stores all the failed jobs along with the\ncorresponding error codes.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "failedJobsError")]

      public IDictionary<string, string> FailedJobsError { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="failedJobsError")>

      Public Property FailedJobsError As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.FailedJobsError*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: failedJobsError
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  commentId: N:Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  nameWithType: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusExtendedInfo
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusExtendedInfo
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: OperationStatusExtendedInfo
  nameWithType: OperationStatusExtendedInfo
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusExtendedInfo
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.#ctor*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.#ctor
  isExternal: false
  name: OperationStatusJobsExtendedInfo
  nameWithType: OperationStatusJobsExtendedInfo.OperationStatusJobsExtendedInfo
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.OperationStatusJobsExtendedInfo
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.JobIds*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.JobIds
  isExternal: false
  name: JobIds
  nameWithType: OperationStatusJobsExtendedInfo.JobIds
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.JobIds
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.FailedJobsError*
  commentId: Overload:Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.FailedJobsError
  isExternal: false
  name: FailedJobsError
  nameWithType: OperationStatusJobsExtendedInfo.FailedJobsError
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.OperationStatusJobsExtendedInfo.FailedJobsError
