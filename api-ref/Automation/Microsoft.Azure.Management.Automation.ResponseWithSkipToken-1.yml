### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1
  commentId: T:Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1
  id: ResponseWithSkipToken`1
  parent: Microsoft.Azure.Management.Automation
  children:
  - Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.#ctor(Microsoft.Azure.Management.Automation.Models.OperationResponseWithSkipToken,System.Collections.Generic.IEnumerable{`0})
  - Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.AutomationManagementModels
  - Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.SkipToken
  langs:
  - csharp
  - vb
  name: ResponseWithSkipToken<T>
  nameWithType: ResponseWithSkipToken<T>
  fullName: Microsoft.Azure.Management.Automation.ResponseWithSkipToken<T>
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Automation/AutomationManagement/Customizations/ResponseWithSkipToken.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResponseWithSkipToken
    path: src/azure-sdk-for-net/src/ResourceManagement/Automation/AutomationManagement/Customizations/ResponseWithSkipToken.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Automation
  namespace: Microsoft.Azure.Management.Automation
  summary: "\nThe response with skip token.\n"
  example: []
  syntax:
    content: public class ResponseWithSkipToken<T>
    content.vb: Public Class ResponseWithSkipToken(Of T)
    typeParameters:
    - id: T
      description: "\n"
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ResponseWithSkipToken(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Azure.Management.Automation.ResponseWithSkipToken(Of T)
  name.vb: ResponseWithSkipToken(Of T)
- uid: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.#ctor(Microsoft.Azure.Management.Automation.Models.OperationResponseWithSkipToken,System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.#ctor(Microsoft.Azure.Management.Automation.Models.OperationResponseWithSkipToken,System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(Microsoft.Azure.Management.Automation.Models.OperationResponseWithSkipToken,System.Collections.Generic.IEnumerable{`0})'
  parent: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1
  langs:
  - csharp
  - vb
  name: ResponseWithSkipToken(OperationResponseWithSkipToken, IEnumerable<T>)
  nameWithType: ResponseWithSkipToken<T>.ResponseWithSkipToken(OperationResponseWithSkipToken, IEnumerable<T>)
  fullName: Microsoft.Azure.Management.Automation.ResponseWithSkipToken<T>.ResponseWithSkipToken(Microsoft.Azure.Management.Automation.Models.OperationResponseWithSkipToken, System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Automation/AutomationManagement/Customizations/ResponseWithSkipToken.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Automation/AutomationManagement/Customizations/ResponseWithSkipToken.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Automation
  namespace: Microsoft.Azure.Management.Automation
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Management.Automation.ResponseWithSkipToken%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ResponseWithSkipToken(OperationResponseWithSkipToken operationResponseWithSkipToken, IEnumerable<T> automationManagementModels)
    content.vb: Public Sub New(operationResponseWithSkipToken As OperationResponseWithSkipToken, automationManagementModels As IEnumerable(Of T))
    parameters:
    - id: operationResponseWithSkipToken
      type: Microsoft.Azure.Management.Automation.Models.OperationResponseWithSkipToken
      description: "\nThe operation response with skip token.\n"
    - id: automationManagementModels
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\nThe automation management models.\n"
  overload: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nArgument Null Exception\n"
  nameWithType.vb: ResponseWithSkipToken(Of T).ResponseWithSkipToken(OperationResponseWithSkipToken, IEnumerable(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Automation.ResponseWithSkipToken(Of T).ResponseWithSkipToken(Microsoft.Azure.Management.Automation.Models.OperationResponseWithSkipToken, System.Collections.Generic.IEnumerable(Of T))
  name.vb: ResponseWithSkipToken(OperationResponseWithSkipToken, IEnumerable(Of T))
- uid: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.AutomationManagementModels
  commentId: P:Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.AutomationManagementModels
  id: AutomationManagementModels
  parent: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1
  langs:
  - csharp
  - vb
  name: AutomationManagementModels
  nameWithType: ResponseWithSkipToken<T>.AutomationManagementModels
  fullName: Microsoft.Azure.Management.Automation.ResponseWithSkipToken<T>.AutomationManagementModels
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Automation/AutomationManagement/Customizations/ResponseWithSkipToken.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutomationManagementModels
    path: src/azure-sdk-for-net/src/ResourceManagement/Automation/AutomationManagement/Customizations/ResponseWithSkipToken.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Automation
  namespace: Microsoft.Azure.Management.Automation
  summary: "\nGets the automation management models.\n"
  example: []
  syntax:
    content: public IEnumerable<T> AutomationManagementModels { get; }
    content.vb: Public ReadOnly Property AutomationManagementModels As IEnumerable(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
  overload: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.AutomationManagementModels*
  nameWithType.vb: ResponseWithSkipToken(Of T).AutomationManagementModels
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.Automation.ResponseWithSkipToken(Of T).AutomationManagementModels
- uid: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.SkipToken
  commentId: P:Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.SkipToken
  id: SkipToken
  parent: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1
  langs:
  - csharp
  - vb
  name: SkipToken
  nameWithType: ResponseWithSkipToken<T>.SkipToken
  fullName: Microsoft.Azure.Management.Automation.ResponseWithSkipToken<T>.SkipToken
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Automation/AutomationManagement/Customizations/ResponseWithSkipToken.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SkipToken
    path: src/azure-sdk-for-net/src/ResourceManagement/Automation/AutomationManagement/Customizations/ResponseWithSkipToken.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Automation
  namespace: Microsoft.Azure.Management.Automation
  summary: "\nGets the skip token.\n"
  example: []
  syntax:
    content: public string SkipToken { get; }
    content.vb: Public ReadOnly Property SkipToken As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.SkipToken*
  nameWithType.vb: ResponseWithSkipToken(Of T).SkipToken
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.Automation.ResponseWithSkipToken(Of T).SkipToken
references:
- uid: Microsoft.Azure.Management.Automation
  commentId: N:Microsoft.Azure.Management.Automation
  isExternal: false
  name: Microsoft.Azure.Management.Automation
  nameWithType: Microsoft.Azure.Management.Automation
  fullName: Microsoft.Azure.Management.Automation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1
  commentId: T:Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1
  isExternal: false
  name: ResponseWithSkipToken<T>
  nameWithType: ResponseWithSkipToken<T>
  fullName: Microsoft.Azure.Management.Automation.ResponseWithSkipToken<T>
  nameWithType.vb: ResponseWithSkipToken(Of T)
  fullname.vb: Microsoft.Azure.Management.Automation.ResponseWithSkipToken(Of T)
  name.vb: ResponseWithSkipToken(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1
    name: ResponseWithSkipToken
    nameWithType: ResponseWithSkipToken
    fullName: Microsoft.Azure.Management.Automation.ResponseWithSkipToken
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1
    name: ResponseWithSkipToken
    nameWithType: ResponseWithSkipToken
    fullName: Microsoft.Azure.Management.Automation.ResponseWithSkipToken
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.#ctor
  isExternal: false
  name: ResponseWithSkipToken
  nameWithType: ResponseWithSkipToken.ResponseWithSkipToken
  fullName: Microsoft.Azure.Management.Automation.ResponseWithSkipToken.ResponseWithSkipToken
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Azure.Management.Automation.Models.OperationResponseWithSkipToken
  commentId: T:Microsoft.Azure.Management.Automation.Models.OperationResponseWithSkipToken
  parent: Microsoft.Azure.Management.Automation.Models
  isExternal: false
  name: OperationResponseWithSkipToken
  nameWithType: OperationResponseWithSkipToken
  fullName: Microsoft.Azure.Management.Automation.Models.OperationResponseWithSkipToken
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Automation.Models
  commentId: N:Microsoft.Azure.Management.Automation.Models
  isExternal: false
  name: Microsoft.Azure.Management.Automation.Models
  nameWithType: Microsoft.Azure.Management.Automation.Models
  fullName: Microsoft.Azure.Management.Automation.Models
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.AutomationManagementModels*
  commentId: Overload:Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.AutomationManagementModels
  isExternal: false
  name: AutomationManagementModels
  nameWithType: ResponseWithSkipToken<T>.AutomationManagementModels
  fullName: Microsoft.Azure.Management.Automation.ResponseWithSkipToken<T>.AutomationManagementModels
  nameWithType.vb: ResponseWithSkipToken(Of T).AutomationManagementModels
  fullname.vb: Microsoft.Azure.Management.Automation.ResponseWithSkipToken(Of T).AutomationManagementModels
- uid: Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.SkipToken*
  commentId: Overload:Microsoft.Azure.Management.Automation.ResponseWithSkipToken`1.SkipToken
  isExternal: false
  name: SkipToken
  nameWithType: ResponseWithSkipToken<T>.SkipToken
  fullName: Microsoft.Azure.Management.Automation.ResponseWithSkipToken<T>.SkipToken
  nameWithType.vb: ResponseWithSkipToken(Of T).SkipToken
  fullname.vb: Microsoft.Azure.Management.Automation.ResponseWithSkipToken(Of T).SkipToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
