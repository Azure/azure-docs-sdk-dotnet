### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  commentId: T:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  id: AccessPolicyEntry
  parent: Microsoft.Azure.Management.KeyVault.Models
  children:
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor(System.Guid,System.Guid,Microsoft.Azure.Management.KeyVault.Models.Permissions,System.Nullable{System.Guid})
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate
  langs:
  - csharp
  - vb
  name: AccessPolicyEntry
  nameWithType: AccessPolicyEntry
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  type: Class
  source:
    remote:
      path: src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: AccessPolicyEntry
    path: src/azure-sdk-for-net/src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.KeyVault
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nAn identity that have access to the key vault. All identities in the\narray must use the same tenant ID as the key vault's tenant ID.\n"
  example: []
  syntax:
    content: public class AccessPolicyEntry
    content.vb: Public Class AccessPolicyEntry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: AccessPolicyEntry()
  nameWithType: AccessPolicyEntry.AccessPolicyEntry()
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.AccessPolicyEntry()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.KeyVault
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nInitializes a new instance of the AccessPolicyEntry class.\n"
  example: []
  syntax:
    content: public AccessPolicyEntry()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor(System.Guid,System.Guid,Microsoft.Azure.Management.KeyVault.Models.Permissions,System.Nullable{System.Guid})
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor(System.Guid,System.Guid,Microsoft.Azure.Management.KeyVault.Models.Permissions,System.Nullable{System.Guid})
  id: '#ctor(System.Guid,System.Guid,Microsoft.Azure.Management.KeyVault.Models.Permissions,System.Nullable{System.Guid})'
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: AccessPolicyEntry(Guid, Guid, Permissions, Nullable<Guid>)
  nameWithType: AccessPolicyEntry.AccessPolicyEntry(Guid, Guid, Permissions, Nullable<Guid>)
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.AccessPolicyEntry(System.Guid, System.Guid, Microsoft.Azure.Management.KeyVault.Models.Permissions, System.Nullable<System.Guid>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.KeyVault
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nInitializes a new instance of the AccessPolicyEntry class.\n"
  example: []
  syntax:
    content: public AccessPolicyEntry(Guid tenantId, Guid objectId, Permissions permissions, Guid? applicationId = null)
    content.vb: Public Sub New(tenantId As Guid, objectId As Guid, permissions As Permissions, applicationId As Guid? = Nothing)
    parameters:
    - id: tenantId
      type: System.Guid
      description: >-
        The Azure Active Directory tenant ID that

        should be used for authenticating requests to the key

        vault.
    - id: objectId
      type: System.Guid
      description: >-
        The object ID of a user, service principal

        or security group in the Azure Active Directory tenant for the

        vault. The object ID must be unique for the list of access

        policies.
    - id: permissions
      type: Microsoft.Azure.Management.KeyVault.Models.Permissions
      description: >-
        Permissions the identity has for keys,

        secrets and certificates.
    - id: applicationId
      type: System.Nullable{System.Guid}
      description: >-
        Application ID of the client making

        request on behalf of a principal
  overload: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor*
  nameWithType.vb: AccessPolicyEntry.AccessPolicyEntry(Guid, Guid, Permissions, Nullable(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.AccessPolicyEntry(System.Guid, System.Guid, Microsoft.Azure.Management.KeyVault.Models.Permissions, System.Nullable(Of System.Guid))
  name.vb: AccessPolicyEntry(Guid, Guid, Permissions, Nullable(Of Guid))
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId
  id: TenantId
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: TenantId
  nameWithType: AccessPolicyEntry.TenantId
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: TenantId
    path: src/azure-sdk-for-net/src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.KeyVault
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets the Azure Active Directory tenant ID that should be\nused for authenticating requests to the key vault.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tenantId")]

      public Guid TenantId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tenantId")>

      Public Property TenantId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tenantId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId
  id: ObjectId
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: ObjectId
  nameWithType: AccessPolicyEntry.ObjectId
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ObjectId
    path: src/azure-sdk-for-net/src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.KeyVault
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets the object ID of a user, service principal or\nsecurity group in the Azure Active Directory tenant for the\nvault. The object ID must be unique for the list of access\npolicies.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "objectId")]

      public Guid ObjectId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="objectId")>

      Public Property ObjectId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: objectId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId
  id: ApplicationId
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: ApplicationId
  nameWithType: AccessPolicyEntry.ApplicationId
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ApplicationId
    path: src/azure-sdk-for-net/src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.KeyVault
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets  Application ID of the client making request on\nbehalf of a principal\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "applicationId")]

      public Guid? ApplicationId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="applicationId")>

      Public Property ApplicationId As Guid?
    parameters: []
    return:
      type: System.Nullable{System.Guid}
  overload: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: applicationId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions
  id: Permissions
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: Permissions
  nameWithType: AccessPolicyEntry.Permissions
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Permissions
    path: src/azure-sdk-for-net/src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.KeyVault
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets permissions the identity has for keys, secrets and\ncertificates.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "permissions")]

      public Permissions Permissions { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="permissions")>

      Public Property Permissions As Permissions
    parameters: []
    return:
      type: Microsoft.Azure.Management.KeyVault.Models.Permissions
  overload: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: permissions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate
  id: Validate
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: AccessPolicyEntry.Validate()
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/KeyVaultManagement/Microsoft.Azure.Management.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Management.KeyVault
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.KeyVault.Models
  commentId: N:Microsoft.Azure.Management.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.Management.KeyVault.Models
  nameWithType: Microsoft.Azure.Management.KeyVault.Models
  fullName: Microsoft.Azure.Management.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor*
  commentId: Overload:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor
  isExternal: false
  name: AccessPolicyEntry
  nameWithType: AccessPolicyEntry.AccessPolicyEntry
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.AccessPolicyEntry
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Azure.Management.KeyVault.Models.Permissions
  commentId: T:Microsoft.Azure.Management.KeyVault.Models.Permissions
  parent: Microsoft.Azure.Management.KeyVault.Models
  isExternal: false
  name: Permissions
  nameWithType: Permissions
  fullName: Microsoft.Azure.Management.KeyVault.Models.Permissions
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullname.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId*
  commentId: Overload:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId
  isExternal: false
  name: TenantId
  nameWithType: AccessPolicyEntry.TenantId
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId*
  commentId: Overload:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId
  isExternal: false
  name: ObjectId
  nameWithType: AccessPolicyEntry.ObjectId
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId*
  commentId: Overload:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId
  isExternal: false
  name: ApplicationId
  nameWithType: AccessPolicyEntry.ApplicationId
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions*
  commentId: Overload:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions
  isExternal: false
  name: Permissions
  nameWithType: AccessPolicyEntry.Permissions
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate*
  commentId: Overload:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate
  isExternal: false
  name: Validate
  nameWithType: AccessPolicyEntry.Validate
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
