### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount
  commentId: T:Microsoft.Azure.Management.Storage.Models.StorageAccount
  id: StorageAccount
  parent: Microsoft.Azure.Management.Storage.Models
  children:
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.Sku,System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind},System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState},Microsoft.Azure.Management.Storage.Models.Endpoints,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Endpoints,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.AccessTier
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.Encryption
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.Kind
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.Sku
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.Validate
  langs:
  - csharp
  - vb
  name: StorageAccount
  nameWithType: StorageAccount
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: StorageAccount
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nThe storage account.\n"
  example: []
  syntax:
    content: 'public class StorageAccount : Resource, IResource'
    content.vb: >-
      Public Class StorageAccount
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Storage.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Storage.Models.Resource.Id
  - Microsoft.Azure.Management.Storage.Models.Resource.Name
  - Microsoft.Azure.Management.Storage.Models.Resource.Type
  - Microsoft.Azure.Management.Storage.Models.Resource.Location
  - Microsoft.Azure.Management.Storage.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: StorageAccount()
  nameWithType: StorageAccount.StorageAccount()
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.StorageAccount()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the StorageAccount class.\n"
  example: []
  syntax:
    content: public StorageAccount()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.Sku,System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind},System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState},Microsoft.Azure.Management.Storage.Models.Endpoints,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Endpoints,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.Sku,System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind},System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState},Microsoft.Azure.Management.Storage.Models.Endpoints,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Endpoints,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.Sku,System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind},System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState},Microsoft.Azure.Management.Storage.Models.Endpoints,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Endpoints,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})'
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: StorageAccount(String, String, String, String, IDictionary<String, String>, Sku, Nullable<Kind>, Nullable<ProvisioningState>, Endpoints, String, Nullable<AccountStatus>, Nullable<DateTime>, String, Nullable<AccountStatus>, Nullable<DateTime>, CustomDomain, Endpoints, Encryption, Nullable<AccessTier>)
  nameWithType: StorageAccount.StorageAccount(String, String, String, String, IDictionary<String, String>, Sku, Nullable<Kind>, Nullable<ProvisioningState>, Endpoints, String, Nullable<AccountStatus>, Nullable<DateTime>, String, Nullable<AccountStatus>, Nullable<DateTime>, CustomDomain, Endpoints, Encryption, Nullable<AccessTier>)
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.StorageAccount(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.Azure.Management.Storage.Models.Sku, System.Nullable<Microsoft.Azure.Management.Storage.Models.Kind>, System.Nullable<Microsoft.Azure.Management.Storage.Models.ProvisioningState>, Microsoft.Azure.Management.Storage.Models.Endpoints, System.String, System.Nullable<Microsoft.Azure.Management.Storage.Models.AccountStatus>, System.Nullable<System.DateTime>, System.String, System.Nullable<Microsoft.Azure.Management.Storage.Models.AccountStatus>, System.Nullable<System.DateTime>, Microsoft.Azure.Management.Storage.Models.CustomDomain, Microsoft.Azure.Management.Storage.Models.Endpoints, Microsoft.Azure.Management.Storage.Models.Encryption, System.Nullable<Microsoft.Azure.Management.Storage.Models.AccessTier>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the StorageAccount class.\n"
  example: []
  syntax:
    content: public StorageAccount(string id = null, string name = null, string type = null, string location = null, IDictionary<string, string> tags = null, Sku sku = null, Kind? kind = null, ProvisioningState? provisioningState = null, Endpoints primaryEndpoints = null, string primaryLocation = null, AccountStatus? statusOfPrimary = null, DateTime? lastGeoFailoverTime = null, string secondaryLocation = null, AccountStatus? statusOfSecondary = null, DateTime? creationTime = null, CustomDomain customDomain = null, Endpoints secondaryEndpoints = null, Encryption encryption = null, AccessTier? accessTier = null)
    content.vb: Public Sub New(id As String = Nothing, name As String = Nothing, type As String = Nothing, location As String = Nothing, tags As IDictionary(Of String, String) = Nothing, sku As Sku = Nothing, kind As Kind? = Nothing, provisioningState As ProvisioningState? = Nothing, primaryEndpoints As Endpoints = Nothing, primaryLocation As String = Nothing, statusOfPrimary As AccountStatus? = Nothing, lastGeoFailoverTime As Date? = Nothing, secondaryLocation As String = Nothing, statusOfSecondary As AccountStatus? = Nothing, creationTime As Date? = Nothing, customDomain As CustomDomain = Nothing, secondaryEndpoints As Endpoints = Nothing, encryption As Encryption = Nothing, accessTier As AccessTier? = Nothing)
    parameters:
    - id: id
      type: System.String
    - id: name
      type: System.String
    - id: type
      type: System.String
    - id: location
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: sku
      type: Microsoft.Azure.Management.Storage.Models.Sku
    - id: kind
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind}
    - id: provisioningState
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState}
    - id: primaryEndpoints
      type: Microsoft.Azure.Management.Storage.Models.Endpoints
    - id: primaryLocation
      type: System.String
    - id: statusOfPrimary
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus}
    - id: lastGeoFailoverTime
      type: System.Nullable{System.DateTime}
    - id: secondaryLocation
      type: System.String
    - id: statusOfSecondary
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus}
    - id: creationTime
      type: System.Nullable{System.DateTime}
    - id: customDomain
      type: Microsoft.Azure.Management.Storage.Models.CustomDomain
    - id: secondaryEndpoints
      type: Microsoft.Azure.Management.Storage.Models.Endpoints
    - id: encryption
      type: Microsoft.Azure.Management.Storage.Models.Encryption
    - id: accessTier
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor*
  nameWithType.vb: StorageAccount.StorageAccount(String, String, String, String, IDictionary(Of String, String), Sku, Nullable(Of Kind), Nullable(Of ProvisioningState), Endpoints, String, Nullable(Of AccountStatus), Nullable(Of DateTime), String, Nullable(Of AccountStatus), Nullable(Of DateTime), CustomDomain, Endpoints, Encryption, Nullable(Of AccessTier))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Storage.Models.StorageAccount.StorageAccount(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.Azure.Management.Storage.Models.Sku, System.Nullable(Of Microsoft.Azure.Management.Storage.Models.Kind), System.Nullable(Of Microsoft.Azure.Management.Storage.Models.ProvisioningState), Microsoft.Azure.Management.Storage.Models.Endpoints, System.String, System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccountStatus), System.Nullable(Of System.DateTime), System.String, System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccountStatus), System.Nullable(Of System.DateTime), Microsoft.Azure.Management.Storage.Models.CustomDomain, Microsoft.Azure.Management.Storage.Models.Endpoints, Microsoft.Azure.Management.Storage.Models.Encryption, System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccessTier))
  name.vb: StorageAccount(String, String, String, String, IDictionary(Of String, String), Sku, Nullable(Of Kind), Nullable(Of ProvisioningState), Endpoints, String, Nullable(Of AccountStatus), Nullable(Of DateTime), String, Nullable(Of AccountStatus), Nullable(Of DateTime), CustomDomain, Endpoints, Encryption, Nullable(Of AccessTier))
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.Sku
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.Sku
  id: Sku
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: Sku
  nameWithType: StorageAccount.Sku
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.Sku
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Sku
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the SKU.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sku")]

      public Sku Sku { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="sku")>

      Public ReadOnly Property Sku As Sku
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Sku
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.Sku*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sku
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.Kind
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.Kind
  id: Kind
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: StorageAccount.Kind
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.Kind
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Kind
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the Kind. Possible values include: 'Storage', 'BlobStorage'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "kind")]

      public Kind? Kind { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="kind")>

      Public ReadOnly Property Kind As Kind?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.Kind*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: kind
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: StorageAccount.ProvisioningState
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the status of the storage account at the time the operation\nwas called. Possible values include: 'Creating', 'ResolvingDNS',\n'Succeeded'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public ProvisioningState? ProvisioningState { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public ReadOnly Property ProvisioningState As ProvisioningState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints
  id: PrimaryEndpoints
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: PrimaryEndpoints
  nameWithType: StorageAccount.PrimaryEndpoints
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: PrimaryEndpoints
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the URLs that are used to perform a retrieval of a public\nblob, queue, or table object. Note that Standard_ZRS and\nPremium_LRS accounts only return the blob endpoint.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.primaryEndpoints")]

      public Endpoints PrimaryEndpoints { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.primaryEndpoints")>

      Public ReadOnly Property PrimaryEndpoints As Endpoints
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Endpoints
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.primaryEndpoints
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation
  id: PrimaryLocation
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: PrimaryLocation
  nameWithType: StorageAccount.PrimaryLocation
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: PrimaryLocation
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the location of the primary data center for the storage\naccount.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.primaryLocation")]

      public string PrimaryLocation { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.primaryLocation")>

      Public ReadOnly Property PrimaryLocation As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.primaryLocation
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary
  id: StatusOfPrimary
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: StatusOfPrimary
  nameWithType: StorageAccount.StatusOfPrimary
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: StatusOfPrimary
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the status indicating whether the primary location of the\nstorage account is available or unavailable. Possible values\ninclude: 'Available', 'Unavailable'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.statusOfPrimary")]

      public AccountStatus? StatusOfPrimary { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.statusOfPrimary")>

      Public ReadOnly Property StatusOfPrimary As AccountStatus?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.statusOfPrimary
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime
  id: LastGeoFailoverTime
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: LastGeoFailoverTime
  nameWithType: StorageAccount.LastGeoFailoverTime
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: LastGeoFailoverTime
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the timestamp of the most recent instance of a failover to\nthe secondary location. Only the most recent timestamp is\nretained. This element is not returned if there has never been a\nfailover instance. Only available if the accountType is\nStandard_GRS or Standard_RAGRS.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.lastGeoFailoverTime")]

      public DateTime? LastGeoFailoverTime { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.lastGeoFailoverTime")>

      Public ReadOnly Property LastGeoFailoverTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.lastGeoFailoverTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation
  id: SecondaryLocation
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: SecondaryLocation
  nameWithType: StorageAccount.SecondaryLocation
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SecondaryLocation
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the location of the geo-replicated secondary for the storage\naccount. Only available if the accountType is Standard_GRS or\nStandard_RAGRS.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.secondaryLocation")]

      public string SecondaryLocation { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.secondaryLocation")>

      Public ReadOnly Property SecondaryLocation As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.secondaryLocation
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary
  id: StatusOfSecondary
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: StatusOfSecondary
  nameWithType: StorageAccount.StatusOfSecondary
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: StatusOfSecondary
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the status indicating whether the secondary location of the\nstorage account is available or unavailable. Only available if\nthe SKU name is Standard_GRS or Standard_RAGRS. Possible values\ninclude: 'Available', 'Unavailable'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.statusOfSecondary")]

      public AccountStatus? StatusOfSecondary { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.statusOfSecondary")>

      Public ReadOnly Property StatusOfSecondary As AccountStatus?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.statusOfSecondary
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime
  id: CreationTime
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: CreationTime
  nameWithType: StorageAccount.CreationTime
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: CreationTime
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the creation date and time of the storage account in UTC.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.creationTime")]

      public DateTime? CreationTime { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.creationTime")>

      Public ReadOnly Property CreationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.creationTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain
  id: CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: CustomDomain
  nameWithType: StorageAccount.CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: CustomDomain
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the custom domain the user assigned to this storage account.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.customDomain")]

      public CustomDomain CustomDomain { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.customDomain")>

      Public ReadOnly Property CustomDomain As CustomDomain
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.CustomDomain
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.customDomain
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints
  id: SecondaryEndpoints
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: SecondaryEndpoints
  nameWithType: StorageAccount.SecondaryEndpoints
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SecondaryEndpoints
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the URLs that are used to perform a retrieval of a public\nblob, queue, or table object from the secondary location of the\nstorage account. Only available if the SKU name is Standard_RAGRS.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.secondaryEndpoints")]

      public Endpoints SecondaryEndpoints { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.secondaryEndpoints")>

      Public ReadOnly Property SecondaryEndpoints As Endpoints
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Endpoints
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.secondaryEndpoints
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.Encryption
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.Encryption
  id: Encryption
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: Encryption
  nameWithType: StorageAccount.Encryption
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.Encryption
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Encryption
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 147
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the encryption settings on the account. If unspecified, the\naccount is unencrypted.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.encryption")]

      public Encryption Encryption { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.encryption")>

      Public ReadOnly Property Encryption As Encryption
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Encryption
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.Encryption*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.encryption
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.AccessTier
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.AccessTier
  id: AccessTier
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: AccessTier
  nameWithType: StorageAccount.AccessTier
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.AccessTier
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: AccessTier
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 154
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nRequired for storage accounts where kind = BlobStorage. The access\ntier used for billing. Possible values include: 'Hot', 'Cool'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.accessTier")]

      public AccessTier? AccessTier { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.accessTier")>

      Public ReadOnly Property AccessTier As AccessTier?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.AccessTier*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.accessTier
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.Validate
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccount.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: StorageAccount.Validate()
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccount.cs
    startLine: 160
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccount.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Storage.Models
  commentId: N:Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  nameWithType: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Storage.Models.Resource
  commentId: T:Microsoft.Azure.Management.Storage.Models.Resource
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.Storage.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Storage.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.Storage.Models.Resource.Id
  parent: Microsoft.Azure.Management.Storage.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.Storage.Models.Resource.Id
- uid: Microsoft.Azure.Management.Storage.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.Storage.Models.Resource.Name
  parent: Microsoft.Azure.Management.Storage.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.Storage.Models.Resource.Name
- uid: Microsoft.Azure.Management.Storage.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.Storage.Models.Resource.Type
  parent: Microsoft.Azure.Management.Storage.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.Storage.Models.Resource.Type
- uid: Microsoft.Azure.Management.Storage.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.Storage.Models.Resource.Location
  parent: Microsoft.Azure.Management.Storage.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.Storage.Models.Resource.Location
- uid: Microsoft.Azure.Management.Storage.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.Storage.Models.Resource.Tags
  parent: Microsoft.Azure.Management.Storage.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.Storage.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor
  isExternal: false
  name: StorageAccount
  nameWithType: StorageAccount.StorageAccount
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.StorageAccount
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.Sku
  commentId: T:Microsoft.Azure.Management.Storage.Models.Sku
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Sku
  nameWithType: Sku
  fullName: Microsoft.Azure.Management.Storage.Models.Sku
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Kind>
  nameWithType: Nullable<Kind>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.Kind>
  nameWithType.vb: Nullable(Of Kind)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.Kind)
  name.vb: Nullable(Of Kind)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.Kind
    name: Kind
    nameWithType: Kind
    fullName: Microsoft.Azure.Management.Storage.Models.Kind
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.Kind
    name: Kind
    nameWithType: Kind
    fullName: Microsoft.Azure.Management.Storage.Models.Kind
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ProvisioningState>
  nameWithType: Nullable<ProvisioningState>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.ProvisioningState>
  nameWithType.vb: Nullable(Of ProvisioningState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.ProvisioningState)
  name.vb: Nullable(Of ProvisioningState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.ProvisioningState
    name: ProvisioningState
    nameWithType: ProvisioningState
    fullName: Microsoft.Azure.Management.Storage.Models.ProvisioningState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.ProvisioningState
    name: ProvisioningState
    nameWithType: ProvisioningState
    fullName: Microsoft.Azure.Management.Storage.Models.ProvisioningState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.Endpoints
  commentId: T:Microsoft.Azure.Management.Storage.Models.Endpoints
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Endpoints
  nameWithType: Endpoints
  fullName: Microsoft.Azure.Management.Storage.Models.Endpoints
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AccountStatus>
  nameWithType: Nullable<AccountStatus>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.AccountStatus>
  nameWithType.vb: Nullable(Of AccountStatus)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccountStatus)
  name.vb: Nullable(Of AccountStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.AccountStatus
    name: AccountStatus
    nameWithType: AccountStatus
    fullName: Microsoft.Azure.Management.Storage.Models.AccountStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.AccountStatus
    name: AccountStatus
    nameWithType: AccountStatus
    fullName: Microsoft.Azure.Management.Storage.Models.AccountStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.CustomDomain
  commentId: T:Microsoft.Azure.Management.Storage.Models.CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: CustomDomain
  nameWithType: CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.CustomDomain
- uid: Microsoft.Azure.Management.Storage.Models.Encryption
  commentId: T:Microsoft.Azure.Management.Storage.Models.Encryption
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Encryption
  nameWithType: Encryption
  fullName: Microsoft.Azure.Management.Storage.Models.Encryption
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AccessTier>
  nameWithType: Nullable<AccessTier>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.AccessTier>
  nameWithType.vb: Nullable(Of AccessTier)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccessTier)
  name.vb: Nullable(Of AccessTier)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.AccessTier
    name: AccessTier
    nameWithType: AccessTier
    fullName: Microsoft.Azure.Management.Storage.Models.AccessTier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.AccessTier
    name: AccessTier
    nameWithType: AccessTier
    fullName: Microsoft.Azure.Management.Storage.Models.AccessTier
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.Sku*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.Sku
  isExternal: false
  name: Sku
  nameWithType: StorageAccount.Sku
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.Sku
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.Kind*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.Kind
  isExternal: false
  name: Kind
  nameWithType: StorageAccount.Kind
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.Kind
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: StorageAccount.ProvisioningState
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints
  isExternal: false
  name: PrimaryEndpoints
  nameWithType: StorageAccount.PrimaryEndpoints
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation
  isExternal: false
  name: PrimaryLocation
  nameWithType: StorageAccount.PrimaryLocation
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary
  isExternal: false
  name: StatusOfPrimary
  nameWithType: StorageAccount.StatusOfPrimary
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime
  isExternal: false
  name: LastGeoFailoverTime
  nameWithType: StorageAccount.LastGeoFailoverTime
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation
  isExternal: false
  name: SecondaryLocation
  nameWithType: StorageAccount.SecondaryLocation
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary
  isExternal: false
  name: StatusOfSecondary
  nameWithType: StorageAccount.StatusOfSecondary
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime
  isExternal: false
  name: CreationTime
  nameWithType: StorageAccount.CreationTime
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain
  isExternal: false
  name: CustomDomain
  nameWithType: StorageAccount.CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints
  isExternal: false
  name: SecondaryEndpoints
  nameWithType: StorageAccount.SecondaryEndpoints
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.Encryption*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.Encryption
  isExternal: false
  name: Encryption
  nameWithType: StorageAccount.Encryption
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.Encryption
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.AccessTier*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.AccessTier
  isExternal: false
  name: AccessTier
  nameWithType: StorageAccount.AccessTier
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.AccessTier
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.Validate*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccount.Validate
  isExternal: false
  name: Validate
  nameWithType: StorageAccount.Validate
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.Validate
