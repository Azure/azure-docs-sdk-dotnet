### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  commentId: T:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  id: ServiceSasParameters
  parent: Microsoft.Azure.Management.Storage.Models
  children:
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CacheControl
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CanonicalizedResource
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentDisposition
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentEncoding
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentLanguage
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentType
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Identifier
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.IPAddressOrRange
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.KeyToSign
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyEnd
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyStart
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Permissions
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Protocols
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Resource
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyEnd
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyStart
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessExpiryTime
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessStartTime
  - Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Validate
  langs:
  - csharp
  - vb
  name: ServiceSasParameters
  nameWithType: ServiceSasParameters
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServiceSasParameters
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nThe parameters to list service SAS credentials of a speicific resource.\n"
  example: []
  syntax:
    content: public class ServiceSasParameters
    content.vb: Public Class ServiceSasParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor
  commentId: M:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: ServiceSasParameters()
  nameWithType: ServiceSasParameters.ServiceSasParameters()
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ServiceSasParameters()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the ServiceSasParameters class.\n"
  example: []
  syntax:
    content: public ServiceSasParameters()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: ServiceSasParameters(String, String, String, String, Nullable<HttpProtocol>, Nullable<DateTime>, Nullable<DateTime>, String, String, String, String, String, String, String, String, String, String, String)
  nameWithType: ServiceSasParameters.ServiceSasParameters(String, String, String, String, Nullable<HttpProtocol>, Nullable<DateTime>, Nullable<DateTime>, String, String, String, String, String, String, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ServiceSasParameters(System.String, System.String, System.String, System.String, System.Nullable<Microsoft.Azure.Management.Storage.Models.HttpProtocol>, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the ServiceSasParameters class.\n"
  example: []
  syntax:
    content: public ServiceSasParameters(string canonicalizedResource, string resource, string permissions = null, string iPAddressOrRange = null, HttpProtocol? protocols = null, DateTime? sharedAccessStartTime = null, DateTime? sharedAccessExpiryTime = null, string identifier = null, string partitionKeyStart = null, string partitionKeyEnd = null, string rowKeyStart = null, string rowKeyEnd = null, string keyToSign = null, string cacheControl = null, string contentDisposition = null, string contentEncoding = null, string contentLanguage = null, string contentType = null)
    content.vb: Public Sub New(canonicalizedResource As String, resource As String, permissions As String = Nothing, iPAddressOrRange As String = Nothing, protocols As HttpProtocol? = Nothing, sharedAccessStartTime As Date? = Nothing, sharedAccessExpiryTime As Date? = Nothing, identifier As String = Nothing, partitionKeyStart As String = Nothing, partitionKeyEnd As String = Nothing, rowKeyStart As String = Nothing, rowKeyEnd As String = Nothing, keyToSign As String = Nothing, cacheControl As String = Nothing, contentDisposition As String = Nothing, contentEncoding As String = Nothing, contentLanguage As String = Nothing, contentType As String = Nothing)
    parameters:
    - id: canonicalizedResource
      type: System.String
    - id: resource
      type: System.String
    - id: permissions
      type: System.String
    - id: iPAddressOrRange
      type: System.String
    - id: protocols
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol}
    - id: sharedAccessStartTime
      type: System.Nullable{System.DateTime}
    - id: sharedAccessExpiryTime
      type: System.Nullable{System.DateTime}
    - id: identifier
      type: System.String
    - id: partitionKeyStart
      type: System.String
    - id: partitionKeyEnd
      type: System.String
    - id: rowKeyStart
      type: System.String
    - id: rowKeyEnd
      type: System.String
    - id: keyToSign
      type: System.String
    - id: cacheControl
      type: System.String
    - id: contentDisposition
      type: System.String
    - id: contentEncoding
      type: System.String
    - id: contentLanguage
      type: System.String
    - id: contentType
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor*
  nameWithType.vb: ServiceSasParameters.ServiceSasParameters(String, String, String, String, Nullable(Of HttpProtocol), Nullable(Of DateTime), Nullable(Of DateTime), String, String, String, String, String, String, String, String, String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ServiceSasParameters(System.String, System.String, System.String, System.String, System.Nullable(Of Microsoft.Azure.Management.Storage.Models.HttpProtocol), System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String)
  name.vb: ServiceSasParameters(String, String, String, String, Nullable(Of HttpProtocol), Nullable(Of DateTime), Nullable(Of DateTime), String, String, String, String, String, String, String, String, String, String, String)
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CanonicalizedResource
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CanonicalizedResource
  id: CanonicalizedResource
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: CanonicalizedResource
  nameWithType: ServiceSasParameters.CanonicalizedResource
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CanonicalizedResource
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CanonicalizedResource
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the canonical path to the signed resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "canonicalizedResource")]

      public string CanonicalizedResource { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="canonicalizedResource")>

      Public Property CanonicalizedResource As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CanonicalizedResource*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: canonicalizedResource
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Resource
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Resource
  id: Resource
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: Resource
  nameWithType: ServiceSasParameters.Resource
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Resource
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Resource
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the signed services accessible with the service SAS. Possible\nvalues include: 'b', 'c', 'f', 's'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "signedResource")]

      public string Resource { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="signedResource")>

      Public Property Resource As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Resource*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: signedResource
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Permissions
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Permissions
  id: Permissions
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: Permissions
  nameWithType: ServiceSasParameters.Permissions
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Permissions
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Permissions
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the signed permissions for the service SAS. Possible values\ninclude: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "signedPermission")]

      public string Permissions { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="signedPermission")>

      Public Property Permissions As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Permissions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: signedPermission
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.IPAddressOrRange
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.IPAddressOrRange
  id: IPAddressOrRange
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: IPAddressOrRange
  nameWithType: ServiceSasParameters.IPAddressOrRange
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.IPAddressOrRange
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IPAddressOrRange
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets an IP address or a range of IP addresses from which to accept\nrequests.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "signedIp")]

      public string IPAddressOrRange { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="signedIp")>

      Public Property IPAddressOrRange As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.IPAddressOrRange*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: signedIp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Protocols
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Protocols
  id: Protocols
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: Protocols
  nameWithType: ServiceSasParameters.Protocols
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Protocols
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Protocols
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the protocol permitted for a request made with the account\nSAS. Possible values include: 'https,http', 'https'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "signedProtocol")]

      public HttpProtocol? Protocols { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="signedProtocol")>

      Public Property Protocols As HttpProtocol?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol}
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Protocols*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: signedProtocol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessStartTime
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessStartTime
  id: SharedAccessStartTime
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: SharedAccessStartTime
  nameWithType: ServiceSasParameters.SharedAccessStartTime
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessStartTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SharedAccessStartTime
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the time at which the SAS becomes valid.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "signedStart")]

      public DateTime? SharedAccessStartTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="signedStart")>

      Public Property SharedAccessStartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessStartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: signedStart
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessExpiryTime
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessExpiryTime
  id: SharedAccessExpiryTime
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: SharedAccessExpiryTime
  nameWithType: ServiceSasParameters.SharedAccessExpiryTime
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessExpiryTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SharedAccessExpiryTime
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the time at which the shared access signature becomes invalid.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "signedExpiry")]

      public DateTime? SharedAccessExpiryTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="signedExpiry")>

      Public Property SharedAccessExpiryTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessExpiryTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: signedExpiry
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Identifier
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Identifier
  id: Identifier
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: Identifier
  nameWithType: ServiceSasParameters.Identifier
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Identifier
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Identifier
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets a unique value up to 64 characters in length that correlates\nto an access policy specified for the container, queue, or table.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "signedIdentifier")]

      public string Identifier { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="signedIdentifier")>

      Public Property Identifier As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Identifier*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: signedIdentifier
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyStart
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyStart
  id: PartitionKeyStart
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: PartitionKeyStart
  nameWithType: ServiceSasParameters.PartitionKeyStart
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyStart
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PartitionKeyStart
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the start of partition key.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startPk")]

      public string PartitionKeyStart { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startPk")>

      Public Property PartitionKeyStart As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyStart*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startPk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyEnd
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyEnd
  id: PartitionKeyEnd
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: PartitionKeyEnd
  nameWithType: ServiceSasParameters.PartitionKeyEnd
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyEnd
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PartitionKeyEnd
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the end of partition key.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "endPk")]

      public string PartitionKeyEnd { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="endPk")>

      Public Property PartitionKeyEnd As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyEnd*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: endPk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyStart
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyStart
  id: RowKeyStart
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: RowKeyStart
  nameWithType: ServiceSasParameters.RowKeyStart
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyStart
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RowKeyStart
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the start of row key.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startRk")]

      public string RowKeyStart { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startRk")>

      Public Property RowKeyStart As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyStart*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startRk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyEnd
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyEnd
  id: RowKeyEnd
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: RowKeyEnd
  nameWithType: ServiceSasParameters.RowKeyEnd
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyEnd
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RowKeyEnd
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the end of row key.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "endRk")]

      public string RowKeyEnd { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="endRk")>

      Public Property RowKeyEnd As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyEnd*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: endRk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.KeyToSign
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.KeyToSign
  id: KeyToSign
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: KeyToSign
  nameWithType: ServiceSasParameters.KeyToSign
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.KeyToSign
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyToSign
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the key to sign the account SAS token with.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "keyToSign")]

      public string KeyToSign { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="keyToSign")>

      Public Property KeyToSign As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.KeyToSign*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: keyToSign
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CacheControl
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CacheControl
  id: CacheControl
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: CacheControl
  nameWithType: ServiceSasParameters.CacheControl
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CacheControl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CacheControl
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 139
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the response header override for cache control.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "rscc")]

      public string CacheControl { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="rscc")>

      Public Property CacheControl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CacheControl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: rscc
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentDisposition
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentDisposition
  id: ContentDisposition
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: ContentDisposition
  nameWithType: ServiceSasParameters.ContentDisposition
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentDisposition
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContentDisposition
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 145
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the response header override for content disposition.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "rscd")]

      public string ContentDisposition { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="rscd")>

      Public Property ContentDisposition As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentDisposition*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: rscd
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentEncoding
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentEncoding
  id: ContentEncoding
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: ContentEncoding
  nameWithType: ServiceSasParameters.ContentEncoding
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentEncoding
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContentEncoding
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the response header override for content encoding.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "rsce")]

      public string ContentEncoding { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="rsce")>

      Public Property ContentEncoding As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentEncoding*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: rsce
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentLanguage
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentLanguage
  id: ContentLanguage
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: ContentLanguage
  nameWithType: ServiceSasParameters.ContentLanguage
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentLanguage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContentLanguage
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 157
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the response header override for content language.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "rscl")]

      public string ContentLanguage { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="rscl")>

      Public Property ContentLanguage As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentLanguage*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: rscl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentType
  commentId: P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentType
  id: ContentType
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: ServiceSasParameters.ContentType
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContentType
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 163
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nSets the response header override for content type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "rsct")]

      public string ContentType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="rsct")>

      Public Property ContentType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: rsct
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Validate
  commentId: M:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ServiceSasParameters.Validate()
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/ServiceSasParameters.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Storage.Models
  commentId: N:Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  nameWithType: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor
  isExternal: false
  name: ServiceSasParameters
  nameWithType: ServiceSasParameters.ServiceSasParameters
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ServiceSasParameters
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol}
  parent: System
  definition: System.Nullable`1
  name: Nullable<HttpProtocol>
  nameWithType: Nullable<HttpProtocol>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.HttpProtocol>
  nameWithType.vb: Nullable(Of HttpProtocol)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.HttpProtocol)
  name.vb: Nullable(Of HttpProtocol)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.HttpProtocol
    name: HttpProtocol
    nameWithType: HttpProtocol
    fullName: Microsoft.Azure.Management.Storage.Models.HttpProtocol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.HttpProtocol
    name: HttpProtocol
    nameWithType: HttpProtocol
    fullName: Microsoft.Azure.Management.Storage.Models.HttpProtocol
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CanonicalizedResource*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CanonicalizedResource
  isExternal: false
  name: CanonicalizedResource
  nameWithType: ServiceSasParameters.CanonicalizedResource
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CanonicalizedResource
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Resource*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Resource
  isExternal: false
  name: Resource
  nameWithType: ServiceSasParameters.Resource
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Resource
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Permissions*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Permissions
  isExternal: false
  name: Permissions
  nameWithType: ServiceSasParameters.Permissions
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Permissions
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.IPAddressOrRange*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.IPAddressOrRange
  isExternal: false
  name: IPAddressOrRange
  nameWithType: ServiceSasParameters.IPAddressOrRange
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.IPAddressOrRange
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Protocols*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Protocols
  isExternal: false
  name: Protocols
  nameWithType: ServiceSasParameters.Protocols
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Protocols
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessStartTime*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessStartTime
  isExternal: false
  name: SharedAccessStartTime
  nameWithType: ServiceSasParameters.SharedAccessStartTime
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessStartTime
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessExpiryTime*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessExpiryTime
  isExternal: false
  name: SharedAccessExpiryTime
  nameWithType: ServiceSasParameters.SharedAccessExpiryTime
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessExpiryTime
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Identifier*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Identifier
  isExternal: false
  name: Identifier
  nameWithType: ServiceSasParameters.Identifier
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Identifier
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyStart*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyStart
  isExternal: false
  name: PartitionKeyStart
  nameWithType: ServiceSasParameters.PartitionKeyStart
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyStart
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyEnd*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyEnd
  isExternal: false
  name: PartitionKeyEnd
  nameWithType: ServiceSasParameters.PartitionKeyEnd
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyEnd
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyStart*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyStart
  isExternal: false
  name: RowKeyStart
  nameWithType: ServiceSasParameters.RowKeyStart
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyStart
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyEnd*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyEnd
  isExternal: false
  name: RowKeyEnd
  nameWithType: ServiceSasParameters.RowKeyEnd
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyEnd
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.KeyToSign*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.KeyToSign
  isExternal: false
  name: KeyToSign
  nameWithType: ServiceSasParameters.KeyToSign
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.KeyToSign
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CacheControl*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CacheControl
  isExternal: false
  name: CacheControl
  nameWithType: ServiceSasParameters.CacheControl
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CacheControl
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentDisposition*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentDisposition
  isExternal: false
  name: ContentDisposition
  nameWithType: ServiceSasParameters.ContentDisposition
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentDisposition
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentEncoding*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentEncoding
  isExternal: false
  name: ContentEncoding
  nameWithType: ServiceSasParameters.ContentEncoding
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentEncoding
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentLanguage*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentLanguage
  isExternal: false
  name: ContentLanguage
  nameWithType: ServiceSasParameters.ContentLanguage
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentLanguage
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentType*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentType
  isExternal: false
  name: ContentType
  nameWithType: ServiceSasParameters.ContentType
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentType
- uid: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Validate*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Validate
  isExternal: false
  name: Validate
  nameWithType: ServiceSasParameters.Validate
  fullName: Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Validate
