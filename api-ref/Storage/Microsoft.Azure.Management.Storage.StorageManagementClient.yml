### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient
  commentId: T:Microsoft.Azure.Management.Storage.StorageManagementClient
  id: StorageManagementClient
  parent: Microsoft.Azure.Management.Storage
  children:
  - Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Storage.StorageManagementClient.AcceptLanguage
  - Microsoft.Azure.Management.Storage.StorageManagementClient.ApiVersion
  - Microsoft.Azure.Management.Storage.StorageManagementClient.BaseUri
  - Microsoft.Azure.Management.Storage.StorageManagementClient.Credentials
  - Microsoft.Azure.Management.Storage.StorageManagementClient.DeserializationSettings
  - Microsoft.Azure.Management.Storage.StorageManagementClient.GenerateClientRequestId
  - Microsoft.Azure.Management.Storage.StorageManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Management.Storage.StorageManagementClient.SerializationSettings
  - Microsoft.Azure.Management.Storage.StorageManagementClient.StorageAccounts
  - Microsoft.Azure.Management.Storage.StorageManagementClient.SubscriptionId
  - Microsoft.Azure.Management.Storage.StorageManagementClient.Usage
  langs:
  - csharp
  - vb
  name: StorageManagementClient
  nameWithType: StorageManagementClient
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: StorageManagementClient
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nThe Storage Management Client.\n"
  example: []
  syntax:
    content: 'public class StorageManagementClient : ServiceClient<StorageManagementClient>, IStorageManagementClient, IDisposable, IAzureClient'
    content.vb: >-
      Public Class StorageManagementClient
          Inherits ServiceClient(Of StorageManagementClient)
          Implements IStorageManagementClient, IDisposable, IAzureClient
  inheritance:
  - System.Object
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient
  - System.IDisposable
  - Microsoft.Rest.Azure.IAzureClient
  inheritedMembers:
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.FirstMessageHandler
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.HttpClientHandler
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.CreateRootHandler
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.HttpClient
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.UserAgent
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.HttpMessageHandlers
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.Dispose
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.Dispose(System.Boolean)
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.SetUserAgent(System.String)
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.SetUserAgent(System.String,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.Storage.StorageManagementClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: StorageManagementClient.BaseUri
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.BaseUri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: BaseUri
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nThe base URI of the service.\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    content.vb: Public Property BaseUri As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.BaseUri*
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.SerializationSettings
  commentId: P:Microsoft.Azure.Management.Storage.StorageManagementClient.SerializationSettings
  id: SerializationSettings
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: SerializationSettings
  nameWithType: StorageManagementClient.SerializationSettings
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.SerializationSettings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SerializationSettings
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nGets or sets json serialization settings.\n"
  example: []
  syntax:
    content: public JsonSerializerSettings SerializationSettings { get; }
    content.vb: Public ReadOnly Property SerializationSettings As JsonSerializerSettings
    parameters: []
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.SerializationSettings*
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.SerializationSettings
  - Microsoft.Rest.Azure.IAzureClient.SerializationSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.DeserializationSettings
  commentId: P:Microsoft.Azure.Management.Storage.StorageManagementClient.DeserializationSettings
  id: DeserializationSettings
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: DeserializationSettings
  nameWithType: StorageManagementClient.DeserializationSettings
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.DeserializationSettings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: DeserializationSettings
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nGets or sets json deserialization settings.\n"
  example: []
  syntax:
    content: public JsonSerializerSettings DeserializationSettings { get; }
    content.vb: Public ReadOnly Property DeserializationSettings As JsonSerializerSettings
    parameters: []
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.DeserializationSettings*
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.DeserializationSettings
  - Microsoft.Rest.Azure.IAzureClient.DeserializationSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.Storage.StorageManagementClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: StorageManagementClient.Credentials
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.Credentials
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Credentials
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nGets Azure subscription credentials.\n"
  example: []
  syntax:
    content: public ServiceClientCredentials Credentials { get; }
    content.vb: Public ReadOnly Property Credentials As ServiceClientCredentials
    parameters: []
    return:
      type: Microsoft.Rest.ServiceClientCredentials
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.Credentials*
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.Credentials
  - Microsoft.Rest.Azure.IAzureClient.Credentials
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.SubscriptionId
  commentId: P:Microsoft.Azure.Management.Storage.StorageManagementClient.SubscriptionId
  id: SubscriptionId
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: StorageManagementClient.SubscriptionId
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.SubscriptionId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SubscriptionId
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nGets subscription credentials which uniquely identify the Microsoft Azure\nsubscription. The subscription ID forms part of the URI for every service\ncall.\n"
  example: []
  syntax:
    content: public string SubscriptionId { get; set; }
    content.vb: Public Property SubscriptionId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.SubscriptionId*
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.SubscriptionId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.Storage.StorageManagementClient.ApiVersion
  id: ApiVersion
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: ApiVersion
  nameWithType: StorageManagementClient.ApiVersion
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.ApiVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ApiVersion
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nClient Api Version.\n"
  example: []
  syntax:
    content: public string ApiVersion { get; }
    content.vb: Public ReadOnly Property ApiVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.ApiVersion*
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.ApiVersion
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.AcceptLanguage
  commentId: P:Microsoft.Azure.Management.Storage.StorageManagementClient.AcceptLanguage
  id: AcceptLanguage
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: AcceptLanguage
  nameWithType: StorageManagementClient.AcceptLanguage
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.AcceptLanguage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: AcceptLanguage
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nGets or sets the preferred language for the response.\n"
  example: []
  syntax:
    content: public string AcceptLanguage { get; set; }
    content.vb: Public Property AcceptLanguage As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.AcceptLanguage*
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.AcceptLanguage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.Storage.StorageManagementClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  nameWithType: StorageManagementClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: LongRunningOperationRetryTimeout
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nGets or sets the retry timeout in seconds for Long Running Operations.\nDefault value is 30.\n"
  example: []
  syntax:
    content: public int ? LongRunningOperationRetryTimeout { get; set; }
    content.vb: Public Property LongRunningOperationRetryTimeout As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.LongRunningOperationRetryTimeout*
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Rest.Azure.IAzureClient.LongRunningOperationRetryTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.GenerateClientRequestId
  commentId: P:Microsoft.Azure.Management.Storage.StorageManagementClient.GenerateClientRequestId
  id: GenerateClientRequestId
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: GenerateClientRequestId
  nameWithType: StorageManagementClient.GenerateClientRequestId
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.GenerateClientRequestId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: GenerateClientRequestId
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nWhen set to true a unique x-ms-client-request-id value is generated and\nincluded in each request. Default is true.\n"
  example: []
  syntax:
    content: public bool ? GenerateClientRequestId { get; set; }
    content.vb: Public Property GenerateClientRequestId As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.GenerateClientRequestId*
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.GenerateClientRequestId
  - Microsoft.Rest.Azure.IAzureClient.GenerateClientRequestId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageAccounts
  commentId: P:Microsoft.Azure.Management.Storage.StorageManagementClient.StorageAccounts
  id: StorageAccounts
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: StorageAccounts
  nameWithType: StorageManagementClient.StorageAccounts
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageAccounts
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: StorageAccounts
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nGets the IStorageAccountsOperations.\n"
  example: []
  syntax:
    content: public virtual IStorageAccountsOperations StorageAccounts { get; }
    content.vb: Public Overridable ReadOnly Property StorageAccounts As IStorageAccountsOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.IStorageAccountsOperations
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageAccounts*
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.StorageAccounts
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.Usage
  commentId: P:Microsoft.Azure.Management.Storage.StorageManagementClient.Usage
  id: Usage
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: Usage
  nameWithType: StorageManagementClient.Usage
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.Usage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Usage
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nGets the IUsageOperations.\n"
  example: []
  syntax:
    content: public virtual IUsageOperations Usage { get; }
    content.vb: Public Overridable ReadOnly Property Usage As IUsageOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.IUsageOperations
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.Usage*
  implements:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.Usage
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: StorageManagementClient(DelegatingHandler[])
  nameWithType: StorageManagementClient.StorageManagementClient(DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nInitializes a new instance of the StorageManagementClient class.\n"
  example: []
  syntax:
    content: protected StorageManagementClient(params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(ParamArray handlers As DelegatingHandler())
    parameters:
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor*
  nameWithType.vb: StorageManagementClient.StorageManagementClient(DelegatingHandler())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Net.Http.DelegatingHandler())
  name.vb: StorageManagementClient(DelegatingHandler())
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: StorageManagementClient(HttpClientHandler, DelegatingHandler[])
  nameWithType: StorageManagementClient.StorageManagementClient(HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nInitializes a new instance of the StorageManagementClient class.\n"
  example: []
  syntax:
    content: protected StorageManagementClient(HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: rootHandler
      type: System.Net.Http.HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor*
  nameWithType.vb: StorageManagementClient.StorageManagementClient(HttpClientHandler, DelegatingHandler())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: StorageManagementClient(HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Uri,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: StorageManagementClient(Uri, DelegatingHandler[])
  nameWithType: StorageManagementClient.StorageManagementClient(Uri, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Uri, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 125
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nInitializes a new instance of the StorageManagementClient class.\n"
  example: []
  syntax:
    content: protected StorageManagementClient(Uri baseUri, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(baseUri As Uri, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor*
  nameWithType.vb: StorageManagementClient.StorageManagementClient(Uri, DelegatingHandler())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Uri, System.Net.Http.DelegatingHandler())
  name.vb: StorageManagementClient(Uri, DelegatingHandler())
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: StorageManagementClient(Uri, HttpClientHandler, DelegatingHandler[])
  nameWithType: StorageManagementClient.StorageManagementClient(Uri, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Uri, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 146
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nInitializes a new instance of the StorageManagementClient class.\n"
  example: []
  syntax:
    content: protected StorageManagementClient(Uri baseUri, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(baseUri As Uri, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: rootHandler
      type: System.Net.Http.HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor*
  nameWithType.vb: StorageManagementClient.StorageManagementClient(Uri, HttpClientHandler, DelegatingHandler())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Uri, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: StorageManagementClient(Uri, HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  id: '#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: StorageManagementClient(ServiceClientCredentials, DelegatingHandler[])
  nameWithType: StorageManagementClient.StorageManagementClient(ServiceClientCredentials, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(Microsoft.Rest.ServiceClientCredentials, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 164
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nInitializes a new instance of the StorageManagementClient class.\n"
  example: []
  syntax:
    content: public StorageManagementClient(ServiceClientCredentials credentials, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(credentials As ServiceClientCredentials, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: credentials
      type: Microsoft.Rest.ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor*
  nameWithType.vb: StorageManagementClient.StorageManagementClient(ServiceClientCredentials, DelegatingHandler())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(Microsoft.Rest.ServiceClientCredentials, System.Net.Http.DelegatingHandler())
  name.vb: StorageManagementClient(ServiceClientCredentials, DelegatingHandler())
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  id: '#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: StorageManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  nameWithType: StorageManagementClient.StorageManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(Microsoft.Rest.ServiceClientCredentials, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 189
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nInitializes a new instance of the StorageManagementClient class.\n"
  example: []
  syntax:
    content: public StorageManagementClient(ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(credentials As ServiceClientCredentials, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: credentials
      type: Microsoft.Rest.ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: rootHandler
      type: System.Net.Http.HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor*
  nameWithType.vb: StorageManagementClient.StorageManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(Microsoft.Rest.ServiceClientCredentials, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: StorageManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: StorageManagementClient(Uri, ServiceClientCredentials, DelegatingHandler[])
  nameWithType: StorageManagementClient.StorageManagementClient(Uri, ServiceClientCredentials, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Uri, Microsoft.Rest.ServiceClientCredentials, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 214
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nInitializes a new instance of the StorageManagementClient class.\n"
  example: []
  syntax:
    content: public StorageManagementClient(Uri baseUri, ServiceClientCredentials credentials, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(baseUri As Uri, credentials As ServiceClientCredentials, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: credentials
      type: Microsoft.Rest.ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor*
  nameWithType.vb: StorageManagementClient.StorageManagementClient(Uri, ServiceClientCredentials, DelegatingHandler())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Uri, Microsoft.Rest.ServiceClientCredentials, System.Net.Http.DelegatingHandler())
  name.vb: StorageManagementClient(Uri, ServiceClientCredentials, DelegatingHandler())
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Storage.StorageManagementClient
  langs:
  - csharp
  - vb
  name: StorageManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  nameWithType: StorageManagementClient.StorageManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Uri, Microsoft.Rest.ServiceClientCredentials, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/StorageManagementClient.cs
    startLine: 247
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nInitializes a new instance of the StorageManagementClient class.\n"
  example: []
  syntax:
    content: public StorageManagementClient(Uri baseUri, ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(baseUri As Uri, credentials As ServiceClientCredentials, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: credentials
      type: Microsoft.Rest.ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: rootHandler
      type: System.Net.Http.HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor*
  nameWithType.vb: StorageManagementClient.StorageManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient(System.Uri, Microsoft.Rest.ServiceClientCredentials, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: StorageManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
references:
- uid: Microsoft.Azure.Management.Storage
  commentId: N:Microsoft.Azure.Management.Storage
  isExternal: false
  name: Microsoft.Azure.Management.Storage
  nameWithType: Microsoft.Azure.Management.Storage
  fullName: Microsoft.Azure.Management.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  commentId: T:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  parent: Microsoft.Rest
  definition: Microsoft.Rest.ServiceClient`1
  name: ServiceClient<StorageManagementClient>
  nameWithType: ServiceClient<StorageManagementClient>
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>
  nameWithType.vb: ServiceClient(Of StorageManagementClient)
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient)
  name.vb: ServiceClient(Of StorageManagementClient)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.StorageManagementClient
    name: StorageManagementClient
    nameWithType: StorageManagementClient
    fullName: Microsoft.Azure.Management.Storage.StorageManagementClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.StorageManagementClient
    name: StorageManagementClient
    nameWithType: StorageManagementClient
    fullName: Microsoft.Azure.Management.Storage.StorageManagementClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient
  commentId: T:Microsoft.Azure.Management.Storage.IStorageManagementClient
  parent: Microsoft.Azure.Management.Storage
  isExternal: false
  name: IStorageManagementClient
  nameWithType: IStorageManagementClient
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Rest.Azure.IAzureClient
  commentId: T:Microsoft.Rest.Azure.IAzureClient
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IAzureClient
  nameWithType: IAzureClient
  fullName: Microsoft.Rest.Azure.IAzureClient
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.FirstMessageHandler
  commentId: P:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.FirstMessageHandler
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.FirstMessageHandler
  name: FirstMessageHandler
  nameWithType: ServiceClient<StorageManagementClient>.FirstMessageHandler
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.FirstMessageHandler
  nameWithType.vb: ServiceClient(Of StorageManagementClient).FirstMessageHandler
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).FirstMessageHandler
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.HttpClientHandler
  commentId: P:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.HttpClientHandler
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.HttpClientHandler
  name: HttpClientHandler
  nameWithType: ServiceClient<StorageManagementClient>.HttpClientHandler
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.HttpClientHandler
  nameWithType.vb: ServiceClient(Of StorageManagementClient).HttpClientHandler
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).HttpClientHandler
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.CreateRootHandler
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.CreateRootHandler
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.CreateRootHandler
  name: CreateRootHandler()
  nameWithType: ServiceClient<StorageManagementClient>.CreateRootHandler()
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.CreateRootHandler()
  nameWithType.vb: ServiceClient(Of StorageManagementClient).CreateRootHandler()
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).CreateRootHandler()
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.CreateRootHandler
    name: CreateRootHandler
    nameWithType: ServiceClient<StorageManagementClient>.CreateRootHandler
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.CreateRootHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.CreateRootHandler
    name: CreateRootHandler
    nameWithType: ServiceClient(Of StorageManagementClient).CreateRootHandler
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).CreateRootHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.HttpClient
  commentId: P:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.HttpClient
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.HttpClient
  name: HttpClient
  nameWithType: ServiceClient<StorageManagementClient>.HttpClient
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.HttpClient
  nameWithType.vb: ServiceClient(Of StorageManagementClient).HttpClient
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).HttpClient
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.UserAgent
  commentId: P:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.UserAgent
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.UserAgent
  name: UserAgent
  nameWithType: ServiceClient<StorageManagementClient>.UserAgent
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.UserAgent
  nameWithType.vb: ServiceClient(Of StorageManagementClient).UserAgent
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).UserAgent
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.HttpMessageHandlers
  commentId: P:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.HttpMessageHandlers
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.HttpMessageHandlers
  name: HttpMessageHandlers
  nameWithType: ServiceClient<StorageManagementClient>.HttpMessageHandlers
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.HttpMessageHandlers
  nameWithType.vb: ServiceClient(Of StorageManagementClient).HttpMessageHandlers
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).HttpMessageHandlers
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  name: SetRetryPolicy(RetryPolicy)
  nameWithType: ServiceClient<StorageManagementClient>.SetRetryPolicy(RetryPolicy)
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  nameWithType.vb: ServiceClient(Of StorageManagementClient).SetRetryPolicy(RetryPolicy)
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient<StorageManagementClient>.SetRetryPolicy
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.SetRetryPolicy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Microsoft.Rest.TransientFaultHandling.RetryPolicy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient(Of StorageManagementClient).SetRetryPolicy
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).SetRetryPolicy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Microsoft.Rest.TransientFaultHandling.RetryPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.Dispose
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.Dispose
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.Dispose
  name: Dispose()
  nameWithType: ServiceClient<StorageManagementClient>.Dispose()
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.Dispose()
  nameWithType.vb: ServiceClient(Of StorageManagementClient).Dispose()
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).Dispose()
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient<StorageManagementClient>.Dispose
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient(Of StorageManagementClient).Dispose
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.Dispose(System.Boolean)
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.Dispose(System.Boolean)
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  nameWithType: ServiceClient<StorageManagementClient>.Dispose(Boolean)
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.Dispose(System.Boolean)
  nameWithType.vb: ServiceClient(Of StorageManagementClient).Dispose(Boolean)
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ServiceClient<StorageManagementClient>.Dispose
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ServiceClient(Of StorageManagementClient).Dispose
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  name: InitializeHttpClient(HttpClientHandler, DelegatingHandler[])
  nameWithType: ServiceClient<StorageManagementClient>.InitializeHttpClient(HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.InitializeHttpClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  nameWithType.vb: ServiceClient(Of StorageManagementClient).InitializeHttpClient(HttpClientHandler, DelegatingHandler())
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).InitializeHttpClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: InitializeHttpClient(HttpClientHandler, DelegatingHandler())
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
    name: InitializeHttpClient
    nameWithType: ServiceClient<StorageManagementClient>.InitializeHttpClient
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.InitializeHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
    name: InitializeHttpClient
    nameWithType: ServiceClient(Of StorageManagementClient).InitializeHttpClient
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).InitializeHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.SetUserAgent(System.String)
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.SetUserAgent(System.String)
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
  name: SetUserAgent(String)
  nameWithType: ServiceClient<StorageManagementClient>.SetUserAgent(String)
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.SetUserAgent(System.String)
  nameWithType.vb: ServiceClient(Of StorageManagementClient).SetUserAgent(String)
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).SetUserAgent(System.String)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
    name: SetUserAgent
    nameWithType: ServiceClient<StorageManagementClient>.SetUserAgent
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
    name: SetUserAgent
    nameWithType: ServiceClient(Of StorageManagementClient).SetUserAgent
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.SetUserAgent(System.String,System.String)
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}.SetUserAgent(System.String,System.String)
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Storage.StorageManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
  name: SetUserAgent(String, String)
  nameWithType: ServiceClient<StorageManagementClient>.SetUserAgent(String, String)
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.SetUserAgent(System.String, System.String)
  nameWithType.vb: ServiceClient(Of StorageManagementClient).SetUserAgent(String, String)
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).SetUserAgent(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
    name: SetUserAgent
    nameWithType: ServiceClient<StorageManagementClient>.SetUserAgent
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Storage.StorageManagementClient>.SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
    name: SetUserAgent
    nameWithType: ServiceClient(Of StorageManagementClient).SetUserAgent
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Storage.StorageManagementClient).SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.ServiceClient`1
  commentId: T:Microsoft.Rest.ServiceClient`1
  isExternal: false
  name: ServiceClient<T>
  nameWithType: ServiceClient<T>
  fullName: Microsoft.Rest.ServiceClient<T>
  nameWithType.vb: ServiceClient(Of T)
  fullname.vb: Microsoft.Rest.ServiceClient(Of T)
  name.vb: ServiceClient(Of T)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest
  commentId: N:Microsoft.Rest
  isExternal: false
  name: Microsoft.Rest
  nameWithType: Microsoft.Rest
  fullName: Microsoft.Rest
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Rest.ServiceClient`1.FirstMessageHandler
  commentId: P:Microsoft.Rest.ServiceClient`1.FirstMessageHandler
  isExternal: false
  name: FirstMessageHandler
  nameWithType: ServiceClient<T>.FirstMessageHandler
  fullName: Microsoft.Rest.ServiceClient<T>.FirstMessageHandler
  nameWithType.vb: ServiceClient(Of T).FirstMessageHandler
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).FirstMessageHandler
- uid: Microsoft.Rest.ServiceClient`1.HttpClientHandler
  commentId: P:Microsoft.Rest.ServiceClient`1.HttpClientHandler
  isExternal: false
  name: HttpClientHandler
  nameWithType: ServiceClient<T>.HttpClientHandler
  fullName: Microsoft.Rest.ServiceClient<T>.HttpClientHandler
  nameWithType.vb: ServiceClient(Of T).HttpClientHandler
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).HttpClientHandler
- uid: Microsoft.Rest.ServiceClient`1.CreateRootHandler
  commentId: M:Microsoft.Rest.ServiceClient`1.CreateRootHandler
  isExternal: false
  name: CreateRootHandler()
  nameWithType: ServiceClient<T>.CreateRootHandler()
  fullName: Microsoft.Rest.ServiceClient<T>.CreateRootHandler()
  nameWithType.vb: ServiceClient(Of T).CreateRootHandler()
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).CreateRootHandler()
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.CreateRootHandler
    name: CreateRootHandler
    nameWithType: ServiceClient<T>.CreateRootHandler
    fullName: Microsoft.Rest.ServiceClient<T>.CreateRootHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.CreateRootHandler
    name: CreateRootHandler
    nameWithType: ServiceClient(Of T).CreateRootHandler
    fullName: Microsoft.Rest.ServiceClient(Of T).CreateRootHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.HttpClient
  commentId: P:Microsoft.Rest.ServiceClient`1.HttpClient
  isExternal: false
  name: HttpClient
  nameWithType: ServiceClient<T>.HttpClient
  fullName: Microsoft.Rest.ServiceClient<T>.HttpClient
  nameWithType.vb: ServiceClient(Of T).HttpClient
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).HttpClient
- uid: Microsoft.Rest.ServiceClient`1.UserAgent
  commentId: P:Microsoft.Rest.ServiceClient`1.UserAgent
  isExternal: false
  name: UserAgent
  nameWithType: ServiceClient<T>.UserAgent
  fullName: Microsoft.Rest.ServiceClient<T>.UserAgent
  nameWithType.vb: ServiceClient(Of T).UserAgent
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).UserAgent
- uid: Microsoft.Rest.ServiceClient`1.HttpMessageHandlers
  commentId: P:Microsoft.Rest.ServiceClient`1.HttpMessageHandlers
  isExternal: false
  name: HttpMessageHandlers
  nameWithType: ServiceClient<T>.HttpMessageHandlers
  fullName: Microsoft.Rest.ServiceClient<T>.HttpMessageHandlers
  nameWithType.vb: ServiceClient(Of T).HttpMessageHandlers
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).HttpMessageHandlers
- uid: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  commentId: M:Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  isExternal: false
  name: SetRetryPolicy(RetryPolicy)
  nameWithType: ServiceClient<T>.SetRetryPolicy(RetryPolicy)
  fullName: Microsoft.Rest.ServiceClient<T>.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  nameWithType.vb: ServiceClient(Of T).SetRetryPolicy(RetryPolicy)
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient<T>.SetRetryPolicy
    fullName: Microsoft.Rest.ServiceClient<T>.SetRetryPolicy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Microsoft.Rest.TransientFaultHandling.RetryPolicy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient(Of T).SetRetryPolicy
    fullName: Microsoft.Rest.ServiceClient(Of T).SetRetryPolicy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Microsoft.Rest.TransientFaultHandling.RetryPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.Dispose
  commentId: M:Microsoft.Rest.ServiceClient`1.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: ServiceClient<T>.Dispose()
  fullName: Microsoft.Rest.ServiceClient<T>.Dispose()
  nameWithType.vb: ServiceClient(Of T).Dispose()
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).Dispose()
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient<T>.Dispose
    fullName: Microsoft.Rest.ServiceClient<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient(Of T).Dispose
    fullName: Microsoft.Rest.ServiceClient(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
  commentId: M:Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: ServiceClient<T>.Dispose(Boolean)
  fullName: Microsoft.Rest.ServiceClient<T>.Dispose(System.Boolean)
  nameWithType.vb: ServiceClient(Of T).Dispose(Boolean)
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ServiceClient<T>.Dispose
    fullName: Microsoft.Rest.ServiceClient<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ServiceClient(Of T).Dispose
    fullName: Microsoft.Rest.ServiceClient(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  isExternal: true
  name: InitializeHttpClient(HttpClientHandler, DelegatingHandler[])
  nameWithType: ServiceClient<T>.InitializeHttpClient(HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Rest.ServiceClient<T>.InitializeHttpClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  nameWithType.vb: ServiceClient(Of T).InitializeHttpClient(HttpClientHandler, DelegatingHandler())
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).InitializeHttpClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: InitializeHttpClient(HttpClientHandler, DelegatingHandler())
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
    name: InitializeHttpClient
    nameWithType: ServiceClient<T>.InitializeHttpClient
    fullName: Microsoft.Rest.ServiceClient<T>.InitializeHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
    name: InitializeHttpClient
    nameWithType: ServiceClient(Of T).InitializeHttpClient
    fullName: Microsoft.Rest.ServiceClient(Of T).InitializeHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
  commentId: M:Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
  isExternal: true
  name: SetUserAgent(String)
  nameWithType: ServiceClient<T>.SetUserAgent(String)
  fullName: Microsoft.Rest.ServiceClient<T>.SetUserAgent(System.String)
  nameWithType.vb: ServiceClient(Of T).SetUserAgent(String)
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).SetUserAgent(System.String)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
    name: SetUserAgent
    nameWithType: ServiceClient<T>.SetUserAgent
    fullName: Microsoft.Rest.ServiceClient<T>.SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
    name: SetUserAgent
    nameWithType: ServiceClient(Of T).SetUserAgent
    fullName: Microsoft.Rest.ServiceClient(Of T).SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
  commentId: M:Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
  isExternal: true
  name: SetUserAgent(String, String)
  nameWithType: ServiceClient<T>.SetUserAgent(String, String)
  fullName: Microsoft.Rest.ServiceClient<T>.SetUserAgent(System.String, System.String)
  nameWithType.vb: ServiceClient(Of T).SetUserAgent(String, String)
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).SetUserAgent(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
    name: SetUserAgent
    nameWithType: ServiceClient<T>.SetUserAgent
    fullName: Microsoft.Rest.ServiceClient<T>.SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
    name: SetUserAgent
    nameWithType: ServiceClient(Of T).SetUserAgent
    fullName: Microsoft.Rest.ServiceClient(Of T).SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.BaseUri*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.BaseUri
  isExternal: false
  name: BaseUri
  nameWithType: StorageManagementClient.BaseUri
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.BaseUri
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.BaseUri
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  isExternal: false
  name: BaseUri
  nameWithType: IStorageManagementClient.BaseUri
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.SerializationSettings*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.SerializationSettings
  isExternal: false
  name: SerializationSettings
  nameWithType: StorageManagementClient.SerializationSettings
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.SerializationSettings
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.SerializationSettings
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.SerializationSettings
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  isExternal: false
  name: SerializationSettings
  nameWithType: IStorageManagementClient.SerializationSettings
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.SerializationSettings
- uid: Microsoft.Rest.Azure.IAzureClient.SerializationSettings
  commentId: P:Microsoft.Rest.Azure.IAzureClient.SerializationSettings
  parent: Microsoft.Rest.Azure.IAzureClient
  isExternal: false
  name: SerializationSettings
  nameWithType: IAzureClient.SerializationSettings
  fullName: Microsoft.Rest.Azure.IAzureClient.SerializationSettings
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.DeserializationSettings*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.DeserializationSettings
  isExternal: false
  name: DeserializationSettings
  nameWithType: StorageManagementClient.DeserializationSettings
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.DeserializationSettings
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.DeserializationSettings
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.DeserializationSettings
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  isExternal: false
  name: DeserializationSettings
  nameWithType: IStorageManagementClient.DeserializationSettings
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.DeserializationSettings
- uid: Microsoft.Rest.Azure.IAzureClient.DeserializationSettings
  commentId: P:Microsoft.Rest.Azure.IAzureClient.DeserializationSettings
  parent: Microsoft.Rest.Azure.IAzureClient
  isExternal: false
  name: DeserializationSettings
  nameWithType: IAzureClient.DeserializationSettings
  fullName: Microsoft.Rest.Azure.IAzureClient.DeserializationSettings
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.Credentials*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.Credentials
  isExternal: false
  name: Credentials
  nameWithType: StorageManagementClient.Credentials
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.Credentials
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Credentials
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  isExternal: false
  name: Credentials
  nameWithType: IStorageManagementClient.Credentials
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.Credentials
- uid: Microsoft.Rest.Azure.IAzureClient.Credentials
  commentId: P:Microsoft.Rest.Azure.IAzureClient.Credentials
  parent: Microsoft.Rest.Azure.IAzureClient
  isExternal: false
  name: Credentials
  nameWithType: IAzureClient.Credentials
  fullName: Microsoft.Rest.Azure.IAzureClient.Credentials
- uid: Microsoft.Rest.ServiceClientCredentials
  commentId: T:Microsoft.Rest.ServiceClientCredentials
  parent: Microsoft.Rest
  isExternal: false
  name: ServiceClientCredentials
  nameWithType: ServiceClientCredentials
  fullName: Microsoft.Rest.ServiceClientCredentials
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.SubscriptionId*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.SubscriptionId
  isExternal: false
  name: SubscriptionId
  nameWithType: StorageManagementClient.SubscriptionId
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.SubscriptionId
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.SubscriptionId
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.SubscriptionId
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  isExternal: false
  name: SubscriptionId
  nameWithType: IStorageManagementClient.SubscriptionId
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.SubscriptionId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.ApiVersion*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.ApiVersion
  isExternal: false
  name: ApiVersion
  nameWithType: StorageManagementClient.ApiVersion
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.ApiVersion
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.ApiVersion
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  isExternal: false
  name: ApiVersion
  nameWithType: IStorageManagementClient.ApiVersion
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.ApiVersion
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.AcceptLanguage*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.AcceptLanguage
  isExternal: false
  name: AcceptLanguage
  nameWithType: StorageManagementClient.AcceptLanguage
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.AcceptLanguage
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.AcceptLanguage
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.AcceptLanguage
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  isExternal: false
  name: AcceptLanguage
  nameWithType: IStorageManagementClient.AcceptLanguage
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.AcceptLanguage
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.LongRunningOperationRetryTimeout*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.LongRunningOperationRetryTimeout
  isExternal: false
  name: LongRunningOperationRetryTimeout
  nameWithType: StorageManagementClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.LongRunningOperationRetryTimeout
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  isExternal: false
  name: LongRunningOperationRetryTimeout
  nameWithType: IStorageManagementClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationRetryTimeout
- uid: Microsoft.Rest.Azure.IAzureClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Rest.Azure.IAzureClient.LongRunningOperationRetryTimeout
  parent: Microsoft.Rest.Azure.IAzureClient
  isExternal: false
  name: LongRunningOperationRetryTimeout
  nameWithType: IAzureClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Rest.Azure.IAzureClient.LongRunningOperationRetryTimeout
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.GenerateClientRequestId*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.GenerateClientRequestId
  isExternal: false
  name: GenerateClientRequestId
  nameWithType: StorageManagementClient.GenerateClientRequestId
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.GenerateClientRequestId
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.GenerateClientRequestId
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.GenerateClientRequestId
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  isExternal: false
  name: GenerateClientRequestId
  nameWithType: IStorageManagementClient.GenerateClientRequestId
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.GenerateClientRequestId
- uid: Microsoft.Rest.Azure.IAzureClient.GenerateClientRequestId
  commentId: P:Microsoft.Rest.Azure.IAzureClient.GenerateClientRequestId
  parent: Microsoft.Rest.Azure.IAzureClient
  isExternal: false
  name: GenerateClientRequestId
  nameWithType: IAzureClient.GenerateClientRequestId
  fullName: Microsoft.Rest.Azure.IAzureClient.GenerateClientRequestId
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageAccounts*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.StorageAccounts
  isExternal: false
  name: StorageAccounts
  nameWithType: StorageManagementClient.StorageAccounts
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageAccounts
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.StorageAccounts
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.StorageAccounts
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  isExternal: false
  name: StorageAccounts
  nameWithType: IStorageManagementClient.StorageAccounts
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.StorageAccounts
- uid: Microsoft.Azure.Management.Storage.IStorageAccountsOperations
  commentId: T:Microsoft.Azure.Management.Storage.IStorageAccountsOperations
  parent: Microsoft.Azure.Management.Storage
  isExternal: false
  name: IStorageAccountsOperations
  nameWithType: IStorageAccountsOperations
  fullName: Microsoft.Azure.Management.Storage.IStorageAccountsOperations
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.Usage*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.Usage
  isExternal: false
  name: Usage
  nameWithType: StorageManagementClient.Usage
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.Usage
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.Usage
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Usage
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  isExternal: false
  name: Usage
  nameWithType: IStorageManagementClient.Usage
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.Usage
- uid: Microsoft.Azure.Management.Storage.IUsageOperations
  commentId: T:Microsoft.Azure.Management.Storage.IUsageOperations
  parent: Microsoft.Azure.Management.Storage
  isExternal: false
  name: IUsageOperations
  nameWithType: IUsageOperations
  fullName: Microsoft.Azure.Management.Storage.IUsageOperations
- uid: Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor
  isExternal: false
  name: StorageManagementClient
  nameWithType: StorageManagementClient.StorageManagementClient
  fullName: Microsoft.Azure.Management.Storage.StorageManagementClient.StorageManagementClient
- uid: System.Net.Http.DelegatingHandler[]
  name: DelegatingHandler[]
  nameWithType: DelegatingHandler[]
  fullName: System.Net.Http.DelegatingHandler[]
  nameWithType.vb: DelegatingHandler()
  fullname.vb: System.Net.Http.DelegatingHandler()
  name.vb: DelegatingHandler()
  spec.csharp:
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Net.Http.HttpClientHandler
  commentId: T:System.Net.Http.HttpClientHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpClientHandler
  nameWithType: HttpClientHandler
  fullName: System.Net.Http.HttpClientHandler
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
