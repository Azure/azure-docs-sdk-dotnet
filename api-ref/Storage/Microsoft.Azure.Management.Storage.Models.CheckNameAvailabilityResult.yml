### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult
  commentId: T:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult
  id: CheckNameAvailabilityResult
  parent: Microsoft.Azure.Management.Storage.Models
  children:
  - Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor
  - Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason},System.String)
  - Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Message
  - Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.NameAvailable
  - Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Reason
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilityResult
  nameWithType: CheckNameAvailabilityResult
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: CheckNameAvailabilityResult
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nThe CheckNameAvailability operation response.\n"
  example: []
  syntax:
    content: public class CheckNameAvailabilityResult
    content.vb: Public Class CheckNameAvailabilityResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor
  commentId: M:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilityResult()
  nameWithType: CheckNameAvailabilityResult.CheckNameAvailabilityResult()
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.CheckNameAvailabilityResult()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the CheckNameAvailabilityResult\nclass.\n"
  example: []
  syntax:
    content: public CheckNameAvailabilityResult()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason},System.String)
  commentId: M:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason},System.String)
  id: '#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason},System.String)'
  parent: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilityResult(Nullable<Boolean>, Nullable<Reason>, String)
  nameWithType: CheckNameAvailabilityResult.CheckNameAvailabilityResult(Nullable<Boolean>, Nullable<Reason>, String)
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.CheckNameAvailabilityResult(System.Nullable<System.Boolean>, System.Nullable<Microsoft.Azure.Management.Storage.Models.Reason>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the CheckNameAvailabilityResult\nclass.\n"
  example: []
  syntax:
    content: public CheckNameAvailabilityResult(bool ? nameAvailable = null, Reason? reason = null, string message = null)
    content.vb: Public Sub New(nameAvailable As Boolean? = Nothing, reason As Reason? = Nothing, message As String = Nothing)
    parameters:
    - id: nameAvailable
      type: System.Nullable{System.Boolean}
    - id: reason
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason}
    - id: message
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor*
  nameWithType.vb: CheckNameAvailabilityResult.CheckNameAvailabilityResult(Nullable(Of Boolean), Nullable(Of Reason), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.CheckNameAvailabilityResult(System.Nullable(Of System.Boolean), System.Nullable(Of Microsoft.Azure.Management.Storage.Models.Reason), System.String)
  name.vb: CheckNameAvailabilityResult(Nullable(Of Boolean), Nullable(Of Reason), String)
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.NameAvailable
  commentId: P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.NameAvailable
  id: NameAvailable
  parent: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult
  langs:
  - csharp
  - vb
  name: NameAvailable
  nameWithType: CheckNameAvailabilityResult.NameAvailable
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.NameAvailable
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: NameAvailable
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets a boolean value that indicates whether the name is available\nfor you to use. If true, the name is available. If false, the\nname has already been taken or is invalid and cannot be used.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "nameAvailable")]

      public bool ? NameAvailable { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="nameAvailable")>

      Public ReadOnly Property NameAvailable As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.NameAvailable*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: nameAvailable
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Reason
  commentId: P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Reason
  id: Reason
  parent: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: CheckNameAvailabilityResult.Reason
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Reason
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Reason
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the reason that a storage account name could not be used. The\nReason element is only returned if NameAvailable is false.\nPossible values include: 'AccountNameInvalid', 'AlreadyExists'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "reason")]

      public Reason? Reason { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="reason")>

      Public ReadOnly Property Reason As Reason?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason}
  overload: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Reason*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: reason
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Message
  commentId: P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Message
  id: Message
  parent: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: CheckNameAvailabilityResult.Message
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Message
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Message
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/CheckNameAvailabilityResult.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets an error message explaining the Reason value in more detail.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "message")]

      public string Message { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="message")>

      Public ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Message*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: message
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.Storage.Models
  commentId: N:Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  nameWithType: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor
  isExternal: false
  name: CheckNameAvailabilityResult
  nameWithType: CheckNameAvailabilityResult.CheckNameAvailabilityResult
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.CheckNameAvailabilityResult
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Reason>
  nameWithType: Nullable<Reason>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.Reason>
  nameWithType.vb: Nullable(Of Reason)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.Reason)
  name.vb: Nullable(Of Reason)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.Reason
    name: Reason
    nameWithType: Reason
    fullName: Microsoft.Azure.Management.Storage.Models.Reason
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.Reason
    name: Reason
    nameWithType: Reason
    fullName: Microsoft.Azure.Management.Storage.Models.Reason
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.NameAvailable*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.NameAvailable
  isExternal: false
  name: NameAvailable
  nameWithType: CheckNameAvailabilityResult.NameAvailable
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.NameAvailable
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Reason*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Reason
  isExternal: false
  name: Reason
  nameWithType: CheckNameAvailabilityResult.Reason
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Reason
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Message*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Message
  isExternal: false
  name: Message
  nameWithType: CheckNameAvailabilityResult.Message
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Message
