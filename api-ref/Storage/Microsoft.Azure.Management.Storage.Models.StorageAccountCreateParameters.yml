### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  commentId: T:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  id: StorageAccountCreateParameters
  parent: Microsoft.Azure.Management.Storage.Models
  children:
  - Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor
  - Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind},System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})
  - Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AccessTier
  - Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.CustomDomain
  - Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Encryption
  - Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Kind
  - Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Location
  - Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Sku
  - Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Tags
  - Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Validate
  langs:
  - csharp
  - vb
  name: StorageAccountCreateParameters
  nameWithType: StorageAccountCreateParameters
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: StorageAccountCreateParameters
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nThe parameters used when creating a storage account.\n"
  example: []
  syntax:
    content: public class StorageAccountCreateParameters
    content.vb: Public Class StorageAccountCreateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: StorageAccountCreateParameters()
  nameWithType: StorageAccountCreateParameters.StorageAccountCreateParameters()
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.StorageAccountCreateParameters()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the StorageAccountCreateParameters\nclass.\n"
  example: []
  syntax:
    content: public StorageAccountCreateParameters()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind},System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind},System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})
  id: '#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind},System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})'
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: StorageAccountCreateParameters(Sku, Nullable<Kind>, String, IDictionary<String, String>, CustomDomain, Encryption, Nullable<AccessTier>)
  nameWithType: StorageAccountCreateParameters.StorageAccountCreateParameters(Sku, Nullable<Kind>, String, IDictionary<String, String>, CustomDomain, Encryption, Nullable<AccessTier>)
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.StorageAccountCreateParameters(Microsoft.Azure.Management.Storage.Models.Sku, System.Nullable<Microsoft.Azure.Management.Storage.Models.Kind>, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.Azure.Management.Storage.Models.CustomDomain, Microsoft.Azure.Management.Storage.Models.Encryption, System.Nullable<Microsoft.Azure.Management.Storage.Models.AccessTier>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the StorageAccountCreateParameters\nclass.\n"
  example: []
  syntax:
    content: public StorageAccountCreateParameters(Sku sku, Kind? kind, string location, IDictionary<string, string> tags = null, CustomDomain customDomain = null, Encryption encryption = null, AccessTier? accessTier = null)
    content.vb: Public Sub New(sku As Sku, kind As Kind?, location As String, tags As IDictionary(Of String, String) = Nothing, customDomain As CustomDomain = Nothing, encryption As Encryption = Nothing, accessTier As AccessTier? = Nothing)
    parameters:
    - id: sku
      type: Microsoft.Azure.Management.Storage.Models.Sku
    - id: kind
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind}
    - id: location
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: customDomain
      type: Microsoft.Azure.Management.Storage.Models.CustomDomain
    - id: encryption
      type: Microsoft.Azure.Management.Storage.Models.Encryption
    - id: accessTier
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor*
  nameWithType.vb: StorageAccountCreateParameters.StorageAccountCreateParameters(Sku, Nullable(Of Kind), String, IDictionary(Of String, String), CustomDomain, Encryption, Nullable(Of AccessTier))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.StorageAccountCreateParameters(Microsoft.Azure.Management.Storage.Models.Sku, System.Nullable(Of Microsoft.Azure.Management.Storage.Models.Kind), System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.Azure.Management.Storage.Models.CustomDomain, Microsoft.Azure.Management.Storage.Models.Encryption, System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccessTier))
  name.vb: StorageAccountCreateParameters(Sku, Nullable(Of Kind), String, IDictionary(Of String, String), CustomDomain, Encryption, Nullable(Of AccessTier))
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Sku
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Sku
  id: Sku
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: Sku
  nameWithType: StorageAccountCreateParameters.Sku
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Sku
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Sku
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nRequired. Gets or sets the sku name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sku")]

      public Sku Sku { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sku")>

      Public Property Sku As Sku
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Sku
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Sku*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sku
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Kind
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Kind
  id: Kind
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: StorageAccountCreateParameters.Kind
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Kind
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Kind
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nRequired. Indicates the type of storage account. Possible values\ninclude: 'Storage', 'BlobStorage'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "kind")]

      public Kind? Kind { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="kind")>

      Public Property Kind As Kind?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Kind*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: kind
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Location
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Location
  id: Location
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: StorageAccountCreateParameters.Location
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Location
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Location
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nRequired. Gets or sets the location of the resource. This will be\none of the supported and registered Azure Geo Regions (e.g. West\nUS, East US, Southeast Asia, etc.). The geo region of a resource\ncannot be changed once it is created, but if an identical geo\nregion is specified on update, the request will succeed.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "location")]

      public string Location { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="location")>

      Public Property Location As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Location*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: location
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Tags
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Tags
  id: Tags
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: StorageAccountCreateParameters.Tags
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Tags
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Tags
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets or sets a list of key value pairs that describe the resource.\nThese tags can be used for viewing and grouping this resource\n(across resource groups). A maximum of 15 tags can be provided\nfor a resource. Each tag must have a key with a length no greater\nthan 128 characters and a value with a length no greater than 256\ncharacters.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tags")]

      public IDictionary<string, string> Tags { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tags")>

      Public Property Tags As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Tags*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.CustomDomain
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.CustomDomain
  id: CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: CustomDomain
  nameWithType: StorageAccountCreateParameters.CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.CustomDomain
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: CustomDomain
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nUser domain assigned to the storage account. Name is the CNAME\nsource. Only one custom domain is supported per storage account\nat this time. To clear the existing custom domain, use an empty\nstring for the custom domain name property.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.customDomain")]

      public CustomDomain CustomDomain { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.customDomain")>

      Public Property CustomDomain As CustomDomain
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.CustomDomain
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.CustomDomain*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.customDomain
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Encryption
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Encryption
  id: Encryption
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: Encryption
  nameWithType: StorageAccountCreateParameters.Encryption
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Encryption
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Encryption
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nProvides the encryption settings on the account. If left\nunspecified the account encryption settings will remain the same.\nThe default setting is unencrypted.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.encryption")]

      public Encryption Encryption { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.encryption")>

      Public Property Encryption As Encryption
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Encryption
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Encryption*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.encryption
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AccessTier
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AccessTier
  id: AccessTier
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: AccessTier
  nameWithType: StorageAccountCreateParameters.AccessTier
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AccessTier
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: AccessTier
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nRequired for storage accounts where kind = BlobStorage. The access\ntier used for billing. Possible values include: 'Hot', 'Cool'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.accessTier")]

      public AccessTier? AccessTier { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.accessTier")>

      Public Property AccessTier As AccessTier?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AccessTier*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.accessTier
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Validate
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: StorageAccountCreateParameters.Validate()
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Storage.Models
  commentId: N:Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  nameWithType: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor
  isExternal: false
  name: StorageAccountCreateParameters
  nameWithType: StorageAccountCreateParameters.StorageAccountCreateParameters
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.StorageAccountCreateParameters
- uid: Microsoft.Azure.Management.Storage.Models.Sku
  commentId: T:Microsoft.Azure.Management.Storage.Models.Sku
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Sku
  nameWithType: Sku
  fullName: Microsoft.Azure.Management.Storage.Models.Sku
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Kind>
  nameWithType: Nullable<Kind>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.Kind>
  nameWithType.vb: Nullable(Of Kind)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.Kind)
  name.vb: Nullable(Of Kind)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.Kind
    name: Kind
    nameWithType: Kind
    fullName: Microsoft.Azure.Management.Storage.Models.Kind
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.Kind
    name: Kind
    nameWithType: Kind
    fullName: Microsoft.Azure.Management.Storage.Models.Kind
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.CustomDomain
  commentId: T:Microsoft.Azure.Management.Storage.Models.CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: CustomDomain
  nameWithType: CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.CustomDomain
- uid: Microsoft.Azure.Management.Storage.Models.Encryption
  commentId: T:Microsoft.Azure.Management.Storage.Models.Encryption
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Encryption
  nameWithType: Encryption
  fullName: Microsoft.Azure.Management.Storage.Models.Encryption
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AccessTier>
  nameWithType: Nullable<AccessTier>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.AccessTier>
  nameWithType.vb: Nullable(Of AccessTier)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccessTier)
  name.vb: Nullable(Of AccessTier)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.AccessTier
    name: AccessTier
    nameWithType: AccessTier
    fullName: Microsoft.Azure.Management.Storage.Models.AccessTier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.AccessTier
    name: AccessTier
    nameWithType: AccessTier
    fullName: Microsoft.Azure.Management.Storage.Models.AccessTier
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Sku*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Sku
  isExternal: false
  name: Sku
  nameWithType: StorageAccountCreateParameters.Sku
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Sku
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Kind*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Kind
  isExternal: false
  name: Kind
  nameWithType: StorageAccountCreateParameters.Kind
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Kind
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Location*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Location
  isExternal: false
  name: Location
  nameWithType: StorageAccountCreateParameters.Location
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Location
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Tags*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Tags
  isExternal: false
  name: Tags
  nameWithType: StorageAccountCreateParameters.Tags
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Tags
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.CustomDomain*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.CustomDomain
  isExternal: false
  name: CustomDomain
  nameWithType: StorageAccountCreateParameters.CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.CustomDomain
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Encryption*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Encryption
  isExternal: false
  name: Encryption
  nameWithType: StorageAccountCreateParameters.Encryption
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Encryption
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AccessTier*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AccessTier
  isExternal: false
  name: AccessTier
  nameWithType: StorageAccountCreateParameters.AccessTier
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AccessTier
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Validate*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Validate
  isExternal: false
  name: Validate
  nameWithType: StorageAccountCreateParameters.Validate
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Validate
