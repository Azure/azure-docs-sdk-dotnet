### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet
  commentId: T:Microsoft.Azure.Management.Dns.Models.RecordSet
  id: RecordSet
  parent: Microsoft.Azure.Management.Dns.Models
  children:
  - Microsoft.Azure.Management.Dns.Models.RecordSet.#ctor
  - Microsoft.Azure.Management.Dns.Models.RecordSet.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.ARecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.AaaaRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.MxRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.NsRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.PtrRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.SrvRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.TxtRecord},Microsoft.Azure.Management.Dns.Models.CnameRecord,Microsoft.Azure.Management.Dns.Models.SoaRecord)
  - Microsoft.Azure.Management.Dns.Models.RecordSet.AaaaRecords
  - Microsoft.Azure.Management.Dns.Models.RecordSet.ARecords
  - Microsoft.Azure.Management.Dns.Models.RecordSet.CnameRecord
  - Microsoft.Azure.Management.Dns.Models.RecordSet.Etag
  - Microsoft.Azure.Management.Dns.Models.RecordSet.Id
  - Microsoft.Azure.Management.Dns.Models.RecordSet.Metadata
  - Microsoft.Azure.Management.Dns.Models.RecordSet.MxRecords
  - Microsoft.Azure.Management.Dns.Models.RecordSet.Name
  - Microsoft.Azure.Management.Dns.Models.RecordSet.NsRecords
  - Microsoft.Azure.Management.Dns.Models.RecordSet.PtrRecords
  - Microsoft.Azure.Management.Dns.Models.RecordSet.SoaRecord
  - Microsoft.Azure.Management.Dns.Models.RecordSet.SrvRecords
  - Microsoft.Azure.Management.Dns.Models.RecordSet.TTL
  - Microsoft.Azure.Management.Dns.Models.RecordSet.TxtRecords
  - Microsoft.Azure.Management.Dns.Models.RecordSet.Type
  langs:
  - csharp
  - vb
  name: RecordSet
  nameWithType: RecordSet
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RecordSet
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nDescribes a DNS RecordSet (a set of DNS records with the same name and\ntype).\n"
  example: []
  syntax:
    content: public class RecordSet
    content.vb: Public Class RecordSet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.#ctor
  commentId: M:Microsoft.Azure.Management.Dns.Models.RecordSet.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: RecordSet()
  nameWithType: RecordSet.RecordSet()
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.RecordSet()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nInitializes a new instance of the RecordSet class.\n"
  example: []
  syntax:
    content: public RecordSet()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.ARecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.AaaaRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.MxRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.NsRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.PtrRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.SrvRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.TxtRecord},Microsoft.Azure.Management.Dns.Models.CnameRecord,Microsoft.Azure.Management.Dns.Models.SoaRecord)
  commentId: M:Microsoft.Azure.Management.Dns.Models.RecordSet.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.ARecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.AaaaRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.MxRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.NsRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.PtrRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.SrvRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.TxtRecord},Microsoft.Azure.Management.Dns.Models.CnameRecord,Microsoft.Azure.Management.Dns.Models.SoaRecord)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.ARecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.AaaaRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.MxRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.NsRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.PtrRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.SrvRecord},System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.TxtRecord},Microsoft.Azure.Management.Dns.Models.CnameRecord,Microsoft.Azure.Management.Dns.Models.SoaRecord)'
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: RecordSet(String, String, String, String, IDictionary<String, String>, Nullable<Int64>, IList<ARecord>, IList<AaaaRecord>, IList<MxRecord>, IList<NsRecord>, IList<PtrRecord>, IList<SrvRecord>, IList<TxtRecord>, CnameRecord, SoaRecord)
  nameWithType: RecordSet.RecordSet(String, String, String, String, IDictionary<String, String>, Nullable<Int64>, IList<ARecord>, IList<AaaaRecord>, IList<MxRecord>, IList<NsRecord>, IList<PtrRecord>, IList<SrvRecord>, IList<TxtRecord>, CnameRecord, SoaRecord)
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.RecordSet(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.Nullable<System.Int64>, System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.ARecord>, System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.AaaaRecord>, System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.MxRecord>, System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.NsRecord>, System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.PtrRecord>, System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.SrvRecord>, System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.TxtRecord>, Microsoft.Azure.Management.Dns.Models.CnameRecord, Microsoft.Azure.Management.Dns.Models.SoaRecord)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nInitializes a new instance of the RecordSet class.\n"
  example: []
  syntax:
    content: public RecordSet(string id = null, string name = null, string type = null, string etag = null, IDictionary<string, string> metadata = null, long ? tTL = null, IList<ARecord> aRecords = null, IList<AaaaRecord> aaaaRecords = null, IList<MxRecord> mxRecords = null, IList<NsRecord> nsRecords = null, IList<PtrRecord> ptrRecords = null, IList<SrvRecord> srvRecords = null, IList<TxtRecord> txtRecords = null, CnameRecord cnameRecord = null, SoaRecord soaRecord = null)
    content.vb: Public Sub New(id As String = Nothing, name As String = Nothing, type As String = Nothing, etag As String = Nothing, metadata As IDictionary(Of String, String) = Nothing, tTL As Long? = Nothing, aRecords As IList(Of ARecord) = Nothing, aaaaRecords As IList(Of AaaaRecord) = Nothing, mxRecords As IList(Of MxRecord) = Nothing, nsRecords As IList(Of NsRecord) = Nothing, ptrRecords As IList(Of PtrRecord) = Nothing, srvRecords As IList(Of SrvRecord) = Nothing, txtRecords As IList(Of TxtRecord) = Nothing, cnameRecord As CnameRecord = Nothing, soaRecord As SoaRecord = Nothing)
    parameters:
    - id: id
      type: System.String
    - id: name
      type: System.String
    - id: type
      type: System.String
    - id: etag
      type: System.String
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: tTL
      type: System.Nullable{System.Int64}
    - id: aRecords
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.ARecord}
    - id: aaaaRecords
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.AaaaRecord}
    - id: mxRecords
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.MxRecord}
    - id: nsRecords
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.NsRecord}
    - id: ptrRecords
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.PtrRecord}
    - id: srvRecords
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.SrvRecord}
    - id: txtRecords
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.TxtRecord}
    - id: cnameRecord
      type: Microsoft.Azure.Management.Dns.Models.CnameRecord
    - id: soaRecord
      type: Microsoft.Azure.Management.Dns.Models.SoaRecord
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.#ctor*
  nameWithType.vb: RecordSet.RecordSet(String, String, String, String, IDictionary(Of String, String), Nullable(Of Int64), IList(Of ARecord), IList(Of AaaaRecord), IList(Of MxRecord), IList(Of NsRecord), IList(Of PtrRecord), IList(Of SrvRecord), IList(Of TxtRecord), CnameRecord, SoaRecord)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Dns.Models.RecordSet.RecordSet(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Nullable(Of System.Int64), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.ARecord), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.AaaaRecord), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.MxRecord), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.NsRecord), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.PtrRecord), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.SrvRecord), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.TxtRecord), Microsoft.Azure.Management.Dns.Models.CnameRecord, Microsoft.Azure.Management.Dns.Models.SoaRecord)
  name.vb: RecordSet(String, String, String, String, IDictionary(Of String, String), Nullable(Of Int64), IList(Of ARecord), IList(Of AaaaRecord), IList(Of MxRecord), IList(Of NsRecord), IList(Of PtrRecord), IList(Of SrvRecord), IList(Of TxtRecord), CnameRecord, SoaRecord)
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.Id
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.Id
  id: Id
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: RecordSet.Id
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the ID of the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.Name
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.Name
  id: Name
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RecordSet.Name
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the name of the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.Type
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.Type
  id: Type
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: RecordSet.Type
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.Type
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Type
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the type of the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "type")]

      public string Type { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="type")>

      Public Property Type As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.Etag
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: RecordSet.Etag
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the ETag of the RecordSet.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.Metadata
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.Metadata
  id: Metadata
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: RecordSet.Metadata
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.Metadata
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Metadata
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the metadata attached to the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.metadata")]

      public IDictionary<string, string> Metadata { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.metadata")>

      Public Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.Metadata*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.TTL
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.TTL
  id: TTL
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: TTL
  nameWithType: RecordSet.TTL
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.TTL
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TTL
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the TTL of the records in the RecordSet.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.TTL")]

      public long ? TTL { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.TTL")>

      Public Property TTL As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.TTL*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.TTL
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.ARecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.ARecords
  id: ARecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: ARecords
  nameWithType: RecordSet.ARecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.ARecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ARecords
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the list of A records in the RecordSet.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.ARecords")]

      public IList<ARecord> ARecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.ARecords")>

      Public Property ARecords As IList(Of ARecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.ARecord}
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.ARecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.ARecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.AaaaRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.AaaaRecords
  id: AaaaRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: AaaaRecords
  nameWithType: RecordSet.AaaaRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.AaaaRecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AaaaRecords
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the list of AAAA records in the RecordSet.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.AAAARecords")]

      public IList<AaaaRecord> AaaaRecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.AAAARecords")>

      Public Property AaaaRecords As IList(Of AaaaRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.AaaaRecord}
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.AaaaRecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.AAAARecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.MxRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.MxRecords
  id: MxRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: MxRecords
  nameWithType: RecordSet.MxRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.MxRecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MxRecords
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the list of MX records in the RecordSet.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.MXRecords")]

      public IList<MxRecord> MxRecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.MXRecords")>

      Public Property MxRecords As IList(Of MxRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.MxRecord}
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.MxRecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.MXRecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.NsRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.NsRecords
  id: NsRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: NsRecords
  nameWithType: RecordSet.NsRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.NsRecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NsRecords
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the list of NS records in the RecordSet.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.NSRecords")]

      public IList<NsRecord> NsRecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.NSRecords")>

      Public Property NsRecords As IList(Of NsRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.NsRecord}
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.NsRecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.NSRecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.PtrRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.PtrRecords
  id: PtrRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: PtrRecords
  nameWithType: RecordSet.PtrRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.PtrRecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PtrRecords
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the list of PTR records in the RecordSet.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.PTRRecords")]

      public IList<PtrRecord> PtrRecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.PTRRecords")>

      Public Property PtrRecords As IList(Of PtrRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.PtrRecord}
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.PtrRecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.PTRRecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.SrvRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.SrvRecords
  id: SrvRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: SrvRecords
  nameWithType: RecordSet.SrvRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.SrvRecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SrvRecords
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the list of SRV records in the RecordSet.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.SRVRecords")]

      public IList<SrvRecord> SrvRecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.SRVRecords")>

      Public Property SrvRecords As IList(Of SrvRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.SrvRecord}
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.SrvRecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.SRVRecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.TxtRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.TxtRecords
  id: TxtRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: TxtRecords
  nameWithType: RecordSet.TxtRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.TxtRecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TxtRecords
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the list of TXT records in the RecordSet.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.TXTRecords")]

      public IList<TxtRecord> TxtRecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.TXTRecords")>

      Public Property TxtRecords As IList(Of TxtRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.TxtRecord}
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.TxtRecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.TXTRecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.CnameRecord
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.CnameRecord
  id: CnameRecord
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: CnameRecord
  nameWithType: RecordSet.CnameRecord
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.CnameRecord
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CnameRecord
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the CNAME record in the RecordSet.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.CNAMERecord")]

      public CnameRecord CnameRecord { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.CNAMERecord")>

      Public Property CnameRecord As CnameRecord
    parameters: []
    return:
      type: Microsoft.Azure.Management.Dns.Models.CnameRecord
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.CnameRecord*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.CNAMERecord
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.SoaRecord
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSet.SoaRecord
  id: SoaRecord
  parent: Microsoft.Azure.Management.Dns.Models.RecordSet
  langs:
  - csharp
  - vb
  name: SoaRecord
  nameWithType: RecordSet.SoaRecord
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.SoaRecord
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SoaRecord
    path: src/azure-sdk-for-net/src/ResourceManagement/Dns/Microsoft.Azure.Management.Dns/Generated/Models/RecordSet.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\nGets or sets the SOA record in the RecordSet.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.SOARecord")]

      public SoaRecord SoaRecord { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.SOARecord")>

      Public Property SoaRecord As SoaRecord
    parameters: []
    return:
      type: Microsoft.Azure.Management.Dns.Models.SoaRecord
  overload: Microsoft.Azure.Management.Dns.Models.RecordSet.SoaRecord*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.SOARecord
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Dns.Models
  commentId: N:Microsoft.Azure.Management.Dns.Models
  isExternal: false
  name: Microsoft.Azure.Management.Dns.Models
  nameWithType: Microsoft.Azure.Management.Dns.Models
  fullName: Microsoft.Azure.Management.Dns.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.#ctor
  isExternal: false
  name: RecordSet
  nameWithType: RecordSet.RecordSet
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.RecordSet
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.ARecord}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.ARecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ARecord>
  nameWithType: IList<ARecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.ARecord>
  nameWithType.vb: IList(Of ARecord)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.ARecord)
  name.vb: IList(Of ARecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.ARecord
    name: ARecord
    nameWithType: ARecord
    fullName: Microsoft.Azure.Management.Dns.Models.ARecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.ARecord
    name: ARecord
    nameWithType: ARecord
    fullName: Microsoft.Azure.Management.Dns.Models.ARecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.AaaaRecord}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.AaaaRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<AaaaRecord>
  nameWithType: IList<AaaaRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.AaaaRecord>
  nameWithType.vb: IList(Of AaaaRecord)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.AaaaRecord)
  name.vb: IList(Of AaaaRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.AaaaRecord
    name: AaaaRecord
    nameWithType: AaaaRecord
    fullName: Microsoft.Azure.Management.Dns.Models.AaaaRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.AaaaRecord
    name: AaaaRecord
    nameWithType: AaaaRecord
    fullName: Microsoft.Azure.Management.Dns.Models.AaaaRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.MxRecord}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.MxRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MxRecord>
  nameWithType: IList<MxRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.MxRecord>
  nameWithType.vb: IList(Of MxRecord)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.MxRecord)
  name.vb: IList(Of MxRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.MxRecord
    name: MxRecord
    nameWithType: MxRecord
    fullName: Microsoft.Azure.Management.Dns.Models.MxRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.MxRecord
    name: MxRecord
    nameWithType: MxRecord
    fullName: Microsoft.Azure.Management.Dns.Models.MxRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.NsRecord}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.NsRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<NsRecord>
  nameWithType: IList<NsRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.NsRecord>
  nameWithType.vb: IList(Of NsRecord)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.NsRecord)
  name.vb: IList(Of NsRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.NsRecord
    name: NsRecord
    nameWithType: NsRecord
    fullName: Microsoft.Azure.Management.Dns.Models.NsRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.NsRecord
    name: NsRecord
    nameWithType: NsRecord
    fullName: Microsoft.Azure.Management.Dns.Models.NsRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.PtrRecord}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.PtrRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PtrRecord>
  nameWithType: IList<PtrRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.PtrRecord>
  nameWithType.vb: IList(Of PtrRecord)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.PtrRecord)
  name.vb: IList(Of PtrRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.PtrRecord
    name: PtrRecord
    nameWithType: PtrRecord
    fullName: Microsoft.Azure.Management.Dns.Models.PtrRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.PtrRecord
    name: PtrRecord
    nameWithType: PtrRecord
    fullName: Microsoft.Azure.Management.Dns.Models.PtrRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.SrvRecord}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.SrvRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SrvRecord>
  nameWithType: IList<SrvRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.SrvRecord>
  nameWithType.vb: IList(Of SrvRecord)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.SrvRecord)
  name.vb: IList(Of SrvRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.SrvRecord
    name: SrvRecord
    nameWithType: SrvRecord
    fullName: Microsoft.Azure.Management.Dns.Models.SrvRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.SrvRecord
    name: SrvRecord
    nameWithType: SrvRecord
    fullName: Microsoft.Azure.Management.Dns.Models.SrvRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.TxtRecord}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.TxtRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TxtRecord>
  nameWithType: IList<TxtRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.TxtRecord>
  nameWithType.vb: IList(Of TxtRecord)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.TxtRecord)
  name.vb: IList(Of TxtRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.TxtRecord
    name: TxtRecord
    nameWithType: TxtRecord
    fullName: Microsoft.Azure.Management.Dns.Models.TxtRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.TxtRecord
    name: TxtRecord
    nameWithType: TxtRecord
    fullName: Microsoft.Azure.Management.Dns.Models.TxtRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Dns.Models.CnameRecord
  commentId: T:Microsoft.Azure.Management.Dns.Models.CnameRecord
  parent: Microsoft.Azure.Management.Dns.Models
  isExternal: false
  name: CnameRecord
  nameWithType: CnameRecord
  fullName: Microsoft.Azure.Management.Dns.Models.CnameRecord
- uid: Microsoft.Azure.Management.Dns.Models.SoaRecord
  commentId: T:Microsoft.Azure.Management.Dns.Models.SoaRecord
  parent: Microsoft.Azure.Management.Dns.Models
  isExternal: false
  name: SoaRecord
  nameWithType: SoaRecord
  fullName: Microsoft.Azure.Management.Dns.Models.SoaRecord
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.Id*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.Id
  isExternal: false
  name: Id
  nameWithType: RecordSet.Id
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.Id
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.Name*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.Name
  isExternal: false
  name: Name
  nameWithType: RecordSet.Name
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.Name
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.Type*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.Type
  isExternal: false
  name: Type
  nameWithType: RecordSet.Type
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.Type
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.Etag*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.Etag
  isExternal: false
  name: Etag
  nameWithType: RecordSet.Etag
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.Etag
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.Metadata*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.Metadata
  isExternal: false
  name: Metadata
  nameWithType: RecordSet.Metadata
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.Metadata
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.TTL*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.TTL
  isExternal: false
  name: TTL
  nameWithType: RecordSet.TTL
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.TTL
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.ARecords*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.ARecords
  isExternal: false
  name: ARecords
  nameWithType: RecordSet.ARecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.ARecords
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.AaaaRecords*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.AaaaRecords
  isExternal: false
  name: AaaaRecords
  nameWithType: RecordSet.AaaaRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.AaaaRecords
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.MxRecords*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.MxRecords
  isExternal: false
  name: MxRecords
  nameWithType: RecordSet.MxRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.MxRecords
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.NsRecords*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.NsRecords
  isExternal: false
  name: NsRecords
  nameWithType: RecordSet.NsRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.NsRecords
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.PtrRecords*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.PtrRecords
  isExternal: false
  name: PtrRecords
  nameWithType: RecordSet.PtrRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.PtrRecords
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.SrvRecords*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.SrvRecords
  isExternal: false
  name: SrvRecords
  nameWithType: RecordSet.SrvRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.SrvRecords
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.TxtRecords*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.TxtRecords
  isExternal: false
  name: TxtRecords
  nameWithType: RecordSet.TxtRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.TxtRecords
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.CnameRecord*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.CnameRecord
  isExternal: false
  name: CnameRecord
  nameWithType: RecordSet.CnameRecord
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.CnameRecord
- uid: Microsoft.Azure.Management.Dns.Models.RecordSet.SoaRecord*
  commentId: Overload:Microsoft.Azure.Management.Dns.Models.RecordSet.SoaRecord
  isExternal: false
  name: SoaRecord
  nameWithType: RecordSet.SoaRecord
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSet.SoaRecord
