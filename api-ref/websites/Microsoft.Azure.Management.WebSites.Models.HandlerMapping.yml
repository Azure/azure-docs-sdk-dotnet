### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.HandlerMapping
  commentId: T:Microsoft.Azure.Management.WebSites.Models.HandlerMapping
  id: HandlerMapping
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.HandlerMapping.#ctor
  - Microsoft.Azure.Management.WebSites.Models.HandlerMapping.#ctor(System.String,System.String,System.String)
  - Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Arguments
  - Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Extension
  - Microsoft.Azure.Management.WebSites.Models.HandlerMapping.ScriptProcessor
  langs:
  - csharp
  - vb
  name: HandlerMapping
  nameWithType: HandlerMapping
  fullName: Microsoft.Azure.Management.WebSites.Models.HandlerMapping
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HandlerMapping
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nThe IIS handler mappings used to define which handler processes HTTP\nrequests with certain extension.\nFor example it is used to configure php-cgi.exe process to\nhandle all HTTP requests with *.php extension.\n"
  example: []
  syntax:
    content: public class HandlerMapping
    content.vb: Public Class HandlerMapping
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.HandlerMapping.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.HandlerMapping
  langs:
  - csharp
  - vb
  name: HandlerMapping()
  nameWithType: HandlerMapping.HandlerMapping()
  fullName: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.HandlerMapping()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the HandlerMapping class.\n"
  example: []
  syntax:
    content: public HandlerMapping()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.HandlerMapping.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.HandlerMapping
  langs:
  - csharp
  - vb
  name: HandlerMapping(String, String, String)
  nameWithType: HandlerMapping.HandlerMapping(String, String, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.HandlerMapping(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the HandlerMapping class.\n"
  example: []
  syntax:
    content: public HandlerMapping(string extension = null, string scriptProcessor = null, string arguments = null)
    content.vb: Public Sub New(extension As String = Nothing, scriptProcessor As String = Nothing, arguments As String = Nothing)
    parameters:
    - id: extension
      type: System.String
    - id: scriptProcessor
      type: System.String
    - id: arguments
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Extension
  commentId: P:Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Extension
  id: Extension
  parent: Microsoft.Azure.Management.WebSites.Models.HandlerMapping
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: HandlerMapping.Extension
  fullName: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Extension
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Extension
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRequests with this extension will be handled using the specified\nFastCGI application.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "extension")]

      public string Extension { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="extension")>

      Public Property Extension As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Extension*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: extension
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.ScriptProcessor
  commentId: P:Microsoft.Azure.Management.WebSites.Models.HandlerMapping.ScriptProcessor
  id: ScriptProcessor
  parent: Microsoft.Azure.Management.WebSites.Models.HandlerMapping
  langs:
  - csharp
  - vb
  name: ScriptProcessor
  nameWithType: HandlerMapping.ScriptProcessor
  fullName: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.ScriptProcessor
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ScriptProcessor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nThe absolute path to the FastCGI application.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "scriptProcessor")]

      public string ScriptProcessor { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="scriptProcessor")>

      Public Property ScriptProcessor As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.ScriptProcessor*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: scriptProcessor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Arguments
  commentId: P:Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Arguments
  id: Arguments
  parent: Microsoft.Azure.Management.WebSites.Models.HandlerMapping
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: HandlerMapping.Arguments
  fullName: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Arguments
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Arguments
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HandlerMapping.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nCommand-line arguments to be passed to the script processor.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "arguments")]

      public string Arguments { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="arguments")>

      Public Property Arguments As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Arguments*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: arguments
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HandlerMapping.#ctor
  isExternal: false
  name: HandlerMapping
  nameWithType: HandlerMapping.HandlerMapping
  fullName: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.HandlerMapping
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Extension*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Extension
  isExternal: false
  name: Extension
  nameWithType: HandlerMapping.Extension
  fullName: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Extension
- uid: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.ScriptProcessor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HandlerMapping.ScriptProcessor
  isExternal: false
  name: ScriptProcessor
  nameWithType: HandlerMapping.ScriptProcessor
  fullName: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.ScriptProcessor
- uid: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Arguments*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Arguments
  isExternal: false
  name: Arguments
  nameWithType: HandlerMapping.Arguments
  fullName: Microsoft.Azure.Management.WebSites.Models.HandlerMapping.Arguments
