### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.Domain
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Domain
  id: Domain
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.Domain.#ctor
  - Microsoft.Azure.Management.WebSites.Models.Domain.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,System.Nullable{Microsoft.Azure.Management.WebSites.Models.DomainStatus},System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostName},Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent,System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Management.WebSites.Models.Domain.AutoRenew
  - Microsoft.Azure.Management.WebSites.Models.Domain.Consent
  - Microsoft.Azure.Management.WebSites.Models.Domain.ContactAdmin
  - Microsoft.Azure.Management.WebSites.Models.Domain.ContactBilling
  - Microsoft.Azure.Management.WebSites.Models.Domain.ContactRegistrant
  - Microsoft.Azure.Management.WebSites.Models.Domain.ContactTech
  - Microsoft.Azure.Management.WebSites.Models.Domain.CreatedTime
  - Microsoft.Azure.Management.WebSites.Models.Domain.DomainNotRenewableReasons
  - Microsoft.Azure.Management.WebSites.Models.Domain.ExpirationTime
  - Microsoft.Azure.Management.WebSites.Models.Domain.LastRenewedTime
  - Microsoft.Azure.Management.WebSites.Models.Domain.ManagedHostNames
  - Microsoft.Azure.Management.WebSites.Models.Domain.NameServers
  - Microsoft.Azure.Management.WebSites.Models.Domain.Privacy
  - Microsoft.Azure.Management.WebSites.Models.Domain.ProvisioningState
  - Microsoft.Azure.Management.WebSites.Models.Domain.ReadyForDnsRecordManagement
  - Microsoft.Azure.Management.WebSites.Models.Domain.RegistrationStatus
  - Microsoft.Azure.Management.WebSites.Models.Domain.Validate
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: Domain
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Domain
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRepresents a domain\n"
  example: []
  syntax:
    content: 'public class Domain : Resource, IResource'
    content.vb: >-
      Public Class Domain
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.WebSites.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.WebSites.Models.Resource.Id
  - Microsoft.Azure.Management.WebSites.Models.Resource.Name
  - Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  - Microsoft.Azure.Management.WebSites.Models.Resource.Location
  - Microsoft.Azure.Management.WebSites.Models.Resource.Type
  - Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Domain.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: Domain()
  nameWithType: Domain.Domain()
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.Domain()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the Domain class.\n"
  example: []
  syntax:
    content: public Domain()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,System.Nullable{Microsoft.Azure.Management.WebSites.Models.DomainStatus},System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostName},Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent,System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Domain.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,System.Nullable{Microsoft.Azure.Management.WebSites.Models.DomainStatus},System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostName},Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent,System.Collections.Generic.IList{System.String})
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,Microsoft.Azure.Management.WebSites.Models.Contact,System.Nullable{Microsoft.Azure.Management.WebSites.Models.DomainStatus},System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostName},Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent,System.Collections.Generic.IList{System.String})'
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: Domain(String, String, String, String, String, IDictionary<String, String>, Contact, Contact, Contact, Contact, Nullable<DomainStatus>, Nullable<ProvisioningState>, IList<String>, Nullable<Boolean>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Boolean>, Nullable<Boolean>, IList<HostName>, DomainPurchaseConsent, IList<String>)
  nameWithType: Domain.Domain(String, String, String, String, String, IDictionary<String, String>, Contact, Contact, Contact, Contact, Nullable<DomainStatus>, Nullable<ProvisioningState>, IList<String>, Nullable<Boolean>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Boolean>, Nullable<Boolean>, IList<HostName>, DomainPurchaseConsent, IList<String>)
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.Domain(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.Azure.Management.WebSites.Models.Contact, Microsoft.Azure.Management.WebSites.Models.Contact, Microsoft.Azure.Management.WebSites.Models.Contact, Microsoft.Azure.Management.WebSites.Models.Contact, System.Nullable<Microsoft.Azure.Management.WebSites.Models.DomainStatus>, System.Nullable<Microsoft.Azure.Management.WebSites.Models.ProvisioningState>, System.Collections.Generic.IList<System.String>, System.Nullable<System.Boolean>, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.HostName>, Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the Domain class.\n"
  example: []
  syntax:
    content: public Domain(string name, string location, string id = null, string kind = null, string type = null, IDictionary<string, string> tags = null, Contact contactAdmin = null, Contact contactBilling = null, Contact contactRegistrant = null, Contact contactTech = null, DomainStatus? registrationStatus = null, ProvisioningState? provisioningState = null, IList<string> nameServers = null, bool ? privacy = null, DateTime? createdTime = null, DateTime? expirationTime = null, DateTime? lastRenewedTime = null, bool ? autoRenew = null, bool ? readyForDnsRecordManagement = null, IList<HostName> managedHostNames = null, DomainPurchaseConsent consent = null, IList<string> domainNotRenewableReasons = null)
    content.vb: Public Sub New(name As String, location As String, id As String = Nothing, kind As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, contactAdmin As Contact = Nothing, contactBilling As Contact = Nothing, contactRegistrant As Contact = Nothing, contactTech As Contact = Nothing, registrationStatus As DomainStatus? = Nothing, provisioningState As ProvisioningState? = Nothing, nameServers As IList(Of String) = Nothing, privacy As Boolean? = Nothing, createdTime As Date? = Nothing, expirationTime As Date? = Nothing, lastRenewedTime As Date? = Nothing, autoRenew As Boolean? = Nothing, readyForDnsRecordManagement As Boolean? = Nothing, managedHostNames As IList(Of HostName) = Nothing, consent As DomainPurchaseConsent = Nothing, domainNotRenewableReasons As IList(Of String) = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: location
      type: System.String
    - id: id
      type: System.String
    - id: kind
      type: System.String
    - id: type
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: contactAdmin
      type: Microsoft.Azure.Management.WebSites.Models.Contact
    - id: contactBilling
      type: Microsoft.Azure.Management.WebSites.Models.Contact
    - id: contactRegistrant
      type: Microsoft.Azure.Management.WebSites.Models.Contact
    - id: contactTech
      type: Microsoft.Azure.Management.WebSites.Models.Contact
    - id: registrationStatus
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.DomainStatus}
    - id: provisioningState
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState}
    - id: nameServers
      type: System.Collections.Generic.IList{System.String}
    - id: privacy
      type: System.Nullable{System.Boolean}
    - id: createdTime
      type: System.Nullable{System.DateTime}
    - id: expirationTime
      type: System.Nullable{System.DateTime}
    - id: lastRenewedTime
      type: System.Nullable{System.DateTime}
    - id: autoRenew
      type: System.Nullable{System.Boolean}
    - id: readyForDnsRecordManagement
      type: System.Nullable{System.Boolean}
    - id: managedHostNames
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostName}
    - id: consent
      type: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
    - id: domainNotRenewableReasons
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.#ctor*
  nameWithType.vb: Domain.Domain(String, String, String, String, String, IDictionary(Of String, String), Contact, Contact, Contact, Contact, Nullable(Of DomainStatus), Nullable(Of ProvisioningState), IList(Of String), Nullable(Of Boolean), Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of Boolean), Nullable(Of Boolean), IList(Of HostName), DomainPurchaseConsent, IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.Domain.Domain(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.Azure.Management.WebSites.Models.Contact, Microsoft.Azure.Management.WebSites.Models.Contact, Microsoft.Azure.Management.WebSites.Models.Contact, Microsoft.Azure.Management.WebSites.Models.Contact, System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.DomainStatus), System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.ProvisioningState), System.Collections.Generic.IList(Of System.String), System.Nullable(Of System.Boolean), System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.HostName), Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent, System.Collections.Generic.IList(Of System.String))
  name.vb: Domain(String, String, String, String, String, IDictionary(Of String, String), Contact, Contact, Contact, Contact, Nullable(Of DomainStatus), Nullable(Of ProvisioningState), IList(Of String), Nullable(Of Boolean), Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of Boolean), Nullable(Of Boolean), IList(Of HostName), DomainPurchaseConsent, IList(Of String))
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ContactAdmin
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.ContactAdmin
  id: ContactAdmin
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: ContactAdmin
  nameWithType: Domain.ContactAdmin
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ContactAdmin
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContactAdmin
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nAdmin contact information\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.contactAdmin")]

      public Contact ContactAdmin { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.contactAdmin")>

      Public Property ContactAdmin As Contact
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.Contact
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.ContactAdmin*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.contactAdmin
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ContactBilling
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.ContactBilling
  id: ContactBilling
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: ContactBilling
  nameWithType: Domain.ContactBilling
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ContactBilling
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContactBilling
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nBilling contact information\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.contactBilling")]

      public Contact ContactBilling { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.contactBilling")>

      Public Property ContactBilling As Contact
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.Contact
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.ContactBilling*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.contactBilling
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ContactRegistrant
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.ContactRegistrant
  id: ContactRegistrant
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: ContactRegistrant
  nameWithType: Domain.ContactRegistrant
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ContactRegistrant
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContactRegistrant
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRegistrant contact information\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.contactRegistrant")]

      public Contact ContactRegistrant { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.contactRegistrant")>

      Public Property ContactRegistrant As Contact
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.Contact
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.ContactRegistrant*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.contactRegistrant
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ContactTech
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.ContactTech
  id: ContactTech
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: ContactTech
  nameWithType: Domain.ContactTech
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ContactTech
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContactTech
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTechnical contact information\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.contactTech")]

      public Contact ContactTech { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.contactTech")>

      Public Property ContactTech As Contact
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.Contact
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.ContactTech*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.contactTech
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.RegistrationStatus
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.RegistrationStatus
  id: RegistrationStatus
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: RegistrationStatus
  nameWithType: Domain.RegistrationStatus
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.RegistrationStatus
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegistrationStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDomain registration status. Possible values include: 'Active',\n'Awaiting', 'Cancelled', 'Confiscated', 'Disabled', 'Excluded',\n'Expired', 'Failed', 'Held', 'Locked', 'Parked', 'Pending',\n'Reserved', 'Reverted', 'Suspended', 'Transferred', 'Unknown',\n'Unlocked', 'Unparked', 'Updated', 'JsonConverterFailed'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.registrationStatus")]

      public DomainStatus? RegistrationStatus { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.registrationStatus")>

      Public Property RegistrationStatus As DomainStatus?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.DomainStatus}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.RegistrationStatus*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.registrationStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ProvisioningState
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: Domain.ProvisioningState
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDomain provisioning state. Possible values include: 'Succeeded',\n'Failed', 'Canceled', 'InProgress', 'Deleting'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public ProvisioningState? ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As ProvisioningState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.NameServers
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.NameServers
  id: NameServers
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: NameServers
  nameWithType: Domain.NameServers
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.NameServers
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NameServers
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName servers\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.nameServers")]

      public IList<string> NameServers { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.nameServers")>

      Public Property NameServers As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.NameServers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.nameServers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.Privacy
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.Privacy
  id: Privacy
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: Privacy
  nameWithType: Domain.Privacy
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.Privacy
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Privacy
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nIf true then domain privacy is enabled for this domain\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.privacy")]

      public bool ? Privacy { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.privacy")>

      Public Property Privacy As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.Privacy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.privacy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.CreatedTime
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.CreatedTime
  id: CreatedTime
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: CreatedTime
  nameWithType: Domain.CreatedTime
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.CreatedTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreatedTime
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDomain creation timestamp\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.createdTime")]

      public DateTime? CreatedTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.createdTime")>

      Public Property CreatedTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.CreatedTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.createdTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ExpirationTime
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.ExpirationTime
  id: ExpirationTime
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: ExpirationTime
  nameWithType: Domain.ExpirationTime
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ExpirationTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExpirationTime
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDomain expiration timestamp\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.expirationTime")]

      public DateTime? ExpirationTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.expirationTime")>

      Public Property ExpirationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.ExpirationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.expirationTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.LastRenewedTime
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.LastRenewedTime
  id: LastRenewedTime
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: LastRenewedTime
  nameWithType: Domain.LastRenewedTime
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.LastRenewedTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastRenewedTime
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTimestamp when the domain was renewed last time\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.lastRenewedTime")]

      public DateTime? LastRenewedTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.lastRenewedTime")>

      Public Property LastRenewedTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.LastRenewedTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.lastRenewedTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.AutoRenew
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.AutoRenew
  id: AutoRenew
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: AutoRenew
  nameWithType: Domain.AutoRenew
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.AutoRenew
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoRenew
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nIf true then domain will renewed automatically\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.autoRenew")]

      public bool ? AutoRenew { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.autoRenew")>

      Public Property AutoRenew As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.AutoRenew*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.autoRenew
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ReadyForDnsRecordManagement
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.ReadyForDnsRecordManagement
  id: ReadyForDnsRecordManagement
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: ReadyForDnsRecordManagement
  nameWithType: Domain.ReadyForDnsRecordManagement
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ReadyForDnsRecordManagement
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReadyForDnsRecordManagement
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nIf true then Azure can assign this domain to Web Apps. This value\nwill be true if domain registration status is active and it is\nhosted on name servers Azure has programmatic access to\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.readyForDnsRecordManagement")]

      public bool ? ReadyForDnsRecordManagement { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.readyForDnsRecordManagement")>

      Public Property ReadyForDnsRecordManagement As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.ReadyForDnsRecordManagement*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.readyForDnsRecordManagement
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ManagedHostNames
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.ManagedHostNames
  id: ManagedHostNames
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: ManagedHostNames
  nameWithType: Domain.ManagedHostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ManagedHostNames
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ManagedHostNames
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nAll hostnames derived from the domain and assigned to Azure\nresources\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.managedHostNames")]

      public IList<HostName> ManagedHostNames { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.managedHostNames")>

      Public Property ManagedHostNames As IList(Of HostName)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostName}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.ManagedHostNames*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.managedHostNames
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.Consent
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.Consent
  id: Consent
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: Consent
  nameWithType: Domain.Consent
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.Consent
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Consent
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nLegal agreement consent\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.consent")]

      public DomainPurchaseConsent Consent { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.consent")>

      Public Property Consent As DomainPurchaseConsent
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.Consent*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.consent
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.DomainNotRenewableReasons
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Domain.DomainNotRenewableReasons
  id: DomainNotRenewableReasons
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: DomainNotRenewableReasons
  nameWithType: Domain.DomainNotRenewableReasons
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.DomainNotRenewableReasons
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DomainNotRenewableReasons
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 154
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nReasons why domain is not renewable\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.domainNotRenewableReasons")]

      public IList<string> DomainNotRenewableReasons { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.domainNotRenewableReasons")>

      Public Property DomainNotRenewableReasons As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.DomainNotRenewableReasons*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.domainNotRenewableReasons
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Domain.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Domain
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Domain.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Domain.cs
    startLine: 160
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  overload: Microsoft.Azure.Management.WebSites.Models.Domain.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.WebSites.Models.Resource
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Resource
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Id
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Id
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Name
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Name
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Kind
  nameWithType: Resource.Kind
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Location
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Location
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Type
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Type
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.#ctor
  isExternal: false
  name: Domain
  nameWithType: Domain.Domain
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.Domain
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.Contact
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Contact
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Contact
  nameWithType: Contact
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.DomainStatus}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.DomainStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DomainStatus>
  nameWithType: Nullable<DomainStatus>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.DomainStatus>
  nameWithType.vb: Nullable(Of DomainStatus)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.DomainStatus)
  name.vb: Nullable(Of DomainStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.DomainStatus
    name: DomainStatus
    nameWithType: DomainStatus
    fullName: Microsoft.Azure.Management.WebSites.Models.DomainStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.DomainStatus
    name: DomainStatus
    nameWithType: DomainStatus
    fullName: Microsoft.Azure.Management.WebSites.Models.DomainStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ProvisioningState>
  nameWithType: Nullable<ProvisioningState>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.ProvisioningState>
  nameWithType.vb: Nullable(Of ProvisioningState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.ProvisioningState)
  name.vb: Nullable(Of ProvisioningState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.ProvisioningState
    name: ProvisioningState
    nameWithType: ProvisioningState
    fullName: Microsoft.Azure.Management.WebSites.Models.ProvisioningState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.ProvisioningState
    name: ProvisioningState
    nameWithType: ProvisioningState
    fullName: Microsoft.Azure.Management.WebSites.Models.ProvisioningState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostName}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostName}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<HostName>
  nameWithType: IList<HostName>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.HostName>
  nameWithType.vb: IList(Of HostName)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.HostName)
  name.vb: IList(Of HostName)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.HostName
    name: HostName
    nameWithType: HostName
    fullName: Microsoft.Azure.Management.WebSites.Models.HostName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.HostName
    name: HostName
    nameWithType: HostName
    fullName: Microsoft.Azure.Management.WebSites.Models.HostName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
  commentId: T:Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: DomainPurchaseConsent
  nameWithType: DomainPurchaseConsent
  fullName: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ContactAdmin*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.ContactAdmin
  isExternal: false
  name: ContactAdmin
  nameWithType: Domain.ContactAdmin
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ContactAdmin
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ContactBilling*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.ContactBilling
  isExternal: false
  name: ContactBilling
  nameWithType: Domain.ContactBilling
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ContactBilling
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ContactRegistrant*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.ContactRegistrant
  isExternal: false
  name: ContactRegistrant
  nameWithType: Domain.ContactRegistrant
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ContactRegistrant
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ContactTech*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.ContactTech
  isExternal: false
  name: ContactTech
  nameWithType: Domain.ContactTech
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ContactTech
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.RegistrationStatus*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.RegistrationStatus
  isExternal: false
  name: RegistrationStatus
  nameWithType: Domain.RegistrationStatus
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.RegistrationStatus
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: Domain.ProvisioningState
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ProvisioningState
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.NameServers*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.NameServers
  isExternal: false
  name: NameServers
  nameWithType: Domain.NameServers
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.NameServers
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.Privacy*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.Privacy
  isExternal: false
  name: Privacy
  nameWithType: Domain.Privacy
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.Privacy
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.CreatedTime*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.CreatedTime
  isExternal: false
  name: CreatedTime
  nameWithType: Domain.CreatedTime
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.CreatedTime
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ExpirationTime*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.ExpirationTime
  isExternal: false
  name: ExpirationTime
  nameWithType: Domain.ExpirationTime
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ExpirationTime
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.LastRenewedTime*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.LastRenewedTime
  isExternal: false
  name: LastRenewedTime
  nameWithType: Domain.LastRenewedTime
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.LastRenewedTime
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.AutoRenew*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.AutoRenew
  isExternal: false
  name: AutoRenew
  nameWithType: Domain.AutoRenew
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.AutoRenew
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ReadyForDnsRecordManagement*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.ReadyForDnsRecordManagement
  isExternal: false
  name: ReadyForDnsRecordManagement
  nameWithType: Domain.ReadyForDnsRecordManagement
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ReadyForDnsRecordManagement
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.ManagedHostNames*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.ManagedHostNames
  isExternal: false
  name: ManagedHostNames
  nameWithType: Domain.ManagedHostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.ManagedHostNames
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.Consent*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.Consent
  isExternal: false
  name: Consent
  nameWithType: Domain.Consent
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.Consent
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.DomainNotRenewableReasons*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.DomainNotRenewableReasons
  isExternal: false
  name: DomainNotRenewableReasons
  nameWithType: Domain.DomainNotRenewableReasons
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.DomainNotRenewableReasons
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.Domain.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Domain.Validate
  isExternal: false
  name: Validate
  nameWithType: Domain.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.Domain.Validate
