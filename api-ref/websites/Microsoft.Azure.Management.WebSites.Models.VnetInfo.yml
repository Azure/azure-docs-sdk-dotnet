### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo
  commentId: T:Microsoft.Azure.Management.WebSites.Models.VnetInfo
  id: VnetInfo
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.VnetInfo.#ctor
  - Microsoft.Azure.Management.WebSites.Models.VnetInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VnetRoute},System.Nullable{System.Boolean},System.String)
  - Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertBlob
  - Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertThumbprint
  - Microsoft.Azure.Management.WebSites.Models.VnetInfo.DnsServers
  - Microsoft.Azure.Management.WebSites.Models.VnetInfo.ResyncRequired
  - Microsoft.Azure.Management.WebSites.Models.VnetInfo.Routes
  - Microsoft.Azure.Management.WebSites.Models.VnetInfo.Validate
  - Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetResourceId
  langs:
  - csharp
  - vb
  name: VnetInfo
  nameWithType: VnetInfo
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VnetInfo
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nVNETInfo contract. This contract is public and is a stripped down\nversion of VNETInfoInternal\n"
  example: []
  syntax:
    content: 'public class VnetInfo : Resource, IResource'
    content.vb: >-
      Public Class VnetInfo
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.WebSites.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.WebSites.Models.Resource.Id
  - Microsoft.Azure.Management.WebSites.Models.Resource.Name
  - Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  - Microsoft.Azure.Management.WebSites.Models.Resource.Location
  - Microsoft.Azure.Management.WebSites.Models.Resource.Type
  - Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.VnetInfo.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.VnetInfo
  langs:
  - csharp
  - vb
  name: VnetInfo()
  nameWithType: VnetInfo.VnetInfo()
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetInfo()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the VnetInfo class.\n"
  example: []
  syntax:
    content: public VnetInfo()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.VnetInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VnetRoute},System.Nullable{System.Boolean},System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.VnetInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VnetRoute},System.Nullable{System.Boolean},System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VnetRoute},System.Nullable{System.Boolean},System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.VnetInfo
  langs:
  - csharp
  - vb
  name: VnetInfo(String, String, String, String, String, IDictionary<String, String>, String, String, String, IList<VnetRoute>, Nullable<Boolean>, String)
  nameWithType: VnetInfo.VnetInfo(String, String, String, String, String, IDictionary<String, String>, String, String, String, IList<VnetRoute>, Nullable<Boolean>, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetInfo(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.String, System.String, System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.VnetRoute>, System.Nullable<System.Boolean>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the VnetInfo class.\n"
  example: []
  syntax:
    content: public VnetInfo(string name, string location, string id = null, string kind = null, string type = null, IDictionary<string, string> tags = null, string vnetResourceId = null, string certThumbprint = null, string certBlob = null, IList<VnetRoute> routes = null, bool ? resyncRequired = null, string dnsServers = null)
    content.vb: Public Sub New(name As String, location As String, id As String = Nothing, kind As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, vnetResourceId As String = Nothing, certThumbprint As String = Nothing, certBlob As String = Nothing, routes As IList(Of VnetRoute) = Nothing, resyncRequired As Boolean? = Nothing, dnsServers As String = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: location
      type: System.String
    - id: id
      type: System.String
    - id: kind
      type: System.String
    - id: type
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: vnetResourceId
      type: System.String
    - id: certThumbprint
      type: System.String
    - id: certBlob
      type: System.String
    - id: routes
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VnetRoute}
    - id: resyncRequired
      type: System.Nullable{System.Boolean}
    - id: dnsServers
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.VnetInfo.#ctor*
  nameWithType.vb: VnetInfo.VnetInfo(String, String, String, String, String, IDictionary(Of String, String), String, String, String, IList(Of VnetRoute), Nullable(Of Boolean), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetInfo(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, System.String, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.VnetRoute), System.Nullable(Of System.Boolean), System.String)
  name.vb: VnetInfo(String, String, String, String, String, IDictionary(Of String, String), String, String, String, IList(Of VnetRoute), Nullable(Of Boolean), String)
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetResourceId
  commentId: P:Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetResourceId
  id: VnetResourceId
  parent: Microsoft.Azure.Management.WebSites.Models.VnetInfo
  langs:
  - csharp
  - vb
  name: VnetResourceId
  nameWithType: VnetInfo.VnetResourceId
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetResourceId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VnetResourceId
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nThe vnet resource id\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.vnetResourceId")]

      public string VnetResourceId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.vnetResourceId")>

      Public Property VnetResourceId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetResourceId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.vnetResourceId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertThumbprint
  commentId: P:Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertThumbprint
  id: CertThumbprint
  parent: Microsoft.Azure.Management.WebSites.Models.VnetInfo
  langs:
  - csharp
  - vb
  name: CertThumbprint
  nameWithType: VnetInfo.CertThumbprint
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertThumbprint
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertThumbprint
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nThe client certificate thumbprint\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.certThumbprint")]

      public string CertThumbprint { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.certThumbprint")>

      Public Property CertThumbprint As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertThumbprint*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.certThumbprint
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertBlob
  commentId: P:Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertBlob
  id: CertBlob
  parent: Microsoft.Azure.Management.WebSites.Models.VnetInfo
  langs:
  - csharp
  - vb
  name: CertBlob
  nameWithType: VnetInfo.CertBlob
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertBlob
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertBlob
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nA certificate file (.cer) blob containing the public key of the\nprivate key used to authenticate a\nPoint-To-Site VPN connection.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.certBlob")]

      public string CertBlob { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.certBlob")>

      Public Property CertBlob As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertBlob*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.certBlob
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.Routes
  commentId: P:Microsoft.Azure.Management.WebSites.Models.VnetInfo.Routes
  id: Routes
  parent: Microsoft.Azure.Management.WebSites.Models.VnetInfo
  langs:
  - csharp
  - vb
  name: Routes
  nameWithType: VnetInfo.Routes
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.Routes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Routes
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nThe routes that this virtual network connection uses.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.routes")]

      public IList<VnetRoute> Routes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.routes")>

      Public Property Routes As IList(Of VnetRoute)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VnetRoute}
  overload: Microsoft.Azure.Management.WebSites.Models.VnetInfo.Routes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.routes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.ResyncRequired
  commentId: P:Microsoft.Azure.Management.WebSites.Models.VnetInfo.ResyncRequired
  id: ResyncRequired
  parent: Microsoft.Azure.Management.WebSites.Models.VnetInfo
  langs:
  - csharp
  - vb
  name: ResyncRequired
  nameWithType: VnetInfo.ResyncRequired
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.ResyncRequired
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResyncRequired
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nFlag to determine if a resync is required\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.resyncRequired")]

      public bool ? ResyncRequired { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.resyncRequired")>

      Public Property ResyncRequired As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.VnetInfo.ResyncRequired*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.resyncRequired
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.DnsServers
  commentId: P:Microsoft.Azure.Management.WebSites.Models.VnetInfo.DnsServers
  id: DnsServers
  parent: Microsoft.Azure.Management.WebSites.Models.VnetInfo
  langs:
  - csharp
  - vb
  name: DnsServers
  nameWithType: VnetInfo.DnsServers
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.DnsServers
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DnsServers
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDns servers to be used by this VNET. This should be a\ncomma-separated list of IP addresses.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.dnsServers")]

      public string DnsServers { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.dnsServers")>

      Public Property DnsServers As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.VnetInfo.DnsServers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.dnsServers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.VnetInfo.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.VnetInfo
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: VnetInfo.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VnetInfo.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  overload: Microsoft.Azure.Management.WebSites.Models.VnetInfo.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.WebSites.Models.Resource
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Resource
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Id
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Id
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Name
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Name
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Kind
  nameWithType: Resource.Kind
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Location
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Location
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Type
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Type
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VnetInfo.#ctor
  isExternal: false
  name: VnetInfo
  nameWithType: VnetInfo.VnetInfo
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VnetRoute}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VnetRoute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<VnetRoute>
  nameWithType: IList<VnetRoute>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.VnetRoute>
  nameWithType.vb: IList(Of VnetRoute)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.VnetRoute)
  name.vb: IList(Of VnetRoute)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.VnetRoute
    name: VnetRoute
    nameWithType: VnetRoute
    fullName: Microsoft.Azure.Management.WebSites.Models.VnetRoute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.VnetRoute
    name: VnetRoute
    nameWithType: VnetRoute
    fullName: Microsoft.Azure.Management.WebSites.Models.VnetRoute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetResourceId*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetResourceId
  isExternal: false
  name: VnetResourceId
  nameWithType: VnetInfo.VnetResourceId
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.VnetResourceId
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertThumbprint*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertThumbprint
  isExternal: false
  name: CertThumbprint
  nameWithType: VnetInfo.CertThumbprint
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertThumbprint
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertBlob*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertBlob
  isExternal: false
  name: CertBlob
  nameWithType: VnetInfo.CertBlob
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.CertBlob
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.Routes*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VnetInfo.Routes
  isExternal: false
  name: Routes
  nameWithType: VnetInfo.Routes
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.Routes
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.ResyncRequired*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VnetInfo.ResyncRequired
  isExternal: false
  name: ResyncRequired
  nameWithType: VnetInfo.ResyncRequired
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.ResyncRequired
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.DnsServers*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VnetInfo.DnsServers
  isExternal: false
  name: DnsServers
  nameWithType: VnetInfo.DnsServers
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.DnsServers
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.VnetInfo.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VnetInfo.Validate
  isExternal: false
  name: Validate
  nameWithType: VnetInfo.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.VnetInfo.Validate
