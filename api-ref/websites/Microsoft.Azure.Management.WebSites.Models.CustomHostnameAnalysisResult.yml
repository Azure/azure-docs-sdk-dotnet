### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  commentId: T:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  id: CustomHostnameAnalysisResult
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.#ctor
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult},Microsoft.Azure.Management.WebSites.Models.ErrorEntity,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateCNameRecords
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateTxtRecords
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ARecords
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CNameRecords
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ConflictingAppResourceId
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationFailureInfo
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationTest
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictAcrossSubscription
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictOnScaleUnit
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.IsHostnameAlreadyVerified
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.TxtRecords
  - Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.Validate
  langs:
  - csharp
  - vb
  name: CustomHostnameAnalysisResult
  nameWithType: CustomHostnameAnalysisResult
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomHostnameAnalysisResult
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRepresents a custom domain analysis\n"
  example: []
  syntax:
    content: 'public class CustomHostnameAnalysisResult : Resource, IResource'
    content.vb: >-
      Public Class CustomHostnameAnalysisResult
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.WebSites.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.WebSites.Models.Resource.Id
  - Microsoft.Azure.Management.WebSites.Models.Resource.Name
  - Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  - Microsoft.Azure.Management.WebSites.Models.Resource.Location
  - Microsoft.Azure.Management.WebSites.Models.Resource.Type
  - Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: CustomHostnameAnalysisResult()
  nameWithType: CustomHostnameAnalysisResult.CustomHostnameAnalysisResult()
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomHostnameAnalysisResult()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the CustomHostnameAnalysisResult\nclass.\n"
  example: []
  syntax:
    content: public CustomHostnameAnalysisResult()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult},Microsoft.Azure.Management.WebSites.Models.ErrorEntity,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult},Microsoft.Azure.Management.WebSites.Models.ErrorEntity,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult},Microsoft.Azure.Management.WebSites.Models.ErrorEntity,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})'
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: CustomHostnameAnalysisResult(String, String, String, String, String, IDictionary<String, String>, Nullable<Boolean>, Nullable<DnsVerificationTestResult>, ErrorEntity, Nullable<Boolean>, Nullable<Boolean>, String, IList<String>, IList<String>, IList<String>, IList<String>, IList<String>)
  nameWithType: CustomHostnameAnalysisResult.CustomHostnameAnalysisResult(String, String, String, String, String, IDictionary<String, String>, Nullable<Boolean>, Nullable<DnsVerificationTestResult>, ErrorEntity, Nullable<Boolean>, Nullable<Boolean>, String, IList<String>, IList<String>, IList<String>, IList<String>, IList<String>)
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomHostnameAnalysisResult(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.Nullable<System.Boolean>, System.Nullable<Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult>, Microsoft.Azure.Management.WebSites.Models.ErrorEntity, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.String, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the CustomHostnameAnalysisResult\nclass.\n"
  example: []
  syntax:
    content: public CustomHostnameAnalysisResult(string name, string location, string id = null, string kind = null, string type = null, IDictionary<string, string> tags = null, bool ? isHostnameAlreadyVerified = null, DnsVerificationTestResult? customDomainVerificationTest = null, ErrorEntity customDomainVerificationFailureInfo = null, bool ? hasConflictOnScaleUnit = null, bool ? hasConflictAcrossSubscription = null, string conflictingAppResourceId = null, IList<string> cNameRecords = null, IList<string> txtRecords = null, IList<string> aRecords = null, IList<string> alternateCNameRecords = null, IList<string> alternateTxtRecords = null)
    content.vb: Public Sub New(name As String, location As String, id As String = Nothing, kind As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, isHostnameAlreadyVerified As Boolean? = Nothing, customDomainVerificationTest As DnsVerificationTestResult? = Nothing, customDomainVerificationFailureInfo As ErrorEntity = Nothing, hasConflictOnScaleUnit As Boolean? = Nothing, hasConflictAcrossSubscription As Boolean? = Nothing, conflictingAppResourceId As String = Nothing, cNameRecords As IList(Of String) = Nothing, txtRecords As IList(Of String) = Nothing, aRecords As IList(Of String) = Nothing, alternateCNameRecords As IList(Of String) = Nothing, alternateTxtRecords As IList(Of String) = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: location
      type: System.String
    - id: id
      type: System.String
    - id: kind
      type: System.String
    - id: type
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: isHostnameAlreadyVerified
      type: System.Nullable{System.Boolean}
    - id: customDomainVerificationTest
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult}
    - id: customDomainVerificationFailureInfo
      type: Microsoft.Azure.Management.WebSites.Models.ErrorEntity
    - id: hasConflictOnScaleUnit
      type: System.Nullable{System.Boolean}
    - id: hasConflictAcrossSubscription
      type: System.Nullable{System.Boolean}
    - id: conflictingAppResourceId
      type: System.String
    - id: cNameRecords
      type: System.Collections.Generic.IList{System.String}
    - id: txtRecords
      type: System.Collections.Generic.IList{System.String}
    - id: aRecords
      type: System.Collections.Generic.IList{System.String}
    - id: alternateCNameRecords
      type: System.Collections.Generic.IList{System.String}
    - id: alternateTxtRecords
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.#ctor*
  nameWithType.vb: CustomHostnameAnalysisResult.CustomHostnameAnalysisResult(String, String, String, String, String, IDictionary(Of String, String), Nullable(Of Boolean), Nullable(Of DnsVerificationTestResult), ErrorEntity, Nullable(Of Boolean), Nullable(Of Boolean), String, IList(Of String), IList(Of String), IList(Of String), IList(Of String), IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomHostnameAnalysisResult(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Nullable(Of System.Boolean), System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult), Microsoft.Azure.Management.WebSites.Models.ErrorEntity, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.String, System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String))
  name.vb: CustomHostnameAnalysisResult(String, String, String, String, String, IDictionary(Of String, String), Nullable(Of Boolean), Nullable(Of DnsVerificationTestResult), ErrorEntity, Nullable(Of Boolean), Nullable(Of Boolean), String, IList(Of String), IList(Of String), IList(Of String), IList(Of String), IList(Of String))
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.IsHostnameAlreadyVerified
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.IsHostnameAlreadyVerified
  id: IsHostnameAlreadyVerified
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: IsHostnameAlreadyVerified
  nameWithType: CustomHostnameAnalysisResult.IsHostnameAlreadyVerified
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.IsHostnameAlreadyVerified
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsHostnameAlreadyVerified
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nIs hostname already verified?\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.isHostnameAlreadyVerified")]

      public bool ? IsHostnameAlreadyVerified { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.isHostnameAlreadyVerified")>

      Public Property IsHostnameAlreadyVerified As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.IsHostnameAlreadyVerified*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.isHostnameAlreadyVerified
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationTest
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationTest
  id: CustomDomainVerificationTest
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: CustomDomainVerificationTest
  nameWithType: CustomHostnameAnalysisResult.CustomDomainVerificationTest
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationTest
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomDomainVerificationTest
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDns verification test result. Possible values include: 'Passed',\n'Failed', 'Skipped'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.customDomainVerificationTest")]

      public DnsVerificationTestResult? CustomDomainVerificationTest { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.customDomainVerificationTest")>

      Public Property CustomDomainVerificationTest As DnsVerificationTestResult?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult}
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationTest*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.customDomainVerificationTest
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationFailureInfo
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationFailureInfo
  id: CustomDomainVerificationFailureInfo
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: CustomDomainVerificationFailureInfo
  nameWithType: CustomHostnameAnalysisResult.CustomDomainVerificationFailureInfo
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationFailureInfo
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomDomainVerificationFailureInfo
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRaw failure info if Dns verification fails\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.customDomainVerificationFailureInfo")]

      public ErrorEntity CustomDomainVerificationFailureInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.customDomainVerificationFailureInfo")>

      Public Property CustomDomainVerificationFailureInfo As ErrorEntity
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.ErrorEntity
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationFailureInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.customDomainVerificationFailureInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictOnScaleUnit
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictOnScaleUnit
  id: HasConflictOnScaleUnit
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: HasConflictOnScaleUnit
  nameWithType: CustomHostnameAnalysisResult.HasConflictOnScaleUnit
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictOnScaleUnit
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HasConflictOnScaleUnit
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDoes it have conflict on scale unit?\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.hasConflictOnScaleUnit")]

      public bool ? HasConflictOnScaleUnit { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.hasConflictOnScaleUnit")>

      Public Property HasConflictOnScaleUnit As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictOnScaleUnit*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.hasConflictOnScaleUnit
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictAcrossSubscription
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictAcrossSubscription
  id: HasConflictAcrossSubscription
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: HasConflictAcrossSubscription
  nameWithType: CustomHostnameAnalysisResult.HasConflictAcrossSubscription
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictAcrossSubscription
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HasConflictAcrossSubscription
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDoes it have conflict across subscription?\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.hasConflictAcrossSubscription")]

      public bool ? HasConflictAcrossSubscription { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.hasConflictAcrossSubscription")>

      Public Property HasConflictAcrossSubscription As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictAcrossSubscription*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.hasConflictAcrossSubscription
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ConflictingAppResourceId
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ConflictingAppResourceId
  id: ConflictingAppResourceId
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: ConflictingAppResourceId
  nameWithType: CustomHostnameAnalysisResult.ConflictingAppResourceId
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ConflictingAppResourceId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ConflictingAppResourceId
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName of the conflicting App on scale unit if it's within the same\nsubscription\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.conflictingAppResourceId")]

      public string ConflictingAppResourceId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.conflictingAppResourceId")>

      Public Property ConflictingAppResourceId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ConflictingAppResourceId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.conflictingAppResourceId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CNameRecords
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CNameRecords
  id: CNameRecords
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: CNameRecords
  nameWithType: CustomHostnameAnalysisResult.CNameRecords
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CNameRecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CNameRecords
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nCName records controller could see for this hostname\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.cNameRecords")]

      public IList<string> CNameRecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.cNameRecords")>

      Public Property CNameRecords As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CNameRecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.cNameRecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.TxtRecords
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.TxtRecords
  id: TxtRecords
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: TxtRecords
  nameWithType: CustomHostnameAnalysisResult.TxtRecords
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.TxtRecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TxtRecords
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTxT records controller could see for this hostname\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.txtRecords")]

      public IList<string> TxtRecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.txtRecords")>

      Public Property TxtRecords As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.TxtRecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.txtRecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ARecords
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ARecords
  id: ARecords
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: ARecords
  nameWithType: CustomHostnameAnalysisResult.ARecords
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ARecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ARecords
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nA records controller could see for this hostname\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.aRecords")]

      public IList<string> ARecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.aRecords")>

      Public Property ARecords As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ARecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.aRecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateCNameRecords
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateCNameRecords
  id: AlternateCNameRecords
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: AlternateCNameRecords
  nameWithType: CustomHostnameAnalysisResult.AlternateCNameRecords
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateCNameRecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AlternateCNameRecords
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nAlternate CName records controller could see for this hostname\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.alternateCNameRecords")]

      public IList<string> AlternateCNameRecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.alternateCNameRecords")>

      Public Property AlternateCNameRecords As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateCNameRecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.alternateCNameRecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateTxtRecords
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateTxtRecords
  id: AlternateTxtRecords
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: AlternateTxtRecords
  nameWithType: CustomHostnameAnalysisResult.AlternateTxtRecords
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateTxtRecords
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AlternateTxtRecords
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nAlternate TxT records controller could see for this hostname\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.alternateTxtRecords")]

      public IList<string> AlternateTxtRecords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.alternateTxtRecords")>

      Public Property AlternateTxtRecords As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateTxtRecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.alternateTxtRecords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CustomHostnameAnalysisResult.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CustomHostnameAnalysisResult.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  overload: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.WebSites.Models.Resource
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Resource
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Id
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Id
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Name
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Name
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Kind
  nameWithType: Resource.Kind
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Location
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Location
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Type
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Type
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.#ctor
  isExternal: false
  name: CustomHostnameAnalysisResult
  nameWithType: CustomHostnameAnalysisResult.CustomHostnameAnalysisResult
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomHostnameAnalysisResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DnsVerificationTestResult>
  nameWithType: Nullable<DnsVerificationTestResult>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult>
  nameWithType.vb: Nullable(Of DnsVerificationTestResult)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult)
  name.vb: Nullable(Of DnsVerificationTestResult)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult
    name: DnsVerificationTestResult
    nameWithType: DnsVerificationTestResult
    fullName: Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult
    name: DnsVerificationTestResult
    nameWithType: DnsVerificationTestResult
    fullName: Microsoft.Azure.Management.WebSites.Models.DnsVerificationTestResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.ErrorEntity
  commentId: T:Microsoft.Azure.Management.WebSites.Models.ErrorEntity
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: ErrorEntity
  nameWithType: ErrorEntity
  fullName: Microsoft.Azure.Management.WebSites.Models.ErrorEntity
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.IsHostnameAlreadyVerified*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.IsHostnameAlreadyVerified
  isExternal: false
  name: IsHostnameAlreadyVerified
  nameWithType: CustomHostnameAnalysisResult.IsHostnameAlreadyVerified
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.IsHostnameAlreadyVerified
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationTest*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationTest
  isExternal: false
  name: CustomDomainVerificationTest
  nameWithType: CustomHostnameAnalysisResult.CustomDomainVerificationTest
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationTest
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationFailureInfo*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationFailureInfo
  isExternal: false
  name: CustomDomainVerificationFailureInfo
  nameWithType: CustomHostnameAnalysisResult.CustomDomainVerificationFailureInfo
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CustomDomainVerificationFailureInfo
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictOnScaleUnit*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictOnScaleUnit
  isExternal: false
  name: HasConflictOnScaleUnit
  nameWithType: CustomHostnameAnalysisResult.HasConflictOnScaleUnit
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictOnScaleUnit
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictAcrossSubscription*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictAcrossSubscription
  isExternal: false
  name: HasConflictAcrossSubscription
  nameWithType: CustomHostnameAnalysisResult.HasConflictAcrossSubscription
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.HasConflictAcrossSubscription
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ConflictingAppResourceId*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ConflictingAppResourceId
  isExternal: false
  name: ConflictingAppResourceId
  nameWithType: CustomHostnameAnalysisResult.ConflictingAppResourceId
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ConflictingAppResourceId
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CNameRecords*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CNameRecords
  isExternal: false
  name: CNameRecords
  nameWithType: CustomHostnameAnalysisResult.CNameRecords
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.CNameRecords
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.TxtRecords*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.TxtRecords
  isExternal: false
  name: TxtRecords
  nameWithType: CustomHostnameAnalysisResult.TxtRecords
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.TxtRecords
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ARecords*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ARecords
  isExternal: false
  name: ARecords
  nameWithType: CustomHostnameAnalysisResult.ARecords
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.ARecords
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateCNameRecords*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateCNameRecords
  isExternal: false
  name: AlternateCNameRecords
  nameWithType: CustomHostnameAnalysisResult.AlternateCNameRecords
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateCNameRecords
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateTxtRecords*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateTxtRecords
  isExternal: false
  name: AlternateTxtRecords
  nameWithType: CustomHostnameAnalysisResult.AlternateTxtRecords
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.AlternateTxtRecords
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.Validate
  isExternal: false
  name: Validate
  nameWithType: CustomHostnameAnalysisResult.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.CustomHostnameAnalysisResult.Validate
