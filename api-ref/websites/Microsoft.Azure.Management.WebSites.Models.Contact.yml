### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.Contact
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Contact
  id: Contact
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.Contact.#ctor
  - Microsoft.Azure.Management.WebSites.Models.Contact.#ctor(Microsoft.Azure.Management.WebSites.Models.Address,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.WebSites.Models.Contact.AddressMailing
  - Microsoft.Azure.Management.WebSites.Models.Contact.Email
  - Microsoft.Azure.Management.WebSites.Models.Contact.Fax
  - Microsoft.Azure.Management.WebSites.Models.Contact.JobTitle
  - Microsoft.Azure.Management.WebSites.Models.Contact.NameFirst
  - Microsoft.Azure.Management.WebSites.Models.Contact.NameLast
  - Microsoft.Azure.Management.WebSites.Models.Contact.NameMiddle
  - Microsoft.Azure.Management.WebSites.Models.Contact.Organization
  - Microsoft.Azure.Management.WebSites.Models.Contact.Phone
  langs:
  - csharp
  - vb
  name: Contact
  nameWithType: Contact
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Contact
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nContact information for domain registration. If 'Domain Privacy'\noption is not selected then the contact information will be  be made\npublicly available through the Whois directories as per ICANN\nrequirements.\n"
  example: []
  syntax:
    content: public class Contact
    content.vb: Public Class Contact
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Contact.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.Contact
  langs:
  - csharp
  - vb
  name: Contact()
  nameWithType: Contact.Contact()
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.Contact()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the Contact class.\n"
  example: []
  syntax:
    content: public Contact()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.Contact.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.#ctor(Microsoft.Azure.Management.WebSites.Models.Address,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Contact.#ctor(Microsoft.Azure.Management.WebSites.Models.Address,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(Microsoft.Azure.Management.WebSites.Models.Address,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.Contact
  langs:
  - csharp
  - vb
  name: Contact(Address, String, String, String, String, String, String, String, String)
  nameWithType: Contact.Contact(Address, String, String, String, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.Contact(Microsoft.Azure.Management.WebSites.Models.Address, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the Contact class.\n"
  example: []
  syntax:
    content: public Contact(Address addressMailing = null, string email = null, string fax = null, string jobTitle = null, string nameFirst = null, string nameLast = null, string nameMiddle = null, string organization = null, string phone = null)
    content.vb: Public Sub New(addressMailing As Address = Nothing, email As String = Nothing, fax As String = Nothing, jobTitle As String = Nothing, nameFirst As String = Nothing, nameLast As String = Nothing, nameMiddle As String = Nothing, organization As String = Nothing, phone As String = Nothing)
    parameters:
    - id: addressMailing
      type: Microsoft.Azure.Management.WebSites.Models.Address
    - id: email
      type: System.String
    - id: fax
      type: System.String
    - id: jobTitle
      type: System.String
    - id: nameFirst
      type: System.String
    - id: nameLast
      type: System.String
    - id: nameMiddle
      type: System.String
    - id: organization
      type: System.String
    - id: phone
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Contact.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.AddressMailing
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Contact.AddressMailing
  id: AddressMailing
  parent: Microsoft.Azure.Management.WebSites.Models.Contact
  langs:
  - csharp
  - vb
  name: AddressMailing
  nameWithType: Contact.AddressMailing
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.AddressMailing
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddressMailing
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nMailing address\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "addressMailing")]

      public Address AddressMailing { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="addressMailing")>

      Public Property AddressMailing As Address
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.Address
  overload: Microsoft.Azure.Management.WebSites.Models.Contact.AddressMailing*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: addressMailing
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.Email
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Contact.Email
  id: Email
  parent: Microsoft.Azure.Management.WebSites.Models.Contact
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: Contact.Email
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.Email
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Email
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nEmail address\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "email")]

      public string Email { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="email")>

      Public Property Email As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Contact.Email*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: email
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.Fax
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Contact.Fax
  id: Fax
  parent: Microsoft.Azure.Management.WebSites.Models.Contact
  langs:
  - csharp
  - vb
  name: Fax
  nameWithType: Contact.Fax
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.Fax
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Fax
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nFax number\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "fax")]

      public string Fax { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="fax")>

      Public Property Fax As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Contact.Fax*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: fax
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.JobTitle
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Contact.JobTitle
  id: JobTitle
  parent: Microsoft.Azure.Management.WebSites.Models.Contact
  langs:
  - csharp
  - vb
  name: JobTitle
  nameWithType: Contact.JobTitle
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.JobTitle
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobTitle
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nJob title\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "jobTitle")]

      public string JobTitle { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="jobTitle")>

      Public Property JobTitle As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Contact.JobTitle*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: jobTitle
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.NameFirst
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Contact.NameFirst
  id: NameFirst
  parent: Microsoft.Azure.Management.WebSites.Models.Contact
  langs:
  - csharp
  - vb
  name: NameFirst
  nameWithType: Contact.NameFirst
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.NameFirst
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NameFirst
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nFirst name\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "nameFirst")]

      public string NameFirst { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="nameFirst")>

      Public Property NameFirst As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Contact.NameFirst*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: nameFirst
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.NameLast
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Contact.NameLast
  id: NameLast
  parent: Microsoft.Azure.Management.WebSites.Models.Contact
  langs:
  - csharp
  - vb
  name: NameLast
  nameWithType: Contact.NameLast
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.NameLast
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NameLast
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nLast name\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "nameLast")]

      public string NameLast { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="nameLast")>

      Public Property NameLast As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Contact.NameLast*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: nameLast
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.NameMiddle
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Contact.NameMiddle
  id: NameMiddle
  parent: Microsoft.Azure.Management.WebSites.Models.Contact
  langs:
  - csharp
  - vb
  name: NameMiddle
  nameWithType: Contact.NameMiddle
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.NameMiddle
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NameMiddle
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nMiddle name\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "nameMiddle")]

      public string NameMiddle { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="nameMiddle")>

      Public Property NameMiddle As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Contact.NameMiddle*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: nameMiddle
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.Organization
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Contact.Organization
  id: Organization
  parent: Microsoft.Azure.Management.WebSites.Models.Contact
  langs:
  - csharp
  - vb
  name: Organization
  nameWithType: Contact.Organization
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.Organization
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Organization
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nOrganization\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "organization")]

      public string Organization { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="organization")>

      Public Property Organization As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Contact.Organization*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: organization
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.Phone
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Contact.Phone
  id: Phone
  parent: Microsoft.Azure.Management.WebSites.Models.Contact
  langs:
  - csharp
  - vb
  name: Phone
  nameWithType: Contact.Phone
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.Phone
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Phone
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Contact.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nPhone number\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "phone")]

      public string Phone { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="phone")>

      Public Property Phone As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Contact.Phone*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: phone
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Contact.#ctor
  isExternal: false
  name: Contact
  nameWithType: Contact.Contact
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.Contact
- uid: Microsoft.Azure.Management.WebSites.Models.Address
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Address
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Address
  nameWithType: Address
  fullName: Microsoft.Azure.Management.WebSites.Models.Address
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.AddressMailing*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Contact.AddressMailing
  isExternal: false
  name: AddressMailing
  nameWithType: Contact.AddressMailing
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.AddressMailing
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.Email*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Contact.Email
  isExternal: false
  name: Email
  nameWithType: Contact.Email
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.Email
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.Fax*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Contact.Fax
  isExternal: false
  name: Fax
  nameWithType: Contact.Fax
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.Fax
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.JobTitle*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Contact.JobTitle
  isExternal: false
  name: JobTitle
  nameWithType: Contact.JobTitle
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.JobTitle
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.NameFirst*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Contact.NameFirst
  isExternal: false
  name: NameFirst
  nameWithType: Contact.NameFirst
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.NameFirst
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.NameLast*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Contact.NameLast
  isExternal: false
  name: NameLast
  nameWithType: Contact.NameLast
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.NameLast
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.NameMiddle*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Contact.NameMiddle
  isExternal: false
  name: NameMiddle
  nameWithType: Contact.NameMiddle
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.NameMiddle
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.Organization*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Contact.Organization
  isExternal: false
  name: Organization
  nameWithType: Contact.Organization
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.Organization
- uid: Microsoft.Azure.Management.WebSites.Models.Contact.Phone*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Contact.Phone
  isExternal: false
  name: Phone
  nameWithType: Contact.Phone
  fullName: Microsoft.Azure.Management.WebSites.Models.Contact.Phone
