### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication
  commentId: T:Microsoft.Azure.Management.WebSites.Models.VirtualApplication
  id: VirtualApplication
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.VirtualApplication.#ctor
  - Microsoft.Azure.Management.WebSites.Models.VirtualApplication.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualDirectory})
  - Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PhysicalPath
  - Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PreloadEnabled
  - Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualDirectories
  - Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualPath
  langs:
  - csharp
  - vb
  name: VirtualApplication
  nameWithType: VirtualApplication
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualApplication
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nVirtual application under web app\n"
  example: []
  syntax:
    content: public class VirtualApplication
    content.vb: Public Class VirtualApplication
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.VirtualApplication.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.VirtualApplication
  langs:
  - csharp
  - vb
  name: VirtualApplication()
  nameWithType: VirtualApplication.VirtualApplication()
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualApplication()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the VirtualApplication class.\n"
  example: []
  syntax:
    content: public VirtualApplication()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualDirectory})
  commentId: M:Microsoft.Azure.Management.WebSites.Models.VirtualApplication.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualDirectory})
  id: '#ctor(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualDirectory})'
  parent: Microsoft.Azure.Management.WebSites.Models.VirtualApplication
  langs:
  - csharp
  - vb
  name: VirtualApplication(String, String, Nullable<Boolean>, IList<VirtualDirectory>)
  nameWithType: VirtualApplication.VirtualApplication(String, String, Nullable<Boolean>, IList<VirtualDirectory>)
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualApplication(System.String, System.String, System.Nullable<System.Boolean>, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.VirtualDirectory>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the VirtualApplication class.\n"
  example: []
  syntax:
    content: public VirtualApplication(string virtualPath = null, string physicalPath = null, bool ? preloadEnabled = null, IList<VirtualDirectory> virtualDirectories = null)
    content.vb: Public Sub New(virtualPath As String = Nothing, physicalPath As String = Nothing, preloadEnabled As Boolean? = Nothing, virtualDirectories As IList(Of VirtualDirectory) = Nothing)
    parameters:
    - id: virtualPath
      type: System.String
    - id: physicalPath
      type: System.String
    - id: preloadEnabled
      type: System.Nullable{System.Boolean}
    - id: virtualDirectories
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualDirectory}
  overload: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.#ctor*
  nameWithType.vb: VirtualApplication.VirtualApplication(String, String, Nullable(Of Boolean), IList(Of VirtualDirectory))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualApplication(System.String, System.String, System.Nullable(Of System.Boolean), System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.VirtualDirectory))
  name.vb: VirtualApplication(String, String, Nullable(Of Boolean), IList(Of VirtualDirectory))
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualPath
  commentId: P:Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualPath
  id: VirtualPath
  parent: Microsoft.Azure.Management.WebSites.Models.VirtualApplication
  langs:
  - csharp
  - vb
  name: VirtualPath
  nameWithType: VirtualApplication.VirtualPath
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualPath
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualPath
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nVirtual path\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "virtualPath")]

      public string VirtualPath { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="virtualPath")>

      Public Property VirtualPath As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualPath*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: virtualPath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PhysicalPath
  commentId: P:Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PhysicalPath
  id: PhysicalPath
  parent: Microsoft.Azure.Management.WebSites.Models.VirtualApplication
  langs:
  - csharp
  - vb
  name: PhysicalPath
  nameWithType: VirtualApplication.PhysicalPath
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PhysicalPath
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PhysicalPath
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nPhysical path\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "physicalPath")]

      public string PhysicalPath { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="physicalPath")>

      Public Property PhysicalPath As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PhysicalPath*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: physicalPath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PreloadEnabled
  commentId: P:Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PreloadEnabled
  id: PreloadEnabled
  parent: Microsoft.Azure.Management.WebSites.Models.VirtualApplication
  langs:
  - csharp
  - vb
  name: PreloadEnabled
  nameWithType: VirtualApplication.PreloadEnabled
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PreloadEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreloadEnabled
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nIs preload enabled\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "preloadEnabled")]

      public bool ? PreloadEnabled { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="preloadEnabled")>

      Public Property PreloadEnabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PreloadEnabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: preloadEnabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualDirectories
  commentId: P:Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualDirectories
  id: VirtualDirectories
  parent: Microsoft.Azure.Management.WebSites.Models.VirtualApplication
  langs:
  - csharp
  - vb
  name: VirtualDirectories
  nameWithType: VirtualApplication.VirtualDirectories
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualDirectories
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualDirectories
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/VirtualApplication.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nVirtual Directories for virtual application\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "virtualDirectories")]

      public IList<VirtualDirectory> VirtualDirectories { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="virtualDirectories")>

      Public Property VirtualDirectories As IList(Of VirtualDirectory)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualDirectory}
  overload: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualDirectories*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: virtualDirectories
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VirtualApplication.#ctor
  isExternal: false
  name: VirtualApplication
  nameWithType: VirtualApplication.VirtualApplication
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualApplication
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualDirectory}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualDirectory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<VirtualDirectory>
  nameWithType: IList<VirtualDirectory>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.VirtualDirectory>
  nameWithType.vb: IList(Of VirtualDirectory)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.VirtualDirectory)
  name.vb: IList(Of VirtualDirectory)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.VirtualDirectory
    name: VirtualDirectory
    nameWithType: VirtualDirectory
    fullName: Microsoft.Azure.Management.WebSites.Models.VirtualDirectory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.VirtualDirectory
    name: VirtualDirectory
    nameWithType: VirtualDirectory
    fullName: Microsoft.Azure.Management.WebSites.Models.VirtualDirectory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualPath*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualPath
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualApplication.VirtualPath
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualPath
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PhysicalPath*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PhysicalPath
  isExternal: false
  name: PhysicalPath
  nameWithType: VirtualApplication.PhysicalPath
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PhysicalPath
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PreloadEnabled*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PreloadEnabled
  isExternal: false
  name: PreloadEnabled
  nameWithType: VirtualApplication.PreloadEnabled
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.PreloadEnabled
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualDirectories*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualDirectories
  isExternal: false
  name: VirtualDirectories
  nameWithType: VirtualApplication.VirtualDirectories
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualApplication.VirtualDirectories
