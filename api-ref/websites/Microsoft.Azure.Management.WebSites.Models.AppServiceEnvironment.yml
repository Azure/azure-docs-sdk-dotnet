### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  commentId: T:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  id: AppServiceEnvironment
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.#ctor
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState},System.Nullable{Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus},System.String,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile,System.Nullable{Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode},System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.WorkerPool},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.StampCapacity},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NameValuePair})
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedMultiSizes
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedWorkerSizes
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ApiManagementAccountId
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentLocation
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentName
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ClusterSettings
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseEdition
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseServiceObjective
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DnsSuffix
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DynamicCacheEnabled
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentCapacities
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentIsHealthy
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentStatus
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.FrontEndScaleFactor
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.InternalLoadBalancingMode
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.IpsslAddressCount
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastAction
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastActionResult
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MaximumNumberOfMachines
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiRoleCount
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiSize
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.NetworkAccessControlList
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ProvisioningState
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ResourceGroup
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Status
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.SubscriptionId
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Suspended
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.UpgradeDomains
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Validate
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VipMappings
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VirtualNetwork
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetName
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetResourceGroupName
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetSubnetName
  - Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.WorkerPools
  langs:
  - csharp
  - vb
  name: AppServiceEnvironment
  nameWithType: AppServiceEnvironment
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AppServiceEnvironment
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDescription of an hostingEnvironment (App Service Environment)\n"
  example: []
  syntax:
    content: 'public class AppServiceEnvironment : Resource, IResource'
    content.vb: >-
      Public Class AppServiceEnvironment
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.WebSites.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.WebSites.Models.Resource.Id
  - Microsoft.Azure.Management.WebSites.Models.Resource.Name
  - Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  - Microsoft.Azure.Management.WebSites.Models.Resource.Location
  - Microsoft.Azure.Management.WebSites.Models.Resource.Type
  - Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: AppServiceEnvironment()
  nameWithType: AppServiceEnvironment.AppServiceEnvironment()
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironment()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the AppServiceEnvironment class.\n"
  example: []
  syntax:
    content: public AppServiceEnvironment()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState},System.Nullable{Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus},System.String,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile,System.Nullable{Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode},System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.WorkerPool},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.StampCapacity},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NameValuePair})
  commentId: M:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState},System.Nullable{Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus},System.String,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile,System.Nullable{Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode},System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.WorkerPool},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.StampCapacity},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NameValuePair})
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState},System.Nullable{Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus},System.String,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile,System.Nullable{Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode},System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.WorkerPool},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.StampCapacity},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NameValuePair})'
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: AppServiceEnvironment(String, String, String, String, String, IDictionary<String, String>, String, String, Nullable<ProvisioningState>, Nullable<HostingEnvironmentStatus>, String, String, String, VirtualNetworkProfile, Nullable<InternalLoadBalancingMode>, String, Nullable<Int32>, IList<WorkerPool>, Nullable<Int32>, String, String, Nullable<Int32>, String, String, String, String, String, String, Nullable<Int32>, IList<VirtualIPMapping>, IList<StampCapacity>, IList<NetworkAccessControlEntry>, Nullable<Boolean>, String, String, Nullable<Int32>, String, Nullable<Boolean>, Nullable<Boolean>, IList<NameValuePair>)
  nameWithType: AppServiceEnvironment.AppServiceEnvironment(String, String, String, String, String, IDictionary<String, String>, String, String, Nullable<ProvisioningState>, Nullable<HostingEnvironmentStatus>, String, String, String, VirtualNetworkProfile, Nullable<InternalLoadBalancingMode>, String, Nullable<Int32>, IList<WorkerPool>, Nullable<Int32>, String, String, Nullable<Int32>, String, String, String, String, String, String, Nullable<Int32>, IList<VirtualIPMapping>, IList<StampCapacity>, IList<NetworkAccessControlEntry>, Nullable<Boolean>, String, String, Nullable<Int32>, String, Nullable<Boolean>, Nullable<Boolean>, IList<NameValuePair>)
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironment(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.String, System.String, System.Nullable<Microsoft.Azure.Management.WebSites.Models.ProvisioningState>, System.Nullable<Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus>, System.String, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile, System.Nullable<Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode>, System.String, System.Nullable<System.Int32>, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.WorkerPool>, System.Nullable<System.Int32>, System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, System.String, System.String, System.String, System.String, System.Nullable<System.Int32>, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping>, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.StampCapacity>, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry>, System.Nullable<System.Boolean>, System.String, System.String, System.Nullable<System.Int32>, System.String, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.NameValuePair>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the AppServiceEnvironment class.\n"
  example: []
  syntax:
    content: public AppServiceEnvironment(string name, string location, string id = null, string kind = null, string type = null, IDictionary<string, string> tags = null, string appServiceEnvironmentName = null, string appServiceEnvironmentLocation = null, ProvisioningState? provisioningState = null, HostingEnvironmentStatus? status = null, string vnetName = null, string vnetResourceGroupName = null, string vnetSubnetName = null, VirtualNetworkProfile virtualNetwork = null, InternalLoadBalancingMode? internalLoadBalancingMode = null, string multiSize = null, int ? multiRoleCount = null, IList<WorkerPool> workerPools = null, int ? ipsslAddressCount = null, string databaseEdition = null, string databaseServiceObjective = null, int ? upgradeDomains = null, string subscriptionId = null, string dnsSuffix = null, string lastAction = null, string lastActionResult = null, string allowedMultiSizes = null, string allowedWorkerSizes = null, int ? maximumNumberOfMachines = null, IList<VirtualIPMapping> vipMappings = null, IList<StampCapacity> environmentCapacities = null, IList<NetworkAccessControlEntry> networkAccessControlList = null, bool ? environmentIsHealthy = null, string environmentStatus = null, string resourceGroup = null, int ? frontEndScaleFactor = null, string apiManagementAccountId = null, bool ? suspended = null, bool ? dynamicCacheEnabled = null, IList<NameValuePair> clusterSettings = null)
    content.vb: Public Sub New(name As String, location As String, id As String = Nothing, kind As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, appServiceEnvironmentName As String = Nothing, appServiceEnvironmentLocation As String = Nothing, provisioningState As ProvisioningState? = Nothing, status As HostingEnvironmentStatus? = Nothing, vnetName As String = Nothing, vnetResourceGroupName As String = Nothing, vnetSubnetName As String = Nothing, virtualNetwork As VirtualNetworkProfile = Nothing, internalLoadBalancingMode As InternalLoadBalancingMode? = Nothing, multiSize As String = Nothing, multiRoleCount As Integer? = Nothing, workerPools As IList(Of WorkerPool) = Nothing, ipsslAddressCount As Integer? = Nothing, databaseEdition As String = Nothing, databaseServiceObjective As String = Nothing, upgradeDomains As Integer? = Nothing, subscriptionId As String = Nothing, dnsSuffix As String = Nothing, lastAction As String = Nothing, lastActionResult As String = Nothing, allowedMultiSizes As String = Nothing, allowedWorkerSizes As String = Nothing, maximumNumberOfMachines As Integer? = Nothing, vipMappings As IList(Of VirtualIPMapping) = Nothing, environmentCapacities As IList(Of StampCapacity) = Nothing, networkAccessControlList As IList(Of NetworkAccessControlEntry) = Nothing, environmentIsHealthy As Boolean? = Nothing, environmentStatus As String = Nothing, resourceGroup As String = Nothing, frontEndScaleFactor As Integer? = Nothing, apiManagementAccountId As String = Nothing, suspended As Boolean? = Nothing, dynamicCacheEnabled As Boolean? = Nothing, clusterSettings As IList(Of NameValuePair) = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: location
      type: System.String
    - id: id
      type: System.String
    - id: kind
      type: System.String
    - id: type
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: appServiceEnvironmentName
      type: System.String
    - id: appServiceEnvironmentLocation
      type: System.String
    - id: provisioningState
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState}
    - id: status
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus}
    - id: vnetName
      type: System.String
    - id: vnetResourceGroupName
      type: System.String
    - id: vnetSubnetName
      type: System.String
    - id: virtualNetwork
      type: Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile
    - id: internalLoadBalancingMode
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode}
    - id: multiSize
      type: System.String
    - id: multiRoleCount
      type: System.Nullable{System.Int32}
    - id: workerPools
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.WorkerPool}
    - id: ipsslAddressCount
      type: System.Nullable{System.Int32}
    - id: databaseEdition
      type: System.String
    - id: databaseServiceObjective
      type: System.String
    - id: upgradeDomains
      type: System.Nullable{System.Int32}
    - id: subscriptionId
      type: System.String
    - id: dnsSuffix
      type: System.String
    - id: lastAction
      type: System.String
    - id: lastActionResult
      type: System.String
    - id: allowedMultiSizes
      type: System.String
    - id: allowedWorkerSizes
      type: System.String
    - id: maximumNumberOfMachines
      type: System.Nullable{System.Int32}
    - id: vipMappings
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping}
    - id: environmentCapacities
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.StampCapacity}
    - id: networkAccessControlList
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry}
    - id: environmentIsHealthy
      type: System.Nullable{System.Boolean}
    - id: environmentStatus
      type: System.String
    - id: resourceGroup
      type: System.String
    - id: frontEndScaleFactor
      type: System.Nullable{System.Int32}
    - id: apiManagementAccountId
      type: System.String
    - id: suspended
      type: System.Nullable{System.Boolean}
    - id: dynamicCacheEnabled
      type: System.Nullable{System.Boolean}
    - id: clusterSettings
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NameValuePair}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.#ctor*
  nameWithType.vb: AppServiceEnvironment.AppServiceEnvironment(String, String, String, String, String, IDictionary(Of String, String), String, String, Nullable(Of ProvisioningState), Nullable(Of HostingEnvironmentStatus), String, String, String, VirtualNetworkProfile, Nullable(Of InternalLoadBalancingMode), String, Nullable(Of Int32), IList(Of WorkerPool), Nullable(Of Int32), String, String, Nullable(Of Int32), String, String, String, String, String, String, Nullable(Of Int32), IList(Of VirtualIPMapping), IList(Of StampCapacity), IList(Of NetworkAccessControlEntry), Nullable(Of Boolean), String, String, Nullable(Of Int32), String, Nullable(Of Boolean), Nullable(Of Boolean), IList(Of NameValuePair))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironment(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, System.String, System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.ProvisioningState), System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus), System.String, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile, System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode), System.String, System.Nullable(Of System.Int32), System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.WorkerPool), System.Nullable(Of System.Int32), System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String, System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32), System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping), System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.StampCapacity), System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry), System.Nullable(Of System.Boolean), System.String, System.String, System.Nullable(Of System.Int32), System.String, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.NameValuePair))
  name.vb: AppServiceEnvironment(String, String, String, String, String, IDictionary(Of String, String), String, String, Nullable(Of ProvisioningState), Nullable(Of HostingEnvironmentStatus), String, String, String, VirtualNetworkProfile, Nullable(Of InternalLoadBalancingMode), String, Nullable(Of Int32), IList(Of WorkerPool), Nullable(Of Int32), String, String, Nullable(Of Int32), String, String, String, String, String, String, Nullable(Of Int32), IList(Of VirtualIPMapping), IList(Of StampCapacity), IList(Of NetworkAccessControlEntry), Nullable(Of Boolean), String, String, Nullable(Of Int32), String, Nullable(Of Boolean), Nullable(Of Boolean), IList(Of NameValuePair))
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentName
  id: AppServiceEnvironmentName
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: AppServiceEnvironmentName
  nameWithType: AppServiceEnvironment.AppServiceEnvironmentName
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AppServiceEnvironmentName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName of the hostingEnvironment (App Service Environment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.name")]

      public string AppServiceEnvironmentName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.name")>

      Public Property AppServiceEnvironmentName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentLocation
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentLocation
  id: AppServiceEnvironmentLocation
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: AppServiceEnvironmentLocation
  nameWithType: AppServiceEnvironment.AppServiceEnvironmentLocation
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentLocation
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AppServiceEnvironmentLocation
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nLocation of the hostingEnvironment (App Service Environment), e.g.\n\"West US\"\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.location")]

      public string AppServiceEnvironmentLocation { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.location")>

      Public Property AppServiceEnvironmentLocation As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentLocation*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.location
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ProvisioningState
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: AppServiceEnvironment.ProvisioningState
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nProvisioning state of the hostingEnvironment (App Service\nEnvironment). Possible values include: 'Succeeded', 'Failed',\n'Canceled', 'InProgress', 'Deleting'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public ProvisioningState? ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As ProvisioningState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Status
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Status
  id: Status
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: AppServiceEnvironment.Status
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Status
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nCurrent status of the hostingEnvironment (App Service\nEnvironment). Possible values include: 'Preparing', 'Ready',\n'Scaling', 'Deleting'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.status")]

      public HostingEnvironmentStatus? Status { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.status")>

      Public Property Status As HostingEnvironmentStatus?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetName
  id: VnetName
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: VnetName
  nameWithType: AppServiceEnvironment.VnetName
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VnetName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName of the hostingEnvironment's (App Service Environment) virtual\nnetwork\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.vnetName")]

      public string VnetName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.vnetName")>

      Public Property VnetName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.vnetName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetResourceGroupName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetResourceGroupName
  id: VnetResourceGroupName
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: VnetResourceGroupName
  nameWithType: AppServiceEnvironment.VnetResourceGroupName
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetResourceGroupName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VnetResourceGroupName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nResource group of the hostingEnvironment's (App Service\nEnvironment) virtual network\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.vnetResourceGroupName")]

      public string VnetResourceGroupName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.vnetResourceGroupName")>

      Public Property VnetResourceGroupName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetResourceGroupName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.vnetResourceGroupName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetSubnetName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetSubnetName
  id: VnetSubnetName
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: VnetSubnetName
  nameWithType: AppServiceEnvironment.VnetSubnetName
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetSubnetName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VnetSubnetName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSubnet of the hostingEnvironment's (App Service Environment)\nvirtual network\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.vnetSubnetName")]

      public string VnetSubnetName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.vnetSubnetName")>

      Public Property VnetSubnetName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetSubnetName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.vnetSubnetName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VirtualNetwork
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VirtualNetwork
  id: VirtualNetwork
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: VirtualNetwork
  nameWithType: AppServiceEnvironment.VirtualNetwork
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VirtualNetwork
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualNetwork
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 125
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDescription of the hostingEnvironment's (App Service Environment)\nvirtual network\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.virtualNetwork")]

      public VirtualNetworkProfile VirtualNetwork { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.virtualNetwork")>

      Public Property VirtualNetwork As VirtualNetworkProfile
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VirtualNetwork*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.virtualNetwork
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.InternalLoadBalancingMode
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.InternalLoadBalancingMode
  id: InternalLoadBalancingMode
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: InternalLoadBalancingMode
  nameWithType: AppServiceEnvironment.InternalLoadBalancingMode
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.InternalLoadBalancingMode
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InternalLoadBalancingMode
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSpecifies which endpoints to serve internally in the\nhostingEnvironment's (App Service Environment) VNET. Possible\nvalues include: 'None', 'Web', 'Publishing'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.internalLoadBalancingMode")]

      public InternalLoadBalancingMode? InternalLoadBalancingMode { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.internalLoadBalancingMode")>

      Public Property InternalLoadBalancingMode As InternalLoadBalancingMode?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.InternalLoadBalancingMode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.internalLoadBalancingMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiSize
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiSize
  id: MultiSize
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: MultiSize
  nameWithType: AppServiceEnvironment.MultiSize
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiSize
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MultiSize
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 139
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nFront-end VM size, e.g. \"Medium\", \"Large\"\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.multiSize")]

      public string MultiSize { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.multiSize")>

      Public Property MultiSize As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiSize*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.multiSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiRoleCount
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiRoleCount
  id: MultiRoleCount
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: MultiRoleCount
  nameWithType: AppServiceEnvironment.MultiRoleCount
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiRoleCount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MultiRoleCount
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 145
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nNumber of front-end instances\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.multiRoleCount")]

      public int ? MultiRoleCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.multiRoleCount")>

      Public Property MultiRoleCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiRoleCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.multiRoleCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.WorkerPools
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.WorkerPools
  id: WorkerPools
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: WorkerPools
  nameWithType: AppServiceEnvironment.WorkerPools
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.WorkerPools
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WorkerPools
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 152
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDescription of worker pools with worker size ids, VM sizes, and\nnumber of workers in each pool\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.workerPools")]

      public IList<WorkerPool> WorkerPools { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.workerPools")>

      Public Property WorkerPools As IList(Of WorkerPool)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.WorkerPool}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.WorkerPools*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.workerPools
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.IpsslAddressCount
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.IpsslAddressCount
  id: IpsslAddressCount
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: IpsslAddressCount
  nameWithType: AppServiceEnvironment.IpsslAddressCount
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.IpsslAddressCount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IpsslAddressCount
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 159
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nNumber of IP SSL addresses reserved for this hostingEnvironment\n(App Service Environment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.ipsslAddressCount")]

      public int ? IpsslAddressCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.ipsslAddressCount")>

      Public Property IpsslAddressCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.IpsslAddressCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.ipsslAddressCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseEdition
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseEdition
  id: DatabaseEdition
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: DatabaseEdition
  nameWithType: AppServiceEnvironment.DatabaseEdition
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseEdition
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DatabaseEdition
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 166
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nEdition of the metadata database for the hostingEnvironment (App\nService Environment) e.g. \"Standard\"\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.databaseEdition")]

      public string DatabaseEdition { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.databaseEdition")>

      Public Property DatabaseEdition As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseEdition*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.databaseEdition
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseServiceObjective
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseServiceObjective
  id: DatabaseServiceObjective
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: DatabaseServiceObjective
  nameWithType: AppServiceEnvironment.DatabaseServiceObjective
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseServiceObjective
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DatabaseServiceObjective
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 173
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nService objective of the metadata database for the\nhostingEnvironment (App Service Environment) e.g. \"S0\"\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.databaseServiceObjective")]

      public string DatabaseServiceObjective { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.databaseServiceObjective")>

      Public Property DatabaseServiceObjective As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseServiceObjective*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.databaseServiceObjective
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.UpgradeDomains
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.UpgradeDomains
  id: UpgradeDomains
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: UpgradeDomains
  nameWithType: AppServiceEnvironment.UpgradeDomains
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.UpgradeDomains
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpgradeDomains
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 180
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nNumber of upgrade domains of this hostingEnvironment (App Service\nEnvironment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.upgradeDomains")]

      public int ? UpgradeDomains { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.upgradeDomains")>

      Public Property UpgradeDomains As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.UpgradeDomains*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.upgradeDomains
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.SubscriptionId
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.SubscriptionId
  id: SubscriptionId
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: AppServiceEnvironment.SubscriptionId
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.SubscriptionId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubscriptionId
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 186
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSubscription of the hostingEnvironment (App Service Environment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.subscriptionId")]

      public string SubscriptionId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.subscriptionId")>

      Public Property SubscriptionId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.SubscriptionId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.subscriptionId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DnsSuffix
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DnsSuffix
  id: DnsSuffix
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: DnsSuffix
  nameWithType: AppServiceEnvironment.DnsSuffix
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DnsSuffix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DnsSuffix
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 192
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDNS suffix of the hostingEnvironment (App Service Environment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.dnsSuffix")]

      public string DnsSuffix { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.dnsSuffix")>

      Public Property DnsSuffix As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DnsSuffix*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.dnsSuffix
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastAction
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastAction
  id: LastAction
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: LastAction
  nameWithType: AppServiceEnvironment.LastAction
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastAction
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastAction
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 199
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nLast deployment action on this hostingEnvironment (App Service\nEnvironment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.lastAction")]

      public string LastAction { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.lastAction")>

      Public Property LastAction As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastAction*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.lastAction
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastActionResult
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastActionResult
  id: LastActionResult
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: LastActionResult
  nameWithType: AppServiceEnvironment.LastActionResult
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastActionResult
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastActionResult
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 206
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nResult of the last deployment action on this hostingEnvironment\n(App Service Environment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.lastActionResult")]

      public string LastActionResult { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.lastActionResult")>

      Public Property LastActionResult As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastActionResult*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.lastActionResult
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedMultiSizes
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedMultiSizes
  id: AllowedMultiSizes
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: AllowedMultiSizes
  nameWithType: AppServiceEnvironment.AllowedMultiSizes
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedMultiSizes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowedMultiSizes
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 213
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nList of comma separated strings describing which VM sizes are\nallowed for front-ends\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.allowedMultiSizes")]

      public string AllowedMultiSizes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.allowedMultiSizes")>

      Public Property AllowedMultiSizes As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedMultiSizes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.allowedMultiSizes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedWorkerSizes
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedWorkerSizes
  id: AllowedWorkerSizes
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: AllowedWorkerSizes
  nameWithType: AppServiceEnvironment.AllowedWorkerSizes
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedWorkerSizes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowedWorkerSizes
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 220
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nList of comma separated strings describing which VM sizes are\nallowed for workers\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.allowedWorkerSizes")]

      public string AllowedWorkerSizes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.allowedWorkerSizes")>

      Public Property AllowedWorkerSizes As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedWorkerSizes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.allowedWorkerSizes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MaximumNumberOfMachines
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MaximumNumberOfMachines
  id: MaximumNumberOfMachines
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: MaximumNumberOfMachines
  nameWithType: AppServiceEnvironment.MaximumNumberOfMachines
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MaximumNumberOfMachines
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaximumNumberOfMachines
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 227
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nMaximum number of VMs in this hostingEnvironment (App Service\nEnvironment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.maximumNumberOfMachines")]

      public int ? MaximumNumberOfMachines { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.maximumNumberOfMachines")>

      Public Property MaximumNumberOfMachines As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MaximumNumberOfMachines*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.maximumNumberOfMachines
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VipMappings
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VipMappings
  id: VipMappings
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: VipMappings
  nameWithType: AppServiceEnvironment.VipMappings
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VipMappings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VipMappings
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 234
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDescription of IP SSL mapping for this hostingEnvironment (App\nService Environment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.vipMappings")]

      public IList<VirtualIPMapping> VipMappings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.vipMappings")>

      Public Property VipMappings As IList(Of VirtualIPMapping)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VipMappings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.vipMappings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentCapacities
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentCapacities
  id: EnvironmentCapacities
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: EnvironmentCapacities
  nameWithType: AppServiceEnvironment.EnvironmentCapacities
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentCapacities
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentCapacities
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 240
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nCurrent total, used, and available worker capacities\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.environmentCapacities")]

      public IList<StampCapacity> EnvironmentCapacities { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.environmentCapacities")>

      Public Property EnvironmentCapacities As IList(Of StampCapacity)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.StampCapacity}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentCapacities*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.environmentCapacities
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.NetworkAccessControlList
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.NetworkAccessControlList
  id: NetworkAccessControlList
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: NetworkAccessControlList
  nameWithType: AppServiceEnvironment.NetworkAccessControlList
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.NetworkAccessControlList
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NetworkAccessControlList
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 247
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nAccess control list for controlling traffic to the\nhostingEnvironment (App Service Environment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.networkAccessControlList")]

      public IList<NetworkAccessControlEntry> NetworkAccessControlList { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.networkAccessControlList")>

      Public Property NetworkAccessControlList As IList(Of NetworkAccessControlEntry)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.NetworkAccessControlList*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.networkAccessControlList
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentIsHealthy
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentIsHealthy
  id: EnvironmentIsHealthy
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: EnvironmentIsHealthy
  nameWithType: AppServiceEnvironment.EnvironmentIsHealthy
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentIsHealthy
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentIsHealthy
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 254
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTrue/false indicating whether the hostingEnvironment (App Service\nEnvironment) is healthy\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.environmentIsHealthy")]

      public bool ? EnvironmentIsHealthy { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.environmentIsHealthy")>

      Public Property EnvironmentIsHealthy As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentIsHealthy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.environmentIsHealthy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentStatus
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentStatus
  id: EnvironmentStatus
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: EnvironmentStatus
  nameWithType: AppServiceEnvironment.EnvironmentStatus
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentStatus
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 261
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDetailed message about with results of the last check of the\nhostingEnvironment (App Service Environment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.environmentStatus")]

      public string EnvironmentStatus { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.environmentStatus")>

      Public Property EnvironmentStatus As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentStatus*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.environmentStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ResourceGroup
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ResourceGroup
  id: ResourceGroup
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: ResourceGroup
  nameWithType: AppServiceEnvironment.ResourceGroup
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ResourceGroup
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceGroup
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 267
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nResource group of the hostingEnvironment (App Service Environment)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.resourceGroup")]

      public string ResourceGroup { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.resourceGroup")>

      Public Property ResourceGroup As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ResourceGroup*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.resourceGroup
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.FrontEndScaleFactor
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.FrontEndScaleFactor
  id: FrontEndScaleFactor
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: FrontEndScaleFactor
  nameWithType: AppServiceEnvironment.FrontEndScaleFactor
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.FrontEndScaleFactor
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontEndScaleFactor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 273
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nScale Factor for FrontEnds\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.frontEndScaleFactor")]

      public int ? FrontEndScaleFactor { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.frontEndScaleFactor")>

      Public Property FrontEndScaleFactor As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.FrontEndScaleFactor*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.frontEndScaleFactor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ApiManagementAccountId
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ApiManagementAccountId
  id: ApiManagementAccountId
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: ApiManagementAccountId
  nameWithType: AppServiceEnvironment.ApiManagementAccountId
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ApiManagementAccountId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApiManagementAccountId
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 278
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.apiManagementAccountId")]

      public string ApiManagementAccountId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.apiManagementAccountId")>

      Public Property ApiManagementAccountId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ApiManagementAccountId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.apiManagementAccountId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Suspended
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Suspended
  id: Suspended
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: Suspended
  nameWithType: AppServiceEnvironment.Suspended
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Suspended
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Suspended
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 287
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTrue/false indicating whether the hostingEnvironment is suspended.\nThe environment can be suspended e.g. when the management\nendpoint is no longer available\n(most likely because NSG blocked the incoming traffic)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.suspended")]

      public bool ? Suspended { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.suspended")>

      Public Property Suspended As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Suspended*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.suspended
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DynamicCacheEnabled
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DynamicCacheEnabled
  id: DynamicCacheEnabled
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: DynamicCacheEnabled
  nameWithType: AppServiceEnvironment.DynamicCacheEnabled
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DynamicCacheEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DynamicCacheEnabled
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 296
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTrue/false indicating whether the hostingEnvironment is suspended.\nThe environment can be suspended e.g. when the management\nendpoint is no longer available\n(most likely because NSG blocked the incoming traffic)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.dynamicCacheEnabled")]

      public bool ? DynamicCacheEnabled { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.dynamicCacheEnabled")>

      Public Property DynamicCacheEnabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DynamicCacheEnabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.dynamicCacheEnabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ClusterSettings
  commentId: P:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ClusterSettings
  id: ClusterSettings
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: ClusterSettings
  nameWithType: AppServiceEnvironment.ClusterSettings
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ClusterSettings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ClusterSettings
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 303
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nCustom settings for changing the behavior of the hosting\nenvironment\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.clusterSettings")]

      public IList<NameValuePair> ClusterSettings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.clusterSettings")>

      Public Property ClusterSettings As IList(Of NameValuePair)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NameValuePair}
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ClusterSettings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.clusterSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: AppServiceEnvironment.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/AppServiceEnvironment.cs
    startLine: 309
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  overload: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.WebSites.Models.Resource
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Resource
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Id
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Id
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Name
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Name
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Kind
  nameWithType: Resource.Kind
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Location
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Location
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Type
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Type
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.#ctor
  isExternal: false
  name: AppServiceEnvironment
  nameWithType: AppServiceEnvironment.AppServiceEnvironment
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironment
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.ProvisioningState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ProvisioningState>
  nameWithType: Nullable<ProvisioningState>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.ProvisioningState>
  nameWithType.vb: Nullable(Of ProvisioningState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.ProvisioningState)
  name.vb: Nullable(Of ProvisioningState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.ProvisioningState
    name: ProvisioningState
    nameWithType: ProvisioningState
    fullName: Microsoft.Azure.Management.WebSites.Models.ProvisioningState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.ProvisioningState
    name: ProvisioningState
    nameWithType: ProvisioningState
    fullName: Microsoft.Azure.Management.WebSites.Models.ProvisioningState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<HostingEnvironmentStatus>
  nameWithType: Nullable<HostingEnvironmentStatus>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus>
  nameWithType.vb: Nullable(Of HostingEnvironmentStatus)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus)
  name.vb: Nullable(Of HostingEnvironmentStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus
    name: HostingEnvironmentStatus
    nameWithType: HostingEnvironmentStatus
    fullName: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus
    name: HostingEnvironmentStatus
    nameWithType: HostingEnvironmentStatus
    fullName: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile
  commentId: T:Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: VirtualNetworkProfile
  nameWithType: VirtualNetworkProfile
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<InternalLoadBalancingMode>
  nameWithType: Nullable<InternalLoadBalancingMode>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode>
  nameWithType.vb: Nullable(Of InternalLoadBalancingMode)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode)
  name.vb: Nullable(Of InternalLoadBalancingMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode
    name: InternalLoadBalancingMode
    nameWithType: InternalLoadBalancingMode
    fullName: Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode
    name: InternalLoadBalancingMode
    nameWithType: InternalLoadBalancingMode
    fullName: Microsoft.Azure.Management.WebSites.Models.InternalLoadBalancingMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.WorkerPool}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.WorkerPool}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<WorkerPool>
  nameWithType: IList<WorkerPool>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.WorkerPool>
  nameWithType.vb: IList(Of WorkerPool)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.WorkerPool)
  name.vb: IList(Of WorkerPool)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.WorkerPool
    name: WorkerPool
    nameWithType: WorkerPool
    fullName: Microsoft.Azure.Management.WebSites.Models.WorkerPool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.WorkerPool
    name: WorkerPool
    nameWithType: WorkerPool
    fullName: Microsoft.Azure.Management.WebSites.Models.WorkerPool
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<VirtualIPMapping>
  nameWithType: IList<VirtualIPMapping>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping>
  nameWithType.vb: IList(Of VirtualIPMapping)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping)
  name.vb: IList(Of VirtualIPMapping)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping
    name: VirtualIPMapping
    nameWithType: VirtualIPMapping
    fullName: Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping
    name: VirtualIPMapping
    nameWithType: VirtualIPMapping
    fullName: Microsoft.Azure.Management.WebSites.Models.VirtualIPMapping
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.StampCapacity}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.StampCapacity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<StampCapacity>
  nameWithType: IList<StampCapacity>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.StampCapacity>
  nameWithType.vb: IList(Of StampCapacity)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.StampCapacity)
  name.vb: IList(Of StampCapacity)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.StampCapacity
    name: StampCapacity
    nameWithType: StampCapacity
    fullName: Microsoft.Azure.Management.WebSites.Models.StampCapacity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.StampCapacity
    name: StampCapacity
    nameWithType: StampCapacity
    fullName: Microsoft.Azure.Management.WebSites.Models.StampCapacity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<NetworkAccessControlEntry>
  nameWithType: IList<NetworkAccessControlEntry>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry>
  nameWithType.vb: IList(Of NetworkAccessControlEntry)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry)
  name.vb: IList(Of NetworkAccessControlEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry
    name: NetworkAccessControlEntry
    nameWithType: NetworkAccessControlEntry
    fullName: Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry
    name: NetworkAccessControlEntry
    nameWithType: NetworkAccessControlEntry
    fullName: Microsoft.Azure.Management.WebSites.Models.NetworkAccessControlEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NameValuePair}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.NameValuePair}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<NameValuePair>
  nameWithType: IList<NameValuePair>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.NameValuePair>
  nameWithType.vb: IList(Of NameValuePair)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.NameValuePair)
  name.vb: IList(Of NameValuePair)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.NameValuePair
    name: NameValuePair
    nameWithType: NameValuePair
    fullName: Microsoft.Azure.Management.WebSites.Models.NameValuePair
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.NameValuePair
    name: NameValuePair
    nameWithType: NameValuePair
    fullName: Microsoft.Azure.Management.WebSites.Models.NameValuePair
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentName
  isExternal: false
  name: AppServiceEnvironmentName
  nameWithType: AppServiceEnvironment.AppServiceEnvironmentName
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentName
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentLocation*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentLocation
  isExternal: false
  name: AppServiceEnvironmentLocation
  nameWithType: AppServiceEnvironment.AppServiceEnvironmentLocation
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AppServiceEnvironmentLocation
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: AppServiceEnvironment.ProvisioningState
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ProvisioningState
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Status*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Status
  isExternal: false
  name: Status
  nameWithType: AppServiceEnvironment.Status
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Status
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetName
  isExternal: false
  name: VnetName
  nameWithType: AppServiceEnvironment.VnetName
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetName
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetResourceGroupName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetResourceGroupName
  isExternal: false
  name: VnetResourceGroupName
  nameWithType: AppServiceEnvironment.VnetResourceGroupName
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetResourceGroupName
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetSubnetName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetSubnetName
  isExternal: false
  name: VnetSubnetName
  nameWithType: AppServiceEnvironment.VnetSubnetName
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VnetSubnetName
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VirtualNetwork*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VirtualNetwork
  isExternal: false
  name: VirtualNetwork
  nameWithType: AppServiceEnvironment.VirtualNetwork
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VirtualNetwork
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.InternalLoadBalancingMode*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.InternalLoadBalancingMode
  isExternal: false
  name: InternalLoadBalancingMode
  nameWithType: AppServiceEnvironment.InternalLoadBalancingMode
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.InternalLoadBalancingMode
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiSize*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiSize
  isExternal: false
  name: MultiSize
  nameWithType: AppServiceEnvironment.MultiSize
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiSize
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiRoleCount*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiRoleCount
  isExternal: false
  name: MultiRoleCount
  nameWithType: AppServiceEnvironment.MultiRoleCount
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MultiRoleCount
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.WorkerPools*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.WorkerPools
  isExternal: false
  name: WorkerPools
  nameWithType: AppServiceEnvironment.WorkerPools
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.WorkerPools
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.IpsslAddressCount*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.IpsslAddressCount
  isExternal: false
  name: IpsslAddressCount
  nameWithType: AppServiceEnvironment.IpsslAddressCount
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.IpsslAddressCount
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseEdition*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseEdition
  isExternal: false
  name: DatabaseEdition
  nameWithType: AppServiceEnvironment.DatabaseEdition
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseEdition
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseServiceObjective*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseServiceObjective
  isExternal: false
  name: DatabaseServiceObjective
  nameWithType: AppServiceEnvironment.DatabaseServiceObjective
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DatabaseServiceObjective
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.UpgradeDomains*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.UpgradeDomains
  isExternal: false
  name: UpgradeDomains
  nameWithType: AppServiceEnvironment.UpgradeDomains
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.UpgradeDomains
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.SubscriptionId*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.SubscriptionId
  isExternal: false
  name: SubscriptionId
  nameWithType: AppServiceEnvironment.SubscriptionId
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.SubscriptionId
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DnsSuffix*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DnsSuffix
  isExternal: false
  name: DnsSuffix
  nameWithType: AppServiceEnvironment.DnsSuffix
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DnsSuffix
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastAction*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastAction
  isExternal: false
  name: LastAction
  nameWithType: AppServiceEnvironment.LastAction
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastAction
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastActionResult*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastActionResult
  isExternal: false
  name: LastActionResult
  nameWithType: AppServiceEnvironment.LastActionResult
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.LastActionResult
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedMultiSizes*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedMultiSizes
  isExternal: false
  name: AllowedMultiSizes
  nameWithType: AppServiceEnvironment.AllowedMultiSizes
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedMultiSizes
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedWorkerSizes*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedWorkerSizes
  isExternal: false
  name: AllowedWorkerSizes
  nameWithType: AppServiceEnvironment.AllowedWorkerSizes
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.AllowedWorkerSizes
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MaximumNumberOfMachines*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MaximumNumberOfMachines
  isExternal: false
  name: MaximumNumberOfMachines
  nameWithType: AppServiceEnvironment.MaximumNumberOfMachines
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.MaximumNumberOfMachines
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VipMappings*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VipMappings
  isExternal: false
  name: VipMappings
  nameWithType: AppServiceEnvironment.VipMappings
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.VipMappings
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentCapacities*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentCapacities
  isExternal: false
  name: EnvironmentCapacities
  nameWithType: AppServiceEnvironment.EnvironmentCapacities
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentCapacities
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.NetworkAccessControlList*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.NetworkAccessControlList
  isExternal: false
  name: NetworkAccessControlList
  nameWithType: AppServiceEnvironment.NetworkAccessControlList
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.NetworkAccessControlList
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentIsHealthy*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentIsHealthy
  isExternal: false
  name: EnvironmentIsHealthy
  nameWithType: AppServiceEnvironment.EnvironmentIsHealthy
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentIsHealthy
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentStatus*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentStatus
  isExternal: false
  name: EnvironmentStatus
  nameWithType: AppServiceEnvironment.EnvironmentStatus
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.EnvironmentStatus
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ResourceGroup*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ResourceGroup
  isExternal: false
  name: ResourceGroup
  nameWithType: AppServiceEnvironment.ResourceGroup
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ResourceGroup
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.FrontEndScaleFactor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.FrontEndScaleFactor
  isExternal: false
  name: FrontEndScaleFactor
  nameWithType: AppServiceEnvironment.FrontEndScaleFactor
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.FrontEndScaleFactor
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ApiManagementAccountId*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ApiManagementAccountId
  isExternal: false
  name: ApiManagementAccountId
  nameWithType: AppServiceEnvironment.ApiManagementAccountId
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ApiManagementAccountId
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Suspended*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Suspended
  isExternal: false
  name: Suspended
  nameWithType: AppServiceEnvironment.Suspended
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Suspended
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DynamicCacheEnabled*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DynamicCacheEnabled
  isExternal: false
  name: DynamicCacheEnabled
  nameWithType: AppServiceEnvironment.DynamicCacheEnabled
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.DynamicCacheEnabled
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ClusterSettings*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ClusterSettings
  isExternal: false
  name: ClusterSettings
  nameWithType: AppServiceEnvironment.ClusterSettings
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.ClusterSettings
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Validate
  isExternal: false
  name: Validate
  nameWithType: AppServiceEnvironment.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.AppServiceEnvironment.Validate
