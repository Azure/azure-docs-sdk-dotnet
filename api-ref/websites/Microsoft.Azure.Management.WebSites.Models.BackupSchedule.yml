### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  commentId: T:Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  id: BackupSchedule
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor(Microsoft.Azure.Management.WebSites.Models.FrequencyUnit,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.Validate
  langs:
  - csharp
  - vb
  name: BackupSchedule
  nameWithType: BackupSchedule
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackupSchedule
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDescription of a backup schedule. Describes how often should be the\nbackup performed and what should be the retention policy.\n"
  example: []
  syntax:
    content: public class BackupSchedule
    content.vb: Public Class BackupSchedule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: BackupSchedule()
  nameWithType: BackupSchedule.BackupSchedule()
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.BackupSchedule()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the BackupSchedule class.\n"
  example: []
  syntax:
    content: public BackupSchedule()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor(Microsoft.Azure.Management.WebSites.Models.FrequencyUnit,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor(Microsoft.Azure.Management.WebSites.Models.FrequencyUnit,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(Microsoft.Azure.Management.WebSites.Models.FrequencyUnit,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: BackupSchedule(FrequencyUnit, Nullable<Int32>, Nullable<Boolean>, Nullable<Int32>, Nullable<DateTime>, Nullable<DateTime>)
  nameWithType: BackupSchedule.BackupSchedule(FrequencyUnit, Nullable<Int32>, Nullable<Boolean>, Nullable<Int32>, Nullable<DateTime>, Nullable<DateTime>)
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.BackupSchedule(Microsoft.Azure.Management.WebSites.Models.FrequencyUnit, System.Nullable<System.Int32>, System.Nullable<System.Boolean>, System.Nullable<System.Int32>, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the BackupSchedule class.\n"
  example: []
  syntax:
    content: public BackupSchedule(FrequencyUnit frequencyUnit, int ? frequencyInterval = null, bool ? keepAtLeastOneBackup = null, int ? retentionPeriodInDays = null, DateTime? startTime = null, DateTime? lastExecutionTime = null)
    content.vb: Public Sub New(frequencyUnit As FrequencyUnit, frequencyInterval As Integer? = Nothing, keepAtLeastOneBackup As Boolean? = Nothing, retentionPeriodInDays As Integer? = Nothing, startTime As Date? = Nothing, lastExecutionTime As Date? = Nothing)
    parameters:
    - id: frequencyUnit
      type: Microsoft.Azure.Management.WebSites.Models.FrequencyUnit
    - id: frequencyInterval
      type: System.Nullable{System.Int32}
    - id: keepAtLeastOneBackup
      type: System.Nullable{System.Boolean}
    - id: retentionPeriodInDays
      type: System.Nullable{System.Int32}
    - id: startTime
      type: System.Nullable{System.DateTime}
    - id: lastExecutionTime
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor*
  nameWithType.vb: BackupSchedule.BackupSchedule(FrequencyUnit, Nullable(Of Int32), Nullable(Of Boolean), Nullable(Of Int32), Nullable(Of DateTime), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.BackupSchedule(Microsoft.Azure.Management.WebSites.Models.FrequencyUnit, System.Nullable(Of System.Int32), System.Nullable(Of System.Boolean), System.Nullable(Of System.Int32), System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime))
  name.vb: BackupSchedule(FrequencyUnit, Nullable(Of Int32), Nullable(Of Boolean), Nullable(Of Int32), Nullable(Of DateTime), Nullable(Of DateTime))
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval
  id: FrequencyInterval
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: FrequencyInterval
  nameWithType: BackupSchedule.FrequencyInterval
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrequencyInterval
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nHow often should be the backup executed (e.g. for weekly backup,\nthis should be set to 7 and FrequencyUnit should be set to Day)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "frequencyInterval")]

      public int ? FrequencyInterval { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="frequencyInterval")>

      Public Property FrequencyInterval As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: frequencyInterval
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit
  id: FrequencyUnit
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: FrequencyUnit
  nameWithType: BackupSchedule.FrequencyUnit
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrequencyUnit
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nHow often should be the backup executed (e.g. for weekly backup,\nthis should be set to Day and FrequencyInterval should be set to\n7). Possible values include: 'Day', 'Hour'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "frequencyUnit")]

      public FrequencyUnit FrequencyUnit { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="frequencyUnit")>

      Public Property FrequencyUnit As FrequencyUnit
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.FrequencyUnit
  overload: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: frequencyUnit
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup
  id: KeepAtLeastOneBackup
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: KeepAtLeastOneBackup
  nameWithType: BackupSchedule.KeepAtLeastOneBackup
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeepAtLeastOneBackup
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTrue if the retention policy should always keep at least one\nbackup in the storage account, regardless how old it is; false\notherwise.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "keepAtLeastOneBackup")]

      public bool ? KeepAtLeastOneBackup { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="keepAtLeastOneBackup")>

      Public Property KeepAtLeastOneBackup As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: keepAtLeastOneBackup
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays
  id: RetentionPeriodInDays
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: RetentionPeriodInDays
  nameWithType: BackupSchedule.RetentionPeriodInDays
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RetentionPeriodInDays
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nAfter how many days backups should be deleted\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "retentionPeriodInDays")]

      public int ? RetentionPeriodInDays { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="retentionPeriodInDays")>

      Public Property RetentionPeriodInDays As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: retentionPeriodInDays
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime
  id: StartTime
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: BackupSchedule.StartTime
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nWhen the schedule should start working\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startTime")]

      public DateTime? StartTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startTime")>

      Public Property StartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime
  id: LastExecutionTime
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: LastExecutionTime
  nameWithType: BackupSchedule.LastExecutionTime
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastExecutionTime
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nThe last time when this schedule was triggered\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastExecutionTime")]

      public DateTime? LastExecutionTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="lastExecutionTime")>

      Public Property LastExecutionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastExecutionTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: BackupSchedule.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupSchedule.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor
  isExternal: false
  name: BackupSchedule
  nameWithType: BackupSchedule.BackupSchedule
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.BackupSchedule
- uid: Microsoft.Azure.Management.WebSites.Models.FrequencyUnit
  commentId: T:Microsoft.Azure.Management.WebSites.Models.FrequencyUnit
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: FrequencyUnit
  nameWithType: FrequencyUnit
  fullName: Microsoft.Azure.Management.WebSites.Models.FrequencyUnit
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval
  isExternal: false
  name: FrequencyInterval
  nameWithType: BackupSchedule.FrequencyInterval
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit
  isExternal: false
  name: FrequencyUnit
  nameWithType: BackupSchedule.FrequencyUnit
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup
  isExternal: false
  name: KeepAtLeastOneBackup
  nameWithType: BackupSchedule.KeepAtLeastOneBackup
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays
  isExternal: false
  name: RetentionPeriodInDays
  nameWithType: BackupSchedule.RetentionPeriodInDays
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime
  isExternal: false
  name: StartTime
  nameWithType: BackupSchedule.StartTime
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime
  isExternal: false
  name: LastExecutionTime
  nameWithType: BackupSchedule.LastExecutionTime
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.Validate
  isExternal: false
  name: Validate
  nameWithType: BackupSchedule.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.Validate
