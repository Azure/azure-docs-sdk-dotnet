### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.Address
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Address
  id: Address
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.Address.#ctor
  - Microsoft.Azure.Management.WebSites.Models.Address.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.WebSites.Models.Address.Address1
  - Microsoft.Azure.Management.WebSites.Models.Address.Address2
  - Microsoft.Azure.Management.WebSites.Models.Address.City
  - Microsoft.Azure.Management.WebSites.Models.Address.Country
  - Microsoft.Azure.Management.WebSites.Models.Address.PostalCode
  - Microsoft.Azure.Management.WebSites.Models.Address.State
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: Address
  fullName: Microsoft.Azure.Management.WebSites.Models.Address
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Address
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nAddress information for domain registration\n"
  example: []
  syntax:
    content: public class Address
    content.vb: Public Class Address
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.Address.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Address.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.Address
  langs:
  - csharp
  - vb
  name: Address()
  nameWithType: Address.Address()
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.Address()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the Address class.\n"
  example: []
  syntax:
    content: public Address()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.Address.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Address.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Address.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.Address
  langs:
  - csharp
  - vb
  name: Address(String, String, String, String, String, String)
  nameWithType: Address.Address(String, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.Address(System.String, System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the Address class.\n"
  example: []
  syntax:
    content: public Address(string address1 = null, string address2 = null, string city = null, string country = null, string postalCode = null, string state = null)
    content.vb: Public Sub New(address1 As String = Nothing, address2 As String = Nothing, city As String = Nothing, country As String = Nothing, postalCode As String = Nothing, state As String = Nothing)
    parameters:
    - id: address1
      type: System.String
    - id: address2
      type: System.String
    - id: city
      type: System.String
    - id: country
      type: System.String
    - id: postalCode
      type: System.String
    - id: state
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Address.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Address.Address1
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Address.Address1
  id: Address1
  parent: Microsoft.Azure.Management.WebSites.Models.Address
  langs:
  - csharp
  - vb
  name: Address1
  nameWithType: Address.Address1
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.Address1
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Address1
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nAddress 1\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "address1")]

      public string Address1 { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="address1")>

      Public Property Address1 As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Address.Address1*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: address1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Address.Address2
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Address.Address2
  id: Address2
  parent: Microsoft.Azure.Management.WebSites.Models.Address
  langs:
  - csharp
  - vb
  name: Address2
  nameWithType: Address.Address2
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.Address2
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Address2
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nAddress 2\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "address2")]

      public string Address2 { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="address2")>

      Public Property Address2 As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Address.Address2*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: address2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Address.City
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Address.City
  id: City
  parent: Microsoft.Azure.Management.WebSites.Models.Address
  langs:
  - csharp
  - vb
  name: City
  nameWithType: Address.City
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.City
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: City
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nCity\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "city")]

      public string City { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="city")>

      Public Property City As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Address.City*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: city
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Address.Country
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Address.Country
  id: Country
  parent: Microsoft.Azure.Management.WebSites.Models.Address
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: Address.Country
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.Country
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Country
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nCountry\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "country")]

      public string Country { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="country")>

      Public Property Country As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Address.Country*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: country
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Address.PostalCode
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Address.PostalCode
  id: PostalCode
  parent: Microsoft.Azure.Management.WebSites.Models.Address
  langs:
  - csharp
  - vb
  name: PostalCode
  nameWithType: Address.PostalCode
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.PostalCode
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PostalCode
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nPostal code\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "postalCode")]

      public string PostalCode { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="postalCode")>

      Public Property PostalCode As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Address.PostalCode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: postalCode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Address.State
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Address.State
  id: State
  parent: Microsoft.Azure.Management.WebSites.Models.Address
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Address.State
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.State
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Address.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nState\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "state")]

      public string State { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="state")>

      Public Property State As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Address.State*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: state
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.Address.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Address.#ctor
  isExternal: false
  name: Address
  nameWithType: Address.Address
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.Address
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.WebSites.Models.Address.Address1*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Address.Address1
  isExternal: false
  name: Address1
  nameWithType: Address.Address1
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.Address1
- uid: Microsoft.Azure.Management.WebSites.Models.Address.Address2*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Address.Address2
  isExternal: false
  name: Address2
  nameWithType: Address.Address2
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.Address2
- uid: Microsoft.Azure.Management.WebSites.Models.Address.City*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Address.City
  isExternal: false
  name: City
  nameWithType: Address.City
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.City
- uid: Microsoft.Azure.Management.WebSites.Models.Address.Country*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Address.Country
  isExternal: false
  name: Country
  nameWithType: Address.Country
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.Country
- uid: Microsoft.Azure.Management.WebSites.Models.Address.PostalCode*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Address.PostalCode
  isExternal: false
  name: PostalCode
  nameWithType: Address.PostalCode
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.PostalCode
- uid: Microsoft.Azure.Management.WebSites.Models.Address.State*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Address.State
  isExternal: false
  name: State
  nameWithType: Address.State
  fullName: Microsoft.Azure.Management.WebSites.Models.Address.State
