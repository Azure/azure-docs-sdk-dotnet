### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem
  commentId: T:Microsoft.Azure.Management.WebSites.Models.BackupItem
  id: BackupItem
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.#ctor
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupItemStatus},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int64})
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemId
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemName
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.BlobName
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.CorrelationId
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.Created
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.Databases
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.FinishedTimeStamp
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.LastRestoreTimeStamp
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.Log
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.Scheduled
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.SizeInBytes
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.Status
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.StorageAccountUrl
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.Validate
  - Microsoft.Azure.Management.WebSites.Models.BackupItem.WebsiteSizeInBytes
  langs:
  - csharp
  - vb
  name: BackupItem
  nameWithType: BackupItem
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackupItem
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nBackup description\n"
  example: []
  syntax:
    content: 'public class BackupItem : Resource, IResource'
    content.vb: >-
      Public Class BackupItem
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.WebSites.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.WebSites.Models.Resource.Id
  - Microsoft.Azure.Management.WebSites.Models.Resource.Name
  - Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  - Microsoft.Azure.Management.WebSites.Models.Resource.Location
  - Microsoft.Azure.Management.WebSites.Models.Resource.Type
  - Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.BackupItem.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: BackupItem()
  nameWithType: BackupItem.BackupItem()
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItem()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the BackupItem class.\n"
  example: []
  syntax:
    content: public BackupItem()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupItemStatus},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int64})
  commentId: M:Microsoft.Azure.Management.WebSites.Models.BackupItem.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupItemStatus},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int64})
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupItemStatus},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int64})'
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: BackupItem(String, String, String, String, String, IDictionary<String, String>, Nullable<Int32>, String, String, String, Nullable<BackupItemStatus>, Nullable<Int64>, Nullable<DateTime>, String, IList<DatabaseBackupSetting>, Nullable<Boolean>, Nullable<DateTime>, Nullable<DateTime>, String, Nullable<Int64>)
  nameWithType: BackupItem.BackupItem(String, String, String, String, String, IDictionary<String, String>, Nullable<Int32>, String, String, String, Nullable<BackupItemStatus>, Nullable<Int64>, Nullable<DateTime>, String, IList<DatabaseBackupSetting>, Nullable<Boolean>, Nullable<DateTime>, Nullable<DateTime>, String, Nullable<Int64>)
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItem(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.Nullable<System.Int32>, System.String, System.String, System.String, System.Nullable<Microsoft.Azure.Management.WebSites.Models.BackupItemStatus>, System.Nullable<System.Int64>, System.Nullable<System.DateTime>, System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting>, System.Nullable<System.Boolean>, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.String, System.Nullable<System.Int64>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the BackupItem class.\n"
  example: []
  syntax:
    content: public BackupItem(string name, string location, string id = null, string kind = null, string type = null, IDictionary<string, string> tags = null, int ? backupItemId = null, string storageAccountUrl = null, string blobName = null, string backupItemName = null, BackupItemStatus? status = null, long ? sizeInBytes = null, DateTime? created = null, string log = null, IList<DatabaseBackupSetting> databases = null, bool ? scheduled = null, DateTime? lastRestoreTimeStamp = null, DateTime? finishedTimeStamp = null, string correlationId = null, long ? websiteSizeInBytes = null)
    content.vb: Public Sub New(name As String, location As String, id As String = Nothing, kind As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, backupItemId As Integer? = Nothing, storageAccountUrl As String = Nothing, blobName As String = Nothing, backupItemName As String = Nothing, status As BackupItemStatus? = Nothing, sizeInBytes As Long? = Nothing, created As Date? = Nothing, log As String = Nothing, databases As IList(Of DatabaseBackupSetting) = Nothing, scheduled As Boolean? = Nothing, lastRestoreTimeStamp As Date? = Nothing, finishedTimeStamp As Date? = Nothing, correlationId As String = Nothing, websiteSizeInBytes As Long? = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: location
      type: System.String
    - id: id
      type: System.String
    - id: kind
      type: System.String
    - id: type
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: backupItemId
      type: System.Nullable{System.Int32}
    - id: storageAccountUrl
      type: System.String
    - id: blobName
      type: System.String
    - id: backupItemName
      type: System.String
    - id: status
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupItemStatus}
    - id: sizeInBytes
      type: System.Nullable{System.Int64}
    - id: created
      type: System.Nullable{System.DateTime}
    - id: log
      type: System.String
    - id: databases
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting}
    - id: scheduled
      type: System.Nullable{System.Boolean}
    - id: lastRestoreTimeStamp
      type: System.Nullable{System.DateTime}
    - id: finishedTimeStamp
      type: System.Nullable{System.DateTime}
    - id: correlationId
      type: System.String
    - id: websiteSizeInBytes
      type: System.Nullable{System.Int64}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.#ctor*
  nameWithType.vb: BackupItem.BackupItem(String, String, String, String, String, IDictionary(Of String, String), Nullable(Of Int32), String, String, String, Nullable(Of BackupItemStatus), Nullable(Of Int64), Nullable(Of DateTime), String, IList(Of DatabaseBackupSetting), Nullable(Of Boolean), Nullable(Of DateTime), Nullable(Of DateTime), String, Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItem(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Nullable(Of System.Int32), System.String, System.String, System.String, System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.BackupItemStatus), System.Nullable(Of System.Int64), System.Nullable(Of System.DateTime), System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting), System.Nullable(Of System.Boolean), System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.String, System.Nullable(Of System.Int64))
  name.vb: BackupItem(String, String, String, String, String, IDictionary(Of String, String), Nullable(Of Int32), String, String, String, Nullable(Of BackupItemStatus), Nullable(Of Int64), Nullable(Of DateTime), String, IList(Of DatabaseBackupSetting), Nullable(Of Boolean), Nullable(Of DateTime), Nullable(Of DateTime), String, Nullable(Of Int64))
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemId
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemId
  id: BackupItemId
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: BackupItemId
  nameWithType: BackupItem.BackupItemId
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackupItemId
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nId of the backup.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.id")]

      public int ? BackupItemId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.id")>

      Public Property BackupItemId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.StorageAccountUrl
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.StorageAccountUrl
  id: StorageAccountUrl
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: StorageAccountUrl
  nameWithType: BackupItem.StorageAccountUrl
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.StorageAccountUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageAccountUrl
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSAS URL for the storage account container which contains this\nbackup\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.storageAccountUrl")]

      public string StorageAccountUrl { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.storageAccountUrl")>

      Public Property StorageAccountUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.StorageAccountUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.storageAccountUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.BlobName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.BlobName
  id: BlobName
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: BlobName
  nameWithType: BackupItem.BlobName
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.BlobName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BlobName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName of the blob which contains data for this backup\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.blobName")]

      public string BlobName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.blobName")>

      Public Property BlobName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.BlobName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.blobName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemName
  id: BackupItemName
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: BackupItemName
  nameWithType: BackupItem.BackupItemName
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackupItemName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName of this backup\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.name")]

      public string BackupItemName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.name")>

      Public Property BackupItemName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Status
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.Status
  id: Status
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: BackupItem.Status
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Status
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nBackup status. Possible values include: 'InProgress', 'Failed',\n'Succeeded', 'TimedOut', 'Created', 'Skipped',\n'PartiallySucceeded', 'DeleteInProgress', 'DeleteFailed',\n'Deleted'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.status")]

      public BackupItemStatus? Status { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.status")>

      Public Property Status As BackupItemStatus?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupItemStatus}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.SizeInBytes
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.SizeInBytes
  id: SizeInBytes
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: SizeInBytes
  nameWithType: BackupItem.SizeInBytes
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.SizeInBytes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SizeInBytes
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSize of the backup in bytes\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.sizeInBytes")]

      public long ? SizeInBytes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.sizeInBytes")>

      Public Property SizeInBytes As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.SizeInBytes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.sizeInBytes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Created
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.Created
  id: Created
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: BackupItem.Created
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Created
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Created
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTimestamp of the backup creation\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.created")]

      public DateTime? Created { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.created")>

      Public Property Created As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.Created*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.created
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Log
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.Log
  id: Log
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: BackupItem.Log
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Log
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Log
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDetails regarding this backup. Might contain an error message.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.log")]

      public string Log { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.log")>

      Public Property Log As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.Log*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.log
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Databases
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.Databases
  id: Databases
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: Databases
  nameWithType: BackupItem.Databases
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Databases
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Databases
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nList of databases included in the backup\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.databases")]

      public IList<DatabaseBackupSetting> Databases { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.databases")>

      Public Property Databases As IList(Of DatabaseBackupSetting)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.Databases*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.databases
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Scheduled
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.Scheduled
  id: Scheduled
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: Scheduled
  nameWithType: BackupItem.Scheduled
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Scheduled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Scheduled
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTrue if this backup has been created due to a schedule being\ntriggered.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.scheduled")]

      public bool ? Scheduled { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.scheduled")>

      Public Property Scheduled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.Scheduled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.scheduled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.LastRestoreTimeStamp
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.LastRestoreTimeStamp
  id: LastRestoreTimeStamp
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: LastRestoreTimeStamp
  nameWithType: BackupItem.LastRestoreTimeStamp
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.LastRestoreTimeStamp
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastRestoreTimeStamp
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTimestamp of a last restore operation which used this backup.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.lastRestoreTimeStamp")]

      public DateTime? LastRestoreTimeStamp { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.lastRestoreTimeStamp")>

      Public Property LastRestoreTimeStamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.LastRestoreTimeStamp*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.lastRestoreTimeStamp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.FinishedTimeStamp
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.FinishedTimeStamp
  id: FinishedTimeStamp
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: FinishedTimeStamp
  nameWithType: BackupItem.FinishedTimeStamp
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.FinishedTimeStamp
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FinishedTimeStamp
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 125
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTimestamp when this backup finished.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.finishedTimeStamp")]

      public DateTime? FinishedTimeStamp { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.finishedTimeStamp")>

      Public Property FinishedTimeStamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.FinishedTimeStamp*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.finishedTimeStamp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.CorrelationId
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.CorrelationId
  id: CorrelationId
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: BackupItem.CorrelationId
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.CorrelationId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CorrelationId
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nUnique correlation identifier. Please use this along with the\ntimestamp while communicating with Azure support.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.correlationId")]

      public string CorrelationId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.correlationId")>

      Public Property CorrelationId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.CorrelationId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.correlationId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.WebsiteSizeInBytes
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupItem.WebsiteSizeInBytes
  id: WebsiteSizeInBytes
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: WebsiteSizeInBytes
  nameWithType: BackupItem.WebsiteSizeInBytes
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.WebsiteSizeInBytes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WebsiteSizeInBytes
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSize of the original web app which has been backed up\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.websiteSizeInBytes")]

      public long ? WebsiteSizeInBytes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.websiteSizeInBytes")>

      Public Property WebsiteSizeInBytes As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.WebsiteSizeInBytes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.websiteSizeInBytes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.BackupItem.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.BackupItem
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: BackupItem.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/BackupItem.cs
    startLine: 144
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  overload: Microsoft.Azure.Management.WebSites.Models.BackupItem.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.WebSites.Models.Resource
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Resource
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Id
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Id
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Name
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Name
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Kind
  nameWithType: Resource.Kind
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Location
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Location
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Type
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Type
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.#ctor
  isExternal: false
  name: BackupItem
  nameWithType: BackupItem.BackupItem
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItem
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupItemStatus}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupItemStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<BackupItemStatus>
  nameWithType: Nullable<BackupItemStatus>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.BackupItemStatus>
  nameWithType.vb: Nullable(Of BackupItemStatus)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.BackupItemStatus)
  name.vb: Nullable(Of BackupItemStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.BackupItemStatus
    name: BackupItemStatus
    nameWithType: BackupItemStatus
    fullName: Microsoft.Azure.Management.WebSites.Models.BackupItemStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.BackupItemStatus
    name: BackupItemStatus
    nameWithType: BackupItemStatus
    fullName: Microsoft.Azure.Management.WebSites.Models.BackupItemStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<DatabaseBackupSetting>
  nameWithType: IList<DatabaseBackupSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting>
  nameWithType.vb: IList(Of DatabaseBackupSetting)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting)
  name.vb: IList(Of DatabaseBackupSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting
    name: DatabaseBackupSetting
    nameWithType: DatabaseBackupSetting
    fullName: Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting
    name: DatabaseBackupSetting
    nameWithType: DatabaseBackupSetting
    fullName: Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemId*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemId
  isExternal: false
  name: BackupItemId
  nameWithType: BackupItem.BackupItemId
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemId
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.StorageAccountUrl*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.StorageAccountUrl
  isExternal: false
  name: StorageAccountUrl
  nameWithType: BackupItem.StorageAccountUrl
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.StorageAccountUrl
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.BlobName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.BlobName
  isExternal: false
  name: BlobName
  nameWithType: BackupItem.BlobName
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.BlobName
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemName
  isExternal: false
  name: BackupItemName
  nameWithType: BackupItem.BackupItemName
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.BackupItemName
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Status*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.Status
  isExternal: false
  name: Status
  nameWithType: BackupItem.Status
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Status
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.SizeInBytes*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.SizeInBytes
  isExternal: false
  name: SizeInBytes
  nameWithType: BackupItem.SizeInBytes
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.SizeInBytes
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Created*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.Created
  isExternal: false
  name: Created
  nameWithType: BackupItem.Created
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Created
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Log*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.Log
  isExternal: false
  name: Log
  nameWithType: BackupItem.Log
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Log
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Databases*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.Databases
  isExternal: false
  name: Databases
  nameWithType: BackupItem.Databases
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Databases
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Scheduled*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.Scheduled
  isExternal: false
  name: Scheduled
  nameWithType: BackupItem.Scheduled
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Scheduled
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.LastRestoreTimeStamp*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.LastRestoreTimeStamp
  isExternal: false
  name: LastRestoreTimeStamp
  nameWithType: BackupItem.LastRestoreTimeStamp
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.LastRestoreTimeStamp
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.FinishedTimeStamp*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.FinishedTimeStamp
  isExternal: false
  name: FinishedTimeStamp
  nameWithType: BackupItem.FinishedTimeStamp
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.FinishedTimeStamp
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.CorrelationId*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.CorrelationId
  isExternal: false
  name: CorrelationId
  nameWithType: BackupItem.CorrelationId
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.CorrelationId
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.WebsiteSizeInBytes*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.WebsiteSizeInBytes
  isExternal: false
  name: WebsiteSizeInBytes
  nameWithType: BackupItem.WebsiteSizeInBytes
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.WebsiteSizeInBytes
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.BackupItem.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.BackupItem.Validate
  isExternal: false
  name: Validate
  nameWithType: BackupItem.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupItem.Validate
