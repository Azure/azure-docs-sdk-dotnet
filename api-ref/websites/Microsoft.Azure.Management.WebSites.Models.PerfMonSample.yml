### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.PerfMonSample
  commentId: T:Microsoft.Azure.Management.WebSites.Models.PerfMonSample
  id: PerfMonSample
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.PerfMonSample.#ctor
  - Microsoft.Azure.Management.WebSites.Models.PerfMonSample.#ctor(System.Nullable{System.DateTime},System.String,System.Nullable{System.Double})
  - Microsoft.Azure.Management.WebSites.Models.PerfMonSample.InstanceName
  - Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Time
  - Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Value
  langs:
  - csharp
  - vb
  name: PerfMonSample
  nameWithType: PerfMonSample
  fullName: Microsoft.Azure.Management.WebSites.Models.PerfMonSample
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PerfMonSample
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nClass representing a Perf Mon Sample\n"
  example: []
  syntax:
    content: public class PerfMonSample
    content.vb: Public Class PerfMonSample
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.PerfMonSample.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.PerfMonSample
  langs:
  - csharp
  - vb
  name: PerfMonSample()
  nameWithType: PerfMonSample.PerfMonSample()
  fullName: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.PerfMonSample()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the PerfMonSample class.\n"
  example: []
  syntax:
    content: public PerfMonSample()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.#ctor(System.Nullable{System.DateTime},System.String,System.Nullable{System.Double})
  commentId: M:Microsoft.Azure.Management.WebSites.Models.PerfMonSample.#ctor(System.Nullable{System.DateTime},System.String,System.Nullable{System.Double})
  id: '#ctor(System.Nullable{System.DateTime},System.String,System.Nullable{System.Double})'
  parent: Microsoft.Azure.Management.WebSites.Models.PerfMonSample
  langs:
  - csharp
  - vb
  name: PerfMonSample(Nullable<DateTime>, String, Nullable<Double>)
  nameWithType: PerfMonSample.PerfMonSample(Nullable<DateTime>, String, Nullable<Double>)
  fullName: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.PerfMonSample(System.Nullable<System.DateTime>, System.String, System.Nullable<System.Double>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the PerfMonSample class.\n"
  example: []
  syntax:
    content: public PerfMonSample(DateTime? time = null, string instanceName = null, double ? value = null)
    content.vb: Public Sub New(time As Date? = Nothing, instanceName As String = Nothing, value As Double? = Nothing)
    parameters:
    - id: time
      type: System.Nullable{System.DateTime}
    - id: instanceName
      type: System.String
    - id: value
      type: System.Nullable{System.Double}
  overload: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.#ctor*
  nameWithType.vb: PerfMonSample.PerfMonSample(Nullable(Of DateTime), String, Nullable(Of Double))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.PerfMonSample(System.Nullable(Of System.DateTime), System.String, System.Nullable(Of System.Double))
  name.vb: PerfMonSample(Nullable(Of DateTime), String, Nullable(Of Double))
- uid: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Time
  commentId: P:Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Time
  id: Time
  parent: Microsoft.Azure.Management.WebSites.Models.PerfMonSample
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: PerfMonSample.Time
  fullName: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Time
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Time
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nPoint in time for which counter was measured\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "time")]

      public DateTime? Time { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="time")>

      Public Property Time As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Time*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: time
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.InstanceName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.PerfMonSample.InstanceName
  id: InstanceName
  parent: Microsoft.Azure.Management.WebSites.Models.PerfMonSample
  langs:
  - csharp
  - vb
  name: InstanceName
  nameWithType: PerfMonSample.InstanceName
  fullName: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.InstanceName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InstanceName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName of the server on which the measurement is made\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "instanceName")]

      public string InstanceName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="instanceName")>

      Public Property InstanceName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.InstanceName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: instanceName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Value
  commentId: P:Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Value
  id: Value
  parent: Microsoft.Azure.Management.WebSites.Models.PerfMonSample
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: PerfMonSample.Value
  fullName: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Value
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Value
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/PerfMonSample.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValue of Counter at certain time\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "value")]

      public double ? Value { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="value")>

      Public Property Value As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Value*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.PerfMonSample.#ctor
  isExternal: false
  name: PerfMonSample
  nameWithType: PerfMonSample.PerfMonSample
  fullName: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.PerfMonSample
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Time*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Time
  isExternal: false
  name: Time
  nameWithType: PerfMonSample.Time
  fullName: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Time
- uid: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.InstanceName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.PerfMonSample.InstanceName
  isExternal: false
  name: InstanceName
  nameWithType: PerfMonSample.InstanceName
  fullName: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.InstanceName
- uid: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Value*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Value
  isExternal: false
  name: Value
  nameWithType: PerfMonSample.Value
  fullName: Microsoft.Azure.Management.WebSites.Models.PerfMonSample.Value
