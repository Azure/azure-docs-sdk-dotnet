### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  commentId: T:Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  id: CertificateDetails
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.#ctor
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String)
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Issuer
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotAfter
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotBefore
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.RawData
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SerialNumber
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SignatureAlgorithm
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Subject
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Thumbprint
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Validate
  - Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Version
  langs:
  - csharp
  - vb
  name: CertificateDetails
  nameWithType: CertificateDetails
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateDetails
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nCertificate Details\n"
  example: []
  syntax:
    content: 'public class CertificateDetails : Resource, IResource'
    content.vb: >-
      Public Class CertificateDetails
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.WebSites.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.WebSites.Models.Resource.Id
  - Microsoft.Azure.Management.WebSites.Models.Resource.Name
  - Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  - Microsoft.Azure.Management.WebSites.Models.Resource.Location
  - Microsoft.Azure.Management.WebSites.Models.Resource.Type
  - Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: CertificateDetails()
  nameWithType: CertificateDetails.CertificateDetails()
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.CertificateDetails()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the CertificateDetails class.\n"
  example: []
  syntax:
    content: public CertificateDetails()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: CertificateDetails(String, String, String, String, String, IDictionary<String, String>, Nullable<Int32>, String, String, String, Nullable<DateTime>, Nullable<DateTime>, String, String, String)
  nameWithType: CertificateDetails.CertificateDetails(String, String, String, String, String, IDictionary<String, String>, Nullable<Int32>, String, String, String, Nullable<DateTime>, Nullable<DateTime>, String, String, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.CertificateDetails(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.Nullable<System.Int32>, System.String, System.String, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the CertificateDetails class.\n"
  example: []
  syntax:
    content: public CertificateDetails(string name, string location, string id = null, string kind = null, string type = null, IDictionary<string, string> tags = null, int ? version = null, string serialNumber = null, string thumbprint = null, string subject = null, DateTime? notBefore = null, DateTime? notAfter = null, string signatureAlgorithm = null, string issuer = null, string rawData = null)
    content.vb: Public Sub New(name As String, location As String, id As String = Nothing, kind As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, version As Integer? = Nothing, serialNumber As String = Nothing, thumbprint As String = Nothing, subject As String = Nothing, notBefore As Date? = Nothing, notAfter As Date? = Nothing, signatureAlgorithm As String = Nothing, issuer As String = Nothing, rawData As String = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: location
      type: System.String
    - id: id
      type: System.String
    - id: kind
      type: System.String
    - id: type
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: version
      type: System.Nullable{System.Int32}
    - id: serialNumber
      type: System.String
    - id: thumbprint
      type: System.String
    - id: subject
      type: System.String
    - id: notBefore
      type: System.Nullable{System.DateTime}
    - id: notAfter
      type: System.Nullable{System.DateTime}
    - id: signatureAlgorithm
      type: System.String
    - id: issuer
      type: System.String
    - id: rawData
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.#ctor*
  nameWithType.vb: CertificateDetails.CertificateDetails(String, String, String, String, String, IDictionary(Of String, String), Nullable(Of Int32), String, String, String, Nullable(Of DateTime), Nullable(Of DateTime), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.CertificateDetails(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Nullable(Of System.Int32), System.String, System.String, System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.String, System.String, System.String)
  name.vb: CertificateDetails(String, String, String, String, String, IDictionary(Of String, String), Nullable(Of Int32), String, String, String, Nullable(Of DateTime), Nullable(Of DateTime), String, String, String)
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Version
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Version
  id: Version
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: CertificateDetails.Version
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Version
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Version
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nVersion\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.version")]

      public int ? Version { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.version")>

      Public Property Version As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Version*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.version
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SerialNumber
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SerialNumber
  id: SerialNumber
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: SerialNumber
  nameWithType: CertificateDetails.SerialNumber
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SerialNumber
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SerialNumber
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSerial Number\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.serialNumber")]

      public string SerialNumber { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.serialNumber")>

      Public Property SerialNumber As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SerialNumber*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.serialNumber
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Thumbprint
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Thumbprint
  id: Thumbprint
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: Thumbprint
  nameWithType: CertificateDetails.Thumbprint
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Thumbprint
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Thumbprint
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nThumbprint\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.thumbprint")]

      public string Thumbprint { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.thumbprint")>

      Public Property Thumbprint As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Thumbprint*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.thumbprint
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Subject
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Subject
  id: Subject
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: Subject
  nameWithType: CertificateDetails.Subject
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Subject
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Subject
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSubject\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.subject")]

      public string Subject { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.subject")>

      Public Property Subject As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Subject*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.subject
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotBefore
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotBefore
  id: NotBefore
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: NotBefore
  nameWithType: CertificateDetails.NotBefore
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotBefore
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NotBefore
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValid from\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.notBefore")]

      public DateTime? NotBefore { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.notBefore")>

      Public Property NotBefore As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotBefore*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.notBefore
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotAfter
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotAfter
  id: NotAfter
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: NotAfter
  nameWithType: CertificateDetails.NotAfter
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotAfter
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NotAfter
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValid to\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.notAfter")]

      public DateTime? NotAfter { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.notAfter")>

      Public Property NotAfter As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotAfter*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.notAfter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SignatureAlgorithm
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: SignatureAlgorithm
  nameWithType: CertificateDetails.SignatureAlgorithm
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SignatureAlgorithm
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SignatureAlgorithm
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSignature Algorithm\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.signatureAlgorithm")]

      public string SignatureAlgorithm { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.signatureAlgorithm")>

      Public Property SignatureAlgorithm As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SignatureAlgorithm*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.signatureAlgorithm
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Issuer
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Issuer
  id: Issuer
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: Issuer
  nameWithType: CertificateDetails.Issuer
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Issuer
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Issuer
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nIssuer\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.issuer")]

      public string Issuer { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.issuer")>

      Public Property Issuer As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Issuer*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.issuer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.RawData
  commentId: P:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.RawData
  id: RawData
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: RawData
  nameWithType: CertificateDetails.RawData
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.RawData
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RawData
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRaw certificate data\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.rawData")]

      public string RawData { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.rawData")>

      Public Property RawData As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.RawData*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.rawData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.CertificateDetails
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CertificateDetails.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/CertificateDetails.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  overload: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.WebSites.Models.Resource
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Resource
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Id
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Id
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Name
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Name
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Kind
  nameWithType: Resource.Kind
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Location
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Location
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Type
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Type
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.#ctor
  isExternal: false
  name: CertificateDetails
  nameWithType: CertificateDetails.CertificateDetails
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.CertificateDetails
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Version*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Version
  isExternal: false
  name: Version
  nameWithType: CertificateDetails.Version
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Version
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SerialNumber*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SerialNumber
  isExternal: false
  name: SerialNumber
  nameWithType: CertificateDetails.SerialNumber
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SerialNumber
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Thumbprint*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Thumbprint
  isExternal: false
  name: Thumbprint
  nameWithType: CertificateDetails.Thumbprint
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Thumbprint
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Subject*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Subject
  isExternal: false
  name: Subject
  nameWithType: CertificateDetails.Subject
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Subject
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotBefore*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotBefore
  isExternal: false
  name: NotBefore
  nameWithType: CertificateDetails.NotBefore
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotBefore
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotAfter*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotAfter
  isExternal: false
  name: NotAfter
  nameWithType: CertificateDetails.NotAfter
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.NotAfter
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SignatureAlgorithm*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SignatureAlgorithm
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: CertificateDetails.SignatureAlgorithm
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.SignatureAlgorithm
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Issuer*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Issuer
  isExternal: false
  name: Issuer
  nameWithType: CertificateDetails.Issuer
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Issuer
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.RawData*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.RawData
  isExternal: false
  name: RawData
  nameWithType: CertificateDetails.RawData
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.RawData
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Validate
  isExternal: false
  name: Validate
  nameWithType: CertificateDetails.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateDetails.Validate
