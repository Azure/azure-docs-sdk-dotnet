### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig
  commentId: T:Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig
  id: HttpLogsConfig
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.#ctor
  - Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.#ctor(Microsoft.Azure.Management.WebSites.Models.FileSystemHttpLogsConfig,Microsoft.Azure.Management.WebSites.Models.AzureBlobStorageHttpLogsConfig)
  - Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.AzureBlobStorage
  - Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.FileSystem
  langs:
  - csharp
  - vb
  name: HttpLogsConfig
  nameWithType: HttpLogsConfig
  fullName: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HttpLogsConfig.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HttpLogsConfig
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HttpLogsConfig.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nHttp logs configuration\n"
  example: []
  syntax:
    content: public class HttpLogsConfig
    content.vb: Public Class HttpLogsConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig
  langs:
  - csharp
  - vb
  name: HttpLogsConfig()
  nameWithType: HttpLogsConfig.HttpLogsConfig()
  fullName: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.HttpLogsConfig()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HttpLogsConfig.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HttpLogsConfig.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the HttpLogsConfig class.\n"
  example: []
  syntax:
    content: public HttpLogsConfig()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.#ctor(Microsoft.Azure.Management.WebSites.Models.FileSystemHttpLogsConfig,Microsoft.Azure.Management.WebSites.Models.AzureBlobStorageHttpLogsConfig)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.#ctor(Microsoft.Azure.Management.WebSites.Models.FileSystemHttpLogsConfig,Microsoft.Azure.Management.WebSites.Models.AzureBlobStorageHttpLogsConfig)
  id: '#ctor(Microsoft.Azure.Management.WebSites.Models.FileSystemHttpLogsConfig,Microsoft.Azure.Management.WebSites.Models.AzureBlobStorageHttpLogsConfig)'
  parent: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig
  langs:
  - csharp
  - vb
  name: HttpLogsConfig(FileSystemHttpLogsConfig, AzureBlobStorageHttpLogsConfig)
  nameWithType: HttpLogsConfig.HttpLogsConfig(FileSystemHttpLogsConfig, AzureBlobStorageHttpLogsConfig)
  fullName: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.HttpLogsConfig(Microsoft.Azure.Management.WebSites.Models.FileSystemHttpLogsConfig, Microsoft.Azure.Management.WebSites.Models.AzureBlobStorageHttpLogsConfig)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HttpLogsConfig.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HttpLogsConfig.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the HttpLogsConfig class.\n"
  example: []
  syntax:
    content: public HttpLogsConfig(FileSystemHttpLogsConfig fileSystem = null, AzureBlobStorageHttpLogsConfig azureBlobStorage = null)
    content.vb: Public Sub New(fileSystem As FileSystemHttpLogsConfig = Nothing, azureBlobStorage As AzureBlobStorageHttpLogsConfig = Nothing)
    parameters:
    - id: fileSystem
      type: Microsoft.Azure.Management.WebSites.Models.FileSystemHttpLogsConfig
    - id: azureBlobStorage
      type: Microsoft.Azure.Management.WebSites.Models.AzureBlobStorageHttpLogsConfig
  overload: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.FileSystem
  commentId: P:Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.FileSystem
  id: FileSystem
  parent: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig
  langs:
  - csharp
  - vb
  name: FileSystem
  nameWithType: HttpLogsConfig.FileSystem
  fullName: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.FileSystem
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HttpLogsConfig.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FileSystem
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HttpLogsConfig.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nHttp logs to file system configuration\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "fileSystem")]

      public FileSystemHttpLogsConfig FileSystem { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="fileSystem")>

      Public Property FileSystem As FileSystemHttpLogsConfig
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.FileSystemHttpLogsConfig
  overload: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.FileSystem*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: fileSystem
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.AzureBlobStorage
  commentId: P:Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.AzureBlobStorage
  id: AzureBlobStorage
  parent: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig
  langs:
  - csharp
  - vb
  name: AzureBlobStorage
  nameWithType: HttpLogsConfig.AzureBlobStorage
  fullName: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.AzureBlobStorage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HttpLogsConfig.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AzureBlobStorage
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/HttpLogsConfig.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nHttp logs to azure blob storage configuration\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "azureBlobStorage")]

      public AzureBlobStorageHttpLogsConfig AzureBlobStorage { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="azureBlobStorage")>

      Public Property AzureBlobStorage As AzureBlobStorageHttpLogsConfig
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.AzureBlobStorageHttpLogsConfig
  overload: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.AzureBlobStorage*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: azureBlobStorage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.#ctor
  isExternal: false
  name: HttpLogsConfig
  nameWithType: HttpLogsConfig.HttpLogsConfig
  fullName: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.HttpLogsConfig
- uid: Microsoft.Azure.Management.WebSites.Models.FileSystemHttpLogsConfig
  commentId: T:Microsoft.Azure.Management.WebSites.Models.FileSystemHttpLogsConfig
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: FileSystemHttpLogsConfig
  nameWithType: FileSystemHttpLogsConfig
  fullName: Microsoft.Azure.Management.WebSites.Models.FileSystemHttpLogsConfig
- uid: Microsoft.Azure.Management.WebSites.Models.AzureBlobStorageHttpLogsConfig
  commentId: T:Microsoft.Azure.Management.WebSites.Models.AzureBlobStorageHttpLogsConfig
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: AzureBlobStorageHttpLogsConfig
  nameWithType: AzureBlobStorageHttpLogsConfig
  fullName: Microsoft.Azure.Management.WebSites.Models.AzureBlobStorageHttpLogsConfig
- uid: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.FileSystem*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.FileSystem
  isExternal: false
  name: FileSystem
  nameWithType: HttpLogsConfig.FileSystem
  fullName: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.FileSystem
- uid: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.AzureBlobStorage*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.AzureBlobStorage
  isExternal: false
  name: AzureBlobStorage
  nameWithType: HttpLogsConfig.AzureBlobStorage
  fullName: Microsoft.Azure.Management.WebSites.Models.HttpLogsConfig.AzureBlobStorage
