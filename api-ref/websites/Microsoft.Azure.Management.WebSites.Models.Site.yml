### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.Site
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Site
  id: Site
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.Site.#ctor
  - Microsoft.Azure.Management.WebSites.Models.Site.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IList{System.String},System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.UsageState},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.Nullable{Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostNameSslState},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},Microsoft.Azure.Management.WebSites.Models.SiteConfig,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Management.WebSites.Models.CloningInfo,System.String,System.Nullable{System.Boolean},System.String)
  - Microsoft.Azure.Management.WebSites.Models.Site.AvailabilityState
  - Microsoft.Azure.Management.WebSites.Models.Site.ClientAffinityEnabled
  - Microsoft.Azure.Management.WebSites.Models.Site.ClientCertEnabled
  - Microsoft.Azure.Management.WebSites.Models.Site.CloningInfo
  - Microsoft.Azure.Management.WebSites.Models.Site.ContainerSize
  - Microsoft.Azure.Management.WebSites.Models.Site.DailyMemoryTimeQuota
  - Microsoft.Azure.Management.WebSites.Models.Site.DefaultHostName
  - Microsoft.Azure.Management.WebSites.Models.Site.Enabled
  - Microsoft.Azure.Management.WebSites.Models.Site.EnabledHostNames
  - Microsoft.Azure.Management.WebSites.Models.Site.GatewaySiteName
  - Microsoft.Azure.Management.WebSites.Models.Site.HostingEnvironmentProfile
  - Microsoft.Azure.Management.WebSites.Models.Site.HostNames
  - Microsoft.Azure.Management.WebSites.Models.Site.HostNamesDisabled
  - Microsoft.Azure.Management.WebSites.Models.Site.HostNameSslStates
  - Microsoft.Azure.Management.WebSites.Models.Site.IsDefaultContainer
  - Microsoft.Azure.Management.WebSites.Models.Site.LastModifiedTimeUtc
  - Microsoft.Azure.Management.WebSites.Models.Site.MaxNumberOfWorkers
  - Microsoft.Azure.Management.WebSites.Models.Site.MicroService
  - Microsoft.Azure.Management.WebSites.Models.Site.OutboundIpAddresses
  - Microsoft.Azure.Management.WebSites.Models.Site.PremiumAppDeployed
  - Microsoft.Azure.Management.WebSites.Models.Site.RepositorySiteName
  - Microsoft.Azure.Management.WebSites.Models.Site.Reserved
  - Microsoft.Azure.Management.WebSites.Models.Site.ResourceGroup
  - Microsoft.Azure.Management.WebSites.Models.Site.ScmSiteAlsoStopped
  - Microsoft.Azure.Management.WebSites.Models.Site.ServerFarmId
  - Microsoft.Azure.Management.WebSites.Models.Site.SiteConfig
  - Microsoft.Azure.Management.WebSites.Models.Site.State
  - Microsoft.Azure.Management.WebSites.Models.Site.SuspendedTill
  - Microsoft.Azure.Management.WebSites.Models.Site.TargetSwapSlot
  - Microsoft.Azure.Management.WebSites.Models.Site.TrafficManagerHostNames
  - Microsoft.Azure.Management.WebSites.Models.Site.UsageState
  - Microsoft.Azure.Management.WebSites.Models.Site.Validate
  langs:
  - csharp
  - vb
  name: Site
  nameWithType: Site
  fullName: Microsoft.Azure.Management.WebSites.Models.Site
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Site
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRepresents a web app\n"
  example: []
  syntax:
    content: 'public class Site : Resource, IResource'
    content.vb: >-
      Public Class Site
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.WebSites.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.WebSites.Models.Resource.Id
  - Microsoft.Azure.Management.WebSites.Models.Resource.Name
  - Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  - Microsoft.Azure.Management.WebSites.Models.Resource.Location
  - Microsoft.Azure.Management.WebSites.Models.Resource.Type
  - Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.Site.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Site.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: Site()
  nameWithType: Site.Site()
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.Site()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the Site class.\n"
  example: []
  syntax:
    content: public Site()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.Site.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IList{System.String},System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.UsageState},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.Nullable{Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostNameSslState},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},Microsoft.Azure.Management.WebSites.Models.SiteConfig,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Management.WebSites.Models.CloningInfo,System.String,System.Nullable{System.Boolean},System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Site.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IList{System.String},System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.UsageState},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.Nullable{Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostNameSslState},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},Microsoft.Azure.Management.WebSites.Models.SiteConfig,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Management.WebSites.Models.CloningInfo,System.String,System.Nullable{System.Boolean},System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IList{System.String},System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.UsageState},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.Nullable{Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostNameSslState},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},Microsoft.Azure.Management.WebSites.Models.SiteConfig,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Management.WebSites.Models.CloningInfo,System.String,System.Nullable{System.Boolean},System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: Site(String, String, String, String, String, IDictionary<String, String>, String, IList<String>, String, Nullable<UsageState>, Nullable<Boolean>, IList<String>, Nullable<SiteAvailabilityState>, IList<HostNameSslState>, String, Nullable<Boolean>, Nullable<DateTime>, SiteConfig, IList<String>, Nullable<Boolean>, Nullable<Boolean>, String, HostingEnvironmentProfile, String, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, String, Nullable<Int32>, Nullable<Int32>, Nullable<DateTime>, Nullable<Int32>, CloningInfo, String, Nullable<Boolean>, String)
  nameWithType: Site.Site(String, String, String, String, String, IDictionary<String, String>, String, IList<String>, String, Nullable<UsageState>, Nullable<Boolean>, IList<String>, Nullable<SiteAvailabilityState>, IList<HostNameSslState>, String, Nullable<Boolean>, Nullable<DateTime>, SiteConfig, IList<String>, Nullable<Boolean>, Nullable<Boolean>, String, HostingEnvironmentProfile, String, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, String, Nullable<Int32>, Nullable<Int32>, Nullable<DateTime>, Nullable<Int32>, CloningInfo, String, Nullable<Boolean>, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.Site(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.String, System.Collections.Generic.IList<System.String>, System.String, System.Nullable<Microsoft.Azure.Management.WebSites.Models.UsageState>, System.Nullable<System.Boolean>, System.Collections.Generic.IList<System.String>, System.Nullable<Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState>, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.HostNameSslState>, System.String, System.Nullable<System.Boolean>, System.Nullable<System.DateTime>, Microsoft.Azure.Management.WebSites.Models.SiteConfig, System.Collections.Generic.IList<System.String>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.String, Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile, System.String, System.String, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.DateTime>, System.Nullable<System.Int32>, Microsoft.Azure.Management.WebSites.Models.CloningInfo, System.String, System.Nullable<System.Boolean>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the Site class.\n"
  example: []
  syntax:
    content: public Site(string name, string location, string id = null, string kind = null, string type = null, IDictionary<string, string> tags = null, string state = null, IList<string> hostNames = null, string repositorySiteName = null, UsageState? usageState = null, bool ? enabled = null, IList<string> enabledHostNames = null, SiteAvailabilityState? availabilityState = null, IList<HostNameSslState> hostNameSslStates = null, string serverFarmId = null, bool ? reserved = null, DateTime? lastModifiedTimeUtc = null, SiteConfig siteConfig = null, IList<string> trafficManagerHostNames = null, bool ? premiumAppDeployed = null, bool ? scmSiteAlsoStopped = null, string targetSwapSlot = null, HostingEnvironmentProfile hostingEnvironmentProfile = null, string microService = null, string gatewaySiteName = null, bool ? clientAffinityEnabled = null, bool ? clientCertEnabled = null, bool ? hostNamesDisabled = null, string outboundIpAddresses = null, int ? containerSize = null, int ? dailyMemoryTimeQuota = null, DateTime? suspendedTill = null, int ? maxNumberOfWorkers = null, CloningInfo cloningInfo = null, string resourceGroup = null, bool ? isDefaultContainer = null, string defaultHostName = null)
    content.vb: Public Sub New(name As String, location As String, id As String = Nothing, kind As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, state As String = Nothing, hostNames As IList(Of String) = Nothing, repositorySiteName As String = Nothing, usageState As UsageState? = Nothing, enabled As Boolean? = Nothing, enabledHostNames As IList(Of String) = Nothing, availabilityState As SiteAvailabilityState? = Nothing, hostNameSslStates As IList(Of HostNameSslState) = Nothing, serverFarmId As String = Nothing, reserved As Boolean? = Nothing, lastModifiedTimeUtc As Date? = Nothing, siteConfig As SiteConfig = Nothing, trafficManagerHostNames As IList(Of String) = Nothing, premiumAppDeployed As Boolean? = Nothing, scmSiteAlsoStopped As Boolean? = Nothing, targetSwapSlot As String = Nothing, hostingEnvironmentProfile As HostingEnvironmentProfile = Nothing, microService As String = Nothing, gatewaySiteName As String = Nothing, clientAffinityEnabled As Boolean? = Nothing, clientCertEnabled As Boolean? = Nothing, hostNamesDisabled As Boolean? = Nothing, outboundIpAddresses As String = Nothing, containerSize As Integer? = Nothing, dailyMemoryTimeQuota As Integer? = Nothing, suspendedTill As Date? = Nothing, maxNumberOfWorkers As Integer? = Nothing, cloningInfo As CloningInfo = Nothing, resourceGroup As String = Nothing, isDefaultContainer As Boolean? = Nothing, defaultHostName As String = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: location
      type: System.String
    - id: id
      type: System.String
    - id: kind
      type: System.String
    - id: type
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: state
      type: System.String
    - id: hostNames
      type: System.Collections.Generic.IList{System.String}
    - id: repositorySiteName
      type: System.String
    - id: usageState
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.UsageState}
    - id: enabled
      type: System.Nullable{System.Boolean}
    - id: enabledHostNames
      type: System.Collections.Generic.IList{System.String}
    - id: availabilityState
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState}
    - id: hostNameSslStates
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostNameSslState}
    - id: serverFarmId
      type: System.String
    - id: reserved
      type: System.Nullable{System.Boolean}
    - id: lastModifiedTimeUtc
      type: System.Nullable{System.DateTime}
    - id: siteConfig
      type: Microsoft.Azure.Management.WebSites.Models.SiteConfig
    - id: trafficManagerHostNames
      type: System.Collections.Generic.IList{System.String}
    - id: premiumAppDeployed
      type: System.Nullable{System.Boolean}
    - id: scmSiteAlsoStopped
      type: System.Nullable{System.Boolean}
    - id: targetSwapSlot
      type: System.String
    - id: hostingEnvironmentProfile
      type: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
    - id: microService
      type: System.String
    - id: gatewaySiteName
      type: System.String
    - id: clientAffinityEnabled
      type: System.Nullable{System.Boolean}
    - id: clientCertEnabled
      type: System.Nullable{System.Boolean}
    - id: hostNamesDisabled
      type: System.Nullable{System.Boolean}
    - id: outboundIpAddresses
      type: System.String
    - id: containerSize
      type: System.Nullable{System.Int32}
    - id: dailyMemoryTimeQuota
      type: System.Nullable{System.Int32}
    - id: suspendedTill
      type: System.Nullable{System.DateTime}
    - id: maxNumberOfWorkers
      type: System.Nullable{System.Int32}
    - id: cloningInfo
      type: Microsoft.Azure.Management.WebSites.Models.CloningInfo
    - id: resourceGroup
      type: System.String
    - id: isDefaultContainer
      type: System.Nullable{System.Boolean}
    - id: defaultHostName
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Site.#ctor*
  nameWithType.vb: Site.Site(String, String, String, String, String, IDictionary(Of String, String), String, IList(Of String), String, Nullable(Of UsageState), Nullable(Of Boolean), IList(Of String), Nullable(Of SiteAvailabilityState), IList(Of HostNameSslState), String, Nullable(Of Boolean), Nullable(Of DateTime), SiteConfig, IList(Of String), Nullable(Of Boolean), Nullable(Of Boolean), String, HostingEnvironmentProfile, String, String, Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of DateTime), Nullable(Of Int32), CloningInfo, String, Nullable(Of Boolean), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.Site.Site(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, System.Collections.Generic.IList(Of System.String), System.String, System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.UsageState), System.Nullable(Of System.Boolean), System.Collections.Generic.IList(Of System.String), System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState), System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.HostNameSslState), System.String, System.Nullable(Of System.Boolean), System.Nullable(Of System.DateTime), Microsoft.Azure.Management.WebSites.Models.SiteConfig, System.Collections.Generic.IList(Of System.String), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.String, Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile, System.String, System.String, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.DateTime), System.Nullable(Of System.Int32), Microsoft.Azure.Management.WebSites.Models.CloningInfo, System.String, System.Nullable(Of System.Boolean), System.String)
  name.vb: Site(String, String, String, String, String, IDictionary(Of String, String), String, IList(Of String), String, Nullable(Of UsageState), Nullable(Of Boolean), IList(Of String), Nullable(Of SiteAvailabilityState), IList(Of HostNameSslState), String, Nullable(Of Boolean), Nullable(Of DateTime), SiteConfig, IList(Of String), Nullable(Of Boolean), Nullable(Of Boolean), String, HostingEnvironmentProfile, String, String, Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of DateTime), Nullable(Of Int32), CloningInfo, String, Nullable(Of Boolean), String)
- uid: Microsoft.Azure.Management.WebSites.Models.Site.State
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.State
  id: State
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Site.State
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.State
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nState of the web app\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.state")]

      public string State { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.state")>

      Public Property State As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Site.State*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.state
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.HostNames
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.HostNames
  id: HostNames
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: HostNames
  nameWithType: Site.HostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.HostNames
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HostNames
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nHostnames associated with web app\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.hostNames")]

      public IList<string> HostNames { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.hostNames")>

      Public Property HostNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.HostNames*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.hostNames
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.RepositorySiteName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.RepositorySiteName
  id: RepositorySiteName
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: RepositorySiteName
  nameWithType: Site.RepositorySiteName
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.RepositorySiteName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RepositorySiteName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName of repository site\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.repositorySiteName")]

      public string RepositorySiteName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.repositorySiteName")>

      Public Property RepositorySiteName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Site.RepositorySiteName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.repositorySiteName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.UsageState
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.UsageState
  id: UsageState
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: UsageState
  nameWithType: Site.UsageState
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.UsageState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UsageState
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nState indicating whether web app has exceeded its quota usage.\nPossible values include: 'Normal', 'Exceeded'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.usageState")]

      public UsageState? UsageState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.usageState")>

      Public Property UsageState As UsageState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.UsageState}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.UsageState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.usageState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.Enabled
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.Enabled
  id: Enabled
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: Site.Enabled
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.Enabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Enabled
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTrue if the site is enabled; otherwise, false. Setting this  value\nto false disables the site (takes the site off line).\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.enabled")]

      public bool ? Enabled { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.enabled")>

      Public Property Enabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.Enabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.enabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.EnabledHostNames
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.EnabledHostNames
  id: EnabledHostNames
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: EnabledHostNames
  nameWithType: Site.EnabledHostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.EnabledHostNames
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnabledHostNames
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nHostnames for the web app that are enabled. Hostnames need to be\nassigned and enabled. If some hostnames are assigned but not\nenabled\nthe app is not served on those hostnames\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.enabledHostNames")]

      public IList<string> EnabledHostNames { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.enabledHostNames")>

      Public Property EnabledHostNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.EnabledHostNames*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.enabledHostNames
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.AvailabilityState
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.AvailabilityState
  id: AvailabilityState
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: AvailabilityState
  nameWithType: Site.AvailabilityState
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.AvailabilityState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AvailabilityState
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nManagement information availability state for the web app.\nPossible values are Normal or Limited.\nNormal means that the site is running correctly and\nthat management information for the site is available.\nLimited means that only partial management information\nfor the site is available and that detailed site information is\nunavailable. Possible values include: 'Normal', 'Limited',\n'DisasterRecoveryMode'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.availabilityState")]

      public SiteAvailabilityState? AvailabilityState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.availabilityState")>

      Public Property AvailabilityState As SiteAvailabilityState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.AvailabilityState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.availabilityState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.HostNameSslStates
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.HostNameSslStates
  id: HostNameSslStates
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: HostNameSslStates
  nameWithType: Site.HostNameSslStates
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.HostNameSslStates
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HostNameSslStates
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nHostname SSL states are  used to manage the SSL bindings for\nsite's hostnames.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.hostNameSslStates")]

      public IList<HostNameSslState> HostNameSslStates { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.hostNameSslStates")>

      Public Property HostNameSslStates As IList(Of HostNameSslState)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostNameSslState}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.HostNameSslStates*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.hostNameSslStates
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ServerFarmId
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.ServerFarmId
  id: ServerFarmId
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: ServerFarmId
  nameWithType: Site.ServerFarmId
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ServerFarmId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServerFarmId
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.serverFarmId")]

      public string ServerFarmId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.serverFarmId")>

      Public Property ServerFarmId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Site.ServerFarmId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.serverFarmId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.Reserved
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.Reserved
  id: Reserved
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: Reserved
  nameWithType: Site.Reserved
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.Reserved
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Reserved
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 137
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nReserved\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.reserved")]

      public bool ? Reserved { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.reserved")>

      Public Property Reserved As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.Reserved*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.reserved
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.LastModifiedTimeUtc
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.LastModifiedTimeUtc
  id: LastModifiedTimeUtc
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: LastModifiedTimeUtc
  nameWithType: Site.LastModifiedTimeUtc
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.LastModifiedTimeUtc
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastModifiedTimeUtc
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 143
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nLast time web app was modified in UTC\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.lastModifiedTimeUtc")]

      public DateTime? LastModifiedTimeUtc { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.lastModifiedTimeUtc")>

      Public Property LastModifiedTimeUtc As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.LastModifiedTimeUtc*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.lastModifiedTimeUtc
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.SiteConfig
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.SiteConfig
  id: SiteConfig
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: SiteConfig
  nameWithType: Site.SiteConfig
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.SiteConfig
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SiteConfig
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 149
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nConfiguration of web app\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.siteConfig")]

      public SiteConfig SiteConfig { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.siteConfig")>

      Public Property SiteConfig As SiteConfig
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.SiteConfig
  overload: Microsoft.Azure.Management.WebSites.Models.Site.SiteConfig*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.siteConfig
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.TrafficManagerHostNames
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.TrafficManagerHostNames
  id: TrafficManagerHostNames
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: TrafficManagerHostNames
  nameWithType: Site.TrafficManagerHostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.TrafficManagerHostNames
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TrafficManagerHostNames
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRead-only list of Azure Traffic manager hostnames associated with\nweb app\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.trafficManagerHostNames")]

      public IList<string> TrafficManagerHostNames { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.trafficManagerHostNames")>

      Public Property TrafficManagerHostNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.TrafficManagerHostNames*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.trafficManagerHostNames
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.PremiumAppDeployed
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.PremiumAppDeployed
  id: PremiumAppDeployed
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: PremiumAppDeployed
  nameWithType: Site.PremiumAppDeployed
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.PremiumAppDeployed
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PremiumAppDeployed
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 162
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nIf set indicates whether web app is deployed as a premium app\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.premiumAppDeployed")]

      public bool ? PremiumAppDeployed { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.premiumAppDeployed")>

      Public Property PremiumAppDeployed As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.PremiumAppDeployed*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.premiumAppDeployed
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ScmSiteAlsoStopped
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.ScmSiteAlsoStopped
  id: ScmSiteAlsoStopped
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: ScmSiteAlsoStopped
  nameWithType: Site.ScmSiteAlsoStopped
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ScmSiteAlsoStopped
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ScmSiteAlsoStopped
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nIf set indicates whether to stop SCM (KUDU) site when the web app\nis stopped. Default is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.scmSiteAlsoStopped")]

      public bool ? ScmSiteAlsoStopped { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.scmSiteAlsoStopped")>

      Public Property ScmSiteAlsoStopped As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.ScmSiteAlsoStopped*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.scmSiteAlsoStopped
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.TargetSwapSlot
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.TargetSwapSlot
  id: TargetSwapSlot
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: TargetSwapSlot
  nameWithType: Site.TargetSwapSlot
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.TargetSwapSlot
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TargetSwapSlot
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 176
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRead-only property that specifies which slot this app will swap\ninto\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.targetSwapSlot")]

      public string TargetSwapSlot { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.targetSwapSlot")>

      Public Property TargetSwapSlot As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Site.TargetSwapSlot*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.targetSwapSlot
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.HostingEnvironmentProfile
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.HostingEnvironmentProfile
  id: HostingEnvironmentProfile
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: HostingEnvironmentProfile
  nameWithType: Site.HostingEnvironmentProfile
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.HostingEnvironmentProfile
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HostingEnvironmentProfile
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 183
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSpecification for the hosting environment (App Service\nEnvironment) to use for the web app\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.hostingEnvironmentProfile")]

      public HostingEnvironmentProfile HostingEnvironmentProfile { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.hostingEnvironmentProfile")>

      Public Property HostingEnvironmentProfile As HostingEnvironmentProfile
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
  overload: Microsoft.Azure.Management.WebSites.Models.Site.HostingEnvironmentProfile*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.hostingEnvironmentProfile
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.MicroService
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.MicroService
  id: MicroService
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: MicroService
  nameWithType: Site.MicroService
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.MicroService
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MicroService
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 189
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nMicro services like WebSites, Logic Apps\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.microService")]

      public string MicroService { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.microService")>

      Public Property MicroService As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Site.MicroService*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.microService
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.GatewaySiteName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.GatewaySiteName
  id: GatewaySiteName
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: GatewaySiteName
  nameWithType: Site.GatewaySiteName
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.GatewaySiteName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GatewaySiteName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 195
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName of gateway app associated with web app\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.gatewaySiteName")]

      public string GatewaySiteName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.gatewaySiteName")>

      Public Property GatewaySiteName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Site.GatewaySiteName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.gatewaySiteName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ClientAffinityEnabled
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.ClientAffinityEnabled
  id: ClientAffinityEnabled
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: ClientAffinityEnabled
  nameWithType: Site.ClientAffinityEnabled
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ClientAffinityEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ClientAffinityEnabled
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 202
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSpecifies if the client affinity is enabled when load balancing\nhttp request for multiple instances of the web app\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.clientAffinityEnabled")]

      public bool ? ClientAffinityEnabled { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.clientAffinityEnabled")>

      Public Property ClientAffinityEnabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.ClientAffinityEnabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.clientAffinityEnabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ClientCertEnabled
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.ClientCertEnabled
  id: ClientCertEnabled
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: ClientCertEnabled
  nameWithType: Site.ClientCertEnabled
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ClientCertEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ClientCertEnabled
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 208
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSpecifies if the client certificate is enabled for the web app\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.clientCertEnabled")]

      public bool ? ClientCertEnabled { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.clientCertEnabled")>

      Public Property ClientCertEnabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.ClientCertEnabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.clientCertEnabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.HostNamesDisabled
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.HostNamesDisabled
  id: HostNamesDisabled
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: HostNamesDisabled
  nameWithType: Site.HostNamesDisabled
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.HostNamesDisabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HostNamesDisabled
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 216
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSpecifies if the public hostnames are disabled the web app.\nIf set to true the app is only accessible via API\nManagement process\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.hostNamesDisabled")]

      public bool ? HostNamesDisabled { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.hostNamesDisabled")>

      Public Property HostNamesDisabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.HostNamesDisabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.hostNamesDisabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.OutboundIpAddresses
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.OutboundIpAddresses
  id: OutboundIpAddresses
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: OutboundIpAddresses
  nameWithType: Site.OutboundIpAddresses
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.OutboundIpAddresses
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OutboundIpAddresses
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 224
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nList of comma separated IP addresses that this web app uses for\noutbound connections. Those can be used when configuring firewall\nrules for databases accessed by this web app.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.outboundIpAddresses")]

      public string OutboundIpAddresses { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.outboundIpAddresses")>

      Public Property OutboundIpAddresses As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Site.OutboundIpAddresses*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.outboundIpAddresses
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ContainerSize
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.ContainerSize
  id: ContainerSize
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: ContainerSize
  nameWithType: Site.ContainerSize
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ContainerSize
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContainerSize
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 230
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSize of a function container\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.containerSize")]

      public int ? ContainerSize { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.containerSize")>

      Public Property ContainerSize As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.ContainerSize*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.containerSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.DailyMemoryTimeQuota
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.DailyMemoryTimeQuota
  id: DailyMemoryTimeQuota
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: DailyMemoryTimeQuota
  nameWithType: Site.DailyMemoryTimeQuota
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.DailyMemoryTimeQuota
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DailyMemoryTimeQuota
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 237
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nMaximum allowed daily memory-time quota (applicable on dynamic\nsites only)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.dailyMemoryTimeQuota")]

      public int ? DailyMemoryTimeQuota { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.dailyMemoryTimeQuota")>

      Public Property DailyMemoryTimeQuota As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.DailyMemoryTimeQuota*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.dailyMemoryTimeQuota
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.SuspendedTill
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.SuspendedTill
  id: SuspendedTill
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: SuspendedTill
  nameWithType: Site.SuspendedTill
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.SuspendedTill
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SuspendedTill
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 243
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSite suspended till in case memory-time quota is exceeded\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.suspendedTill")]

      public DateTime? SuspendedTill { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.suspendedTill")>

      Public Property SuspendedTill As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.SuspendedTill*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.suspendedTill
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.MaxNumberOfWorkers
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.MaxNumberOfWorkers
  id: MaxNumberOfWorkers
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: MaxNumberOfWorkers
  nameWithType: Site.MaxNumberOfWorkers
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.MaxNumberOfWorkers
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxNumberOfWorkers
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 250
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nMaximum number of workers\nThis only applies to function container\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.maxNumberOfWorkers")]

      public int ? MaxNumberOfWorkers { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.maxNumberOfWorkers")>

      Public Property MaxNumberOfWorkers As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.MaxNumberOfWorkers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.maxNumberOfWorkers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.CloningInfo
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.CloningInfo
  id: CloningInfo
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: CloningInfo
  nameWithType: Site.CloningInfo
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.CloningInfo
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloningInfo
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 258
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nThis is only valid for web app creation. If specified, web app is\ncloned from\na source web app\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.cloningInfo")]

      public CloningInfo CloningInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.cloningInfo")>

      Public Property CloningInfo As CloningInfo
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.CloningInfo
  overload: Microsoft.Azure.Management.WebSites.Models.Site.CloningInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.cloningInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ResourceGroup
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.ResourceGroup
  id: ResourceGroup
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: ResourceGroup
  nameWithType: Site.ResourceGroup
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ResourceGroup
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceGroup
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 264
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nResource group web app belongs to\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.resourceGroup")]

      public string ResourceGroup { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.resourceGroup")>

      Public Property ResourceGroup As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Site.ResourceGroup*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.resourceGroup
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.IsDefaultContainer
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.IsDefaultContainer
  id: IsDefaultContainer
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: IsDefaultContainer
  nameWithType: Site.IsDefaultContainer
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.IsDefaultContainer
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsDefaultContainer
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 270
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSite is a default container\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.isDefaultContainer")]

      public bool ? IsDefaultContainer { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.isDefaultContainer")>

      Public Property IsDefaultContainer As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.Site.IsDefaultContainer*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.isDefaultContainer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.DefaultHostName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Site.DefaultHostName
  id: DefaultHostName
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: DefaultHostName
  nameWithType: Site.DefaultHostName
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.DefaultHostName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultHostName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 276
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDefault hostname of the web app\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.defaultHostName")]

      public string DefaultHostName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.defaultHostName")>

      Public Property DefaultHostName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.Site.DefaultHostName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.defaultHostName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Site.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Site.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Site
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Site.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/Site.cs
    startLine: 282
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  overload: Microsoft.Azure.Management.WebSites.Models.Site.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.WebSites.Models.Resource
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Resource
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Id
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Id
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Name
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Name
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Kind
  nameWithType: Resource.Kind
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Location
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Location
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Type
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Type
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.WebSites.Models.Site.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.#ctor
  isExternal: false
  name: Site
  nameWithType: Site.Site
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.Site
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.UsageState}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.UsageState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UsageState>
  nameWithType: Nullable<UsageState>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.UsageState>
  nameWithType.vb: Nullable(Of UsageState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.UsageState)
  name.vb: Nullable(Of UsageState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.UsageState
    name: UsageState
    nameWithType: UsageState
    fullName: Microsoft.Azure.Management.WebSites.Models.UsageState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.UsageState
    name: UsageState
    nameWithType: UsageState
    fullName: Microsoft.Azure.Management.WebSites.Models.UsageState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SiteAvailabilityState>
  nameWithType: Nullable<SiteAvailabilityState>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState>
  nameWithType.vb: Nullable(Of SiteAvailabilityState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState)
  name.vb: Nullable(Of SiteAvailabilityState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState
    name: SiteAvailabilityState
    nameWithType: SiteAvailabilityState
    fullName: Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState
    name: SiteAvailabilityState
    nameWithType: SiteAvailabilityState
    fullName: Microsoft.Azure.Management.WebSites.Models.SiteAvailabilityState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostNameSslState}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.HostNameSslState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<HostNameSslState>
  nameWithType: IList<HostNameSslState>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.HostNameSslState>
  nameWithType.vb: IList(Of HostNameSslState)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.HostNameSslState)
  name.vb: IList(Of HostNameSslState)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
    name: HostNameSslState
    nameWithType: HostNameSslState
    fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
    name: HostNameSslState
    nameWithType: HostNameSslState
    fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.SiteConfig
  commentId: T:Microsoft.Azure.Management.WebSites.Models.SiteConfig
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: SiteConfig
  nameWithType: SiteConfig
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteConfig
- uid: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
  commentId: T:Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: HostingEnvironmentProfile
  nameWithType: HostingEnvironmentProfile
  fullName: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.CloningInfo
  commentId: T:Microsoft.Azure.Management.WebSites.Models.CloningInfo
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: CloningInfo
  nameWithType: CloningInfo
  fullName: Microsoft.Azure.Management.WebSites.Models.CloningInfo
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.Site.State*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.State
  isExternal: false
  name: State
  nameWithType: Site.State
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.State
- uid: Microsoft.Azure.Management.WebSites.Models.Site.HostNames*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.HostNames
  isExternal: false
  name: HostNames
  nameWithType: Site.HostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.HostNames
- uid: Microsoft.Azure.Management.WebSites.Models.Site.RepositorySiteName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.RepositorySiteName
  isExternal: false
  name: RepositorySiteName
  nameWithType: Site.RepositorySiteName
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.RepositorySiteName
- uid: Microsoft.Azure.Management.WebSites.Models.Site.UsageState*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.UsageState
  isExternal: false
  name: UsageState
  nameWithType: Site.UsageState
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.UsageState
- uid: Microsoft.Azure.Management.WebSites.Models.Site.Enabled*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.Enabled
  isExternal: false
  name: Enabled
  nameWithType: Site.Enabled
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.Enabled
- uid: Microsoft.Azure.Management.WebSites.Models.Site.EnabledHostNames*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.EnabledHostNames
  isExternal: false
  name: EnabledHostNames
  nameWithType: Site.EnabledHostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.EnabledHostNames
- uid: Microsoft.Azure.Management.WebSites.Models.Site.AvailabilityState*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.AvailabilityState
  isExternal: false
  name: AvailabilityState
  nameWithType: Site.AvailabilityState
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.AvailabilityState
- uid: Microsoft.Azure.Management.WebSites.Models.Site.HostNameSslStates*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.HostNameSslStates
  isExternal: false
  name: HostNameSslStates
  nameWithType: Site.HostNameSslStates
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.HostNameSslStates
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ServerFarmId*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.ServerFarmId
  isExternal: false
  name: ServerFarmId
  nameWithType: Site.ServerFarmId
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ServerFarmId
- uid: Microsoft.Azure.Management.WebSites.Models.Site.Reserved*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.Reserved
  isExternal: false
  name: Reserved
  nameWithType: Site.Reserved
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.Reserved
- uid: Microsoft.Azure.Management.WebSites.Models.Site.LastModifiedTimeUtc*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.LastModifiedTimeUtc
  isExternal: false
  name: LastModifiedTimeUtc
  nameWithType: Site.LastModifiedTimeUtc
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.LastModifiedTimeUtc
- uid: Microsoft.Azure.Management.WebSites.Models.Site.SiteConfig*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.SiteConfig
  isExternal: false
  name: SiteConfig
  nameWithType: Site.SiteConfig
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.SiteConfig
- uid: Microsoft.Azure.Management.WebSites.Models.Site.TrafficManagerHostNames*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.TrafficManagerHostNames
  isExternal: false
  name: TrafficManagerHostNames
  nameWithType: Site.TrafficManagerHostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.TrafficManagerHostNames
- uid: Microsoft.Azure.Management.WebSites.Models.Site.PremiumAppDeployed*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.PremiumAppDeployed
  isExternal: false
  name: PremiumAppDeployed
  nameWithType: Site.PremiumAppDeployed
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.PremiumAppDeployed
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ScmSiteAlsoStopped*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.ScmSiteAlsoStopped
  isExternal: false
  name: ScmSiteAlsoStopped
  nameWithType: Site.ScmSiteAlsoStopped
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ScmSiteAlsoStopped
- uid: Microsoft.Azure.Management.WebSites.Models.Site.TargetSwapSlot*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.TargetSwapSlot
  isExternal: false
  name: TargetSwapSlot
  nameWithType: Site.TargetSwapSlot
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.TargetSwapSlot
- uid: Microsoft.Azure.Management.WebSites.Models.Site.HostingEnvironmentProfile*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.HostingEnvironmentProfile
  isExternal: false
  name: HostingEnvironmentProfile
  nameWithType: Site.HostingEnvironmentProfile
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.HostingEnvironmentProfile
- uid: Microsoft.Azure.Management.WebSites.Models.Site.MicroService*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.MicroService
  isExternal: false
  name: MicroService
  nameWithType: Site.MicroService
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.MicroService
- uid: Microsoft.Azure.Management.WebSites.Models.Site.GatewaySiteName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.GatewaySiteName
  isExternal: false
  name: GatewaySiteName
  nameWithType: Site.GatewaySiteName
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.GatewaySiteName
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ClientAffinityEnabled*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.ClientAffinityEnabled
  isExternal: false
  name: ClientAffinityEnabled
  nameWithType: Site.ClientAffinityEnabled
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ClientAffinityEnabled
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ClientCertEnabled*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.ClientCertEnabled
  isExternal: false
  name: ClientCertEnabled
  nameWithType: Site.ClientCertEnabled
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ClientCertEnabled
- uid: Microsoft.Azure.Management.WebSites.Models.Site.HostNamesDisabled*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.HostNamesDisabled
  isExternal: false
  name: HostNamesDisabled
  nameWithType: Site.HostNamesDisabled
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.HostNamesDisabled
- uid: Microsoft.Azure.Management.WebSites.Models.Site.OutboundIpAddresses*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.OutboundIpAddresses
  isExternal: false
  name: OutboundIpAddresses
  nameWithType: Site.OutboundIpAddresses
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.OutboundIpAddresses
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ContainerSize*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.ContainerSize
  isExternal: false
  name: ContainerSize
  nameWithType: Site.ContainerSize
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ContainerSize
- uid: Microsoft.Azure.Management.WebSites.Models.Site.DailyMemoryTimeQuota*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.DailyMemoryTimeQuota
  isExternal: false
  name: DailyMemoryTimeQuota
  nameWithType: Site.DailyMemoryTimeQuota
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.DailyMemoryTimeQuota
- uid: Microsoft.Azure.Management.WebSites.Models.Site.SuspendedTill*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.SuspendedTill
  isExternal: false
  name: SuspendedTill
  nameWithType: Site.SuspendedTill
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.SuspendedTill
- uid: Microsoft.Azure.Management.WebSites.Models.Site.MaxNumberOfWorkers*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.MaxNumberOfWorkers
  isExternal: false
  name: MaxNumberOfWorkers
  nameWithType: Site.MaxNumberOfWorkers
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.MaxNumberOfWorkers
- uid: Microsoft.Azure.Management.WebSites.Models.Site.CloningInfo*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.CloningInfo
  isExternal: false
  name: CloningInfo
  nameWithType: Site.CloningInfo
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.CloningInfo
- uid: Microsoft.Azure.Management.WebSites.Models.Site.ResourceGroup*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.ResourceGroup
  isExternal: false
  name: ResourceGroup
  nameWithType: Site.ResourceGroup
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.ResourceGroup
- uid: Microsoft.Azure.Management.WebSites.Models.Site.IsDefaultContainer*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.IsDefaultContainer
  isExternal: false
  name: IsDefaultContainer
  nameWithType: Site.IsDefaultContainer
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.IsDefaultContainer
- uid: Microsoft.Azure.Management.WebSites.Models.Site.DefaultHostName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.DefaultHostName
  isExternal: false
  name: DefaultHostName
  nameWithType: Site.DefaultHostName
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.DefaultHostName
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.Site.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Site.Validate
  isExternal: false
  name: Validate
  nameWithType: Site.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.Site.Validate
