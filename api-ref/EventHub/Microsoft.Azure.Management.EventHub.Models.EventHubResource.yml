### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource
  commentId: T:Microsoft.Azure.Management.EventHub.Models.EventHubResource
  id: EventHubResource
  parent: Microsoft.Azure.Management.EventHub.Models
  children:
  - Microsoft.Azure.Management.EventHub.Models.EventHubResource.#ctor
  - Microsoft.Azure.Management.EventHub.Models.EventHubResource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus},System.Nullable{System.DateTime})
  - Microsoft.Azure.Management.EventHub.Models.EventHubResource.CreatedAt
  - Microsoft.Azure.Management.EventHub.Models.EventHubResource.MessageRetentionInDays
  - Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionCount
  - Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionIds
  - Microsoft.Azure.Management.EventHub.Models.EventHubResource.Status
  - Microsoft.Azure.Management.EventHub.Models.EventHubResource.UpdatedAt
  - Microsoft.Azure.Management.EventHub.Models.EventHubResource.Validate
  langs:
  - csharp
  - vb
  name: EventHubResource
  nameWithType: EventHubResource
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource
  type: Class
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EventHubResource
    path: src/azure-sdk-for-net/src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.EventHub
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nDescription of EventHub Resource.\n"
  example: []
  syntax:
    content: 'public class EventHubResource : Resource, IResource'
    content.vb: >-
      Public Class EventHubResource
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.EventHub.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.EventHub.Models.Resource.Id
  - Microsoft.Azure.Management.EventHub.Models.Resource.Name
  - Microsoft.Azure.Management.EventHub.Models.Resource.Type
  - Microsoft.Azure.Management.EventHub.Models.Resource.Location
  - Microsoft.Azure.Management.EventHub.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.#ctor
  commentId: M:Microsoft.Azure.Management.EventHub.Models.EventHubResource.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubResource
  langs:
  - csharp
  - vb
  name: EventHubResource()
  nameWithType: EventHubResource.EventHubResource()
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.EventHubResource()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.EventHub
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nInitializes a new instance of the EventHubResource class.\n"
  example: []
  syntax:
    content: public EventHubResource()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.EventHub.Models.EventHubResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus},System.Nullable{System.DateTime})
  commentId: M:Microsoft.Azure.Management.EventHub.Models.EventHubResource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus},System.Nullable{System.DateTime})
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus},System.Nullable{System.DateTime})'
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubResource
  langs:
  - csharp
  - vb
  name: EventHubResource(String, String, String, String, IDictionary<String, String>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, IList<Nullable<Int32>>, Nullable<EntityStatus>, Nullable<DateTime>)
  nameWithType: EventHubResource.EventHubResource(String, String, String, String, IDictionary<String, String>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, IList<Nullable<Int32>>, Nullable<EntityStatus>, Nullable<DateTime>)
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.EventHubResource(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.Nullable<System.DateTime>, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Collections.Generic.IList<System.Nullable<System.Int32>>, System.Nullable<Microsoft.Azure.Management.EventHub.Models.EntityStatus>, System.Nullable<System.DateTime>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.EventHub
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nInitializes a new instance of the EventHubResource class.\n"
  example: []
  syntax:
    content: public EventHubResource(string location, string id = null, string name = null, string type = null, IDictionary<string, string> tags = null, DateTime? createdAt = null, long ? messageRetentionInDays = null, long ? partitionCount = null, IList<int ? > partitionIds = null, EntityStatus? status = null, DateTime? updatedAt = null)
    content.vb: Public Sub New(location As String, id As String = Nothing, name As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, createdAt As Date? = Nothing, messageRetentionInDays As Long? = Nothing, partitionCount As Long? = Nothing, partitionIds As IList(Of Integer?) = Nothing, status As EntityStatus? = Nothing, updatedAt As Date? = Nothing)
    parameters:
    - id: location
      type: System.String
    - id: id
      type: System.String
    - id: name
      type: System.String
    - id: type
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: createdAt
      type: System.Nullable{System.DateTime}
    - id: messageRetentionInDays
      type: System.Nullable{System.Int64}
    - id: partitionCount
      type: System.Nullable{System.Int64}
    - id: partitionIds
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
    - id: status
      type: System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus}
    - id: updatedAt
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.EventHub.Models.EventHubResource.#ctor*
  nameWithType.vb: EventHubResource.EventHubResource(String, String, String, String, IDictionary(Of String, String), Nullable(Of DateTime), Nullable(Of Int64), Nullable(Of Int64), IList(Of Nullable(Of Int32)), Nullable(Of EntityStatus), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.EventHub.Models.EventHubResource.EventHubResource(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Nullable(Of System.DateTime), System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Collections.Generic.IList(Of System.Nullable(Of System.Int32)), System.Nullable(Of Microsoft.Azure.Management.EventHub.Models.EntityStatus), System.Nullable(Of System.DateTime))
  name.vb: EventHubResource(String, String, String, String, IDictionary(Of String, String), Nullable(Of DateTime), Nullable(Of Int64), Nullable(Of Int64), IList(Of Nullable(Of Int32)), Nullable(Of EntityStatus), Nullable(Of DateTime))
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.CreatedAt
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubResource.CreatedAt
  id: CreatedAt
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubResource
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: EventHubResource.CreatedAt
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.CreatedAt
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreatedAt
    path: src/azure-sdk-for-net/src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.EventHub
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nExact time the Event was created.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.createdAt")]

      public DateTime? CreatedAt { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.createdAt")>

      Public Property CreatedAt As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.EventHub.Models.EventHubResource.CreatedAt*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.createdAt
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.MessageRetentionInDays
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubResource.MessageRetentionInDays
  id: MessageRetentionInDays
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubResource
  langs:
  - csharp
  - vb
  name: MessageRetentionInDays
  nameWithType: EventHubResource.MessageRetentionInDays
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.MessageRetentionInDays
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MessageRetentionInDays
    path: src/azure-sdk-for-net/src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.EventHub
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nNumber of days to retain the events for this Event Hub.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.messageRetentionInDays")]

      public long ? MessageRetentionInDays { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.messageRetentionInDays")>

      Public Property MessageRetentionInDays As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.Azure.Management.EventHub.Models.EventHubResource.MessageRetentionInDays*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.messageRetentionInDays
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionCount
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionCount
  id: PartitionCount
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubResource
  langs:
  - csharp
  - vb
  name: PartitionCount
  nameWithType: EventHubResource.PartitionCount
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionCount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PartitionCount
    path: src/azure-sdk-for-net/src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.EventHub
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nNumber of partitions created for EventHub.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.partitionCount")]

      public long ? PartitionCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.partitionCount")>

      Public Property PartitionCount As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.partitionCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionIds
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionIds
  id: PartitionIds
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubResource
  langs:
  - csharp
  - vb
  name: PartitionIds
  nameWithType: EventHubResource.PartitionIds
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionIds
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PartitionIds
    path: src/azure-sdk-for-net/src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.EventHub
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nCurrent number of shards on the Event Hub.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.partitionIds")]

      public IList<int ? > PartitionIds { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.partitionIds")>

      Public Property PartitionIds As IList(Of Integer?)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
  overload: Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.partitionIds
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.Status
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubResource.Status
  id: Status
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubResource
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: EventHubResource.Status
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.Status
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/azure-sdk-for-net/src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.EventHub
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nEnumerates the possible values for the status of the EventHub.\nPossible values include: 'Active', 'Disabled', 'Restoring',\n'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting',\n'Renaming', 'Unknown'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.status")]

      public EntityStatus? Status { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.status")>

      Public Property Status As EntityStatus?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus}
  overload: Microsoft.Azure.Management.EventHub.Models.EventHubResource.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.UpdatedAt
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubResource.UpdatedAt
  id: UpdatedAt
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubResource
  langs:
  - csharp
  - vb
  name: UpdatedAt
  nameWithType: EventHubResource.UpdatedAt
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.UpdatedAt
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdatedAt
    path: src/azure-sdk-for-net/src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.EventHub
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nThe exact time the message has been updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.updatedAt")]

      public DateTime? UpdatedAt { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.updatedAt")>

      Public Property UpdatedAt As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.EventHub.Models.EventHubResource.UpdatedAt*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.updatedAt
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.Validate
  commentId: M:Microsoft.Azure.Management.EventHub.Models.EventHubResource.Validate
  id: Validate
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubResource
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: EventHubResource.Validate()
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubResource.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.EventHub
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.EventHub.Models.Resource.Validate
  overload: Microsoft.Azure.Management.EventHub.Models.EventHubResource.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.EventHub.Models
  commentId: N:Microsoft.Azure.Management.EventHub.Models
  isExternal: false
  name: Microsoft.Azure.Management.EventHub.Models
  nameWithType: Microsoft.Azure.Management.EventHub.Models
  fullName: Microsoft.Azure.Management.EventHub.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.EventHub.Models.Resource
  commentId: T:Microsoft.Azure.Management.EventHub.Models.Resource
  parent: Microsoft.Azure.Management.EventHub.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.EventHub.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.EventHub.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.EventHub.Models.Resource.Id
  parent: Microsoft.Azure.Management.EventHub.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.EventHub.Models.Resource.Id
- uid: Microsoft.Azure.Management.EventHub.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.EventHub.Models.Resource.Name
  parent: Microsoft.Azure.Management.EventHub.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.EventHub.Models.Resource.Name
- uid: Microsoft.Azure.Management.EventHub.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.EventHub.Models.Resource.Type
  parent: Microsoft.Azure.Management.EventHub.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.EventHub.Models.Resource.Type
- uid: Microsoft.Azure.Management.EventHub.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.EventHub.Models.Resource.Location
  parent: Microsoft.Azure.Management.EventHub.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.EventHub.Models.Resource.Location
- uid: Microsoft.Azure.Management.EventHub.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.EventHub.Models.Resource.Tags
  parent: Microsoft.Azure.Management.EventHub.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.EventHub.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.#ctor*
  commentId: Overload:Microsoft.Azure.Management.EventHub.Models.EventHubResource.#ctor
  isExternal: false
  name: EventHubResource
  nameWithType: EventHubResource.EventHubResource
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.EventHubResource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Nullable{System.Int32}}
  commentId: T:System.Collections.Generic.IList{System.Nullable{System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Nullable<Int32>>
  nameWithType: IList<Nullable<Int32>>
  fullName: System.Collections.Generic.IList<System.Nullable<System.Int32>>
  nameWithType.vb: IList(Of Nullable(Of Int32))
  fullname.vb: System.Collections.Generic.IList(Of System.Nullable(Of System.Int32))
  name.vb: IList(Of Nullable(Of Int32))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus}
  commentId: T:System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<EntityStatus>
  nameWithType: Nullable<EntityStatus>
  fullName: System.Nullable<Microsoft.Azure.Management.EventHub.Models.EntityStatus>
  nameWithType.vb: Nullable(Of EntityStatus)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.EventHub.Models.EntityStatus)
  name.vb: Nullable(Of EntityStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.EventHub.Models.EntityStatus
    name: EntityStatus
    nameWithType: EntityStatus
    fullName: Microsoft.Azure.Management.EventHub.Models.EntityStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.EventHub.Models.EntityStatus
    name: EntityStatus
    nameWithType: EntityStatus
    fullName: Microsoft.Azure.Management.EventHub.Models.EntityStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.CreatedAt*
  commentId: Overload:Microsoft.Azure.Management.EventHub.Models.EventHubResource.CreatedAt
  isExternal: false
  name: CreatedAt
  nameWithType: EventHubResource.CreatedAt
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.CreatedAt
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.MessageRetentionInDays*
  commentId: Overload:Microsoft.Azure.Management.EventHub.Models.EventHubResource.MessageRetentionInDays
  isExternal: false
  name: MessageRetentionInDays
  nameWithType: EventHubResource.MessageRetentionInDays
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.MessageRetentionInDays
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionCount*
  commentId: Overload:Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionCount
  isExternal: false
  name: PartitionCount
  nameWithType: EventHubResource.PartitionCount
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionCount
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionIds*
  commentId: Overload:Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionIds
  isExternal: false
  name: PartitionIds
  nameWithType: EventHubResource.PartitionIds
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.PartitionIds
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.Status*
  commentId: Overload:Microsoft.Azure.Management.EventHub.Models.EventHubResource.Status
  isExternal: false
  name: Status
  nameWithType: EventHubResource.Status
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.Status
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.UpdatedAt*
  commentId: Overload:Microsoft.Azure.Management.EventHub.Models.EventHubResource.UpdatedAt
  isExternal: false
  name: UpdatedAt
  nameWithType: EventHubResource.UpdatedAt
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.UpdatedAt
- uid: Microsoft.Azure.Management.EventHub.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.EventHub.Models.Resource.Validate
  parent: Microsoft.Azure.Management.EventHub.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.EventHub.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.EventHub.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.EventHub.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.EventHub.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.EventHub.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubResource.Validate*
  commentId: Overload:Microsoft.Azure.Management.EventHub.Models.EventHubResource.Validate
  isExternal: false
  name: Validate
  nameWithType: EventHubResource.Validate
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubResource.Validate
