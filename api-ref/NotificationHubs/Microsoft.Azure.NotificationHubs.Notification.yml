### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.NotificationHubs.Notification
  commentId: T:Microsoft.Azure.NotificationHubs.Notification
  id: Notification
  parent: Microsoft.Azure.NotificationHubs
  children:
  - Microsoft.Azure.NotificationHubs.Notification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  - Microsoft.Azure.NotificationHubs.Notification.AddOrUpdateHeader(System.String,System.String)
  - Microsoft.Azure.NotificationHubs.Notification.Body
  - Microsoft.Azure.NotificationHubs.Notification.ContentType
  - Microsoft.Azure.NotificationHubs.Notification.Headers
  - Microsoft.Azure.NotificationHubs.Notification.OnValidateAndPopulateHeaders
  - Microsoft.Azure.NotificationHubs.Notification.PlatformType
  - Microsoft.Azure.NotificationHubs.Notification.Tag
  langs:
  - csharp
  - vb
  name: Notification
  nameWithType: Notification
  fullName: Microsoft.Azure.NotificationHubs.Notification
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Notification
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
    startLine: 12
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nAbstract class representing a generic notification hub notification, including the target tag.\n"
  example: []
  syntax:
    content: public abstract class Notification
    content.vb: Public MustInherit Class Notification
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Azure.NotificationHubs.AdmNotification
  - Microsoft.Azure.NotificationHubs.AppleNotification
  - Microsoft.Azure.NotificationHubs.BaiduNotification
  - Microsoft.Azure.NotificationHubs.GcmNotification
  - Microsoft.Azure.NotificationHubs.MpnsNotification
  - Microsoft.Azure.NotificationHubs.TemplateNotification
  - Microsoft.Azure.NotificationHubs.WindowsNotification
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Azure.NotificationHubs.Notification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.Notification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String)'
  parent: Microsoft.Azure.NotificationHubs.Notification
  langs:
  - csharp
  - vb
  name: Notification(IDictionary<String, String>, String)
  nameWithType: Notification.Notification(IDictionary<String, String>, String)
  fullName: Microsoft.Azure.NotificationHubs.Notification.Notification(System.Collections.Generic.IDictionary<System.String, System.String>, System.String)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
    startLine: 22
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.Notification\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected Notification(IDictionary<string, string> additionalHeaders, string tag)
    content.vb: Protected Sub New(additionalHeaders As IDictionary(Of String, String), tag As String)
    parameters:
    - id: additionalHeaders
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: The additional headers.
    - id: tag
      type: System.String
      description: The notification tag.
  overload: Microsoft.Azure.NotificationHubs.Notification.#ctor*
  nameWithType.vb: Notification.Notification(IDictionary(Of String, String), String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.NotificationHubs.Notification.Notification(System.Collections.Generic.IDictionary(Of System.String, System.String), System.String)
  name.vb: Notification(IDictionary(Of String, String), String)
- uid: Microsoft.Azure.NotificationHubs.Notification.AddOrUpdateHeader(System.String,System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.Notification.AddOrUpdateHeader(System.String,System.String)
  id: AddOrUpdateHeader(System.String,System.String)
  parent: Microsoft.Azure.NotificationHubs.Notification
  langs:
  - csharp
  - vb
  name: AddOrUpdateHeader(String, String)
  nameWithType: Notification.AddOrUpdateHeader(String, String)
  fullName: Microsoft.Azure.NotificationHubs.Notification.AddOrUpdateHeader(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: AddOrUpdateHeader
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
    startLine: 36
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nAdd or updates a header with a given key and value.\n"
  example: []
  syntax:
    content: protected void AddOrUpdateHeader(string key, string value)
    content.vb: Protected Sub AddOrUpdateHeader(key As String, value As String)
    parameters:
    - id: key
      type: System.String
      description: The header key.
    - id: value
      type: System.String
      description: The value of the header.
  overload: Microsoft.Azure.NotificationHubs.Notification.AddOrUpdateHeader*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.NotificationHubs.Notification.OnValidateAndPopulateHeaders
  commentId: M:Microsoft.Azure.NotificationHubs.Notification.OnValidateAndPopulateHeaders
  id: OnValidateAndPopulateHeaders
  parent: Microsoft.Azure.NotificationHubs.Notification
  langs:
  - csharp
  - vb
  name: OnValidateAndPopulateHeaders()
  nameWithType: Notification.OnValidateAndPopulateHeaders()
  fullName: Microsoft.Azure.NotificationHubs.Notification.OnValidateAndPopulateHeaders()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: OnValidateAndPopulateHeaders
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
    startLine: 57
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nValidate and populates the headers.\n"
  example: []
  syntax:
    content: protected abstract void OnValidateAndPopulateHeaders()
    content.vb: Protected MustOverride Sub OnValidateAndPopulateHeaders
  overload: Microsoft.Azure.NotificationHubs.Notification.OnValidateAndPopulateHeaders*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.Azure.NotificationHubs.Notification.PlatformType
  commentId: P:Microsoft.Azure.NotificationHubs.Notification.PlatformType
  id: PlatformType
  parent: Microsoft.Azure.NotificationHubs.Notification
  langs:
  - csharp
  - vb
  name: PlatformType
  nameWithType: Notification.PlatformType
  fullName: Microsoft.Azure.NotificationHubs.Notification.PlatformType
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: PlatformType
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
    startLine: 64
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the type of the platform.\n"
  example: []
  syntax:
    content: protected abstract string PlatformType { get; }
    content.vb: Protected MustOverride ReadOnly Property PlatformType As String
    parameters: []
    return:
      type: System.String
      description: "\nThe type of the platform.\n"
  overload: Microsoft.Azure.NotificationHubs.Notification.PlatformType*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Microsoft.Azure.NotificationHubs.Notification.Headers
  commentId: P:Microsoft.Azure.NotificationHubs.Notification.Headers
  id: Headers
  parent: Microsoft.Azure.NotificationHubs.Notification
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: Notification.Headers
  fullName: Microsoft.Azure.NotificationHubs.Notification.Headers
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Headers
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
    startLine: 72
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets notification headers.\n"
  example: []
  syntax:
    content: public Dictionary<string, string> Headers { get; set; }
    content.vb: Public Property Headers As Dictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: "\nThe notification headers.\n"
  overload: Microsoft.Azure.NotificationHubs.Notification.Headers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Notification.Body
  commentId: P:Microsoft.Azure.NotificationHubs.Notification.Body
  id: Body
  parent: Microsoft.Azure.NotificationHubs.Notification
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: Notification.Body
  fullName: Microsoft.Azure.NotificationHubs.Notification.Body
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Body
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
    startLine: 84
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets notification body.\n"
  example: []
  syntax:
    content: public string Body { get; set; }
    content.vb: Public Property Body As String
    parameters: []
    return:
      type: System.String
      description: "\nThe notification body.\n"
  overload: Microsoft.Azure.NotificationHubs.Notification.Body*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Notification.ContentType
  commentId: P:Microsoft.Azure.NotificationHubs.Notification.ContentType
  id: ContentType
  parent: Microsoft.Azure.NotificationHubs.Notification
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: Notification.ContentType
  fullName: Microsoft.Azure.NotificationHubs.Notification.ContentType
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: ContentType
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
    startLine: 92
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets the type of the notification content.\n"
  example: []
  syntax:
    content: public string ContentType { get; set; }
    content.vb: Public Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: "\nThe type of the notification content.\n"
  overload: Microsoft.Azure.NotificationHubs.Notification.ContentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Notification.Tag
  commentId: P:Microsoft.Azure.NotificationHubs.Notification.Tag
  id: Tag
  parent: Microsoft.Azure.NotificationHubs.Notification
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: Notification.Tag
  fullName: Microsoft.Azure.NotificationHubs.Notification.Tag
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Tag
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/Notification.cs
    startLine: 100
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets the notification tag.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This property is obsolete.")]

      public string Tag { get; set; }
    content.vb: >-
      <Obsolete("This property is obsolete.")>

      Public Property Tag As String
    parameters: []
    return:
      type: System.String
      description: "\nThe notification tag.\n"
  overload: Microsoft.Azure.NotificationHubs.Notification.Tag*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This property is obsolete.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.NotificationHubs
  commentId: N:Microsoft.Azure.NotificationHubs
  isExternal: false
  name: Microsoft.Azure.NotificationHubs
  nameWithType: Microsoft.Azure.NotificationHubs
  fullName: Microsoft.Azure.NotificationHubs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.NotificationHubs.Notification
  commentId: T:Microsoft.Azure.NotificationHubs.Notification
  parent: Microsoft.Azure.NotificationHubs
  isExternal: false
  name: Notification
  nameWithType: Notification
  fullName: Microsoft.Azure.NotificationHubs.Notification
- uid: Microsoft.Azure.NotificationHubs.Notification.#ctor*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Notification.#ctor
  isExternal: false
  name: Notification
  nameWithType: Notification.Notification
  fullName: Microsoft.Azure.NotificationHubs.Notification.Notification
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.NotificationHubs.Notification.AddOrUpdateHeader*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Notification.AddOrUpdateHeader
  isExternal: false
  name: AddOrUpdateHeader
  nameWithType: Notification.AddOrUpdateHeader
  fullName: Microsoft.Azure.NotificationHubs.Notification.AddOrUpdateHeader
- uid: Microsoft.Azure.NotificationHubs.Notification.OnValidateAndPopulateHeaders*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Notification.OnValidateAndPopulateHeaders
  isExternal: false
  name: OnValidateAndPopulateHeaders
  nameWithType: Notification.OnValidateAndPopulateHeaders
  fullName: Microsoft.Azure.NotificationHubs.Notification.OnValidateAndPopulateHeaders
- uid: Microsoft.Azure.NotificationHubs.Notification.PlatformType*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Notification.PlatformType
  isExternal: false
  name: PlatformType
  nameWithType: Notification.PlatformType
  fullName: Microsoft.Azure.NotificationHubs.Notification.PlatformType
- uid: Microsoft.Azure.NotificationHubs.Notification.Headers*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Notification.Headers
  isExternal: false
  name: Headers
  nameWithType: Notification.Headers
  fullName: Microsoft.Azure.NotificationHubs.Notification.Headers
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.NotificationHubs.Notification.Body*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Notification.Body
  isExternal: false
  name: Body
  nameWithType: Notification.Body
  fullName: Microsoft.Azure.NotificationHubs.Notification.Body
- uid: Microsoft.Azure.NotificationHubs.Notification.ContentType*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Notification.ContentType
  isExternal: false
  name: ContentType
  nameWithType: Notification.ContentType
  fullName: Microsoft.Azure.NotificationHubs.Notification.ContentType
- uid: Microsoft.Azure.NotificationHubs.Notification.Tag*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Notification.Tag
  isExternal: false
  name: Tag
  nameWithType: Notification.Tag
  fullName: Microsoft.Azure.NotificationHubs.Notification.Tag
