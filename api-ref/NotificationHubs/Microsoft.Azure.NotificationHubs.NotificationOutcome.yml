### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome
  commentId: T:Microsoft.Azure.NotificationHubs.NotificationOutcome
  id: NotificationOutcome
  parent: Microsoft.Azure.NotificationHubs
  children:
  - Microsoft.Azure.NotificationHubs.NotificationOutcome.Failure
  - Microsoft.Azure.NotificationHubs.NotificationOutcome.NotificationId
  - Microsoft.Azure.NotificationHubs.NotificationOutcome.Results
  - Microsoft.Azure.NotificationHubs.NotificationOutcome.State
  - Microsoft.Azure.NotificationHubs.NotificationOutcome.Success
  - Microsoft.Azure.NotificationHubs.NotificationOutcome.TrackingId
  langs:
  - csharp
  - vb
  name: NotificationOutcome
  nameWithType: NotificationOutcome
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: NotificationOutcome
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
    startLine: 13
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nRepresents a notification outcome.\n"
  example: []
  syntax:
    content: public sealed class NotificationOutcome
    content.vb: Public NotInheritable Class NotificationOutcome
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.State
  commentId: P:Microsoft.Azure.NotificationHubs.NotificationOutcome.State
  id: State
  parent: Microsoft.Azure.NotificationHubs.NotificationOutcome
  langs:
  - csharp
  - vb
  name: State
  nameWithType: NotificationOutcome.State
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.State
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: State
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
    startLine: 27
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the state of this notification outcome.\n"
  example: []
  syntax:
    content: public NotificationOutcomeState State { get; }
    content.vb: Public ReadOnly Property State As NotificationOutcomeState
    parameters: []
    return:
      type: Microsoft.Azure.NotificationHubs.NotificationOutcomeState
      description: "\nThe state of this notification outcome.\n"
  overload: Microsoft.Azure.NotificationHubs.NotificationOutcome.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.Success
  commentId: P:Microsoft.Azure.NotificationHubs.NotificationOutcome.Success
  id: Success
  parent: Microsoft.Azure.NotificationHubs.NotificationOutcome
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: NotificationOutcome.Success
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.Success
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Success
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
    startLine: 36
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets the success value of the outcome.\n"
  example: []
  syntax:
    content: public long Success { get; set; }
    content.vb: Public Property Success As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe success value of the outcome.\n"
  overload: Microsoft.Azure.NotificationHubs.NotificationOutcome.Success*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.Failure
  commentId: P:Microsoft.Azure.NotificationHubs.NotificationOutcome.Failure
  id: Failure
  parent: Microsoft.Azure.NotificationHubs.NotificationOutcome
  langs:
  - csharp
  - vb
  name: Failure
  nameWithType: NotificationOutcome.Failure
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.Failure
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Failure
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
    startLine: 46
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets the failure value of the outcome.\n"
  example: []
  syntax:
    content: public long Failure { get; set; }
    content.vb: Public Property Failure As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe failure value of the outcome.\n"
  overload: Microsoft.Azure.NotificationHubs.NotificationOutcome.Failure*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.Results
  commentId: P:Microsoft.Azure.NotificationHubs.NotificationOutcome.Results
  id: Results
  parent: Microsoft.Azure.NotificationHubs.NotificationOutcome
  langs:
  - csharp
  - vb
  name: Results
  nameWithType: NotificationOutcome.Results
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.Results
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Results
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
    startLine: 56
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets the list of notification outcome results.\n"
  example: []
  syntax:
    content: public List<RegistrationResult> Results { get; set; }
    content.vb: Public Property Results As List(Of RegistrationResult)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.Azure.NotificationHubs.RegistrationResult}
      description: "\nThe list of notification outcome results.\n"
  overload: Microsoft.Azure.NotificationHubs.NotificationOutcome.Results*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.NotificationId
  commentId: P:Microsoft.Azure.NotificationHubs.NotificationOutcome.NotificationId
  id: NotificationId
  parent: Microsoft.Azure.NotificationHubs.NotificationOutcome
  langs:
  - csharp
  - vb
  name: NotificationId
  nameWithType: NotificationOutcome.NotificationId
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.NotificationId
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: NotificationId
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
    startLine: 66
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets the notification ID.\n"
  example: []
  syntax:
    content: public string NotificationId { get; set; }
    content.vb: Public Property NotificationId As String
    parameters: []
    return:
      type: System.String
      description: "\nnotification ID.\n"
  overload: Microsoft.Azure.NotificationHubs.NotificationOutcome.NotificationId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.TrackingId
  commentId: P:Microsoft.Azure.NotificationHubs.NotificationOutcome.TrackingId
  id: TrackingId
  parent: Microsoft.Azure.NotificationHubs.NotificationOutcome
  langs:
  - csharp
  - vb
  name: TrackingId
  nameWithType: NotificationOutcome.TrackingId
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.TrackingId
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: TrackingId
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/NotificationOutcome.cs
    startLine: 75
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the tracking ID.\n"
  example: []
  syntax:
    content: public string TrackingId { get; }
    content.vb: Public ReadOnly Property TrackingId As String
    parameters: []
    return:
      type: System.String
      description: "\nThe tracking ID.\n"
  overload: Microsoft.Azure.NotificationHubs.NotificationOutcome.TrackingId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.NotificationHubs
  commentId: N:Microsoft.Azure.NotificationHubs
  isExternal: false
  name: Microsoft.Azure.NotificationHubs
  nameWithType: Microsoft.Azure.NotificationHubs
  fullName: Microsoft.Azure.NotificationHubs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.State*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NotificationOutcome.State
  isExternal: false
  name: State
  nameWithType: NotificationOutcome.State
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.State
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcomeState
  commentId: T:Microsoft.Azure.NotificationHubs.NotificationOutcomeState
  parent: Microsoft.Azure.NotificationHubs
  isExternal: false
  name: NotificationOutcomeState
  nameWithType: NotificationOutcomeState
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcomeState
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.Success*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NotificationOutcome.Success
  isExternal: false
  name: Success
  nameWithType: NotificationOutcome.Success
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.Success
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.Failure*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NotificationOutcome.Failure
  isExternal: false
  name: Failure
  nameWithType: NotificationOutcome.Failure
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.Failure
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.Results*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NotificationOutcome.Results
  isExternal: false
  name: Results
  nameWithType: NotificationOutcome.Results
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.Results
- uid: System.Collections.Generic.List{Microsoft.Azure.NotificationHubs.RegistrationResult}
  commentId: T:System.Collections.Generic.List{Microsoft.Azure.NotificationHubs.RegistrationResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<RegistrationResult>
  nameWithType: List<RegistrationResult>
  fullName: System.Collections.Generic.List<Microsoft.Azure.NotificationHubs.RegistrationResult>
  nameWithType.vb: List(Of RegistrationResult)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.Azure.NotificationHubs.RegistrationResult)
  name.vb: List(Of RegistrationResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.NotificationHubs.RegistrationResult
    name: RegistrationResult
    nameWithType: RegistrationResult
    fullName: Microsoft.Azure.NotificationHubs.RegistrationResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.NotificationHubs.RegistrationResult
    name: RegistrationResult
    nameWithType: RegistrationResult
    fullName: Microsoft.Azure.NotificationHubs.RegistrationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.NotificationId*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NotificationOutcome.NotificationId
  isExternal: false
  name: NotificationId
  nameWithType: NotificationOutcome.NotificationId
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.NotificationId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.NotificationHubs.NotificationOutcome.TrackingId*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NotificationOutcome.TrackingId
  isExternal: false
  name: TrackingId
  nameWithType: NotificationOutcome.TrackingId
  fullName: Microsoft.Azure.NotificationHubs.NotificationOutcome.TrackingId
