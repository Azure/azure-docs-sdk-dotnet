### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.NotificationHubs.Management.Metric
  commentId: T:Microsoft.Azure.NotificationHubs.Management.Metric
  id: Metric
  parent: Microsoft.Azure.NotificationHubs.Management
  children:
  - Microsoft.Azure.NotificationHubs.Management.Metric.DisplayName
  - Microsoft.Azure.NotificationHubs.Management.Metric.Name
  - Microsoft.Azure.NotificationHubs.Management.Metric.PrimaryAggregation
  - Microsoft.Azure.NotificationHubs.Management.Metric.Rollups
  - Microsoft.Azure.NotificationHubs.Management.Metric.Unit
  langs:
  - csharp
  - vb
  name: Metric
  nameWithType: Metric
  fullName: Microsoft.Azure.NotificationHubs.Management.Metric
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Metric.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Metric
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Metric.cs
    startLine: 11
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nRepresents the metric used to monitor the Service Bus status.\n"
  example: []
  syntax:
    content: public class Metric
    content.vb: Public Class Metric
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.NotificationHubs.Management.Metric.Name
  commentId: P:Microsoft.Azure.NotificationHubs.Management.Metric.Name
  id: Name
  parent: Microsoft.Azure.NotificationHubs.Management.Metric
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Metric.Name
  fullName: Microsoft.Azure.NotificationHubs.Management.Metric.Name
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Metric.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Name
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Metric.cs
    startLine: 20
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the name of the metric.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\nThe name of the metric.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.Metric.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Management.Metric.Unit
  commentId: P:Microsoft.Azure.NotificationHubs.Management.Metric.Unit
  id: Unit
  parent: Microsoft.Azure.NotificationHubs.Management.Metric
  langs:
  - csharp
  - vb
  name: Unit
  nameWithType: Metric.Unit
  fullName: Microsoft.Azure.NotificationHubs.Management.Metric.Unit
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Metric.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Unit
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Metric.cs
    startLine: 30
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the metric unit.\n"
  example: []
  syntax:
    content: public string Unit { get; set; }
    content.vb: Public Property Unit As String
    parameters: []
    return:
      type: System.String
      description: "\nThe metric unit.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.Metric.Unit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Management.Metric.PrimaryAggregation
  commentId: P:Microsoft.Azure.NotificationHubs.Management.Metric.PrimaryAggregation
  id: PrimaryAggregation
  parent: Microsoft.Azure.NotificationHubs.Management.Metric
  langs:
  - csharp
  - vb
  name: PrimaryAggregation
  nameWithType: Metric.PrimaryAggregation
  fullName: Microsoft.Azure.NotificationHubs.Management.Metric.PrimaryAggregation
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Metric.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: PrimaryAggregation
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Metric.cs
    startLine: 39
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the primary aggregation for this metric.\n"
  example: []
  syntax:
    content: public string PrimaryAggregation { get; set; }
    content.vb: Public Property PrimaryAggregation As String
    parameters: []
    return:
      type: System.String
      description: "\nThe primary aggregation for this metric.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.Metric.PrimaryAggregation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Management.Metric.Rollups
  commentId: P:Microsoft.Azure.NotificationHubs.Management.Metric.Rollups
  id: Rollups
  parent: Microsoft.Azure.NotificationHubs.Management.Metric
  langs:
  - csharp
  - vb
  name: Rollups
  nameWithType: Metric.Rollups
  fullName: Microsoft.Azure.NotificationHubs.Management.Metric.Rollups
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Metric.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Rollups
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Metric.cs
    startLine: 48
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the collection of metric rollup.\n"
  example: []
  syntax:
    content: public ICollection<MetricRollup> Rollups { get; set; }
    content.vb: Public Property Rollups As ICollection(Of MetricRollup)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Azure.NotificationHubs.Management.MetricRollup}
      description: "\nThe collection of metric rollup.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.Metric.Rollups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Management.Metric.DisplayName
  commentId: P:Microsoft.Azure.NotificationHubs.Management.Metric.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.NotificationHubs.Management.Metric
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: Metric.DisplayName
  fullName: Microsoft.Azure.NotificationHubs.Management.Metric.DisplayName
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Metric.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: DisplayName
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Metric.cs
    startLine: 57
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the display name of the metric.\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    content.vb: Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
      description: "\nThe display name of the metric.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.Metric.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.NotificationHubs.Management
  commentId: N:Microsoft.Azure.NotificationHubs.Management
  isExternal: false
  name: Microsoft.Azure.NotificationHubs.Management
  nameWithType: Microsoft.Azure.NotificationHubs.Management
  fullName: Microsoft.Azure.NotificationHubs.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.NotificationHubs.Management.Metric.Name*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.Metric.Name
  isExternal: false
  name: Name
  nameWithType: Metric.Name
  fullName: Microsoft.Azure.NotificationHubs.Management.Metric.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.NotificationHubs.Management.Metric.Unit*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.Metric.Unit
  isExternal: false
  name: Unit
  nameWithType: Metric.Unit
  fullName: Microsoft.Azure.NotificationHubs.Management.Metric.Unit
- uid: Microsoft.Azure.NotificationHubs.Management.Metric.PrimaryAggregation*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.Metric.PrimaryAggregation
  isExternal: false
  name: PrimaryAggregation
  nameWithType: Metric.PrimaryAggregation
  fullName: Microsoft.Azure.NotificationHubs.Management.Metric.PrimaryAggregation
- uid: Microsoft.Azure.NotificationHubs.Management.Metric.Rollups*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.Metric.Rollups
  isExternal: false
  name: Rollups
  nameWithType: Metric.Rollups
  fullName: Microsoft.Azure.NotificationHubs.Management.Metric.Rollups
- uid: System.Collections.Generic.ICollection{Microsoft.Azure.NotificationHubs.Management.MetricRollup}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.Azure.NotificationHubs.Management.MetricRollup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MetricRollup>
  nameWithType: ICollection<MetricRollup>
  fullName: System.Collections.Generic.ICollection<Microsoft.Azure.NotificationHubs.Management.MetricRollup>
  nameWithType.vb: ICollection(Of MetricRollup)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.Azure.NotificationHubs.Management.MetricRollup)
  name.vb: ICollection(Of MetricRollup)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.NotificationHubs.Management.MetricRollup
    name: MetricRollup
    nameWithType: MetricRollup
    fullName: Microsoft.Azure.NotificationHubs.Management.MetricRollup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.NotificationHubs.Management.MetricRollup
    name: MetricRollup
    nameWithType: MetricRollup
    fullName: Microsoft.Azure.NotificationHubs.Management.MetricRollup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.NotificationHubs.Management.Metric.DisplayName*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.Metric.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: Metric.DisplayName
  fullName: Microsoft.Azure.NotificationHubs.Management.Metric.DisplayName
