### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment
  commentId: T:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment
  id: ServiceBusEnvironment
  parent: Microsoft.Azure.NotificationHubs
  children:
  - Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateAccessControlUri(System.String)
  - Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String)
  - Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String,System.Boolean)
  - Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.DefaultIdentityHostName
  - Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.Proxy
  - Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.SystemConnectivity
  langs:
  - csharp
  - vb
  name: ServiceBusEnvironment
  nameWithType: ServiceBusEnvironment
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: ServiceBusEnvironment
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
    startLine: 13
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nDescribes the Windows Azure Service Bus environment.\n"
  example: []
  syntax:
    content: public static class ServiceBusEnvironment
    content.vb: Public Module ServiceBusEnvironment
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.DefaultIdentityHostName
  commentId: P:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.DefaultIdentityHostName
  id: DefaultIdentityHostName
  parent: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment
  langs:
  - csharp
  - vb
  name: DefaultIdentityHostName
  nameWithType: ServiceBusEnvironment.DefaultIdentityHostName
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.DefaultIdentityHostName
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: DefaultIdentityHostName
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
    startLine: 24
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the default host name for the Windows Azure Access Control Service.\n"
  example: []
  syntax:
    content: public static string DefaultIdentityHostName { get; }
    content.vb: Public Shared ReadOnly Property DefaultIdentityHostName As String
    parameters: []
    return:
      type: System.String
      description: "\nReturns the default identity host name.\n"
  overload: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.DefaultIdentityHostName*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.Proxy
  commentId: P:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.Proxy
  id: Proxy
  parent: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment
  langs:
  - csharp
  - vb
  name: Proxy
  nameWithType: ServiceBusEnvironment.Proxy
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.Proxy
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Proxy
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
    startLine: 32
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets o sets a proxy to be used by SDK for each service call\n"
  example: []
  syntax:
    content: public static IWebProxy Proxy { get; set; }
    content.vb: Public Shared Property Proxy As IWebProxy
    parameters: []
    return:
      type: IWebProxy
  overload: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.Proxy*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.SystemConnectivity
  commentId: P:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.SystemConnectivity
  id: SystemConnectivity
  parent: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment
  langs:
  - csharp
  - vb
  name: SystemConnectivity
  nameWithType: ServiceBusEnvironment.SystemConnectivity
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.SystemConnectivity
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: SystemConnectivity
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
    startLine: 45
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the singleton <xref href=\"Microsoft.Azure.NotificationHubs.ConnectivitySettings\" data-throw-if-not-resolved=\"false\"></xref> instance that holds the connectivity settings for TCP and HTTP-based endpoints.\n"
  example: []
  syntax:
    content: public static ConnectivitySettings SystemConnectivity { get; }
    content.vb: Public Shared ReadOnly Property SystemConnectivity As ConnectivitySettings
    parameters: []
    return:
      type: Microsoft.Azure.NotificationHubs.ConnectivitySettings
      description: "\nReturns a <xref href=\"Microsoft.Azure.NotificationHubs.ConnectivitySettings\" data-throw-if-not-resolved=\"false\"></xref> that contains the connectivity settings.\n"
  overload: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.SystemConnectivity*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateAccessControlUri(System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateAccessControlUri(System.String)
  id: CreateAccessControlUri(System.String)
  parent: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment
  langs:
  - csharp
  - vb
  name: CreateAccessControlUri(String)
  nameWithType: ServiceBusEnvironment.CreateAccessControlUri(String)
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateAccessControlUri(System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: CreateAccessControlUri
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
    startLine: 60
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nCreates a URI string to use with access control for the specified .\n"
  example: []
  syntax:
    content: public static Uri CreateAccessControlUri(string serviceNamespace)
    content.vb: Public Shared Function CreateAccessControlUri(serviceNamespace As String) As Uri
    parameters:
    - id: serviceNamespace
      type: System.String
      description: The  to create the URI for.
    return:
      type: Uri
      description: "\nReturns a <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the specified URI.\n"
  overload: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateAccessControlUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String)
  id: CreateServiceUri(System.String,System.String,System.String)
  parent: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment
  langs:
  - csharp
  - vb
  name: CreateServiceUri(String, String, String)
  nameWithType: ServiceBusEnvironment.CreateServiceUri(String, String, String)
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: CreateServiceUri
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
    startLine: 81
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nConstructs the Windows Azure Service Bus URI for an application, using the specified scheme,  name, and service path.\n"
  example: []
  syntax:
    content: public static Uri CreateServiceUri(string scheme, string serviceNamespace, string servicePath)
    content.vb: Public Shared Function CreateServiceUri(scheme As String, serviceNamespace As String, servicePath As String) As Uri
    parameters:
    - id: scheme
      type: System.String
      description: The scheme of the URI.
    - id: serviceNamespace
      type: System.String
      description: The  name used by the application.
    - id: servicePath
      type: System.String
      description: The service path that follows the host name section of the URI.
    return:
      type: Uri
      description: "\nReturns a <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the new URI.\n"
  overload: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String,System.Boolean)
  id: CreateServiceUri(System.String,System.String,System.String,System.Boolean)
  parent: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment
  langs:
  - csharp
  - vb
  name: CreateServiceUri(String, String, String, Boolean)
  nameWithType: ServiceBusEnvironment.CreateServiceUri(String, String, String, Boolean)
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri(System.String, System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: CreateServiceUri
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/ServiceBusEnvironment.cs
    startLine: 95
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nConstructs the Windows Azure Service Bus URI for an application, using the specified scheme,  name, service path, and relayed path prefix.\n"
  example: []
  syntax:
    content: public static Uri CreateServiceUri(string scheme, string serviceNamespace, string servicePath, bool suppressRelayPathPrefix)
    content.vb: Public Shared Function CreateServiceUri(scheme As String, serviceNamespace As String, servicePath As String, suppressRelayPathPrefix As Boolean) As Uri
    parameters:
    - id: scheme
      type: System.String
      description: The scheme of the URI.
    - id: serviceNamespace
      type: System.String
      description: The  name used by the application.
    - id: servicePath
      type: System.String
      description: The service path that follows the host name section of the URI.
    - id: suppressRelayPathPrefix
      type: System.Boolean
      description: True if the relay path prefix is suppressed; otherwise, false.
    return:
      type: Uri
      description: "\nReturns a <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the new URI.\n"
  overload: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.NotificationHubs
  commentId: N:Microsoft.Azure.NotificationHubs
  isExternal: false
  name: Microsoft.Azure.NotificationHubs
  nameWithType: Microsoft.Azure.NotificationHubs
  fullName: Microsoft.Azure.NotificationHubs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.DefaultIdentityHostName*
  commentId: Overload:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.DefaultIdentityHostName
  isExternal: false
  name: DefaultIdentityHostName
  nameWithType: ServiceBusEnvironment.DefaultIdentityHostName
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.DefaultIdentityHostName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.Proxy*
  commentId: Overload:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.Proxy
  isExternal: false
  name: Proxy
  nameWithType: ServiceBusEnvironment.Proxy
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.Proxy
- uid: IWebProxy
  commentId: '!:IWebProxy'
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: IWebProxy
- uid: Microsoft.Azure.NotificationHubs.ConnectivitySettings
  commentId: T:Microsoft.Azure.NotificationHubs.ConnectivitySettings
  parent: Microsoft.Azure.NotificationHubs
  isExternal: false
  name: ConnectivitySettings
  nameWithType: ConnectivitySettings
  fullName: Microsoft.Azure.NotificationHubs.ConnectivitySettings
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.SystemConnectivity*
  commentId: Overload:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.SystemConnectivity
  isExternal: false
  name: SystemConnectivity
  nameWithType: ServiceBusEnvironment.SystemConnectivity
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.SystemConnectivity
- uid: System.Uri
  commentId: T:System.Uri
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateAccessControlUri*
  commentId: Overload:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateAccessControlUri
  isExternal: false
  name: CreateAccessControlUri
  nameWithType: ServiceBusEnvironment.CreateAccessControlUri
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateAccessControlUri
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri*
  commentId: Overload:Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri
  isExternal: false
  name: CreateServiceUri
  nameWithType: ServiceBusEnvironment.CreateServiceUri
  fullName: Microsoft.Azure.NotificationHubs.ServiceBusEnvironment.CreateServiceUri
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
