### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager
  commentId: T:Microsoft.Azure.NotificationHubs.NamespaceManager
  id: NamespaceManager
  parent: Microsoft.Azure.NotificationHubs
  children:
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.NotificationHubs.TokenProvider)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{Uri})
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{Uri},Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{Uri},Microsoft.Azure.NotificationHubs.TokenProvider)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.String)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.String,Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.String,Microsoft.Azure.NotificationHubs.TokenProvider)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(Uri)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(Uri,Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(Uri,Microsoft.Azure.NotificationHubs.TokenProvider)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.Address
  - Microsoft.Azure.NotificationHubs.NamespaceManager.BeginGetVersionInfo(System.AsyncCallback,System.Object)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.Create
  - Microsoft.Azure.NotificationHubs.NamespaceManager.CreateFromConnectionString(System.String)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHub(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHubAsync(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHub(System.String)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHubAsync(System.String)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteInstallation(System.IAsyncResult)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteRegistration(System.IAsyncResult)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.EndGetVersionInfo(System.IAsyncResult)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHub(System.String)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubAsync(System.String)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobAsync(System.String,System.String)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobsAsync(System.String)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubs
  - Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubsAsync
  - Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfo
  - Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfoAsync
  - Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExists(System.String)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExistsAsync(System.String)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.ProtocolVersion
  - Microsoft.Azure.NotificationHubs.NamespaceManager.Settings
  - Microsoft.Azure.NotificationHubs.NamespaceManager.SubmitNotificationHubJobAsync(Microsoft.Azure.NotificationHubs.NotificationHubJob,System.String)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHub(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  - Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHubAsync(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  langs:
  - csharp
  - vb
  name: NamespaceManager
  nameWithType: NamespaceManager
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: NamespaceManager
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 28
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "This is an anchor class utilized in managing entities, such as queues, topics, subscriptions, and rules, under your namespace. \n         Namespace address and access credentials must be provided to manage your namespace. \n<xref href=\"Microsoft.Azure.NotificationHubs.TokenProvider\" data-throw-if-not-resolved=\"false\"></xref>"
  example:
  - "\n<pre><code> NamespaceManagerSettings nsSettings =  new NamespaceManagerSettings(); // with credentials and operation timeout\n  NamespaceManager manager = new NamespaceManager(new Uri(\"baseUri\"), NsSettings);</code></pre>\n"
  syntax:
    content: public sealed class NamespaceManager
    content.vb: Public NotInheritable Class NamespaceManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.ProtocolVersion
  commentId: F:Microsoft.Azure.NotificationHubs.NamespaceManager.ProtocolVersion
  id: ProtocolVersion
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: ProtocolVersion
  nameWithType: NamespaceManager.ProtocolVersion
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.ProtocolVersion
  type: Field
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: ProtocolVersion
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 33
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nSpecifies the string of the format \"YYYY-MM\" that indicates the client's protocol version.\n"
  example: []
  syntax:
    content: public const string ProtocolVersion = "2016-07"
    content.vb: Public Const ProtocolVersion As String = "2016-07"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(String)
  nameWithType: NamespaceManager.NamespaceManager(String)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.String)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 45
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base address to access your namespace. Anonymous credentials are assumed.\n"
  example: []
  syntax:
    content: public NamespaceManager(string address)
    content.vb: Public Sub New(address As String)
    parameters:
    - id: address
      type: System.String
      description: The full address of the namespace.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when address is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String})'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(IEnumerable<String>)
  nameWithType: NamespaceManager.NamespaceManager(IEnumerable<String>)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 58
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base addresses to access your namespace. Anonymous credentials are assumed.\n"
  example: []
  syntax:
    content: public NamespaceManager(IEnumerable<string> addresses)
    content.vb: Public Sub New(addresses As IEnumerable(Of String))
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The full addresses of the namespace.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when addresses field is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when addresses list is null or empty.
  nameWithType.vb: NamespaceManager.NamespaceManager(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: NamespaceManager(IEnumerable(Of String))
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(Uri)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(Uri)
  id: '#ctor(Uri)'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(Uri)
  nameWithType: NamespaceManager.NamespaceManager(Uri)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(Uri)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 69
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base addresses to access your namespace. Anonymous credentials are assumed.\n"
  example: []
  syntax:
    content: public NamespaceManager(Uri address)
    content.vb: Public Sub New(address As Uri)
    parameters:
    - id: address
      type: Uri
      description: The full address of the namespace.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when address is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{Uri})
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{Uri})
  id: '#ctor(System.Collections.Generic.IEnumerable{Uri})'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(IEnumerable<Uri>)
  nameWithType: NamespaceManager.NamespaceManager(IEnumerable<Uri>)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable<Uri>)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 81
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base addresses to access your namespace. Anonymous credentials are assumed.\n"
  example: []
  syntax:
    content: public NamespaceManager(IEnumerable<Uri> addresses)
    content.vb: Public Sub New(addresses As IEnumerable(Of Uri))
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{Uri}
      description: The full addresses of the namespace.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when addresses field is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when addresses list is null or empty.
  nameWithType.vb: NamespaceManager.NamespaceManager(IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable(Of Uri))
  name.vb: NamespaceManager(IEnumerable(Of Uri))
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.String,Microsoft.Azure.NotificationHubs.TokenProvider)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.String,Microsoft.Azure.NotificationHubs.TokenProvider)
  id: '#ctor(System.String,Microsoft.Azure.NotificationHubs.TokenProvider)'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(String, TokenProvider)
  nameWithType: NamespaceManager.NamespaceManager(String, TokenProvider)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.String, Microsoft.Azure.NotificationHubs.TokenProvider)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 97
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base addresses to access your namespace. Anonymous credentials are assumed.\n"
  remarks: "\nEven though it is not allowed to include paths in the namespace address, you can specify a credential that authorizes you to perform actions only on\nsome sublevels off of the base address.\n"
  example: []
  syntax:
    content: public NamespaceManager(string address, TokenProvider tokenProvider)
    content.vb: Public Sub New(address As String, tokenProvider As TokenProvider)
    parameters:
    - id: address
      type: System.String
      description: The full address of the namespace.
    - id: tokenProvider
      type: Microsoft.Azure.NotificationHubs.TokenProvider
      description: The namespace access credentials.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when address is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.NotificationHubs.TokenProvider)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.NotificationHubs.TokenProvider)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.NotificationHubs.TokenProvider)'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(IEnumerable<String>, TokenProvider)
  nameWithType: NamespaceManager.NamespaceManager(IEnumerable<String>, TokenProvider)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable<System.String>, Microsoft.Azure.NotificationHubs.TokenProvider)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 115
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base addresses to access your namespace. Anonymous credentials are assumed.\n"
  remarks: "\nEven though it is not allowed to include paths in the namespace addresses, you can specify a credential that authorizes you to perform actions only on\nsome sublevels off of the base addresses.\n"
  example: []
  syntax:
    content: public NamespaceManager(IEnumerable<string> addresses, TokenProvider tokenProvider)
    content.vb: Public Sub New(addresses As IEnumerable(Of String), tokenProvider As TokenProvider)
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The full addresses of the namespace.
    - id: tokenProvider
      type: Microsoft.Azure.NotificationHubs.TokenProvider
      description: The namespace access credentials.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when addresses field is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when addresses list is null or empty.
  nameWithType.vb: NamespaceManager.NamespaceManager(IEnumerable(Of String), TokenProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable(Of System.String), Microsoft.Azure.NotificationHubs.TokenProvider)
  name.vb: NamespaceManager(IEnumerable(Of String), TokenProvider)
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(Uri,Microsoft.Azure.NotificationHubs.TokenProvider)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(Uri,Microsoft.Azure.NotificationHubs.TokenProvider)
  id: '#ctor(Uri,Microsoft.Azure.NotificationHubs.TokenProvider)'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(Uri, TokenProvider)
  nameWithType: NamespaceManager.NamespaceManager(Uri, TokenProvider)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(Uri, Microsoft.Azure.NotificationHubs.TokenProvider)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 133
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base addresses to access your namespace. Anonymous credentials are assumed.\n"
  remarks: "\nEven though it is not allowed to include paths in the namespace address, you can specify a credential that authorizes you to perform actions only on\nsome sublevels off of the base address, i.e. it is not a must that the credentials you specify be to the base adress itself\n"
  example: []
  syntax:
    content: public NamespaceManager(Uri address, TokenProvider tokenProvider)
    content.vb: Public Sub New(address As Uri, tokenProvider As TokenProvider)
    parameters:
    - id: address
      type: Uri
      description: The full address of the namespace.
    - id: tokenProvider
      type: Microsoft.Azure.NotificationHubs.TokenProvider
      description: A TokenProvider for the namespace
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if address is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: >-
      Thrown when the type is not a supported Credential type.

      See <xref href="Microsoft.Azure.NotificationHubs.NamespaceManagerSettings.TokenProvider" data-throw-if-not-resolved="false"></xref> to know more about the supported types.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{Uri},Microsoft.Azure.NotificationHubs.TokenProvider)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{Uri},Microsoft.Azure.NotificationHubs.TokenProvider)
  id: '#ctor(System.Collections.Generic.IEnumerable{Uri},Microsoft.Azure.NotificationHubs.TokenProvider)'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(IEnumerable<Uri>, TokenProvider)
  nameWithType: NamespaceManager.NamespaceManager(IEnumerable<Uri>, TokenProvider)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable<Uri>, Microsoft.Azure.NotificationHubs.TokenProvider)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 158
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base addresses to access your namespace. Anonymous credentials are assumed.\n"
  remarks: "\nEven though it is not allowed to include paths in the namespace addresses, you can specify a credential that authorizes you to perform actions only on\nsome sublevels off of the base addresses, i.e. it is not a must that the credentials you specify be to the base adresses itself\n"
  example: []
  syntax:
    content: public NamespaceManager(IEnumerable<Uri> addresses, TokenProvider tokenProvider)
    content.vb: Public Sub New(addresses As IEnumerable(Of Uri), tokenProvider As TokenProvider)
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{Uri}
      description: The full address of the namespace.
    - id: tokenProvider
      type: Microsoft.Azure.NotificationHubs.TokenProvider
      description: A TokenProvider for the namespace
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if addresses is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: >-
      Thrown when the type is not a supported Credential type.

      See <xref href="Microsoft.Azure.NotificationHubs.NamespaceManagerSettings.TokenProvider" data-throw-if-not-resolved="false"></xref> to know more about the supported types.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when addresses list is null or empty.
  nameWithType.vb: NamespaceManager.NamespaceManager(IEnumerable(Of Uri), TokenProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable(Of Uri), Microsoft.Azure.NotificationHubs.TokenProvider)
  name.vb: NamespaceManager(IEnumerable(Of Uri), TokenProvider)
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.String,Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.String,Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  id: '#ctor(System.String,Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(String, NamespaceManagerSettings)
  nameWithType: NamespaceManager.NamespaceManager(String, NamespaceManagerSettings)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.String, Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 180
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base addresses to access your namespace. Anonymous credentials are assumed.\n"
  remarks: "\nEven though it is not allowed to include paths in the namespace address, you can specify a credential that authorizes you to perform actions only on\nsome sublevels off of the base address, i.e. it is not a must that the credentials you specify be to the base adress itself\n"
  example: []
  syntax:
    content: public NamespaceManager(string address, NamespaceManagerSettings settings)
    content.vb: Public Sub New(address As String, settings As NamespaceManagerSettings)
    parameters:
    - id: address
      type: System.String
      description: The full address of the namespace.
    - id: settings
      type: Microsoft.Azure.NotificationHubs.NamespaceManagerSettings
      description: Contains the ServiceBusCredential as well as an OperationTimeout property.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when address or settings is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(IEnumerable<String>, NamespaceManagerSettings)
  nameWithType: NamespaceManager.NamespaceManager(IEnumerable<String>, NamespaceManagerSettings)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable<System.String>, Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 198
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base addresses to access your namespace. Anonymous credentials are assumed.\n"
  remarks: "\nEven though it is not allowed to include paths in the namespace address, you can specify a credential that authorizes you to perform actions only on\nsome sublevels off of the base addresses, i.e. it is not a must that the credentials you specify be to the base adresses itself\n"
  example: []
  syntax:
    content: public NamespaceManager(IEnumerable<string> addresses, NamespaceManagerSettings settings)
    content.vb: Public Sub New(addresses As IEnumerable(Of String), settings As NamespaceManagerSettings)
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The full addresses of the namespace.
    - id: settings
      type: Microsoft.Azure.NotificationHubs.NamespaceManagerSettings
      description: Contains the ServiceBusCredential as well as an OperationTimeout property.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when address or settings is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when addresses list is null or empty.
  nameWithType.vb: NamespaceManager.NamespaceManager(IEnumerable(Of String), NamespaceManagerSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable(Of System.String), Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  name.vb: NamespaceManager(IEnumerable(Of String), NamespaceManagerSettings)
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(Uri,Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(Uri,Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  id: '#ctor(Uri,Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(Uri, NamespaceManagerSettings)
  nameWithType: NamespaceManager.NamespaceManager(Uri, NamespaceManagerSettings)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(Uri, Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 214
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base addresses to access your namespace. Anonymous credentials are assumed.\n"
  remarks: "\nEven though it is not allowed to include paths in the namespace address, you can specify a credential that authorizes you to perform actions only on\nsome sublevels off of the base address, i.e. it is not a must that the credentials you specify be to the base adress itself\n"
  example: []
  syntax:
    content: public NamespaceManager(Uri address, NamespaceManagerSettings settings)
    content.vb: Public Sub New(address As Uri, settings As NamespaceManagerSettings)
    parameters:
    - id: address
      type: Uri
      description: The full address of the namespace.
    - id: settings
      type: Microsoft.Azure.NotificationHubs.NamespaceManagerSettings
      description: Contains the ServiceBusCredential as well as an OperationTimeout property.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when address or settings is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{Uri},Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{Uri},Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  id: '#ctor(System.Collections.Generic.IEnumerable{Uri},Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)'
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NamespaceManager(IEnumerable<Uri>, NamespaceManagerSettings)
  nameWithType: NamespaceManager.NamespaceManager(IEnumerable<Uri>, NamespaceManagerSettings)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable<Uri>, Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: .ctor
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 231
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\nYou must supply your base addresses to access your namespace. Anonymous credentials are assumed.\n"
  remarks: "\nEven though it is not allowed to include paths in the namespace addresses, you can specify a credential that authorizes you to perform actions only on\nsome sublevels off of the base addresses, i.e. it is not a must that the credentials you specify be to the base adresses itself\n"
  example: []
  syntax:
    content: public NamespaceManager(IEnumerable<Uri> addresses, NamespaceManagerSettings settings)
    content.vb: Public Sub New(addresses As IEnumerable(Of Uri), settings As NamespaceManagerSettings)
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{Uri}
      description: The full address of the namespace.
    - id: settings
      type: Microsoft.Azure.NotificationHubs.NamespaceManagerSettings
      description: Contains the ServiceBusCredential as well as an OperationTimeout property.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when addresses or settings is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when addresses list is null or empty.
  nameWithType.vb: NamespaceManager.NamespaceManager(IEnumerable(Of Uri), NamespaceManagerSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager(System.Collections.Generic.IEnumerable(Of Uri), Microsoft.Azure.NotificationHubs.NamespaceManagerSettings)
  name.vb: NamespaceManager(IEnumerable(Of Uri), NamespaceManagerSettings)
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.Address
  commentId: P:Microsoft.Azure.NotificationHubs.NamespaceManager.Address
  id: Address
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: NamespaceManager.Address
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.Address
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Address
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 250
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the first namespace base address.\n"
  example: []
  syntax:
    content: public Uri Address { get; }
    content.vb: Public ReadOnly Property Address As Uri
    parameters: []
    return:
      type: Uri
      description: "\nThe namespace base address.\n"
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.Address*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.Settings
  commentId: P:Microsoft.Azure.NotificationHubs.NamespaceManager.Settings
  id: Settings
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: NamespaceManager.Settings
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.Settings
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Settings
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 264
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the namespace manager settings.\n"
  example: []
  syntax:
    content: public NamespaceManagerSettings Settings { get; }
    content.vb: Public ReadOnly Property Settings As NamespaceManagerSettings
    parameters: []
    return:
      type: Microsoft.Azure.NotificationHubs.NamespaceManagerSettings
      description: "\nThe namespace manager settings.\n"
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.Settings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.Create
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.Create
  id: Create
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: NamespaceManager.Create()
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.Create()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Create
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 276
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nCreates an instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public static NamespaceManager Create()
    content.vb: Public Shared Function Create As NamespaceManager
    return:
      type: Microsoft.Azure.NotificationHubs.NamespaceManager
      description: An instance of the <xref href="Microsoft.Azure.NotificationHubs.NamespaceManager" data-throw-if-not-resolved="false"></xref> class
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateFromConnectionString(System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.CreateFromConnectionString(System.String)
  id: CreateFromConnectionString(System.String)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String)
  nameWithType: NamespaceManager.CreateFromConnectionString(String)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateFromConnectionString(System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: CreateFromConnectionString
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 287
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nCreates an instance of the <xref href=\"Microsoft.Azure.NotificationHubs.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> class based on key-value configuration connection string.\n"
  example: []
  syntax:
    content: public static NamespaceManager CreateFromConnectionString(string connectionString)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String) As NamespaceManager
    parameters:
    - id: connectionString
      type: System.String
      description: The connection string.
    return:
      type: Microsoft.Azure.NotificationHubs.NamespaceManager
      description: An instance of the <xref href="Microsoft.Azure.NotificationHubs.NamespaceManager" data-throw-if-not-resolved="false"></xref> class
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateFromConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfo
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfo
  id: GetVersionInfo
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: GetVersionInfo()
  nameWithType: NamespaceManager.GetVersionInfo()
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfo()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: GetVersionInfo
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 297
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the version information.\n"
  example: []
  syntax:
    content: public string GetVersionInfo()
    content.vb: Public Function GetVersionInfo As String
    return:
      type: System.String
      description: The version information
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfoAsync
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfoAsync
  id: GetVersionInfoAsync
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: GetVersionInfoAsync()
  nameWithType: NamespaceManager.GetVersionInfoAsync()
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfoAsync()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: GetVersionInfoAsync
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 306
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the version information asynchronously.\n"
  example: []
  syntax:
    content: public Task<string> GetVersionInfoAsync()
    content.vb: Public Function GetVersionInfoAsync As Task(Of String)
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A task that represents the asynchronous version information extraction operation
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfoAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.BeginGetVersionInfo(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.BeginGetVersionInfo(System.AsyncCallback,System.Object)
  id: BeginGetVersionInfo(System.AsyncCallback,System.Object)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: BeginGetVersionInfo(AsyncCallback, Object)
  nameWithType: NamespaceManager.BeginGetVersionInfo(AsyncCallback, Object)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.BeginGetVersionInfo(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: BeginGetVersionInfo
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 319
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nBegins an asynchronous get version information operation.\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetVersionInfo(AsyncCallback callback, object state)
    content.vb: Public Function BeginGetVersionInfo(callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: The method to be called when the asynchronous operation is completed.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous operation request from other requests.
    return:
      type: System.IAsyncResult
      description: An object that references the asynchronous result
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.BeginGetVersionInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.EndGetVersionInfo(System.IAsyncResult)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.EndGetVersionInfo(System.IAsyncResult)
  id: EndGetVersionInfo(System.IAsyncResult)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: EndGetVersionInfo(IAsyncResult)
  nameWithType: NamespaceManager.EndGetVersionInfo(IAsyncResult)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.EndGetVersionInfo(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: EndGetVersionInfo
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 331
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nWaits for the pending asynchronous get version information to complete.\n"
  example: []
  syntax:
    content: public string EndGetVersionInfo(IAsyncResult result)
    content.vb: Public Function EndGetVersionInfo(result As IAsyncResult) As String
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to wait for.
    return:
      type: System.String
      description: The version information
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.EndGetVersionInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHub(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHub(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  id: CreateNotificationHub(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: CreateNotificationHub(NotificationHubDescription)
  nameWithType: NamespaceManager.CreateNotificationHub(NotificationHubDescription)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHub(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: CreateNotificationHub
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 346
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nCreates a notification hub.\n"
  example: []
  syntax:
    content: public NotificationHubDescription CreateNotificationHub(NotificationHubDescription description)
    content.vb: Public Function CreateNotificationHub(description As NotificationHubDescription) As NotificationHubDescription
    parameters:
    - id: description
      type: Microsoft.Azure.NotificationHubs.NotificationHubDescription
      description: The notification hub description.
    return:
      type: Microsoft.Azure.NotificationHubs.NotificationHubDescription
      description: An instance of the <xref href="Microsoft.Azure.NotificationHubs.NotificationHubDescription" data-throw-if-not-resolved="false"></xref> class
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHub*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHubAsync(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHubAsync(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  id: CreateNotificationHubAsync(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: CreateNotificationHubAsync(NotificationHubDescription)
  nameWithType: NamespaceManager.CreateNotificationHubAsync(NotificationHubDescription)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHubAsync(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: CreateNotificationHubAsync
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 356
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nCreates the notification hub asynchronously.\n"
  example: []
  syntax:
    content: public Task<NotificationHubDescription> CreateNotificationHubAsync(NotificationHubDescription description)
    content.vb: Public Function CreateNotificationHubAsync(description As NotificationHubDescription) As Task(Of NotificationHubDescription)
    parameters:
    - id: description
      type: Microsoft.Azure.NotificationHubs.NotificationHubDescription
      description: The notification hub description.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.NotificationHubs.NotificationHubDescription}
      description: A task that represents the asynchronous create hub operation
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHubAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHub(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHub(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  id: UpdateNotificationHub(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: UpdateNotificationHub(NotificationHubDescription)
  nameWithType: NamespaceManager.UpdateNotificationHub(NotificationHubDescription)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHub(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: UpdateNotificationHub
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 380
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nUpdates the notification hub.\n"
  example: []
  syntax:
    content: public NotificationHubDescription UpdateNotificationHub(NotificationHubDescription description)
    content.vb: Public Function UpdateNotificationHub(description As NotificationHubDescription) As NotificationHubDescription
    parameters:
    - id: description
      type: Microsoft.Azure.NotificationHubs.NotificationHubDescription
      description: The notification hub description.
    return:
      type: Microsoft.Azure.NotificationHubs.NotificationHubDescription
      description: The updated hub object
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHub*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHubAsync(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHubAsync(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  id: UpdateNotificationHubAsync(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: UpdateNotificationHubAsync(NotificationHubDescription)
  nameWithType: NamespaceManager.UpdateNotificationHubAsync(NotificationHubDescription)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHubAsync(Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: UpdateNotificationHubAsync
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 390
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nUpdates the notification hub asynchronously.\n"
  example: []
  syntax:
    content: public Task<NotificationHubDescription> UpdateNotificationHubAsync(NotificationHubDescription description)
    content.vb: Public Function UpdateNotificationHubAsync(description As NotificationHubDescription) As Task(Of NotificationHubDescription)
    parameters:
    - id: description
      type: Microsoft.Azure.NotificationHubs.NotificationHubDescription
      description: The description.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.NotificationHubs.NotificationHubDescription}
      description: A task that represents the asynchronous hub update operation
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHubAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteRegistration(System.IAsyncResult)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteRegistration(System.IAsyncResult)
  id: EndDeleteRegistration(System.IAsyncResult)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: EndDeleteRegistration(IAsyncResult)
  nameWithType: NamespaceManager.EndDeleteRegistration(IAsyncResult)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteRegistration(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: EndDeleteRegistration
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 450
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nWaits for the pending asynchronous delete registration operation.\n"
  example: []
  syntax:
    content: public void EndDeleteRegistration(IAsyncResult result)
    content.vb: Public Sub EndDeleteRegistration(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to wait for.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteRegistration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHub(System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHub(System.String)
  id: DeleteNotificationHub(System.String)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: DeleteNotificationHub(String)
  nameWithType: NamespaceManager.DeleteNotificationHub(String)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHub(System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: DeleteNotificationHub
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 459
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nDeletes the notification hub.\n"
  example: []
  syntax:
    content: public void DeleteNotificationHub(string path)
    content.vb: Public Sub DeleteNotificationHub(path As String)
    parameters:
    - id: path
      type: System.String
      description: The notification hub path.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHub*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHubAsync(System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHubAsync(System.String)
  id: DeleteNotificationHubAsync(System.String)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: DeleteNotificationHubAsync(String)
  nameWithType: NamespaceManager.DeleteNotificationHubAsync(String)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHubAsync(System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: DeleteNotificationHubAsync
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 469
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nDeletes the notification hub asynchronously.\n"
  example: []
  syntax:
    content: public Task DeleteNotificationHubAsync(string path)
    content.vb: Public Function DeleteNotificationHubAsync(path As String) As Task
    parameters:
    - id: path
      type: System.String
      description: The notification hub path.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous delete operation
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHubAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.SubmitNotificationHubJobAsync(Microsoft.Azure.NotificationHubs.NotificationHubJob,System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.SubmitNotificationHubJobAsync(Microsoft.Azure.NotificationHubs.NotificationHubJob,System.String)
  id: SubmitNotificationHubJobAsync(Microsoft.Azure.NotificationHubs.NotificationHubJob,System.String)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: SubmitNotificationHubJobAsync(NotificationHubJob, String)
  nameWithType: NamespaceManager.SubmitNotificationHubJobAsync(NotificationHubJob, String)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.SubmitNotificationHubJobAsync(Microsoft.Azure.NotificationHubs.NotificationHubJob, System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: SubmitNotificationHubJobAsync
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 500
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nSubmits the notification hub job asynchronously.\n"
  example: []
  syntax:
    content: public Task<NotificationHubJob> SubmitNotificationHubJobAsync(NotificationHubJob job, string notificationHubPath)
    content.vb: Public Function SubmitNotificationHubJobAsync(job As NotificationHubJob, notificationHubPath As String) As Task(Of NotificationHubJob)
    parameters:
    - id: job
      type: Microsoft.Azure.NotificationHubs.NotificationHubJob
      description: The job to submit.
    - id: notificationHubPath
      type: System.String
      description: The notification hub path.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.NotificationHubs.NotificationHubJob}
      description: A task that represents the asynchronous get job operation
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.SubmitNotificationHubJobAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobAsync(System.String,System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobAsync(System.String,System.String)
  id: GetNotificationHubJobAsync(System.String,System.String)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: GetNotificationHubJobAsync(String, String)
  nameWithType: NamespaceManager.GetNotificationHubJobAsync(String, String)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: GetNotificationHubJobAsync
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 522
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the notification hub job asynchronously.\n"
  example: []
  syntax:
    content: public Task<NotificationHubJob> GetNotificationHubJobAsync(string jobId, string notificationHubPath)
    content.vb: Public Function GetNotificationHubJobAsync(jobId As String, notificationHubPath As String) As Task(Of NotificationHubJob)
    parameters:
    - id: jobId
      type: System.String
      description: The job identifier.
    - id: notificationHubPath
      type: System.String
      description: The notification hub path.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.NotificationHubs.NotificationHubJob}
      description: A task that represents the asynchronous get job operation
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobsAsync(System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobsAsync(System.String)
  id: GetNotificationHubJobsAsync(System.String)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: GetNotificationHubJobsAsync(String)
  nameWithType: NamespaceManager.GetNotificationHubJobsAsync(String)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobsAsync(System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: GetNotificationHubJobsAsync
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 537
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the notification hub jobs asynchronous.\n"
  example: []
  syntax:
    content: public Task<IEnumerable<NotificationHubJob>> GetNotificationHubJobsAsync(string notificationHubPath)
    content.vb: Public Function GetNotificationHubJobsAsync(notificationHubPath As String) As Task(Of IEnumerable(Of NotificationHubJob))
    parameters:
    - id: notificationHubPath
      type: System.String
      description: The notification hub path.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.NotificationHubJob}}
      description: A task that represents the asynchronous get job operation
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHub(System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHub(System.String)
  id: GetNotificationHub(System.String)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: GetNotificationHub(String)
  nameWithType: NamespaceManager.GetNotificationHub(String)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHub(System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: GetNotificationHub
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 571
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the notification hub.\n"
  example: []
  syntax:
    content: public NotificationHubDescription GetNotificationHub(string path)
    content.vb: Public Function GetNotificationHub(path As String) As NotificationHubDescription
    parameters:
    - id: path
      type: System.String
      description: The notification hub path.
    return:
      type: Microsoft.Azure.NotificationHubs.NotificationHubDescription
      description: A notification hub description object.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHub*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubAsync(System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubAsync(System.String)
  id: GetNotificationHubAsync(System.String)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: GetNotificationHubAsync(String)
  nameWithType: NamespaceManager.GetNotificationHubAsync(String)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubAsync(System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: GetNotificationHubAsync
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 581
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the notification hub asynchronously.\n"
  example: []
  syntax:
    content: public Task<NotificationHubDescription> GetNotificationHubAsync(string path)
    content.vb: Public Function GetNotificationHubAsync(path As String) As Task(Of NotificationHubDescription)
    parameters:
    - id: path
      type: System.String
      description: The notification hub path.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.NotificationHubs.NotificationHubDescription}
      description: A task that represents the asynchronous get hub operation
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExists(System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExists(System.String)
  id: NotificationHubExists(System.String)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NotificationHubExists(String)
  nameWithType: NamespaceManager.NotificationHubExists(String)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExists(System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: NotificationHubExists
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 616
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nChecks whether a notifications hub exists.\n"
  example: []
  syntax:
    content: public bool NotificationHubExists(string path)
    content.vb: Public Function NotificationHubExists(path As String) As Boolean
    parameters:
    - id: path
      type: System.String
      description: The notification hub path.
    return:
      type: System.Boolean
      description: True if the hub exists
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExistsAsync(System.String)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExistsAsync(System.String)
  id: NotificationHubExistsAsync(System.String)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: NotificationHubExistsAsync(String)
  nameWithType: NamespaceManager.NotificationHubExistsAsync(String)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExistsAsync(System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: NotificationHubExistsAsync
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 626
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nChecks whether a notification hub exists asynchronously.\n"
  example: []
  syntax:
    content: public Task<bool> NotificationHubExistsAsync(string path)
    content.vb: Public Function NotificationHubExistsAsync(path As String) As Task(Of Boolean)
    parameters:
    - id: path
      type: System.String
      description: The notification hub path.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous hub check operation
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExistsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubs
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubs
  id: GetNotificationHubs
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: GetNotificationHubs()
  nameWithType: NamespaceManager.GetNotificationHubs()
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubs()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: GetNotificationHubs
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 663
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the notification hubs.\n"
  example: []
  syntax:
    content: public IEnumerable<NotificationHubDescription> GetNotificationHubs()
    content.vb: Public Function GetNotificationHubs As IEnumerable(Of NotificationHubDescription)
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.NotificationHubDescription}
      description: A collection of notification hubs
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubsAsync
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubsAsync
  id: GetNotificationHubsAsync
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: GetNotificationHubsAsync()
  nameWithType: NamespaceManager.GetNotificationHubsAsync()
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubsAsync()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: GetNotificationHubsAsync
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 672
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets the notification hubs asynchronously.\n"
  example: []
  syntax:
    content: public Task<IEnumerable<NotificationHubDescription>> GetNotificationHubsAsync()
    content.vb: Public Function GetNotificationHubsAsync As Task(Of IEnumerable(Of NotificationHubDescription))
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.NotificationHubDescription}}
      description: A task that represents the asynchronous get hubs operation
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteInstallation(System.IAsyncResult)
  commentId: M:Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteInstallation(System.IAsyncResult)
  id: EndDeleteInstallation(System.IAsyncResult)
  parent: Microsoft.Azure.NotificationHubs.NamespaceManager
  langs:
  - csharp
  - vb
  name: EndDeleteInstallation(IAsyncResult)
  nameWithType: NamespaceManager.EndDeleteInstallation(IAsyncResult)
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteInstallation(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/NamespaceManager.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: EndDeleteInstallation
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/NamespaceManager.cs
    startLine: 762
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nWaits for the pending asynchronous delete installation to complete.\n"
  example: []
  syntax:
    content: public void EndDeleteInstallation(IAsyncResult result)
    content.vb: Public Sub EndDeleteInstallation(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to wait for.
  overload: Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteInstallation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.NotificationHubs.TokenProvider
  commentId: T:Microsoft.Azure.NotificationHubs.TokenProvider
  parent: Microsoft.Azure.NotificationHubs
  isExternal: false
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: Microsoft.Azure.NotificationHubs.TokenProvider
- uid: Microsoft.Azure.NotificationHubs
  commentId: N:Microsoft.Azure.NotificationHubs
  isExternal: false
  name: Microsoft.Azure.NotificationHubs
  nameWithType: Microsoft.Azure.NotificationHubs
  fullName: Microsoft.Azure.NotificationHubs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager
  commentId: T:Microsoft.Azure.NotificationHubs.NamespaceManager
  parent: Microsoft.Azure.NotificationHubs
  isExternal: false
  name: NamespaceManager
  nameWithType: NamespaceManager
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.#ctor
  isExternal: false
  name: NamespaceManager
  nameWithType: NamespaceManager.NamespaceManager
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NamespaceManager
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: System.Collections.Generic.IEnumerable{Uri}
  commentId: T:System.Collections.Generic.IEnumerable{Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<Uri>
  nameWithType.vb: IEnumerable(Of Uri)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Uri)
  name.vb: IEnumerable(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.NotificationHubs.NamespaceManagerSettings.TokenProvider
  commentId: P:Microsoft.Azure.NotificationHubs.NamespaceManagerSettings.TokenProvider
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: Microsoft.Azure.NotificationHubs.NamespaceManagerSettings
  commentId: T:Microsoft.Azure.NotificationHubs.NamespaceManagerSettings
  parent: Microsoft.Azure.NotificationHubs
  isExternal: false
  name: NamespaceManagerSettings
  nameWithType: NamespaceManagerSettings
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManagerSettings
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.Address*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.Address
  isExternal: false
  name: Address
  nameWithType: NamespaceManager.Address
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.Address
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.Settings*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.Settings
  isExternal: false
  name: Settings
  nameWithType: NamespaceManager.Settings
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.Settings
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.Create*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.Create
  isExternal: false
  name: Create
  nameWithType: NamespaceManager.Create
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.Create
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateFromConnectionString*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.CreateFromConnectionString
  isExternal: false
  name: CreateFromConnectionString
  nameWithType: NamespaceManager.CreateFromConnectionString
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateFromConnectionString
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfo*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfo
  isExternal: false
  name: GetVersionInfo
  nameWithType: NamespaceManager.GetVersionInfo
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfo
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfoAsync*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfoAsync
  isExternal: false
  name: GetVersionInfoAsync
  nameWithType: NamespaceManager.GetVersionInfoAsync
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetVersionInfoAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.BeginGetVersionInfo*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.BeginGetVersionInfo
  isExternal: false
  name: BeginGetVersionInfo
  nameWithType: NamespaceManager.BeginGetVersionInfo
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.BeginGetVersionInfo
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.EndGetVersionInfo*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.EndGetVersionInfo
  isExternal: false
  name: EndGetVersionInfo
  nameWithType: NamespaceManager.EndGetVersionInfo
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.EndGetVersionInfo
- uid: Microsoft.Azure.NotificationHubs.NotificationHubDescription
  commentId: T:Microsoft.Azure.NotificationHubs.NotificationHubDescription
  parent: Microsoft.Azure.NotificationHubs
  isExternal: false
  name: NotificationHubDescription
  nameWithType: NotificationHubDescription
  fullName: Microsoft.Azure.NotificationHubs.NotificationHubDescription
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHub*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHub
  isExternal: false
  name: CreateNotificationHub
  nameWithType: NamespaceManager.CreateNotificationHub
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHub
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHubAsync*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHubAsync
  isExternal: false
  name: CreateNotificationHubAsync
  nameWithType: NamespaceManager.CreateNotificationHubAsync
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.CreateNotificationHubAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.NotificationHubs.NotificationHubDescription}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.NotificationHubs.NotificationHubDescription}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<NotificationHubDescription>
  nameWithType: Task<NotificationHubDescription>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.NotificationHubs.NotificationHubDescription>
  nameWithType.vb: Task(Of NotificationHubDescription)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  name.vb: Task(Of NotificationHubDescription)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.NotificationHubs.NotificationHubDescription
    name: NotificationHubDescription
    nameWithType: NotificationHubDescription
    fullName: Microsoft.Azure.NotificationHubs.NotificationHubDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.NotificationHubs.NotificationHubDescription
    name: NotificationHubDescription
    nameWithType: NotificationHubDescription
    fullName: Microsoft.Azure.NotificationHubs.NotificationHubDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHub*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHub
  isExternal: false
  name: UpdateNotificationHub
  nameWithType: NamespaceManager.UpdateNotificationHub
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHub
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHubAsync*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHubAsync
  isExternal: false
  name: UpdateNotificationHubAsync
  nameWithType: NamespaceManager.UpdateNotificationHubAsync
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.UpdateNotificationHubAsync
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteRegistration*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteRegistration
  isExternal: false
  name: EndDeleteRegistration
  nameWithType: NamespaceManager.EndDeleteRegistration
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteRegistration
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHub*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHub
  isExternal: false
  name: DeleteNotificationHub
  nameWithType: NamespaceManager.DeleteNotificationHub
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHub
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHubAsync*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHubAsync
  isExternal: false
  name: DeleteNotificationHubAsync
  nameWithType: NamespaceManager.DeleteNotificationHubAsync
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.DeleteNotificationHubAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.SubmitNotificationHubJobAsync*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.SubmitNotificationHubJobAsync
  isExternal: false
  name: SubmitNotificationHubJobAsync
  nameWithType: NamespaceManager.SubmitNotificationHubJobAsync
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.SubmitNotificationHubJobAsync
- uid: Microsoft.Azure.NotificationHubs.NotificationHubJob
  commentId: T:Microsoft.Azure.NotificationHubs.NotificationHubJob
  parent: Microsoft.Azure.NotificationHubs
  isExternal: false
  name: NotificationHubJob
  nameWithType: NotificationHubJob
  fullName: Microsoft.Azure.NotificationHubs.NotificationHubJob
- uid: System.Threading.Tasks.Task{Microsoft.Azure.NotificationHubs.NotificationHubJob}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.NotificationHubs.NotificationHubJob}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<NotificationHubJob>
  nameWithType: Task<NotificationHubJob>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.NotificationHubs.NotificationHubJob>
  nameWithType.vb: Task(Of NotificationHubJob)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.NotificationHubs.NotificationHubJob)
  name.vb: Task(Of NotificationHubJob)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.NotificationHubs.NotificationHubJob
    name: NotificationHubJob
    nameWithType: NotificationHubJob
    fullName: Microsoft.Azure.NotificationHubs.NotificationHubJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.NotificationHubs.NotificationHubJob
    name: NotificationHubJob
    nameWithType: NotificationHubJob
    fullName: Microsoft.Azure.NotificationHubs.NotificationHubJob
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobAsync*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobAsync
  isExternal: false
  name: GetNotificationHubJobAsync
  nameWithType: NamespaceManager.GetNotificationHubJobAsync
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobAsync
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobsAsync*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobsAsync
  isExternal: false
  name: GetNotificationHubJobsAsync
  nameWithType: NamespaceManager.GetNotificationHubJobsAsync
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubJobsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.NotificationHubJob}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.NotificationHubJob}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<NotificationHubJob>>
  nameWithType: Task<IEnumerable<NotificationHubJob>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.Azure.NotificationHubs.NotificationHubJob>>
  nameWithType.vb: Task(Of IEnumerable(Of NotificationHubJob))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Microsoft.Azure.NotificationHubs.NotificationHubJob))
  name.vb: Task(Of IEnumerable(Of NotificationHubJob))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.NotificationHubs.NotificationHubJob
    name: NotificationHubJob
    nameWithType: NotificationHubJob
    fullName: Microsoft.Azure.NotificationHubs.NotificationHubJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.NotificationHubs.NotificationHubJob
    name: NotificationHubJob
    nameWithType: NotificationHubJob
    fullName: Microsoft.Azure.NotificationHubs.NotificationHubJob
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHub*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHub
  isExternal: false
  name: GetNotificationHub
  nameWithType: NamespaceManager.GetNotificationHub
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHub
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubAsync*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubAsync
  isExternal: false
  name: GetNotificationHubAsync
  nameWithType: NamespaceManager.GetNotificationHubAsync
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubAsync
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExists*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExists
  isExternal: false
  name: NotificationHubExists
  nameWithType: NamespaceManager.NotificationHubExists
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExistsAsync*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExistsAsync
  isExternal: false
  name: NotificationHubExistsAsync
  nameWithType: NamespaceManager.NotificationHubExistsAsync
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.NotificationHubExistsAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubs*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubs
  isExternal: false
  name: GetNotificationHubs
  nameWithType: NamespaceManager.GetNotificationHubs
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubs
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.NotificationHubDescription}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.NotificationHubDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<NotificationHubDescription>
  nameWithType: IEnumerable<NotificationHubDescription>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.NotificationHubs.NotificationHubDescription>
  nameWithType.vb: IEnumerable(Of NotificationHubDescription)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.NotificationHubs.NotificationHubDescription)
  name.vb: IEnumerable(Of NotificationHubDescription)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.NotificationHubs.NotificationHubDescription
    name: NotificationHubDescription
    nameWithType: NotificationHubDescription
    fullName: Microsoft.Azure.NotificationHubs.NotificationHubDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.NotificationHubs.NotificationHubDescription
    name: NotificationHubDescription
    nameWithType: NotificationHubDescription
    fullName: Microsoft.Azure.NotificationHubs.NotificationHubDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubsAsync*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubsAsync
  isExternal: false
  name: GetNotificationHubsAsync
  nameWithType: NamespaceManager.GetNotificationHubsAsync
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.GetNotificationHubsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.NotificationHubDescription}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.NotificationHubDescription}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<NotificationHubDescription>>
  nameWithType: Task<IEnumerable<NotificationHubDescription>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.Azure.NotificationHubs.NotificationHubDescription>>
  nameWithType.vb: Task(Of IEnumerable(Of NotificationHubDescription))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Microsoft.Azure.NotificationHubs.NotificationHubDescription))
  name.vb: Task(Of IEnumerable(Of NotificationHubDescription))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.NotificationHubs.NotificationHubDescription
    name: NotificationHubDescription
    nameWithType: NotificationHubDescription
    fullName: Microsoft.Azure.NotificationHubs.NotificationHubDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.NotificationHubs.NotificationHubDescription
    name: NotificationHubDescription
    nameWithType: NotificationHubDescription
    fullName: Microsoft.Azure.NotificationHubs.NotificationHubDescription
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteInstallation*
  commentId: Overload:Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteInstallation
  isExternal: false
  name: EndDeleteInstallation
  nameWithType: NamespaceManager.EndDeleteInstallation
  fullName: Microsoft.Azure.NotificationHubs.NamespaceManager.EndDeleteInstallation
