### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.NotificationHubs.WnsSecondaryTile
  commentId: T:Microsoft.Azure.NotificationHubs.WnsSecondaryTile
  id: WnsSecondaryTile
  parent: Microsoft.Azure.NotificationHubs
  children:
  - Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannel
  - Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannelExpired
  - Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Tags
  - Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Templates
  langs:
  - csharp
  - vb
  name: WnsSecondaryTile
  nameWithType: WnsSecondaryTile
  fullName: Microsoft.Azure.NotificationHubs.WnsSecondaryTile
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/WnsSecondaryTile.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: WnsSecondaryTile
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/WnsSecondaryTile.cs
    startLine: 12
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nRepresents the WNS secondary tile\n"
  example: []
  syntax:
    content: public class WnsSecondaryTile
    content.vb: Public Class WnsSecondaryTile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannel
  commentId: P:Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannel
  id: PushChannel
  parent: Microsoft.Azure.NotificationHubs.WnsSecondaryTile
  langs:
  - csharp
  - vb
  name: PushChannel
  nameWithType: WnsSecondaryTile.PushChannel
  fullName: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannel
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/WnsSecondaryTile.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: PushChannel
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/WnsSecondaryTile.cs
    startLine: 21
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets the push channel.\n"
  example: []
  syntax:
    content: public string PushChannel { get; set; }
    content.vb: Public Property PushChannel As String
    parameters: []
    return:
      type: System.String
      description: "\nThe push channel.\n"
  overload: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannelExpired
  commentId: P:Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannelExpired
  id: PushChannelExpired
  parent: Microsoft.Azure.NotificationHubs.WnsSecondaryTile
  langs:
  - csharp
  - vb
  name: PushChannelExpired
  nameWithType: WnsSecondaryTile.PushChannelExpired
  fullName: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannelExpired
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/WnsSecondaryTile.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: PushChannelExpired
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/WnsSecondaryTile.cs
    startLine: 30
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets the push channel expiration property.\n"
  example: []
  syntax:
    content: public bool ? PushChannelExpired { get; set; }
    content.vb: Public Property PushChannelExpired As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: "\nThe push channel expiration property.\n"
  overload: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannelExpired*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Tags
  commentId: P:Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Tags
  id: Tags
  parent: Microsoft.Azure.NotificationHubs.WnsSecondaryTile
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: WnsSecondaryTile.Tags
  fullName: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Tags
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/WnsSecondaryTile.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Tags
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/WnsSecondaryTile.cs
    startLine: 39
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets the tags.\n"
  example: []
  syntax:
    content: public IList<string> Tags { get; set; }
    content.vb: Public Property Tags As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "\nThe tags.\n"
  overload: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Templates
  commentId: P:Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Templates
  id: Templates
  parent: Microsoft.Azure.NotificationHubs.WnsSecondaryTile
  langs:
  - csharp
  - vb
  name: Templates
  nameWithType: WnsSecondaryTile.Templates
  fullName: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Templates
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/WnsSecondaryTile.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Templates
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/WnsSecondaryTile.cs
    startLine: 48
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets the dictionary of Templates.\n"
  example: []
  syntax:
    content: public IDictionary<string, InstallationTemplate> Templates { get; set; }
    content.vb: Public Property Templates As IDictionary(Of String, InstallationTemplate)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.NotificationHubs.InstallationTemplate}
      description: "\nThe Dictionary of templates.\n"
  overload: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Templates*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.NotificationHubs
  commentId: N:Microsoft.Azure.NotificationHubs
  isExternal: false
  name: Microsoft.Azure.NotificationHubs
  nameWithType: Microsoft.Azure.NotificationHubs
  fullName: Microsoft.Azure.NotificationHubs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannel*
  commentId: Overload:Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannel
  isExternal: false
  name: PushChannel
  nameWithType: WnsSecondaryTile.PushChannel
  fullName: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannelExpired*
  commentId: Overload:Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannelExpired
  isExternal: false
  name: PushChannelExpired
  nameWithType: WnsSecondaryTile.PushChannelExpired
  fullName: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.PushChannelExpired
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Tags*
  commentId: Overload:Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Tags
  isExternal: false
  name: Tags
  nameWithType: WnsSecondaryTile.Tags
  fullName: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Tags
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Templates*
  commentId: Overload:Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Templates
  isExternal: false
  name: Templates
  nameWithType: WnsSecondaryTile.Templates
  fullName: Microsoft.Azure.NotificationHubs.WnsSecondaryTile.Templates
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.NotificationHubs.InstallationTemplate}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.NotificationHubs.InstallationTemplate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, InstallationTemplate>
  nameWithType: IDictionary<String, InstallationTemplate>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.NotificationHubs.InstallationTemplate>
  nameWithType.vb: IDictionary(Of String, InstallationTemplate)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.NotificationHubs.InstallationTemplate)
  name.vb: IDictionary(Of String, InstallationTemplate)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.NotificationHubs.InstallationTemplate
    name: InstallationTemplate
    nameWithType: InstallationTemplate
    fullName: Microsoft.Azure.NotificationHubs.InstallationTemplate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.NotificationHubs.InstallationTemplate
    name: InstallationTemplate
    nameWithType: InstallationTemplate
    fullName: Microsoft.Azure.NotificationHubs.InstallationTemplate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
