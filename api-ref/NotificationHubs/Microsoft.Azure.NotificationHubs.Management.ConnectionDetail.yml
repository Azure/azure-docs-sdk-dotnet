### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail
  commentId: T:Microsoft.Azure.NotificationHubs.Management.ConnectionDetail
  id: ConnectionDetail
  parent: Microsoft.Azure.NotificationHubs.Management
  children:
  - Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.AuthorizationType
  - Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.ConnectionString
  - Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.KeyName
  - Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.Rights
  - Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.SecondaryConnectionString
  langs:
  - csharp
  - vb
  name: ConnectionDetail
  nameWithType: ConnectionDetail
  fullName: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: ConnectionDetail
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
    startLine: 14
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nRepresents the details associated with the service bus connection.\n"
  example: []
  syntax:
    content: public class ConnectionDetail
    content.vb: Public Class ConnectionDetail
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.KeyName
  commentId: P:Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.KeyName
  id: KeyName
  parent: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail
  langs:
  - csharp
  - vb
  name: KeyName
  nameWithType: ConnectionDetail.KeyName
  fullName: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.KeyName
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: KeyName
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
    startLine: 24
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the key name associated with the connection.\n"
  example: []
  syntax:
    content: public string KeyName { get; set; }
    content.vb: Public Property KeyName As String
    parameters: []
    return:
      type: System.String
      description: "\nThe key name associated with the connection.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.KeyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.ConnectionString
  commentId: P:Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.ConnectionString
  id: ConnectionString
  parent: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: ConnectionDetail.ConnectionString
  fullName: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.ConnectionString
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: ConnectionString
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
    startLine: 35
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the connection string associated with the connection.\n"
  example: []
  syntax:
    content: public string ConnectionString { get; set; }
    content.vb: Public Property ConnectionString As String
    parameters: []
    return:
      type: System.String
      description: "\nThe connection string associated with the connection.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.ConnectionString*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.SecondaryConnectionString
  commentId: P:Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.SecondaryConnectionString
  id: SecondaryConnectionString
  parent: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail
  langs:
  - csharp
  - vb
  name: SecondaryConnectionString
  nameWithType: ConnectionDetail.SecondaryConnectionString
  fullName: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.SecondaryConnectionString
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: SecondaryConnectionString
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
    startLine: 45
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the secondary connection string associated with the connection.\n"
  example: []
  syntax:
    content: public string SecondaryConnectionString { get; set; }
    content.vb: Public Property SecondaryConnectionString As String
    parameters: []
    return:
      type: System.String
      description: "\nThe secondary connection string associated with the connection.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.SecondaryConnectionString*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.AuthorizationType
  commentId: P:Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.AuthorizationType
  id: AuthorizationType
  parent: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail
  langs:
  - csharp
  - vb
  name: AuthorizationType
  nameWithType: ConnectionDetail.AuthorizationType
  fullName: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.AuthorizationType
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: AuthorizationType
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
    startLine: 55
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the authorization type for the connection.\n"
  example: []
  syntax:
    content: public string AuthorizationType { get; set; }
    content.vb: Public Property AuthorizationType As String
    parameters: []
    return:
      type: System.String
      description: "\nThe authorization type for the connection.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.AuthorizationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.Rights
  commentId: P:Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.Rights
  id: Rights
  parent: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail
  langs:
  - csharp
  - vb
  name: Rights
  nameWithType: ConnectionDetail.Rights
  fullName: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.Rights
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Rights
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/ConnectionDetail.cs
    startLine: 65
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the access rights associated with the connection.\n"
  example: []
  syntax:
    content: public IEnumerable<AccessRights> Rights { get; set; }
    content.vb: Public Property Rights As IEnumerable(Of AccessRights)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.Messaging.AccessRights}
      description: "\nThe access rights associated with the connection.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.Rights*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.NotificationHubs.Management
  commentId: N:Microsoft.Azure.NotificationHubs.Management
  isExternal: false
  name: Microsoft.Azure.NotificationHubs.Management
  nameWithType: Microsoft.Azure.NotificationHubs.Management
  fullName: Microsoft.Azure.NotificationHubs.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.KeyName*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.KeyName
  isExternal: false
  name: KeyName
  nameWithType: ConnectionDetail.KeyName
  fullName: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.KeyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.ConnectionString*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.ConnectionString
  isExternal: false
  name: ConnectionString
  nameWithType: ConnectionDetail.ConnectionString
  fullName: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.ConnectionString
- uid: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.SecondaryConnectionString*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.SecondaryConnectionString
  isExternal: false
  name: SecondaryConnectionString
  nameWithType: ConnectionDetail.SecondaryConnectionString
  fullName: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.SecondaryConnectionString
- uid: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.AuthorizationType*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.AuthorizationType
  isExternal: false
  name: AuthorizationType
  nameWithType: ConnectionDetail.AuthorizationType
  fullName: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.AuthorizationType
- uid: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.Rights*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.Rights
  isExternal: false
  name: Rights
  nameWithType: ConnectionDetail.Rights
  fullName: Microsoft.Azure.NotificationHubs.Management.ConnectionDetail.Rights
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.Messaging.AccessRights}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.NotificationHubs.Messaging.AccessRights}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AccessRights>
  nameWithType: IEnumerable<AccessRights>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.NotificationHubs.Messaging.AccessRights>
  nameWithType.vb: IEnumerable(Of AccessRights)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.NotificationHubs.Messaging.AccessRights)
  name.vb: IEnumerable(Of AccessRights)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.NotificationHubs.Messaging.AccessRights
    name: AccessRights
    nameWithType: AccessRights
    fullName: Microsoft.Azure.NotificationHubs.Messaging.AccessRights
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.NotificationHubs.Messaging.AccessRights
    name: AccessRights
    nameWithType: AccessRights
    fullName: Microsoft.Azure.NotificationHubs.Messaging.AccessRights
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
