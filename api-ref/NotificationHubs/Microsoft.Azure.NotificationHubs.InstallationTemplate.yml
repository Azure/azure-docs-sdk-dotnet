### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.NotificationHubs.InstallationTemplate
  commentId: T:Microsoft.Azure.NotificationHubs.InstallationTemplate
  id: InstallationTemplate
  parent: Microsoft.Azure.NotificationHubs
  children:
  - Microsoft.Azure.NotificationHubs.InstallationTemplate.Body
  - Microsoft.Azure.NotificationHubs.InstallationTemplate.Expiry
  - Microsoft.Azure.NotificationHubs.InstallationTemplate.Headers
  - Microsoft.Azure.NotificationHubs.InstallationTemplate.Tags
  langs:
  - csharp
  - vb
  name: InstallationTemplate
  nameWithType: InstallationTemplate
  fullName: Microsoft.Azure.NotificationHubs.InstallationTemplate
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/InstallationTemplate.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
      commit: 8d7336d451286eb47f7ffbdc0c1d69e3d83ec671
    id: InstallationTemplate
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/InstallationTemplate.cs
    startLine: 11
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nRepresents template which may belong to an instance of <xref href=\"Microsoft.Azure.NotificationHubs.Installation\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public class InstallationTemplate
    content.vb: Public Class InstallationTemplate
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.NotificationHubs.InstallationTemplate.Body
  commentId: P:Microsoft.Azure.NotificationHubs.InstallationTemplate.Body
  id: Body
  parent: Microsoft.Azure.NotificationHubs.InstallationTemplate
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: InstallationTemplate.Body
  fullName: Microsoft.Azure.NotificationHubs.InstallationTemplate.Body
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/InstallationTemplate.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
      commit: 8d7336d451286eb47f7ffbdc0c1d69e3d83ec671
    id: Body
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/InstallationTemplate.cs
    startLine: 17
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets a template body for notification payload which may contain placeholders to be filled in with actual data during the send operation\n"
  example: []
  syntax:
    content: public string Body { get; set; }
    content.vb: Public Property Body As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.NotificationHubs.InstallationTemplate.Body*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.InstallationTemplate.Headers
  commentId: P:Microsoft.Azure.NotificationHubs.InstallationTemplate.Headers
  id: Headers
  parent: Microsoft.Azure.NotificationHubs.InstallationTemplate
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: InstallationTemplate.Headers
  fullName: Microsoft.Azure.NotificationHubs.InstallationTemplate.Headers
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/InstallationTemplate.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
      commit: 8d7336d451286eb47f7ffbdc0c1d69e3d83ec671
    id: Headers
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/InstallationTemplate.cs
    startLine: 23
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or set collection of headers applicable for MPNS-targeted notifications\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Headers { get; set; }
    content.vb: Public Property Headers As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.NotificationHubs.InstallationTemplate.Headers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.InstallationTemplate.Expiry
  commentId: P:Microsoft.Azure.NotificationHubs.InstallationTemplate.Expiry
  id: Expiry
  parent: Microsoft.Azure.NotificationHubs.InstallationTemplate
  langs:
  - csharp
  - vb
  name: Expiry
  nameWithType: InstallationTemplate.Expiry
  fullName: Microsoft.Azure.NotificationHubs.InstallationTemplate.Expiry
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/InstallationTemplate.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
      commit: 8d7336d451286eb47f7ffbdc0c1d69e3d83ec671
    id: Expiry
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/InstallationTemplate.cs
    startLine: 29
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets expiry applicable for APNS-targeted notifications\n"
  example: []
  syntax:
    content: public string Expiry { get; set; }
    content.vb: Public Property Expiry As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.NotificationHubs.InstallationTemplate.Expiry*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.InstallationTemplate.Tags
  commentId: P:Microsoft.Azure.NotificationHubs.InstallationTemplate.Tags
  id: Tags
  parent: Microsoft.Azure.NotificationHubs.InstallationTemplate
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: InstallationTemplate.Tags
  fullName: Microsoft.Azure.NotificationHubs.InstallationTemplate.Tags
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/InstallationTemplate.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
      commit: 8d7336d451286eb47f7ffbdc0c1d69e3d83ec671
    id: Tags
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Notifications/InstallationManagement/InstallationTemplate.cs
    startLine: 35
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs
  summary: "\nGets or sets collection of tags for particular template. Ususaly only one tag (template name) should be here.\n"
  example: []
  syntax:
    content: public IList<string> Tags { get; set; }
    content.vb: Public Property Tags As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.NotificationHubs.InstallationTemplate.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.NotificationHubs.Installation
  commentId: T:Microsoft.Azure.NotificationHubs.Installation
  parent: Microsoft.Azure.NotificationHubs
  isExternal: false
  name: Installation
  nameWithType: Installation
  fullName: Microsoft.Azure.NotificationHubs.Installation
- uid: Microsoft.Azure.NotificationHubs
  commentId: N:Microsoft.Azure.NotificationHubs
  isExternal: false
  name: Microsoft.Azure.NotificationHubs
  nameWithType: Microsoft.Azure.NotificationHubs
  fullName: Microsoft.Azure.NotificationHubs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.NotificationHubs.InstallationTemplate.Body*
  commentId: Overload:Microsoft.Azure.NotificationHubs.InstallationTemplate.Body
  isExternal: false
  name: Body
  nameWithType: InstallationTemplate.Body
  fullName: Microsoft.Azure.NotificationHubs.InstallationTemplate.Body
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.NotificationHubs.InstallationTemplate.Headers*
  commentId: Overload:Microsoft.Azure.NotificationHubs.InstallationTemplate.Headers
  isExternal: false
  name: Headers
  nameWithType: InstallationTemplate.Headers
  fullName: Microsoft.Azure.NotificationHubs.InstallationTemplate.Headers
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.NotificationHubs.InstallationTemplate.Expiry*
  commentId: Overload:Microsoft.Azure.NotificationHubs.InstallationTemplate.Expiry
  isExternal: false
  name: Expiry
  nameWithType: InstallationTemplate.Expiry
  fullName: Microsoft.Azure.NotificationHubs.InstallationTemplate.Expiry
- uid: Microsoft.Azure.NotificationHubs.InstallationTemplate.Tags*
  commentId: Overload:Microsoft.Azure.NotificationHubs.InstallationTemplate.Tags
  isExternal: false
  name: Tags
  nameWithType: InstallationTemplate.Tags
  fullName: Microsoft.Azure.NotificationHubs.InstallationTemplate.Tags
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
