### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.NotificationHubs.Management.Property
  commentId: T:Microsoft.Azure.NotificationHubs.Management.Property
  id: Property
  parent: Microsoft.Azure.NotificationHubs.Management
  children:
  - Microsoft.Azure.NotificationHubs.Management.Property.Clone
  - Microsoft.Azure.NotificationHubs.Management.Property.Created
  - Microsoft.Azure.NotificationHubs.Management.Property.Modified
  - Microsoft.Azure.NotificationHubs.Management.Property.Name
  - Microsoft.Azure.NotificationHubs.Management.Property.Revision
  - Microsoft.Azure.NotificationHubs.Management.Property.Serializer
  - Microsoft.Azure.NotificationHubs.Management.Property.Value
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Property
  fullName: Microsoft.Azure.NotificationHubs.Management.Property
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Property.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Property
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Property.cs
    startLine: 14
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nRepresents the generic property class.\n"
  example: []
  syntax:
    content: 'public class Property : ICloneable'
    content.vb: >-
      Public Class Property
          Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Serializer
  commentId: F:Microsoft.Azure.NotificationHubs.Management.Property.Serializer
  id: Serializer
  parent: Microsoft.Azure.NotificationHubs.Management.Property
  langs:
  - csharp
  - vb
  name: Serializer
  nameWithType: Property.Serializer
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Serializer
  type: Field
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Property.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Serializer
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Property.cs
    startLine: 28
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nThe serializer associated with the property.\n"
  example: []
  syntax:
    content: public static readonly DataContractSerializer Serializer
    content.vb: Public Shared ReadOnly Serializer As DataContractSerializer
    return:
      type: DataContractSerializer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Name
  commentId: P:Microsoft.Azure.NotificationHubs.Management.Property.Name
  id: Name
  parent: Microsoft.Azure.NotificationHubs.Management.Property
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Property.Name
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Name
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Property.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Name
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Property.cs
    startLine: 37
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the name of the property.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\nThe name of the property.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.Property.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Value
  commentId: P:Microsoft.Azure.NotificationHubs.Management.Property.Value
  id: Value
  parent: Microsoft.Azure.NotificationHubs.Management.Property
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Property.Value
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Value
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Property.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Value
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Property.cs
    startLine: 47
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the property value.\n"
  example: []
  syntax:
    content: public string Value { get; set; }
    content.vb: Public Property Value As String
    parameters: []
    return:
      type: System.String
      description: "\nThe property value.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.Property.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Created
  commentId: P:Microsoft.Azure.NotificationHubs.Management.Property.Created
  id: Created
  parent: Microsoft.Azure.NotificationHubs.Management.Property
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: Property.Created
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Created
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Property.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Created
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Property.cs
    startLine: 57
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets when the property was created.\n"
  example: []
  syntax:
    content: public DateTime Created { get; }
    content.vb: Public ReadOnly Property Created As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nThe date when the property was created.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.Property.Created*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Modified
  commentId: P:Microsoft.Azure.NotificationHubs.Management.Property.Modified
  id: Modified
  parent: Microsoft.Azure.NotificationHubs.Management.Property
  langs:
  - csharp
  - vb
  name: Modified
  nameWithType: Property.Modified
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Modified
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Property.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Modified
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Property.cs
    startLine: 67
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets when the property was modified.\n"
  example: []
  syntax:
    content: public DateTime Modified { get; }
    content.vb: Public ReadOnly Property Modified As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nThe date when the property was modified.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.Property.Modified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Revision
  commentId: P:Microsoft.Azure.NotificationHubs.Management.Property.Revision
  id: Revision
  parent: Microsoft.Azure.NotificationHubs.Management.Property
  langs:
  - csharp
  - vb
  name: Revision
  nameWithType: Property.Revision
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Revision
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Property.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Revision
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Property.cs
    startLine: 77
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nGets or sets the reversion of the property.\n"
  example: []
  syntax:
    content: public long Revision { get; set; }
    content.vb: Public Property Revision As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe reversion of the property.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.Property.Revision*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Clone
  commentId: M:Microsoft.Azure.NotificationHubs.Management.Property.Clone
  id: Clone
  parent: Microsoft.Azure.NotificationHubs.Management.Property
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Property.Clone()
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Clone()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.Notifications/Management/Property.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/AAPT-Mobile-Push
    id: Clone
    path: src/msazure-vso-notificationhubs/src/product/clients/Microsoft.Notifications/Management/Property.cs
    startLine: 87
  assemblies:
  - Microsoft.Notifications
  namespace: Microsoft.Azure.NotificationHubs.Management
  summary: "\nCreates a copy of this property instance.\n"
  example: []
  syntax:
    content: public object Clone()
    content.vb: Public Function Clone As Object
    return:
      type: System.Object
      description: "\nA created copy of this property instance.\n"
  overload: Microsoft.Azure.NotificationHubs.Management.Property.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.NotificationHubs.Management
  commentId: N:Microsoft.Azure.NotificationHubs.Management
  isExternal: false
  name: Microsoft.Azure.NotificationHubs.Management
  nameWithType: Microsoft.Azure.NotificationHubs.Management
  fullName: Microsoft.Azure.NotificationHubs.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: DataContractSerializer
  isExternal: true
  name: DataContractSerializer
  nameWithType: DataContractSerializer
  fullName: DataContractSerializer
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Name*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.Property.Name
  isExternal: false
  name: Name
  nameWithType: Property.Name
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Value*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.Property.Value
  isExternal: false
  name: Value
  nameWithType: Property.Value
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Value
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Created*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.Property.Created
  isExternal: false
  name: Created
  nameWithType: Property.Created
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Created
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Modified*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.Property.Modified
  isExternal: false
  name: Modified
  nameWithType: Property.Modified
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Modified
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Revision*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.Property.Revision
  isExternal: false
  name: Revision
  nameWithType: Property.Revision
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Revision
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Azure.NotificationHubs.Management.Property.Clone*
  commentId: Overload:Microsoft.Azure.NotificationHubs.Management.Property.Clone
  isExternal: false
  name: Clone
  nameWithType: Property.Clone
  fullName: Microsoft.Azure.NotificationHubs.Management.Property.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
