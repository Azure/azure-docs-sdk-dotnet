### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.EventHubs.IPartitionReceiveHandler
  commentId: T:Microsoft.Azure.EventHubs.IPartitionReceiveHandler
  id: IPartitionReceiveHandler
  parent: Microsoft.Azure.EventHubs
  children:
  - Microsoft.Azure.EventHubs.IPartitionReceiveHandler.MaxBatchSize
  - Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessErrorAsync(Exception)
  - Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessEventsAsync(IEnumerable{Microsoft.Azure.EventHubs.EventData})
  langs:
  - csharp
  - vb
  name: IPartitionReceiveHandler
  nameWithType: IPartitionReceiveHandler
  fullName: Microsoft.Azure.EventHubs.IPartitionReceiveHandler
  type: Interface
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/IPartitionReceiveHandler.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: IPartitionReceiveHandler
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/IPartitionReceiveHandler.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nA handler interface for the receive operation. Use any implementation of this interface to specify\nuser action when using <xref href=\"Microsoft.Azure.EventHubs.PartitionReceiver.SetReceiveHandler(Microsoft.Azure.EventHubs.IPartitionReceiveHandler)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface IPartitionReceiveHandler
    content.vb: Public Interface IPartitionReceiveHandler
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.MaxBatchSize
  commentId: P:Microsoft.Azure.EventHubs.IPartitionReceiveHandler.MaxBatchSize
  id: MaxBatchSize
  parent: Microsoft.Azure.EventHubs.IPartitionReceiveHandler
  langs:
  - csharp
  - vb
  name: MaxBatchSize
  nameWithType: IPartitionReceiveHandler.MaxBatchSize
  fullName: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.MaxBatchSize
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/IPartitionReceiveHandler.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: MaxBatchSize
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/IPartitionReceiveHandler.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: int MaxBatchSize { get; }
    content.vb: ReadOnly Property MaxBatchSize As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.MaxBatchSize*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessEventsAsync(IEnumerable{Microsoft.Azure.EventHubs.EventData})
  commentId: M:Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessEventsAsync(IEnumerable{Microsoft.Azure.EventHubs.EventData})
  id: ProcessEventsAsync(IEnumerable{Microsoft.Azure.EventHubs.EventData})
  parent: Microsoft.Azure.EventHubs.IPartitionReceiveHandler
  langs:
  - csharp
  - vb
  name: ProcessEventsAsync(IEnumerable<EventData>)
  nameWithType: IPartitionReceiveHandler.ProcessEventsAsync(IEnumerable<EventData>)
  fullName: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessEventsAsync(IEnumerable<Microsoft.Azure.EventHubs.EventData>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/IPartitionReceiveHandler.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ProcessEventsAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/IPartitionReceiveHandler.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nUsers should implement this method to specify the action to be performed on the received events.\n"
  example: []
  syntax:
    content: Task ProcessEventsAsync(IEnumerable<EventData> events)
    content.vb: Function ProcessEventsAsync(events As IEnumerable(Of EventData)) As Task
    parameters:
    - id: events
      type: IEnumerable{Microsoft.Azure.EventHubs.EventData}
      description: The list of fetched events from the corresponding PartitionReceiver.
    return:
      type: Task
  overload: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessEventsAsync*
  seealso:
  - linkId: Microsoft.Azure.EventHubs.PartitionReceiver.ReceiveAsync(System.Int32)
    commentId: M:Microsoft.Azure.EventHubs.PartitionReceiver.ReceiveAsync(System.Int32)
  nameWithType.vb: IPartitionReceiveHandler.ProcessEventsAsync(IEnumerable(Of EventData))
  fullName.vb: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessEventsAsync(IEnumerable(Of Microsoft.Azure.EventHubs.EventData))
  name.vb: ProcessEventsAsync(IEnumerable(Of EventData))
- uid: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessErrorAsync(Exception)
  commentId: M:Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessErrorAsync(Exception)
  id: ProcessErrorAsync(Exception)
  parent: Microsoft.Azure.EventHubs.IPartitionReceiveHandler
  langs:
  - csharp
  - vb
  name: ProcessErrorAsync(Exception)
  nameWithType: IPartitionReceiveHandler.ProcessErrorAsync(Exception)
  fullName: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessErrorAsync(Exception)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/IPartitionReceiveHandler.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ProcessErrorAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/IPartitionReceiveHandler.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: Task ProcessErrorAsync(Exception error)
    content.vb: Function ProcessErrorAsync(error As Exception) As Task
    parameters:
    - id: error
      type: Exception
    return:
      type: Task
  overload: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessErrorAsync*
references:
- uid: Microsoft.Azure.EventHubs.PartitionReceiver.SetReceiveHandler(Microsoft.Azure.EventHubs.IPartitionReceiveHandler)
  commentId: M:Microsoft.Azure.EventHubs.PartitionReceiver.SetReceiveHandler(Microsoft.Azure.EventHubs.IPartitionReceiveHandler)
- uid: Microsoft.Azure.EventHubs
  commentId: N:Microsoft.Azure.EventHubs
  isExternal: false
  name: Microsoft.Azure.EventHubs
  nameWithType: Microsoft.Azure.EventHubs
  fullName: Microsoft.Azure.EventHubs
- uid: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.MaxBatchSize*
  commentId: Overload:Microsoft.Azure.EventHubs.IPartitionReceiveHandler.MaxBatchSize
  isExternal: false
  name: MaxBatchSize
  nameWithType: IPartitionReceiveHandler.MaxBatchSize
  fullName: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.MaxBatchSize
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.EventHubs.PartitionReceiver.ReceiveAsync(System.Int32)
  commentId: M:Microsoft.Azure.EventHubs.PartitionReceiver.ReceiveAsync(System.Int32)
- uid: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessEventsAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessEventsAsync
  isExternal: false
  name: ProcessEventsAsync
  nameWithType: IPartitionReceiveHandler.ProcessEventsAsync
  fullName: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessEventsAsync
- uid: IEnumerable{Microsoft.Azure.EventHubs.EventData}
  commentId: '!:IEnumerable{Microsoft.Azure.EventHubs.EventData}'
  definition: IEnumerable`1
  name: IEnumerable<EventData>
  nameWithType: IEnumerable<EventData>
  fullName: IEnumerable<Microsoft.Azure.EventHubs.EventData>
  nameWithType.vb: IEnumerable(Of EventData)
  fullname.vb: IEnumerable(Of Microsoft.Azure.EventHubs.EventData)
  name.vb: IEnumerable(Of EventData)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.EventHubs.EventData
    name: EventData
    nameWithType: EventData
    fullName: Microsoft.Azure.EventHubs.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.EventHubs.EventData
    name: EventData
    nameWithType: EventData
    fullName: Microsoft.Azure.EventHubs.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullname.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessErrorAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessErrorAsync
  isExternal: false
  name: ProcessErrorAsync
  nameWithType: IPartitionReceiveHandler.ProcessErrorAsync
  fullName: Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessErrorAsync
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
