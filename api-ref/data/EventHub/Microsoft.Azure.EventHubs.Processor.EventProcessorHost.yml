### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  commentId: T:Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  id: EventProcessorHost
  parent: Microsoft.Azure.EventHubs.Processor
  children:
  - Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.EventHubs.Processor.ICheckpointManager,Microsoft.Azure.EventHubs.Processor.ILeaseManager)
  - Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.EventHubs.Processor.EventProcessorHost.ConsumerGroupName
  - Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventHubPath
  - Microsoft.Azure.EventHubs.Processor.EventProcessorHost.HostName
  - Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync``1
  - Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync``1(Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)
  - Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory)
  - Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory,Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)
  - Microsoft.Azure.EventHubs.Processor.EventProcessorHost.UnregisterEventProcessorAsync
  langs:
  - csharp
  - vb
  name: EventProcessorHost
  nameWithType: EventProcessorHost
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  type: Class
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: EventProcessorHost
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 8
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  syntax:
    content: 'public sealed class EventProcessorHost : object'
    content.vb: >-
      Public NotInheritable Class EventProcessorHost
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  langs:
  - csharp
  - vb
  name: EventProcessorHost(String, String, String, String, String)
  nameWithType: EventProcessorHost.EventProcessorHost(String, String, String, String, String)
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventProcessorHost(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: .ctor
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nCreate a new host to process events from an Event Hub.\n\n<p>Since Event Hubs are frequently used for scale-out, high-traffic scenarios, generally there will\nbe only one host per process, and the processes will be run on separate machines. However, it is\nsupported to run multiple hosts on one machine, or even within one process, if throughput is not\na concern.</p>\n\nThis overload of the constructor uses the default, built-in lease and checkpoint managers. The\nAzure Storage account specified by the storageConnectionString parameter is used by the built-in\nmanagers to record leases and checkpoints.\n"
  example: []
  syntax:
    content: public EventProcessorHost(string eventHubPath, string consumerGroupName, string eventHubConnectionString, string storageConnectionString, string leaseContainerName)
    content.vb: Public Sub New(eventHubPath As String, consumerGroupName As String, eventHubConnectionString As String, storageConnectionString As String, leaseContainerName As String)
    parameters:
    - id: eventHubPath
      type: System.String
      description: The name of the EventHub.
    - id: consumerGroupName
      type: System.String
      description: The name of the consumer group within the Event Hub.
    - id: eventHubConnectionString
      type: System.String
      description: Connection string for the Event Hub to receive from.
    - id: storageConnectionString
      type: System.String
      description: Connection string to Azure Storage account used for leases and checkpointing.
    - id: leaseContainerName
      type: System.String
      description: Azure Storage container name for use by built-in lease and checkpoint manager.
  overload: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  langs:
  - csharp
  - vb
  name: EventProcessorHost(String, String, String, String, String, String, String)
  nameWithType: EventProcessorHost.EventProcessorHost(String, String, String, String, String, String, String)
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventProcessorHost(System.String, System.String, System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: .ctor
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nCreate a new host to process events from an Event Hub.\n\n<p>This overload of the constructor uses the default, built-in lease and checkpoint managers.</p>\n"
  example: []
  syntax:
    content: public EventProcessorHost(string hostName, string eventHubPath, string consumerGroupName, string eventHubConnectionString, string storageConnectionString, string leaseContainerName, string storageBlobPrefix = null)
    content.vb: Public Sub New(hostName As String, eventHubPath As String, consumerGroupName As String, eventHubConnectionString As String, storageConnectionString As String, leaseContainerName As String, storageBlobPrefix As String = Nothing)
    parameters:
    - id: hostName
      type: System.String
      description: A name for this event processor host. See method notes.
    - id: eventHubPath
      type: System.String
      description: The name of the EventHub.
    - id: consumerGroupName
      type: System.String
      description: The name of the consumer group within the Event Hub.
    - id: eventHubConnectionString
      type: System.String
      description: Connection string for the Event Hub to receive from.
    - id: storageConnectionString
      type: System.String
      description: Connection string to Azure Storage account used for leases and checkpointing.
    - id: leaseContainerName
      type: System.String
      description: Azure Storage container name for use by built-in lease and checkpoint manager.
    - id: storageBlobPrefix
      type: System.String
      description: Prefix used when naming blobs within the storage container.
  overload: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.EventHubs.Processor.ICheckpointManager,Microsoft.Azure.EventHubs.Processor.ILeaseManager)
  commentId: M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.EventHubs.Processor.ICheckpointManager,Microsoft.Azure.EventHubs.Processor.ILeaseManager)
  id: '#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.EventHubs.Processor.ICheckpointManager,Microsoft.Azure.EventHubs.Processor.ILeaseManager)'
  parent: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  langs:
  - csharp
  - vb
  name: EventProcessorHost(String, String, String, String, ICheckpointManager, ILeaseManager)
  nameWithType: EventProcessorHost.EventProcessorHost(String, String, String, String, ICheckpointManager, ILeaseManager)
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventProcessorHost(System.String, System.String, System.String, System.String, Microsoft.Azure.EventHubs.Processor.ICheckpointManager, Microsoft.Azure.EventHubs.Processor.ILeaseManager)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: .ctor
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nCreate a new host to process events from an Event Hub.\n\n<p>This overload of the constructor allows maximum flexibility.\nThis one allows the caller to specify the name of the processor host as well.\nThe overload also allows the caller to provide their own lease and checkpoint managers to replace the built-in\nones based on Azure Storage.</p>\n"
  example: []
  syntax:
    content: public EventProcessorHost(string hostName, string eventHubPath, string consumerGroupName, string eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)
    content.vb: Public Sub New(hostName As String, eventHubPath As String, consumerGroupName As String, eventHubConnectionString As String, checkpointManager As ICheckpointManager, leaseManager As ILeaseManager)
    parameters:
    - id: hostName
      type: System.String
      description: Name of the processor host. MUST BE UNIQUE. Strongly recommend including a Guid to ensure uniqueness.
    - id: eventHubPath
      type: System.String
      description: The name of the EventHub.
    - id: consumerGroupName
      type: System.String
      description: The name of the consumer group within the Event Hub.
    - id: eventHubConnectionString
      type: System.String
      description: Connection string for the Event Hub to receive from.
    - id: checkpointManager
      type: Microsoft.Azure.EventHubs.Processor.ICheckpointManager
      description: Object implementing ICheckpointManager which handles partition checkpointing.
    - id: leaseManager
      type: Microsoft.Azure.EventHubs.Processor.ILeaseManager
      description: Object implementing ILeaseManager which handles leases for partitions.
  overload: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.HostName
  commentId: P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.HostName
  id: HostName
  parent: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  langs:
  - csharp
  - vb
  name: HostName
  nameWithType: EventProcessorHost.HostName
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.HostName
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: HostName
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 160
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nReturns processor host name.\nIf the processor host name was automatically generated, this is the only way to get it.\n"
  example: []
  syntax:
    content: public string HostName { get; }
    content.vb: Public ReadOnly Property HostName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.HostName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventHubPath
  commentId: P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventHubPath
  id: EventHubPath
  parent: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  langs:
  - csharp
  - vb
  name: EventHubPath
  nameWithType: EventProcessorHost.EventHubPath
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventHubPath
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: EventHubPath
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 162
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  syntax:
    content: public string EventHubPath { get; }
    content.vb: Public ReadOnly Property EventHubPath As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventHubPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.ConsumerGroupName
  commentId: P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.ConsumerGroupName
  id: ConsumerGroupName
  parent: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  langs:
  - csharp
  - vb
  name: ConsumerGroupName
  nameWithType: EventProcessorHost.ConsumerGroupName
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.ConsumerGroupName
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ConsumerGroupName
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 164
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  syntax:
    content: public string ConsumerGroupName { get; }
    content.vb: Public ReadOnly Property ConsumerGroupName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.ConsumerGroupName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync``1
  commentId: M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync``1
  id: RegisterEventProcessorAsync``1
  parent: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  langs:
  - csharp
  - vb
  name: RegisterEventProcessorAsync<T>()
  nameWithType: EventProcessorHost.RegisterEventProcessorAsync<T>()
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync<T>()
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: RegisterEventProcessorAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 187
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nThis registers <xref href=\"Microsoft.Azure.EventHubs.Processor.IEventProcessor\" data-throw-if-not-resolved=\"false\"></xref> implementation with the host using <xref href=\"Microsoft.Azure.EventHubs.Processor.DefaultEventProcessorFactory%601\" data-throw-if-not-resolved=\"false\"></xref>.  \nThis also starts the host and causes it to start participating in the partition distribution process.\n"
  example: []
  syntax:
    content: 'public Task RegisterEventProcessorAsync<T>()where T : IEventProcessor, new ()'
    content.vb: Public Function RegisterEventProcessorAsync(Of T As {IEventProcessor, New}) As Task
    typeParameters:
    - id: T
      description: Implementation of your application specific <xref href="Microsoft.Azure.EventHubs.Processor.IEventProcessor" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Task
      description: A task to indicate EventProcessorHost instance is started.
  overload: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync*
  nameWithType.vb: EventProcessorHost.RegisterEventProcessorAsync(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync(Of T)()
  name.vb: RegisterEventProcessorAsync(Of T)()
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync``1(Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)
  commentId: M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync``1(Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)
  id: RegisterEventProcessorAsync``1(Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)
  parent: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  langs:
  - csharp
  - vb
  name: RegisterEventProcessorAsync<T>(EventProcessorOptions)
  nameWithType: EventProcessorHost.RegisterEventProcessorAsync<T>(EventProcessorOptions)
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync<T>(Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: RegisterEventProcessorAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nThis registers <xref href=\"Microsoft.Azure.EventHubs.Processor.IEventProcessor\" data-throw-if-not-resolved=\"false\"></xref> implementation with the host using <xref href=\"Microsoft.Azure.EventHubs.Processor.DefaultEventProcessorFactory%601\" data-throw-if-not-resolved=\"false\"></xref>.  \nThis also starts the host and causes it to start participating in the partition distribution process.\n"
  example: []
  syntax:
    content: 'public Task RegisterEventProcessorAsync<T>(EventProcessorOptions processorOptions)where T : IEventProcessor, new ()'
    content.vb: Public Function RegisterEventProcessorAsync(Of T As {IEventProcessor, New})(processorOptions As EventProcessorOptions) As Task
    parameters:
    - id: processorOptions
      type: Microsoft.Azure.EventHubs.Processor.EventProcessorOptions
      description: "<xref href=\"Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventProcessorOptions\" data-throw-if-not-resolved=\"false\"></xref> to control various aspects of message pump created when ownership \n    is acquired for a particular partition of EventHub."
    typeParameters:
    - id: T
      description: Implementation of your application specific <xref href="Microsoft.Azure.EventHubs.Processor.IEventProcessor" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Task
      description: A task to indicate EventProcessorHost instance is started.
  overload: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync*
  nameWithType.vb: EventProcessorHost.RegisterEventProcessorAsync(Of T)(EventProcessorOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync(Of T)(Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)
  name.vb: RegisterEventProcessorAsync(Of T)(EventProcessorOptions)
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory)
  commentId: M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory)
  id: RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory)
  parent: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  langs:
  - csharp
  - vb
  name: RegisterEventProcessorFactoryAsync(IEventProcessorFactory)
  nameWithType: EventProcessorHost.RegisterEventProcessorFactoryAsync(IEventProcessorFactory)
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: RegisterEventProcessorFactoryAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 213
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nThis registers <xref href=\"Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory\" data-throw-if-not-resolved=\"false\"></xref> implementation with the host which is used to create an instance of \n<xref href=\"Microsoft.Azure.EventHubs.Processor.IEventProcessor\" data-throw-if-not-resolved=\"false\"></xref> when it takes ownership of a partition.  This also starts the host and causes it to start participating \nin the partition distribution process.\n"
  example: []
  syntax:
    content: public Task RegisterEventProcessorFactoryAsync(IEventProcessorFactory factory)
    content.vb: Public Function RegisterEventProcessorFactoryAsync(factory As IEventProcessorFactory) As Task
    parameters:
    - id: factory
      type: Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory
      description: Instance of <xref href="Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory" data-throw-if-not-resolved="false"></xref> implementation.
    return:
      type: Task
      description: A task to indicate EventProcessorHost instance is started.
  overload: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory,Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)
  commentId: M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory,Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)
  id: RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory,Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)
  parent: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  langs:
  - csharp
  - vb
  name: RegisterEventProcessorFactoryAsync(IEventProcessorFactory, EventProcessorOptions)
  nameWithType: EventProcessorHost.RegisterEventProcessorFactoryAsync(IEventProcessorFactory, EventProcessorOptions)
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory, Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: RegisterEventProcessorFactoryAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 229
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nThis registers <xref href=\"Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory\" data-throw-if-not-resolved=\"false\"></xref> implementation with the host which is used to create an instance of \n<xref href=\"Microsoft.Azure.EventHubs.Processor.IEventProcessor\" data-throw-if-not-resolved=\"false\"></xref> when it takes ownership of a partition.  This also starts the host and causes it to start participating \nin the partition distribution process.\n"
  example: []
  syntax:
    content: public Task RegisterEventProcessorFactoryAsync(IEventProcessorFactory factory, EventProcessorOptions processorOptions)
    content.vb: Public Function RegisterEventProcessorFactoryAsync(factory As IEventProcessorFactory, processorOptions As EventProcessorOptions) As Task
    parameters:
    - id: factory
      type: Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory
      description: Instance of <xref href="Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory" data-throw-if-not-resolved="false"></xref> implementation.
    - id: processorOptions
      type: Microsoft.Azure.EventHubs.Processor.EventProcessorOptions
      description: "<xref href=\"Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventProcessorOptions\" data-throw-if-not-resolved=\"false\"></xref> to control various aspects of message pump created when ownership \n    is acquired for a particular partition of EventHub."
    return:
      type: Task
      description: A task to indicate EventProcessorHost instance is started.
  overload: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.UnregisterEventProcessorAsync
  commentId: M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.UnregisterEventProcessorAsync
  id: UnregisterEventProcessorAsync
  parent: Microsoft.Azure.EventHubs.Processor.EventProcessorHost
  langs:
  - csharp
  - vb
  name: UnregisterEventProcessorAsync()
  nameWithType: EventProcessorHost.UnregisterEventProcessorAsync()
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.UnregisterEventProcessorAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: UnregisterEventProcessorAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/EventProcessorHost.cs
    startLine: 273
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nStop processing events.  Does not return until the shutdown is complete.\n"
  example: []
  syntax:
    content: public Task UnregisterEventProcessorAsync()
    content.vb: Public Function UnregisterEventProcessorAsync As Task
    return:
      type: Task
      description: ''
  overload: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.UnregisterEventProcessorAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.EventHubs.Processor
  commentId: N:Microsoft.Azure.EventHubs.Processor
  isExternal: false
  name: Microsoft.Azure.EventHubs.Processor
  nameWithType: Microsoft.Azure.EventHubs.Processor
  fullName: Microsoft.Azure.EventHubs.Processor
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor
  isExternal: false
  name: EventProcessorHost
  nameWithType: EventProcessorHost.EventProcessorHost
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventProcessorHost
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.EventHubs.Processor.ICheckpointManager
  commentId: T:Microsoft.Azure.EventHubs.Processor.ICheckpointManager
  parent: Microsoft.Azure.EventHubs.Processor
  isExternal: false
  name: ICheckpointManager
  nameWithType: ICheckpointManager
  fullName: Microsoft.Azure.EventHubs.Processor.ICheckpointManager
- uid: Microsoft.Azure.EventHubs.Processor.ILeaseManager
  commentId: T:Microsoft.Azure.EventHubs.Processor.ILeaseManager
  parent: Microsoft.Azure.EventHubs.Processor
  isExternal: false
  name: ILeaseManager
  nameWithType: ILeaseManager
  fullName: Microsoft.Azure.EventHubs.Processor.ILeaseManager
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.HostName*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.HostName
  isExternal: false
  name: HostName
  nameWithType: EventProcessorHost.HostName
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.HostName
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventHubPath*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventHubPath
  isExternal: false
  name: EventHubPath
  nameWithType: EventProcessorHost.EventHubPath
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventHubPath
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.ConsumerGroupName*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.ConsumerGroupName
  isExternal: false
  name: ConsumerGroupName
  nameWithType: EventProcessorHost.ConsumerGroupName
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.ConsumerGroupName
- uid: Microsoft.Azure.EventHubs.Processor.IEventProcessor
  commentId: T:Microsoft.Azure.EventHubs.Processor.IEventProcessor
  parent: Microsoft.Azure.EventHubs.Processor
  isExternal: false
  name: IEventProcessor
  nameWithType: IEventProcessor
  fullName: Microsoft.Azure.EventHubs.Processor.IEventProcessor
- uid: Microsoft.Azure.EventHubs.Processor.DefaultEventProcessorFactory`1
  commentId: T:Microsoft.Azure.EventHubs.Processor.DefaultEventProcessorFactory`1
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync
  isExternal: false
  name: RegisterEventProcessorAsync<T>
  nameWithType: EventProcessorHost.RegisterEventProcessorAsync<T>
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync<T>
  nameWithType.vb: EventProcessorHost.RegisterEventProcessorAsync(Of T)
  fullname.vb: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync(Of T)
  name.vb: RegisterEventProcessorAsync(Of T)
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventProcessorOptions
  commentId: P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventProcessorOptions
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorOptions
  commentId: T:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions
  parent: Microsoft.Azure.EventHubs.Processor
  isExternal: false
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorOptions
- uid: Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory
  commentId: T:Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory
  parent: Microsoft.Azure.EventHubs.Processor
  isExternal: false
  name: IEventProcessorFactory
  nameWithType: IEventProcessorFactory
  fullName: Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync
  isExternal: false
  name: RegisterEventProcessorFactoryAsync
  nameWithType: EventProcessorHost.RegisterEventProcessorFactoryAsync
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync
- uid: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.UnregisterEventProcessorAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.UnregisterEventProcessorAsync
  isExternal: false
  name: UnregisterEventProcessorAsync
  nameWithType: EventProcessorHost.UnregisterEventProcessorAsync
  fullName: Microsoft.Azure.EventHubs.Processor.EventProcessorHost.UnregisterEventProcessorAsync
