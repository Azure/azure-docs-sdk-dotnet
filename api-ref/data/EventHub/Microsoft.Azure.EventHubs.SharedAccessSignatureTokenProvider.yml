### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider
  commentId: T:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider
  id: SharedAccessSignatureTokenProvider
  parent: Microsoft.Azure.EventHubs
  children:
  - Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.#ctor(System.String,System.String,Func{System.String,System.Byte[]},TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
  - Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.BuildSignature(System.String)
  - Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.EpochTime
  - Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.OnGetTokenAsync(System.String,System.String,TimeSpan)
  langs:
  - csharp
  - vb
  name: SharedAccessSignatureTokenProvider
  nameWithType: SharedAccessSignatureTokenProvider
  fullName: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SharedAccessSignatureTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: SharedAccessSignatureTokenProvider
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SharedAccessSignatureTokenProvider.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nThe SharedAccessSignatureTokenProvider generates tokens using a shared access key or existing signature.\n"
  example: []
  syntax:
    content: 'public class SharedAccessSignatureTokenProvider : TokenProvider'
    content.vb: >-
      Public Class SharedAccessSignatureTokenProvider
          Inherits TokenProvider
  inheritance:
  - System.Object
  - Microsoft.Azure.EventHubs.TokenProvider
  inheritedMembers:
  - Microsoft.Azure.EventHubs.TokenProvider.TokenScope
  - Microsoft.Azure.EventHubs.TokenProvider.ThisLock
  - Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  - Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  - Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan)
  - Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.Azure.EventHubs.TokenScope)
  - Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
  - Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync(System.String,System.String,TimeSpan)
  - Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.EpochTime
  commentId: F:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.EpochTime
  id: EpochTime
  parent: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider
  langs:
  - csharp
  - vb
  name: EpochTime
  nameWithType: SharedAccessSignatureTokenProvider.EpochTime
  fullName: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.EpochTime
  type: Field
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SharedAccessSignatureTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: EpochTime
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SharedAccessSignatureTokenProvider.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public static readonly DateTime EpochTime
    content.vb: Public Shared ReadOnly EpochTime As DateTime
    return:
      type: DateTime
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.#ctor(System.String,System.String,Func{System.String,System.Byte[]},TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
  commentId: M:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.#ctor(System.String,System.String,Func{System.String,System.Byte[]},TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
  id: '#ctor(System.String,System.String,Func{System.String,System.Byte[]},TimeSpan,Microsoft.Azure.EventHubs.TokenScope)'
  parent: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider
  langs:
  - csharp
  - vb
  name: SharedAccessSignatureTokenProvider(String, String, Func<String, Byte[]>, TimeSpan, TokenScope)
  nameWithType: SharedAccessSignatureTokenProvider.SharedAccessSignatureTokenProvider(String, String, Func<String, Byte[]>, TimeSpan, TokenScope)
  fullName: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.SharedAccessSignatureTokenProvider(System.String, System.String, Func<System.String, System.Byte[]>, TimeSpan, Microsoft.Azure.EventHubs.TokenScope)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SharedAccessSignatureTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: .ctor
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SharedAccessSignatureTokenProvider.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected SharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey, Func<string, byte[]> customKeyEncoder, TimeSpan tokenTimeToLive, TokenScope tokenScope)
    content.vb: Protected Sub New(keyName As String, sharedAccessKey As String, customKeyEncoder As Func(Of String, Byte()), tokenTimeToLive As TimeSpan, tokenScope As TokenScope)
    parameters:
    - id: keyName
      type: System.String
    - id: sharedAccessKey
      type: System.String
    - id: customKeyEncoder
      type: Func{System.String,System.Byte[]}
    - id: tokenTimeToLive
      type: TimeSpan
    - id: tokenScope
      type: Microsoft.Azure.EventHubs.TokenScope
  overload: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.#ctor*
  nameWithType.vb: SharedAccessSignatureTokenProvider.SharedAccessSignatureTokenProvider(String, String, Func(Of String, Byte()), TimeSpan, TokenScope)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.SharedAccessSignatureTokenProvider(System.String, System.String, Func(Of System.String, System.Byte()), TimeSpan, Microsoft.Azure.EventHubs.TokenScope)
  name.vb: SharedAccessSignatureTokenProvider(String, String, Func(Of String, Byte()), TimeSpan, TokenScope)
- uid: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.OnGetTokenAsync(System.String,System.String,TimeSpan)
  commentId: M:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.OnGetTokenAsync(System.String,System.String,TimeSpan)
  id: OnGetTokenAsync(System.String,System.String,TimeSpan)
  parent: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider
  langs:
  - csharp
  - vb
  name: OnGetTokenAsync(String, String, TimeSpan)
  nameWithType: SharedAccessSignatureTokenProvider.OnGetTokenAsync(String, String, TimeSpan)
  fullName: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.OnGetTokenAsync(System.String, System.String, TimeSpan)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SharedAccessSignatureTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: OnGetTokenAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SharedAccessSignatureTokenProvider.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected override Task<SecurityToken> OnGetTokenAsync(string appliesTo, string action, TimeSpan timeout)
    content.vb: Protected Overrides Function OnGetTokenAsync(appliesTo As String, action As String, timeout As TimeSpan) As Task(Of SecurityToken)
    parameters:
    - id: appliesTo
      type: System.String
    - id: action
      type: System.String
    - id: timeout
      type: TimeSpan
    return:
      type: Task{Microsoft.Azure.EventHubs.SecurityToken}
  overridden: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync(System.String,System.String,TimeSpan)
  overload: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.OnGetTokenAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.BuildSignature(System.String)
  commentId: M:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.BuildSignature(System.String)
  id: BuildSignature(System.String)
  parent: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider
  langs:
  - csharp
  - vb
  name: BuildSignature(String)
  nameWithType: SharedAccessSignatureTokenProvider.BuildSignature(String)
  fullName: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.BuildSignature(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SharedAccessSignatureTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: BuildSignature
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SharedAccessSignatureTokenProvider.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected virtual string BuildSignature(string targetUri)
    content.vb: Protected Overridable Function BuildSignature(targetUri As String) As String
    parameters:
    - id: targetUri
      type: System.String
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.BuildSignature*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Azure.EventHubs
  commentId: N:Microsoft.Azure.EventHubs
  isExternal: false
  name: Microsoft.Azure.EventHubs
  nameWithType: Microsoft.Azure.EventHubs
  fullName: Microsoft.Azure.EventHubs
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.EventHubs.TokenProvider
  commentId: T:Microsoft.Azure.EventHubs.TokenProvider
  parent: Microsoft.Azure.EventHubs
  isExternal: false
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: Microsoft.Azure.EventHubs.TokenProvider
- uid: Microsoft.Azure.EventHubs.TokenProvider.TokenScope
  commentId: P:Microsoft.Azure.EventHubs.TokenProvider.TokenScope
  parent: Microsoft.Azure.EventHubs.TokenProvider
  isExternal: false
  name: TokenScope
  nameWithType: TokenProvider.TokenScope
  fullName: Microsoft.Azure.EventHubs.TokenProvider.TokenScope
- uid: Microsoft.Azure.EventHubs.TokenProvider.ThisLock
  commentId: P:Microsoft.Azure.EventHubs.TokenProvider.ThisLock
  parent: Microsoft.Azure.EventHubs.TokenProvider
  isExternal: false
  name: ThisLock
  nameWithType: TokenProvider.ThisLock
  fullName: Microsoft.Azure.EventHubs.TokenProvider.ThisLock
- uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  isExternal: true
  name: CreateSharedAccessSignatureTokenProvider(String)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
    name: CreateSharedAccessSignatureTokenProvider
    nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
    fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
    name: CreateSharedAccessSignatureTokenProvider
    nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
    fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  isExternal: true
  name: CreateSharedAccessSignatureTokenProvider(String, String)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
    name: CreateSharedAccessSignatureTokenProvider
    nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
    fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
    name: CreateSharedAccessSignatureTokenProvider
    nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
    fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  isExternal: true
  name: CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String, TimeSpan)
  spec.csharp:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan)
    name: CreateSharedAccessSignatureTokenProvider
    nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
    fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan)
    name: CreateSharedAccessSignatureTokenProvider
    nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
    fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.Azure.EventHubs.TokenScope)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.Azure.EventHubs.TokenScope)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  isExternal: true
  name: CreateSharedAccessSignatureTokenProvider(String, String, TokenScope)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String, TokenScope)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String, Microsoft.Azure.EventHubs.TokenScope)
  spec.csharp:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.Azure.EventHubs.TokenScope)
    name: CreateSharedAccessSignatureTokenProvider
    nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
    fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.EventHubs.TokenScope
    name: TokenScope
    nameWithType: TokenScope
    fullName: Microsoft.Azure.EventHubs.TokenScope
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.Azure.EventHubs.TokenScope)
    name: CreateSharedAccessSignatureTokenProvider
    nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
    fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.EventHubs.TokenScope
    name: TokenScope
    nameWithType: TokenScope
    fullName: Microsoft.Azure.EventHubs.TokenScope
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  isExternal: true
  name: CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan, TokenScope)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan, TokenScope)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String, TimeSpan, Microsoft.Azure.EventHubs.TokenScope)
  spec.csharp:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
    name: CreateSharedAccessSignatureTokenProvider
    nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
    fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.EventHubs.TokenScope
    name: TokenScope
    nameWithType: TokenScope
    fullName: Microsoft.Azure.EventHubs.TokenScope
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
    name: CreateSharedAccessSignatureTokenProvider
    nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
    fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.EventHubs.TokenScope
    name: TokenScope
    nameWithType: TokenScope
    fullName: Microsoft.Azure.EventHubs.TokenScope
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync(System.String,System.String,TimeSpan)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync(System.String,System.String,TimeSpan)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  isExternal: true
  name: GetTokenAsync(String, String, TimeSpan)
  nameWithType: TokenProvider.GetTokenAsync(String, String, TimeSpan)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync(System.String, System.String, TimeSpan)
  spec.csharp:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync(System.String,System.String,TimeSpan)
    name: GetTokenAsync
    nameWithType: TokenProvider.GetTokenAsync
    fullName: Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync(System.String,System.String,TimeSpan)
    name: GetTokenAsync
    nameWithType: TokenProvider.GetTokenAsync
    fullName: Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo(System.String)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo(System.String)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  isExternal: true
  name: NormalizeAppliesTo(String)
  nameWithType: TokenProvider.NormalizeAppliesTo(String)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo(System.String)
    name: NormalizeAppliesTo
    nameWithType: TokenProvider.NormalizeAppliesTo
    fullName: Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo(System.String)
    name: NormalizeAppliesTo
    nameWithType: TokenProvider.NormalizeAppliesTo
    fullName: Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.#ctor*
  commentId: Overload:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.#ctor
  isExternal: false
  name: SharedAccessSignatureTokenProvider
  nameWithType: SharedAccessSignatureTokenProvider.SharedAccessSignatureTokenProvider
  fullName: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.SharedAccessSignatureTokenProvider
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Func{System.String,System.Byte[]}
  commentId: '!:Func{System.String,System.Byte[]}'
  definition: Func`2
  name: Func<String, Byte[]>
  nameWithType: Func<String, Byte[]>
  fullName: Func<System.String, System.Byte[]>
  nameWithType.vb: Func(Of String, Byte())
  fullname.vb: Func(Of System.String, System.Byte())
  name.vb: Func(Of String, Byte())
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: Microsoft.Azure.EventHubs.TokenScope
  commentId: T:Microsoft.Azure.EventHubs.TokenScope
  parent: Microsoft.Azure.EventHubs
  isExternal: false
  name: TokenScope
  nameWithType: TokenScope
  fullName: Microsoft.Azure.EventHubs.TokenScope
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullname.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync(System.String,System.String,TimeSpan)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync(System.String,System.String,TimeSpan)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  isExternal: true
  name: OnGetTokenAsync(String, String, TimeSpan)
  nameWithType: TokenProvider.OnGetTokenAsync(String, String, TimeSpan)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync(System.String, System.String, TimeSpan)
  spec.csharp:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync(System.String,System.String,TimeSpan)
    name: OnGetTokenAsync
    nameWithType: TokenProvider.OnGetTokenAsync
    fullName: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync(System.String,System.String,TimeSpan)
    name: OnGetTokenAsync
    nameWithType: TokenProvider.OnGetTokenAsync
    fullName: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.OnGetTokenAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.OnGetTokenAsync
  isExternal: false
  name: OnGetTokenAsync
  nameWithType: SharedAccessSignatureTokenProvider.OnGetTokenAsync
  fullName: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.OnGetTokenAsync
- uid: Task{Microsoft.Azure.EventHubs.SecurityToken}
  commentId: '!:Task{Microsoft.Azure.EventHubs.SecurityToken}'
  definition: Task`1
  name: Task<SecurityToken>
  nameWithType: Task<SecurityToken>
  fullName: Task<Microsoft.Azure.EventHubs.SecurityToken>
  nameWithType.vb: Task(Of SecurityToken)
  fullname.vb: Task(Of Microsoft.Azure.EventHubs.SecurityToken)
  name.vb: Task(Of SecurityToken)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.EventHubs.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: Microsoft.Azure.EventHubs.SecurityToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.EventHubs.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: Microsoft.Azure.EventHubs.SecurityToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.BuildSignature*
  commentId: Overload:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.BuildSignature
  isExternal: false
  name: BuildSignature
  nameWithType: SharedAccessSignatureTokenProvider.BuildSignature
  fullName: Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.BuildSignature
