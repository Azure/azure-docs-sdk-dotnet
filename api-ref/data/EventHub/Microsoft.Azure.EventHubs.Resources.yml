### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.EventHubs.Resources
  commentId: T:Microsoft.Azure.EventHubs.Resources
  id: Resources
  parent: Microsoft.Azure.EventHubs
  children:
  - Microsoft.Azure.EventHubs.Resources.AmqpMessageSizeExceeded
  - Microsoft.Azure.EventHubs.Resources.ArgumentNullOrWhiteSpace
  - Microsoft.Azure.EventHubs.Resources.ArgumentStringTooBig
  - Microsoft.Azure.EventHubs.Resources.CannotSendAnEmptyEvent
  - Microsoft.Azure.EventHubs.Resources.Culture
  - Microsoft.Azure.EventHubs.Resources.EventDataListIsNullOrEmpty
  - Microsoft.Azure.EventHubs.Resources.FailedToSerializeUnsupportedType
  - Microsoft.Azure.EventHubs.Resources.InvalidEncoding
  - Microsoft.Azure.EventHubs.Resources.PartitionInvalidPartitionKey
  - Microsoft.Azure.EventHubs.Resources.ResourceManager
  - Microsoft.Azure.EventHubs.Resources.TimeoutMustBeNonNegative
  - Microsoft.Azure.EventHubs.Resources.TimeoutMustBePositive
  - Microsoft.Azure.EventHubs.Resources.TokenMissingAudience
  - Microsoft.Azure.EventHubs.Resources.TokenMissingExpiresOn
  langs:
  - csharp
  - vb
  name: Resources
  nameWithType: Resources
  fullName: Microsoft.Azure.EventHubs.Resources
  type: Class
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: Resources
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nA strongly-typed resource class, for looking up localized strings, etc.\n"
  example: []
  syntax:
    content: 'public class Resources : object'
    content.vb: >-
      Public Class Resources
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.EventHubs.Resources.ResourceManager
  commentId: P:Microsoft.Azure.EventHubs.Resources.ResourceManager
  id: ResourceManager
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: ResourceManager
  nameWithType: Resources.ResourceManager
  fullName: Microsoft.Azure.EventHubs.Resources.ResourceManager
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ResourceManager
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nReturns the cached ResourceManager instance used by this class.\n"
  example: []
  syntax:
    content: public static System.Resources.ResourceManager ResourceManager { get; }
    content.vb: Public Shared ReadOnly Property ResourceManager As System.Resources.ResourceManager
    parameters: []
    return:
      type: System.Resources.ResourceManager
  overload: Microsoft.Azure.EventHubs.Resources.ResourceManager*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.Culture
  commentId: P:Microsoft.Azure.EventHubs.Resources.Culture
  id: Culture
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: Resources.Culture
  fullName: Microsoft.Azure.EventHubs.Resources.Culture
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: Culture
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nOverrides the current thread's CurrentUICulture property for all\nresource lookups using this strongly typed resource class.\n"
  example: []
  syntax:
    content: public static System.Globalization.CultureInfo Culture { get; set; }
    content.vb: Public Shared Property Culture As System.Globalization.CultureInfo
    parameters: []
    return:
      type: System.Globalization.CultureInfo
  overload: Microsoft.Azure.EventHubs.Resources.Culture*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.EventHubs.Resources.AmqpMessageSizeExceeded
  commentId: P:Microsoft.Azure.EventHubs.Resources.AmqpMessageSizeExceeded
  id: AmqpMessageSizeExceeded
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: AmqpMessageSizeExceeded
  nameWithType: Resources.AmqpMessageSizeExceeded
  fullName: Microsoft.Azure.EventHubs.Resources.AmqpMessageSizeExceeded
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: AmqpMessageSizeExceeded
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to The received message (delivery-id:{0}, size:{1} bytes) exceeds the limit ({2} bytes) currently allowed on the link..\n"
  example: []
  syntax:
    content: public static string AmqpMessageSizeExceeded { get; }
    content.vb: Public Shared ReadOnly Property AmqpMessageSizeExceeded As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.AmqpMessageSizeExceeded*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.ArgumentNullOrWhiteSpace
  commentId: P:Microsoft.Azure.EventHubs.Resources.ArgumentNullOrWhiteSpace
  id: ArgumentNullOrWhiteSpace
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: ArgumentNullOrWhiteSpace
  nameWithType: Resources.ArgumentNullOrWhiteSpace
  fullName: Microsoft.Azure.EventHubs.Resources.ArgumentNullOrWhiteSpace
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ArgumentNullOrWhiteSpace
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to The argument {0} is null or white space..\n"
  example: []
  syntax:
    content: public static string ArgumentNullOrWhiteSpace { get; }
    content.vb: Public Shared ReadOnly Property ArgumentNullOrWhiteSpace As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.ArgumentNullOrWhiteSpace*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.ArgumentStringTooBig
  commentId: P:Microsoft.Azure.EventHubs.Resources.ArgumentStringTooBig
  id: ArgumentStringTooBig
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: ArgumentStringTooBig
  nameWithType: Resources.ArgumentStringTooBig
  fullName: Microsoft.Azure.EventHubs.Resources.ArgumentStringTooBig
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ArgumentStringTooBig
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to The argument '{0}' cannot exceed {1} characters..\n"
  example: []
  syntax:
    content: public static string ArgumentStringTooBig { get; }
    content.vb: Public Shared ReadOnly Property ArgumentStringTooBig As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.ArgumentStringTooBig*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.CannotSendAnEmptyEvent
  commentId: P:Microsoft.Azure.EventHubs.Resources.CannotSendAnEmptyEvent
  id: CannotSendAnEmptyEvent
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: CannotSendAnEmptyEvent
  nameWithType: Resources.CannotSendAnEmptyEvent
  fullName: Microsoft.Azure.EventHubs.Resources.CannotSendAnEmptyEvent
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: CannotSendAnEmptyEvent
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to Sending empty {0} is not a valid operation..\n"
  example: []
  syntax:
    content: public static string CannotSendAnEmptyEvent { get; }
    content.vb: Public Shared ReadOnly Property CannotSendAnEmptyEvent As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.CannotSendAnEmptyEvent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.EventDataListIsNullOrEmpty
  commentId: P:Microsoft.Azure.EventHubs.Resources.EventDataListIsNullOrEmpty
  id: EventDataListIsNullOrEmpty
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: EventDataListIsNullOrEmpty
  nameWithType: Resources.EventDataListIsNullOrEmpty
  fullName: Microsoft.Azure.EventHubs.Resources.EventDataListIsNullOrEmpty
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: EventDataListIsNullOrEmpty
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to There are no event data supplied. Please make sure input events are not empty..\n"
  example: []
  syntax:
    content: public static string EventDataListIsNullOrEmpty { get; }
    content.vb: Public Shared ReadOnly Property EventDataListIsNullOrEmpty As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.EventDataListIsNullOrEmpty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.FailedToSerializeUnsupportedType
  commentId: P:Microsoft.Azure.EventHubs.Resources.FailedToSerializeUnsupportedType
  id: FailedToSerializeUnsupportedType
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: FailedToSerializeUnsupportedType
  nameWithType: Resources.FailedToSerializeUnsupportedType
  fullName: Microsoft.Azure.EventHubs.Resources.FailedToSerializeUnsupportedType
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: FailedToSerializeUnsupportedType
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to Serialization operation failed due to unsupported type {0}..\n"
  example: []
  syntax:
    content: public static string FailedToSerializeUnsupportedType { get; }
    content.vb: Public Shared ReadOnly Property FailedToSerializeUnsupportedType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.FailedToSerializeUnsupportedType*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.InvalidEncoding
  commentId: P:Microsoft.Azure.EventHubs.Resources.InvalidEncoding
  id: InvalidEncoding
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: InvalidEncoding
  nameWithType: Resources.InvalidEncoding
  fullName: Microsoft.Azure.EventHubs.Resources.InvalidEncoding
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: InvalidEncoding
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to The string has an invalid encoding format..\n"
  example: []
  syntax:
    content: public static string InvalidEncoding { get; }
    content.vb: Public Shared ReadOnly Property InvalidEncoding As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.InvalidEncoding*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.PartitionInvalidPartitionKey
  commentId: P:Microsoft.Azure.EventHubs.Resources.PartitionInvalidPartitionKey
  id: PartitionInvalidPartitionKey
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: PartitionInvalidPartitionKey
  nameWithType: Resources.PartitionInvalidPartitionKey
  fullName: Microsoft.Azure.EventHubs.Resources.PartitionInvalidPartitionKey
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: PartitionInvalidPartitionKey
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to The specified partitionKey '{0}' is invalid for partition '{1}'. Do not specify a partitionKey when sending using a PartitionedSender.  Instead use EventHubClient.Send..\n"
  example: []
  syntax:
    content: public static string PartitionInvalidPartitionKey { get; }
    content.vb: Public Shared ReadOnly Property PartitionInvalidPartitionKey As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.PartitionInvalidPartitionKey*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.TimeoutMustBeNonNegative
  commentId: P:Microsoft.Azure.EventHubs.Resources.TimeoutMustBeNonNegative
  id: TimeoutMustBeNonNegative
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: TimeoutMustBeNonNegative
  nameWithType: Resources.TimeoutMustBeNonNegative
  fullName: Microsoft.Azure.EventHubs.Resources.TimeoutMustBeNonNegative
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: TimeoutMustBeNonNegative
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 139
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to Argument {0} must be a non-negative timeout value. The provided value was {1}..\n"
  example: []
  syntax:
    content: public static string TimeoutMustBeNonNegative { get; }
    content.vb: Public Shared ReadOnly Property TimeoutMustBeNonNegative As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.TimeoutMustBeNonNegative*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.TimeoutMustBePositive
  commentId: P:Microsoft.Azure.EventHubs.Resources.TimeoutMustBePositive
  id: TimeoutMustBePositive
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: TimeoutMustBePositive
  nameWithType: Resources.TimeoutMustBePositive
  fullName: Microsoft.Azure.EventHubs.Resources.TimeoutMustBePositive
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: TimeoutMustBePositive
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to Argument {0} must be a positive timeout value. The provided value was {1}..\n"
  example: []
  syntax:
    content: public static string TimeoutMustBePositive { get; }
    content.vb: Public Shared ReadOnly Property TimeoutMustBePositive As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.TimeoutMustBePositive*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.TokenMissingAudience
  commentId: P:Microsoft.Azure.EventHubs.Resources.TokenMissingAudience
  id: TokenMissingAudience
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: TokenMissingAudience
  nameWithType: Resources.TokenMissingAudience
  fullName: Microsoft.Azure.EventHubs.Resources.TokenMissingAudience
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: TokenMissingAudience
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 157
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to The provided token does not specify the 'Audience' value..\n"
  example: []
  syntax:
    content: public static string TokenMissingAudience { get; }
    content.vb: Public Shared ReadOnly Property TokenMissingAudience As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.TokenMissingAudience*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Resources.TokenMissingExpiresOn
  commentId: P:Microsoft.Azure.EventHubs.Resources.TokenMissingExpiresOn
  id: TokenMissingExpiresOn
  parent: Microsoft.Azure.EventHubs.Resources
  langs:
  - csharp
  - vb
  name: TokenMissingExpiresOn
  nameWithType: Resources.TokenMissingExpiresOn
  fullName: Microsoft.Azure.EventHubs.Resources.TokenMissingExpiresOn
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Resources.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: TokenMissingExpiresOn
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Resources.Designer.cs
    startLine: 166
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nLooks up a localized string similar to The provided token does not specify the 'ExpiresOn' value..\n"
  example: []
  syntax:
    content: public static string TokenMissingExpiresOn { get; }
    content.vb: Public Shared ReadOnly Property TokenMissingExpiresOn As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Resources.TokenMissingExpiresOn*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.Azure.EventHubs
  commentId: N:Microsoft.Azure.EventHubs
  isExternal: false
  name: Microsoft.Azure.EventHubs
  nameWithType: Microsoft.Azure.EventHubs
  fullName: Microsoft.Azure.EventHubs
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.EventHubs.Resources.ResourceManager*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.ResourceManager
  isExternal: false
  name: ResourceManager
  nameWithType: Resources.ResourceManager
  fullName: Microsoft.Azure.EventHubs.Resources.ResourceManager
- uid: System.Resources.ResourceManager
  commentId: '!:System.Resources.ResourceManager'
  isExternal: true
  name: System.Resources.ResourceManager
  nameWithType: System.Resources.ResourceManager
  fullName: System.Resources.ResourceManager
- uid: Microsoft.Azure.EventHubs.Resources.Culture*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.Culture
  isExternal: false
  name: Culture
  nameWithType: Resources.Culture
  fullName: Microsoft.Azure.EventHubs.Resources.Culture
- uid: System.Globalization.CultureInfo
  commentId: '!:System.Globalization.CultureInfo'
  isExternal: true
  name: System.Globalization.CultureInfo
  nameWithType: System.Globalization.CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Microsoft.Azure.EventHubs.Resources.AmqpMessageSizeExceeded*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.AmqpMessageSizeExceeded
  isExternal: false
  name: AmqpMessageSizeExceeded
  nameWithType: Resources.AmqpMessageSizeExceeded
  fullName: Microsoft.Azure.EventHubs.Resources.AmqpMessageSizeExceeded
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.EventHubs.Resources.ArgumentNullOrWhiteSpace*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.ArgumentNullOrWhiteSpace
  isExternal: false
  name: ArgumentNullOrWhiteSpace
  nameWithType: Resources.ArgumentNullOrWhiteSpace
  fullName: Microsoft.Azure.EventHubs.Resources.ArgumentNullOrWhiteSpace
- uid: Microsoft.Azure.EventHubs.Resources.ArgumentStringTooBig*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.ArgumentStringTooBig
  isExternal: false
  name: ArgumentStringTooBig
  nameWithType: Resources.ArgumentStringTooBig
  fullName: Microsoft.Azure.EventHubs.Resources.ArgumentStringTooBig
- uid: Microsoft.Azure.EventHubs.Resources.CannotSendAnEmptyEvent*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.CannotSendAnEmptyEvent
  isExternal: false
  name: CannotSendAnEmptyEvent
  nameWithType: Resources.CannotSendAnEmptyEvent
  fullName: Microsoft.Azure.EventHubs.Resources.CannotSendAnEmptyEvent
- uid: Microsoft.Azure.EventHubs.Resources.EventDataListIsNullOrEmpty*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.EventDataListIsNullOrEmpty
  isExternal: false
  name: EventDataListIsNullOrEmpty
  nameWithType: Resources.EventDataListIsNullOrEmpty
  fullName: Microsoft.Azure.EventHubs.Resources.EventDataListIsNullOrEmpty
- uid: Microsoft.Azure.EventHubs.Resources.FailedToSerializeUnsupportedType*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.FailedToSerializeUnsupportedType
  isExternal: false
  name: FailedToSerializeUnsupportedType
  nameWithType: Resources.FailedToSerializeUnsupportedType
  fullName: Microsoft.Azure.EventHubs.Resources.FailedToSerializeUnsupportedType
- uid: Microsoft.Azure.EventHubs.Resources.InvalidEncoding*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.InvalidEncoding
  isExternal: false
  name: InvalidEncoding
  nameWithType: Resources.InvalidEncoding
  fullName: Microsoft.Azure.EventHubs.Resources.InvalidEncoding
- uid: Microsoft.Azure.EventHubs.Resources.PartitionInvalidPartitionKey*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.PartitionInvalidPartitionKey
  isExternal: false
  name: PartitionInvalidPartitionKey
  nameWithType: Resources.PartitionInvalidPartitionKey
  fullName: Microsoft.Azure.EventHubs.Resources.PartitionInvalidPartitionKey
- uid: Microsoft.Azure.EventHubs.Resources.TimeoutMustBeNonNegative*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.TimeoutMustBeNonNegative
  isExternal: false
  name: TimeoutMustBeNonNegative
  nameWithType: Resources.TimeoutMustBeNonNegative
  fullName: Microsoft.Azure.EventHubs.Resources.TimeoutMustBeNonNegative
- uid: Microsoft.Azure.EventHubs.Resources.TimeoutMustBePositive*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.TimeoutMustBePositive
  isExternal: false
  name: TimeoutMustBePositive
  nameWithType: Resources.TimeoutMustBePositive
  fullName: Microsoft.Azure.EventHubs.Resources.TimeoutMustBePositive
- uid: Microsoft.Azure.EventHubs.Resources.TokenMissingAudience*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.TokenMissingAudience
  isExternal: false
  name: TokenMissingAudience
  nameWithType: Resources.TokenMissingAudience
  fullName: Microsoft.Azure.EventHubs.Resources.TokenMissingAudience
- uid: Microsoft.Azure.EventHubs.Resources.TokenMissingExpiresOn*
  commentId: Overload:Microsoft.Azure.EventHubs.Resources.TokenMissingExpiresOn
  isExternal: false
  name: TokenMissingExpiresOn
  nameWithType: Resources.TokenMissingExpiresOn
  fullName: Microsoft.Azure.EventHubs.Resources.TokenMissingExpiresOn
