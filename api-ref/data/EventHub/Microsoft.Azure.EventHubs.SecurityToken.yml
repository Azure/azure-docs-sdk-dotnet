### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.EventHubs.SecurityToken
  commentId: T:Microsoft.Azure.EventHubs.SecurityToken
  id: SecurityToken
  parent: Microsoft.Azure.EventHubs
  children:
  - Microsoft.Azure.EventHubs.SecurityToken.#ctor(System.String)
  - Microsoft.Azure.EventHubs.SecurityToken.#ctor(System.String,DateTime)
  - Microsoft.Azure.EventHubs.SecurityToken.#ctor(System.String,DateTime,System.String)
  - Microsoft.Azure.EventHubs.SecurityToken.Audience
  - Microsoft.Azure.EventHubs.SecurityToken.AudienceFieldName
  - Microsoft.Azure.EventHubs.SecurityToken.ExpiresAtUtc
  - Microsoft.Azure.EventHubs.SecurityToken.ExpiresOnFieldName
  - Microsoft.Azure.EventHubs.SecurityToken.KeyValueSeparator
  - Microsoft.Azure.EventHubs.SecurityToken.PairSeparator
  - Microsoft.Azure.EventHubs.SecurityToken.TokenAudience
  - Microsoft.Azure.EventHubs.SecurityToken.TokenDigest256
  - Microsoft.Azure.EventHubs.SecurityToken.TokenExpiresOn
  - Microsoft.Azure.EventHubs.SecurityToken.TokenIssuer
  - Microsoft.Azure.EventHubs.SecurityToken.TokenValue
  langs:
  - csharp
  - vb
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: Microsoft.Azure.EventHubs.SecurityToken
  type: Class
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: SecurityToken
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: 'public class SecurityToken : object'
    content.vb: >-
      Public Class SecurityToken
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.EventHubs.SecurityToken.TokenAudience
  commentId: F:Microsoft.Azure.EventHubs.SecurityToken.TokenAudience
  id: TokenAudience
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: TokenAudience
  nameWithType: SecurityToken.TokenAudience
  fullName: Microsoft.Azure.EventHubs.SecurityToken.TokenAudience
  type: Field
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: TokenAudience
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public const string TokenAudience = null
    content.vb: Public Const TokenAudience As String = Nothing
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.EventHubs.SecurityToken.TokenExpiresOn
  commentId: F:Microsoft.Azure.EventHubs.SecurityToken.TokenExpiresOn
  id: TokenExpiresOn
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: TokenExpiresOn
  nameWithType: SecurityToken.TokenExpiresOn
  fullName: Microsoft.Azure.EventHubs.SecurityToken.TokenExpiresOn
  type: Field
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: TokenExpiresOn
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public const string TokenExpiresOn = null
    content.vb: Public Const TokenExpiresOn As String = Nothing
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.EventHubs.SecurityToken.TokenIssuer
  commentId: F:Microsoft.Azure.EventHubs.SecurityToken.TokenIssuer
  id: TokenIssuer
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: TokenIssuer
  nameWithType: SecurityToken.TokenIssuer
  fullName: Microsoft.Azure.EventHubs.SecurityToken.TokenIssuer
  type: Field
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: TokenIssuer
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public const string TokenIssuer = null
    content.vb: Public Const TokenIssuer As String = Nothing
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.EventHubs.SecurityToken.TokenDigest256
  commentId: F:Microsoft.Azure.EventHubs.SecurityToken.TokenDigest256
  id: TokenDigest256
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: TokenDigest256
  nameWithType: SecurityToken.TokenDigest256
  fullName: Microsoft.Azure.EventHubs.SecurityToken.TokenDigest256
  type: Field
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: TokenDigest256
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public const string TokenDigest256 = null
    content.vb: Public Const TokenDigest256 As String = Nothing
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.EventHubs.SecurityToken.#ctor(System.String,DateTime,System.String)
  commentId: M:Microsoft.Azure.EventHubs.SecurityToken.#ctor(System.String,DateTime,System.String)
  id: '#ctor(System.String,DateTime,System.String)'
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: SecurityToken(String, DateTime, String)
  nameWithType: SecurityToken.SecurityToken(String, DateTime, String)
  fullName: Microsoft.Azure.EventHubs.SecurityToken.SecurityToken(System.String, DateTime, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: .ctor
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public SecurityToken(string tokenString, DateTime expiresAtUtc, string audience)
    content.vb: Public Sub New(tokenString As String, expiresAtUtc As DateTime, audience As String)
    parameters:
    - id: tokenString
      type: System.String
    - id: expiresAtUtc
      type: DateTime
    - id: audience
      type: System.String
  overload: Microsoft.Azure.EventHubs.SecurityToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.EventHubs.SecurityToken.#ctor(System.String,DateTime)
  commentId: M:Microsoft.Azure.EventHubs.SecurityToken.#ctor(System.String,DateTime)
  id: '#ctor(System.String,DateTime)'
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: SecurityToken(String, DateTime)
  nameWithType: SecurityToken.SecurityToken(String, DateTime)
  fullName: Microsoft.Azure.EventHubs.SecurityToken.SecurityToken(System.String, DateTime)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: .ctor
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public SecurityToken(string tokenString, DateTime expiresAtUtc)
    content.vb: Public Sub New(tokenString As String, expiresAtUtc As DateTime)
    parameters:
    - id: tokenString
      type: System.String
    - id: expiresAtUtc
      type: DateTime
  overload: Microsoft.Azure.EventHubs.SecurityToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.EventHubs.SecurityToken.#ctor(System.String)
  commentId: M:Microsoft.Azure.EventHubs.SecurityToken.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: SecurityToken(String)
  nameWithType: SecurityToken.SecurityToken(String)
  fullName: Microsoft.Azure.EventHubs.SecurityToken.SecurityToken(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: .ctor
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public SecurityToken(string tokenString)
    content.vb: Public Sub New(tokenString As String)
    parameters:
    - id: tokenString
      type: System.String
  overload: Microsoft.Azure.EventHubs.SecurityToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.EventHubs.SecurityToken.Audience
  commentId: P:Microsoft.Azure.EventHubs.SecurityToken.Audience
  id: Audience
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: Audience
  nameWithType: SecurityToken.Audience
  fullName: Microsoft.Azure.EventHubs.SecurityToken.Audience
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: Audience
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public string Audience { get; }
    content.vb: Public ReadOnly Property Audience As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.SecurityToken.Audience*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.SecurityToken.ExpiresAtUtc
  commentId: P:Microsoft.Azure.EventHubs.SecurityToken.ExpiresAtUtc
  id: ExpiresAtUtc
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: ExpiresAtUtc
  nameWithType: SecurityToken.ExpiresAtUtc
  fullName: Microsoft.Azure.EventHubs.SecurityToken.ExpiresAtUtc
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ExpiresAtUtc
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public DateTime ExpiresAtUtc { get; }
    content.vb: Public ReadOnly Property ExpiresAtUtc As DateTime
    parameters: []
    return:
      type: DateTime
  overload: Microsoft.Azure.EventHubs.SecurityToken.ExpiresAtUtc*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.SecurityToken.ExpiresOnFieldName
  commentId: P:Microsoft.Azure.EventHubs.SecurityToken.ExpiresOnFieldName
  id: ExpiresOnFieldName
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: ExpiresOnFieldName
  nameWithType: SecurityToken.ExpiresOnFieldName
  fullName: Microsoft.Azure.EventHubs.SecurityToken.ExpiresOnFieldName
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ExpiresOnFieldName
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected virtual string ExpiresOnFieldName { get; }
    content.vb: Protected Overridable ReadOnly Property ExpiresOnFieldName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.SecurityToken.ExpiresOnFieldName*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.SecurityToken.AudienceFieldName
  commentId: P:Microsoft.Azure.EventHubs.SecurityToken.AudienceFieldName
  id: AudienceFieldName
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: AudienceFieldName
  nameWithType: SecurityToken.AudienceFieldName
  fullName: Microsoft.Azure.EventHubs.SecurityToken.AudienceFieldName
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: AudienceFieldName
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected virtual string AudienceFieldName { get; }
    content.vb: Protected Overridable ReadOnly Property AudienceFieldName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.SecurityToken.AudienceFieldName*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.SecurityToken.KeyValueSeparator
  commentId: P:Microsoft.Azure.EventHubs.SecurityToken.KeyValueSeparator
  id: KeyValueSeparator
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: KeyValueSeparator
  nameWithType: SecurityToken.KeyValueSeparator
  fullName: Microsoft.Azure.EventHubs.SecurityToken.KeyValueSeparator
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: KeyValueSeparator
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected virtual string KeyValueSeparator { get; }
    content.vb: Protected Overridable ReadOnly Property KeyValueSeparator As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.SecurityToken.KeyValueSeparator*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.SecurityToken.PairSeparator
  commentId: P:Microsoft.Azure.EventHubs.SecurityToken.PairSeparator
  id: PairSeparator
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: PairSeparator
  nameWithType: SecurityToken.PairSeparator
  fullName: Microsoft.Azure.EventHubs.SecurityToken.PairSeparator
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: PairSeparator
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected virtual string PairSeparator { get; }
    content.vb: Protected Overridable ReadOnly Property PairSeparator As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.SecurityToken.PairSeparator*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.SecurityToken.TokenValue
  commentId: P:Microsoft.Azure.EventHubs.SecurityToken.TokenValue
  id: TokenValue
  parent: Microsoft.Azure.EventHubs.SecurityToken
  langs:
  - csharp
  - vb
  name: TokenValue
  nameWithType: SecurityToken.TokenValue
  fullName: Microsoft.Azure.EventHubs.SecurityToken.TokenValue
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: TokenValue
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/SecurityToken.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public object TokenValue { get; }
    content.vb: Public ReadOnly Property TokenValue As Object
    parameters: []
    return:
      type: System.Object
  overload: Microsoft.Azure.EventHubs.SecurityToken.TokenValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.EventHubs
  commentId: N:Microsoft.Azure.EventHubs
  isExternal: false
  name: Microsoft.Azure.EventHubs
  nameWithType: Microsoft.Azure.EventHubs
  fullName: Microsoft.Azure.EventHubs
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.EventHubs.SecurityToken.#ctor*
  commentId: Overload:Microsoft.Azure.EventHubs.SecurityToken.#ctor
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken.SecurityToken
  fullName: Microsoft.Azure.EventHubs.SecurityToken.SecurityToken
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Microsoft.Azure.EventHubs.SecurityToken.Audience*
  commentId: Overload:Microsoft.Azure.EventHubs.SecurityToken.Audience
  isExternal: false
  name: Audience
  nameWithType: SecurityToken.Audience
  fullName: Microsoft.Azure.EventHubs.SecurityToken.Audience
- uid: Microsoft.Azure.EventHubs.SecurityToken.ExpiresAtUtc*
  commentId: Overload:Microsoft.Azure.EventHubs.SecurityToken.ExpiresAtUtc
  isExternal: false
  name: ExpiresAtUtc
  nameWithType: SecurityToken.ExpiresAtUtc
  fullName: Microsoft.Azure.EventHubs.SecurityToken.ExpiresAtUtc
- uid: Microsoft.Azure.EventHubs.SecurityToken.ExpiresOnFieldName*
  commentId: Overload:Microsoft.Azure.EventHubs.SecurityToken.ExpiresOnFieldName
  isExternal: false
  name: ExpiresOnFieldName
  nameWithType: SecurityToken.ExpiresOnFieldName
  fullName: Microsoft.Azure.EventHubs.SecurityToken.ExpiresOnFieldName
- uid: Microsoft.Azure.EventHubs.SecurityToken.AudienceFieldName*
  commentId: Overload:Microsoft.Azure.EventHubs.SecurityToken.AudienceFieldName
  isExternal: false
  name: AudienceFieldName
  nameWithType: SecurityToken.AudienceFieldName
  fullName: Microsoft.Azure.EventHubs.SecurityToken.AudienceFieldName
- uid: Microsoft.Azure.EventHubs.SecurityToken.KeyValueSeparator*
  commentId: Overload:Microsoft.Azure.EventHubs.SecurityToken.KeyValueSeparator
  isExternal: false
  name: KeyValueSeparator
  nameWithType: SecurityToken.KeyValueSeparator
  fullName: Microsoft.Azure.EventHubs.SecurityToken.KeyValueSeparator
- uid: Microsoft.Azure.EventHubs.SecurityToken.PairSeparator*
  commentId: Overload:Microsoft.Azure.EventHubs.SecurityToken.PairSeparator
  isExternal: false
  name: PairSeparator
  nameWithType: SecurityToken.PairSeparator
  fullName: Microsoft.Azure.EventHubs.SecurityToken.PairSeparator
- uid: Microsoft.Azure.EventHubs.SecurityToken.TokenValue*
  commentId: Overload:Microsoft.Azure.EventHubs.SecurityToken.TokenValue
  isExternal: false
  name: TokenValue
  nameWithType: SecurityToken.TokenValue
  fullName: Microsoft.Azure.EventHubs.SecurityToken.TokenValue
