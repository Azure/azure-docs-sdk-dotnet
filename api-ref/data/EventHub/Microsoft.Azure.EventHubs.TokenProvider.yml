### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.EventHubs.TokenProvider
  commentId: T:Microsoft.Azure.EventHubs.TokenProvider
  id: TokenProvider
  parent: Microsoft.Azure.EventHubs
  children:
  - Microsoft.Azure.EventHubs.TokenProvider.#ctor
  - Microsoft.Azure.EventHubs.TokenProvider.#ctor(Microsoft.Azure.EventHubs.TokenScope)
  - Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  - Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  - Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.Azure.EventHubs.TokenScope)
  - Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan)
  - Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
  - Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync(System.String,System.String,TimeSpan)
  - Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo(System.String)
  - Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync(System.String,System.String,TimeSpan)
  - Microsoft.Azure.EventHubs.TokenProvider.ThisLock
  - Microsoft.Azure.EventHubs.TokenProvider.TokenScope
  langs:
  - csharp
  - vb
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: Microsoft.Azure.EventHubs.TokenProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: TokenProvider
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nThis abstract base class can be extended to implement additional token providers.\n"
  example: []
  syntax:
    content: 'public abstract class TokenProvider : object'
    content.vb: >-
      Public MustInherit Class TokenProvider
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Azure.EventHubs.TokenProvider.#ctor
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: TokenProvider()
  nameWithType: TokenProvider.TokenProvider()
  fullName: Microsoft.Azure.EventHubs.TokenProvider.TokenProvider()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: .ctor
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected TokenProvider()
    content.vb: Protected Sub New
  overload: Microsoft.Azure.EventHubs.TokenProvider.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.EventHubs.TokenProvider.#ctor(Microsoft.Azure.EventHubs.TokenScope)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.#ctor(Microsoft.Azure.EventHubs.TokenScope)
  id: '#ctor(Microsoft.Azure.EventHubs.TokenScope)'
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: TokenProvider(TokenScope)
  nameWithType: TokenProvider.TokenProvider(TokenScope)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.TokenProvider(Microsoft.Azure.EventHubs.TokenScope)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: .ctor
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected TokenProvider(TokenScope tokenScope)
    content.vb: Protected Sub New(tokenScope As TokenScope)
    parameters:
    - id: tokenScope
      type: Microsoft.Azure.EventHubs.TokenScope
  overload: Microsoft.Azure.EventHubs.TokenProvider.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.EventHubs.TokenProvider.TokenScope
  commentId: P:Microsoft.Azure.EventHubs.TokenProvider.TokenScope
  id: TokenScope
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: TokenScope
  nameWithType: TokenProvider.TokenScope
  fullName: Microsoft.Azure.EventHubs.TokenProvider.TokenScope
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: TokenScope
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public TokenScope TokenScope { get; }
    content.vb: Public ReadOnly Property TokenScope As TokenScope
    parameters: []
    return:
      type: Microsoft.Azure.EventHubs.TokenScope
  overload: Microsoft.Azure.EventHubs.TokenProvider.TokenScope*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.TokenProvider.ThisLock
  commentId: P:Microsoft.Azure.EventHubs.TokenProvider.ThisLock
  id: ThisLock
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: ThisLock
  nameWithType: TokenProvider.ThisLock
  fullName: Microsoft.Azure.EventHubs.TokenProvider.ThisLock
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ThisLock
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected object ThisLock { get; }
    content.vb: Protected ReadOnly Property ThisLock As Object
    parameters: []
    return:
      type: System.Object
  overload: Microsoft.Azure.EventHubs.TokenProvider.ThisLock*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  id: CreateSharedAccessSignatureTokenProvider(System.String)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: CreateSharedAccessSignatureTokenProvider
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  summary: "\nConstruct a TokenProvider based on a sharedAccessSignature.\n"
  example: []
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string sharedAccessSignature)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(sharedAccessSignature As String) As TokenProvider
    parameters:
    - id: sharedAccessSignature
      type: System.String
      description: The shared access signature
    return:
      type: Microsoft.Azure.EventHubs.TokenProvider
      description: A TokenProvider initialized with the shared access signature
  overload: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  id: CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String, String)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: CreateSharedAccessSignatureTokenProvider
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(keyName As String, sharedAccessKey As String) As TokenProvider
    parameters:
    - id: keyName
      type: System.String
    - id: sharedAccessKey
      type: System.String
    return:
      type: Microsoft.Azure.EventHubs.TokenProvider
  overload: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan)
  id: CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String, TimeSpan)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: CreateSharedAccessSignatureTokenProvider
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey, TimeSpan tokenTimeToLive)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(keyName As String, sharedAccessKey As String, tokenTimeToLive As TimeSpan) As TokenProvider
    parameters:
    - id: keyName
      type: System.String
    - id: sharedAccessKey
      type: System.String
    - id: tokenTimeToLive
      type: TimeSpan
    return:
      type: Microsoft.Azure.EventHubs.TokenProvider
  overload: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.Azure.EventHubs.TokenScope)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.Azure.EventHubs.TokenScope)
  id: CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.Azure.EventHubs.TokenScope)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String, String, TokenScope)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String, TokenScope)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String, Microsoft.Azure.EventHubs.TokenScope)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: CreateSharedAccessSignatureTokenProvider
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(keyName As String, sharedAccessKey As String, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: keyName
      type: System.String
    - id: sharedAccessKey
      type: System.String
    - id: tokenScope
      type: Microsoft.Azure.EventHubs.TokenScope
    return:
      type: Microsoft.Azure.EventHubs.TokenProvider
  overload: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
  id: CreateSharedAccessSignatureTokenProvider(System.String,System.String,TimeSpan,Microsoft.Azure.EventHubs.TokenScope)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan, TokenScope)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan, TokenScope)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String, TimeSpan, Microsoft.Azure.EventHubs.TokenScope)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: CreateSharedAccessSignatureTokenProvider
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey, TimeSpan tokenTimeToLive, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(keyName As String, sharedAccessKey As String, tokenTimeToLive As TimeSpan, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: keyName
      type: System.String
    - id: sharedAccessKey
      type: System.String
    - id: tokenTimeToLive
      type: TimeSpan
    - id: tokenScope
      type: Microsoft.Azure.EventHubs.TokenScope
    return:
      type: Microsoft.Azure.EventHubs.TokenProvider
  overload: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync(System.String,System.String,TimeSpan)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync(System.String,System.String,TimeSpan)
  id: GetTokenAsync(System.String,System.String,TimeSpan)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: GetTokenAsync(String, String, TimeSpan)
  nameWithType: TokenProvider.GetTokenAsync(String, String, TimeSpan)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync(System.String, System.String, TimeSpan)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: GetTokenAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: public Task<SecurityToken> GetTokenAsync(string appliesTo, string action, TimeSpan timeout)
    content.vb: Public Function GetTokenAsync(appliesTo As String, action As String, timeout As TimeSpan) As Task(Of SecurityToken)
    parameters:
    - id: appliesTo
      type: System.String
    - id: action
      type: System.String
    - id: timeout
      type: TimeSpan
    return:
      type: Task{Microsoft.Azure.EventHubs.SecurityToken}
  overload: Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync(System.String,System.String,TimeSpan)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync(System.String,System.String,TimeSpan)
  id: OnGetTokenAsync(System.String,System.String,TimeSpan)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: OnGetTokenAsync(String, String, TimeSpan)
  nameWithType: TokenProvider.OnGetTokenAsync(String, String, TimeSpan)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync(System.String, System.String, TimeSpan)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: OnGetTokenAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected abstract Task<SecurityToken> OnGetTokenAsync(string appliesTo, string action, TimeSpan timeout)
    content.vb: Protected MustOverride Function OnGetTokenAsync(appliesTo As String, action As String, timeout As TimeSpan) As Task(Of SecurityToken)
    parameters:
    - id: appliesTo
      type: System.String
    - id: action
      type: System.String
    - id: timeout
      type: TimeSpan
    return:
      type: Task{Microsoft.Azure.EventHubs.SecurityToken}
  overload: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo(System.String)
  commentId: M:Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo(System.String)
  id: NormalizeAppliesTo(System.String)
  parent: Microsoft.Azure.EventHubs.TokenProvider
  langs:
  - csharp
  - vb
  name: NormalizeAppliesTo(String)
  nameWithType: TokenProvider.NormalizeAppliesTo(String)
  fullName: Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: NormalizeAppliesTo
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs/Primitives/TokenProvider.cs
    startLine: 105
  assemblies:
  - Microsoft.Azure.EventHubs
  namespace: Microsoft.Azure.EventHubs
  syntax:
    content: protected virtual string NormalizeAppliesTo(string appliesTo)
    content.vb: Protected Overridable Function NormalizeAppliesTo(appliesTo As String) As String
    parameters:
    - id: appliesTo
      type: System.String
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Azure.EventHubs
  commentId: N:Microsoft.Azure.EventHubs
  isExternal: false
  name: Microsoft.Azure.EventHubs
  nameWithType: Microsoft.Azure.EventHubs
  fullName: Microsoft.Azure.EventHubs
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.EventHubs.TokenProvider.#ctor*
  commentId: Overload:Microsoft.Azure.EventHubs.TokenProvider.#ctor
  isExternal: false
  name: TokenProvider
  nameWithType: TokenProvider.TokenProvider
  fullName: Microsoft.Azure.EventHubs.TokenProvider.TokenProvider
- uid: Microsoft.Azure.EventHubs.TokenScope
  commentId: T:Microsoft.Azure.EventHubs.TokenScope
  parent: Microsoft.Azure.EventHubs
  isExternal: false
  name: TokenScope
  nameWithType: TokenScope
  fullName: Microsoft.Azure.EventHubs.TokenScope
- uid: Microsoft.Azure.EventHubs.TokenProvider.TokenScope*
  commentId: Overload:Microsoft.Azure.EventHubs.TokenProvider.TokenScope
  isExternal: false
  name: TokenScope
  nameWithType: TokenProvider.TokenScope
  fullName: Microsoft.Azure.EventHubs.TokenProvider.TokenScope
- uid: Microsoft.Azure.EventHubs.TokenProvider.ThisLock*
  commentId: Overload:Microsoft.Azure.EventHubs.TokenProvider.ThisLock
  isExternal: false
  name: ThisLock
  nameWithType: TokenProvider.ThisLock
  fullName: Microsoft.Azure.EventHubs.TokenProvider.ThisLock
- uid: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  commentId: Overload:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
  isExternal: false
  name: CreateSharedAccessSignatureTokenProvider
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
  fullName: Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.EventHubs.TokenProvider
  commentId: T:Microsoft.Azure.EventHubs.TokenProvider
  parent: Microsoft.Azure.EventHubs
  isExternal: false
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: Microsoft.Azure.EventHubs.TokenProvider
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync
  isExternal: false
  name: GetTokenAsync
  nameWithType: TokenProvider.GetTokenAsync
  fullName: Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync
- uid: Task{Microsoft.Azure.EventHubs.SecurityToken}
  commentId: '!:Task{Microsoft.Azure.EventHubs.SecurityToken}'
  definition: Task`1
  name: Task<SecurityToken>
  nameWithType: Task<SecurityToken>
  fullName: Task<Microsoft.Azure.EventHubs.SecurityToken>
  nameWithType.vb: Task(Of SecurityToken)
  fullname.vb: Task(Of Microsoft.Azure.EventHubs.SecurityToken)
  name.vb: Task(Of SecurityToken)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.EventHubs.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: Microsoft.Azure.EventHubs.SecurityToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.EventHubs.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: Microsoft.Azure.EventHubs.SecurityToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync
  isExternal: false
  name: OnGetTokenAsync
  nameWithType: TokenProvider.OnGetTokenAsync
  fullName: Microsoft.Azure.EventHubs.TokenProvider.OnGetTokenAsync
- uid: Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo*
  commentId: Overload:Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo
  isExternal: false
  name: NormalizeAppliesTo
  nameWithType: TokenProvider.NormalizeAppliesTo
  fullName: Microsoft.Azure.EventHubs.TokenProvider.NormalizeAppliesTo
