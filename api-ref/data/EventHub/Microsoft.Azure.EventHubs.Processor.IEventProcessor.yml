### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.EventHubs.Processor.IEventProcessor
  commentId: T:Microsoft.Azure.EventHubs.Processor.IEventProcessor
  id: IEventProcessor
  parent: Microsoft.Azure.EventHubs.Processor
  children:
  - Microsoft.Azure.EventHubs.Processor.IEventProcessor.CloseAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,Microsoft.Azure.EventHubs.Processor.CloseReason)
  - Microsoft.Azure.EventHubs.Processor.IEventProcessor.OpenAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext)
  - Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessErrorAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,Exception)
  - Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessEventsAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,IEnumerable{EventData})
  langs:
  - csharp
  - vb
  name: IEventProcessor
  nameWithType: IEventProcessor
  fullName: Microsoft.Azure.EventHubs.Processor.IEventProcessor
  type: Interface
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/IEventProcessor.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: IEventProcessor
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/IEventProcessor.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nInterface that must be implemented by event processor classes.\n\n<p>Any given instance of an event processor class will only process events from one partition\nof one Event Hub. A PartitionContext is provided with each call to the event processor because\nsome parameters could change, but it will always be the same partition.</p>\n\n<p>Although EventProcessorHost is multithreaded, calls to a given instance of an event processor\nclass are serialized, except for OnError(). OnOpen() is called first, then OnEvents() will be called zero or more\ntimes. When the event processor needs to be shut down, whether because there was a failure\nsomewhere, or the lease for the partition has been lost, or because the entire processor host\nis being shut down, OnClose() is called after the last OnEvents() call returns.</p>\n\n<p>OnError() could be called while OnEvents() or OnClose() is executing. No synchronization is attempted\nin order to avoid possibly deadlocking.</p>\n"
  example: []
  syntax:
    content: public interface IEventProcessor
    content.vb: Public Interface IEventProcessor
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.EventHubs.Processor.IEventProcessor.OpenAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext)
  commentId: M:Microsoft.Azure.EventHubs.Processor.IEventProcessor.OpenAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext)
  id: OpenAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext)
  parent: Microsoft.Azure.EventHubs.Processor.IEventProcessor
  langs:
  - csharp
  - vb
  name: OpenAsync(PartitionContext)
  nameWithType: IEventProcessor.OpenAsync(PartitionContext)
  fullName: Microsoft.Azure.EventHubs.Processor.IEventProcessor.OpenAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/IEventProcessor.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: OpenAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/IEventProcessor.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nCalled by processor host to initialize the event processor.\n"
  example: []
  syntax:
    content: Task OpenAsync(PartitionContext context)
    content.vb: Function OpenAsync(context As PartitionContext) As Task
    parameters:
    - id: context
      type: Microsoft.Azure.EventHubs.Processor.PartitionContext
      description: Information about the partition that this event processor will process events from.
    return:
      type: Task
  overload: Microsoft.Azure.EventHubs.Processor.IEventProcessor.OpenAsync*
- uid: Microsoft.Azure.EventHubs.Processor.IEventProcessor.CloseAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,Microsoft.Azure.EventHubs.Processor.CloseReason)
  commentId: M:Microsoft.Azure.EventHubs.Processor.IEventProcessor.CloseAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,Microsoft.Azure.EventHubs.Processor.CloseReason)
  id: CloseAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,Microsoft.Azure.EventHubs.Processor.CloseReason)
  parent: Microsoft.Azure.EventHubs.Processor.IEventProcessor
  langs:
  - csharp
  - vb
  name: CloseAsync(PartitionContext, CloseReason)
  nameWithType: IEventProcessor.CloseAsync(PartitionContext, CloseReason)
  fullName: Microsoft.Azure.EventHubs.Processor.IEventProcessor.CloseAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext, Microsoft.Azure.EventHubs.Processor.CloseReason)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/IEventProcessor.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: CloseAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/IEventProcessor.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nCalled by processor host to indicate that the event processor is being stopped.\n"
  example: []
  syntax:
    content: Task CloseAsync(PartitionContext context, CloseReason reason)
    content.vb: Function CloseAsync(context As PartitionContext, reason As CloseReason) As Task
    parameters:
    - id: context
      type: Microsoft.Azure.EventHubs.Processor.PartitionContext
      description: Information about the partition.
    - id: reason
      type: Microsoft.Azure.EventHubs.Processor.CloseReason
      description: Reason why the event processor is being stopped.
    return:
      type: Task
  overload: Microsoft.Azure.EventHubs.Processor.IEventProcessor.CloseAsync*
- uid: Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessEventsAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,IEnumerable{EventData})
  commentId: M:Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessEventsAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,IEnumerable{EventData})
  id: ProcessEventsAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,IEnumerable{EventData})
  parent: Microsoft.Azure.EventHubs.Processor.IEventProcessor
  langs:
  - csharp
  - vb
  name: ProcessEventsAsync(PartitionContext, IEnumerable<EventData>)
  nameWithType: IEventProcessor.ProcessEventsAsync(PartitionContext, IEnumerable<EventData>)
  fullName: Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessEventsAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext, IEnumerable<EventData>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/IEventProcessor.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ProcessEventsAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/IEventProcessor.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nCalled by the processor host when a batch of events has arrived.\n<p>This is where the real work of the event processor is done.</p>\n"
  example: []
  syntax:
    content: Task ProcessEventsAsync(PartitionContext context, IEnumerable<EventData> messages)
    content.vb: Function ProcessEventsAsync(context As PartitionContext, messages As IEnumerable(Of EventData)) As Task
    parameters:
    - id: context
      type: Microsoft.Azure.EventHubs.Processor.PartitionContext
      description: Information about the partition.
    - id: messages
      type: IEnumerable{EventData}
      description: The events to be processed.
    return:
      type: Task
  overload: Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessEventsAsync*
  nameWithType.vb: IEventProcessor.ProcessEventsAsync(PartitionContext, IEnumerable(Of EventData))
  fullName.vb: Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessEventsAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext, IEnumerable(Of EventData))
  name.vb: ProcessEventsAsync(PartitionContext, IEnumerable(Of EventData))
- uid: Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessErrorAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,Exception)
  commentId: M:Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessErrorAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,Exception)
  id: ProcessErrorAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,Exception)
  parent: Microsoft.Azure.EventHubs.Processor.IEventProcessor
  langs:
  - csharp
  - vb
  name: ProcessErrorAsync(PartitionContext, Exception)
  nameWithType: IEventProcessor.ProcessErrorAsync(PartitionContext, Exception)
  fullName: Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessErrorAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext, Exception)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/IEventProcessor.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ProcessErrorAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/IEventProcessor.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nCalled when the underlying client experiences an error while receiving. EventProcessorHost will take\ncare of recovering from the error and continuing to pump messages, so no action is required from\nyour code. This method is provided for informational purposes.\n"
  example: []
  syntax:
    content: Task ProcessErrorAsync(PartitionContext context, Exception error)
    content.vb: Function ProcessErrorAsync(context As PartitionContext, error As Exception) As Task
    parameters:
    - id: context
      type: Microsoft.Azure.EventHubs.Processor.PartitionContext
      description: Information about the partition.
    - id: error
      type: Exception
      description: The error that occured.
    return:
      type: Task
  overload: Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessErrorAsync*
references:
- uid: Microsoft.Azure.EventHubs.Processor
  commentId: N:Microsoft.Azure.EventHubs.Processor
  isExternal: false
  name: Microsoft.Azure.EventHubs.Processor
  nameWithType: Microsoft.Azure.EventHubs.Processor
  fullName: Microsoft.Azure.EventHubs.Processor
- uid: Microsoft.Azure.EventHubs.Processor.IEventProcessor.OpenAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.IEventProcessor.OpenAsync
  isExternal: false
  name: OpenAsync
  nameWithType: IEventProcessor.OpenAsync
  fullName: Microsoft.Azure.EventHubs.Processor.IEventProcessor.OpenAsync
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext
  commentId: T:Microsoft.Azure.EventHubs.Processor.PartitionContext
  parent: Microsoft.Azure.EventHubs.Processor
  isExternal: false
  name: PartitionContext
  nameWithType: PartitionContext
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Microsoft.Azure.EventHubs.Processor.IEventProcessor.CloseAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.IEventProcessor.CloseAsync
  isExternal: false
  name: CloseAsync
  nameWithType: IEventProcessor.CloseAsync
  fullName: Microsoft.Azure.EventHubs.Processor.IEventProcessor.CloseAsync
- uid: Microsoft.Azure.EventHubs.Processor.CloseReason
  commentId: T:Microsoft.Azure.EventHubs.Processor.CloseReason
  parent: Microsoft.Azure.EventHubs.Processor
  isExternal: false
  name: CloseReason
  nameWithType: CloseReason
  fullName: Microsoft.Azure.EventHubs.Processor.CloseReason
- uid: Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessEventsAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessEventsAsync
  isExternal: false
  name: ProcessEventsAsync
  nameWithType: IEventProcessor.ProcessEventsAsync
  fullName: Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessEventsAsync
- uid: IEnumerable{EventData}
  commentId: '!:IEnumerable{EventData}'
  definition: IEnumerable`1
  name: IEnumerable<EventData>
  nameWithType: IEnumerable<EventData>
  fullName: IEnumerable<EventData>
  nameWithType.vb: IEnumerable(Of EventData)
  fullname.vb: IEnumerable(Of EventData)
  name.vb: IEnumerable(Of EventData)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventData
    name: EventData
    nameWithType: EventData
    fullName: EventData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventData
    name: EventData
    nameWithType: EventData
    fullName: EventData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullname.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessErrorAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessErrorAsync
  isExternal: false
  name: ProcessErrorAsync
  nameWithType: IEventProcessor.ProcessErrorAsync
  fullName: Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessErrorAsync
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
