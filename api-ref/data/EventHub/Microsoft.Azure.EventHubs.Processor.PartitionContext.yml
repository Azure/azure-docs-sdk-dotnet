### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext
  commentId: T:Microsoft.Azure.EventHubs.Processor.PartitionContext
  id: PartitionContext
  parent: Microsoft.Azure.EventHubs.Processor
  children:
  - Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync
  - Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync(EventData)
  - Microsoft.Azure.EventHubs.Processor.PartitionContext.ConsumerGroupName
  - Microsoft.Azure.EventHubs.Processor.PartitionContext.EventHubPath
  - Microsoft.Azure.EventHubs.Processor.PartitionContext.Owner
  - Microsoft.Azure.EventHubs.Processor.PartitionContext.PartitionId
  - Microsoft.Azure.EventHubs.Processor.PartitionContext.ToString
  langs:
  - csharp
  - vb
  name: PartitionContext
  nameWithType: PartitionContext
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext
  type: Class
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: PartitionContext
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
    startLine: 8
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  syntax:
    content: 'public class PartitionContext : object'
    content.vb: >-
      Public Class PartitionContext
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.ConsumerGroupName
  commentId: P:Microsoft.Azure.EventHubs.Processor.PartitionContext.ConsumerGroupName
  id: ConsumerGroupName
  parent: Microsoft.Azure.EventHubs.Processor.PartitionContext
  langs:
  - csharp
  - vb
  name: ConsumerGroupName
  nameWithType: PartitionContext.ConsumerGroupName
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.ConsumerGroupName
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ConsumerGroupName
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  syntax:
    content: public string ConsumerGroupName { get; }
    content.vb: Public ReadOnly Property ConsumerGroupName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Processor.PartitionContext.ConsumerGroupName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.EventHubPath
  commentId: P:Microsoft.Azure.EventHubs.Processor.PartitionContext.EventHubPath
  id: EventHubPath
  parent: Microsoft.Azure.EventHubs.Processor.PartitionContext
  langs:
  - csharp
  - vb
  name: EventHubPath
  nameWithType: PartitionContext.EventHubPath
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.EventHubPath
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: EventHubPath
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  syntax:
    content: public string EventHubPath { get; }
    content.vb: Public ReadOnly Property EventHubPath As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Processor.PartitionContext.EventHubPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.PartitionId
  commentId: P:Microsoft.Azure.EventHubs.Processor.PartitionContext.PartitionId
  id: PartitionId
  parent: Microsoft.Azure.EventHubs.Processor.PartitionContext
  langs:
  - csharp
  - vb
  name: PartitionId
  nameWithType: PartitionContext.PartitionId
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.PartitionId
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: PartitionId
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  syntax:
    content: public string PartitionId { get; }
    content.vb: Public ReadOnly Property PartitionId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Processor.PartitionContext.PartitionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.Owner
  commentId: P:Microsoft.Azure.EventHubs.Processor.PartitionContext.Owner
  id: Owner
  parent: Microsoft.Azure.EventHubs.Processor.PartitionContext
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: PartitionContext.Owner
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.Owner
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: Owner
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  syntax:
    content: public string Owner { get; }
    content.vb: Public ReadOnly Property Owner As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Processor.PartitionContext.Owner*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync
  commentId: M:Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync
  id: CheckpointAsync
  parent: Microsoft.Azure.EventHubs.Processor.PartitionContext
  langs:
  - csharp
  - vb
  name: CheckpointAsync()
  nameWithType: PartitionContext.CheckpointAsync()
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: CheckpointAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nWrites the current offset and sequenceNumber to the checkpoint store via the checkpoint manager.\n"
  example: []
  syntax:
    content: public Task CheckpointAsync()
    content.vb: Public Function CheckpointAsync As Task
    return:
      type: Task
  overload: Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync(EventData)
  commentId: M:Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync(EventData)
  id: CheckpointAsync(EventData)
  parent: Microsoft.Azure.EventHubs.Processor.PartitionContext
  langs:
  - csharp
  - vb
  name: CheckpointAsync(EventData)
  nameWithType: PartitionContext.CheckpointAsync(EventData)
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync(EventData)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: CheckpointAsync
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  summary: "\nStores the offset and sequenceNumber from the provided received EventData instance, then writes those\nvalues to the checkpoint store via the checkpoint manager.\n"
  example: []
  syntax:
    content: public Task CheckpointAsync(EventData eventData)
    content.vb: Public Function CheckpointAsync(eventData As EventData) As Task
    parameters:
    - id: eventData
      type: EventData
      description: A received EventData with valid offset and sequenceNumber
    return:
      type: Task
  overload: Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.ToString
  commentId: M:Microsoft.Azure.EventHubs.Processor.PartitionContext.ToString
  id: ToString
  parent: Microsoft.Azure.EventHubs.Processor.PartitionContext
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PartitionContext.ToString()
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-dotnet
    id: ToString
    path: src/azure-eventhub/src/Microsoft.Azure.EventHubs.Processor/PartitionContext.cs
    startLine: 162
  assemblies:
  - Microsoft.Azure.EventHubs.Processor
  namespace: Microsoft.Azure.EventHubs.Processor
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overload: Microsoft.Azure.EventHubs.Processor.PartitionContext.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.EventHubs.Processor
  commentId: N:Microsoft.Azure.EventHubs.Processor
  isExternal: false
  name: Microsoft.Azure.EventHubs.Processor
  nameWithType: Microsoft.Azure.EventHubs.Processor
  fullName: Microsoft.Azure.EventHubs.Processor
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.ConsumerGroupName*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.PartitionContext.ConsumerGroupName
  isExternal: false
  name: ConsumerGroupName
  nameWithType: PartitionContext.ConsumerGroupName
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.ConsumerGroupName
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.EventHubPath*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.PartitionContext.EventHubPath
  isExternal: false
  name: EventHubPath
  nameWithType: PartitionContext.EventHubPath
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.EventHubPath
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.PartitionId*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.PartitionContext.PartitionId
  isExternal: false
  name: PartitionId
  nameWithType: PartitionContext.PartitionId
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.PartitionId
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.Owner*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.PartitionContext.Owner
  isExternal: false
  name: Owner
  nameWithType: PartitionContext.Owner
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.Owner
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync
  isExternal: false
  name: CheckpointAsync
  nameWithType: PartitionContext.CheckpointAsync
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: EventData
  commentId: '!:EventData'
  isExternal: true
  name: EventData
  nameWithType: EventData
  fullName: EventData
- uid: Microsoft.Azure.EventHubs.Processor.PartitionContext.ToString*
  commentId: Overload:Microsoft.Azure.EventHubs.Processor.PartitionContext.ToString
  isExternal: false
  name: ToString
  nameWithType: PartitionContext.ToString
  fullName: Microsoft.Azure.EventHubs.Processor.PartitionContext.ToString
