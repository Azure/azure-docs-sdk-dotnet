### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Shared.TwinCollectionValue
  commentId: T:Microsoft.Azure.Devices.Shared.TwinCollectionValue
  id: TwinCollectionValue
  parent: Microsoft.Azure.Devices.Shared
  children:
  - Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdated
  - Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdatedVersion
  - Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetMetadata
  - Microsoft.Azure.Devices.Shared.TwinCollectionValue.Item(System.String)
  langs:
  - csharp
  - vb
  name: TwinCollectionValue
  nameWithType: TwinCollectionValue
  fullName: Microsoft.Azure.Devices.Shared.TwinCollectionValue
  type: Class
  source:
    remote:
      path: shared/Microsoft.Azure.Devices.Shared/TwinCollectionValue.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: TwinCollectionValue
    path: src/azure-iot-sdks/shared/Microsoft.Azure.Devices.Shared/TwinCollectionValue.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Devices.Shared.UWP
  namespace: Microsoft.Azure.Devices.Shared
  summary: "\nRepresents a property value in <xref href=\"Microsoft.Azure.Devices.Shared.TwinCollection\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class TwinCollectionValue : JValue, IJEnumerable<JToken>, IEnumerable<JToken>, IEnumerable, IJsonLineInfo, IDynamicMetaObjectProvider, IEquatable<JValue>, IFormattable, IComparable, IComparable<JValue>'
    content.vb: >-
      Public Class TwinCollectionValue
          Inherits JValue
          Implements IJEnumerable(Of JToken), IEnumerable(Of JToken), IEnumerable, IJsonLineInfo, IDynamicMetaObjectProvider, IEquatable(Of JValue), IFormattable, IComparable, IComparable(Of JValue)
  inheritance:
  - System.Object
  - Newtonsoft.Json.Linq.JToken
  - Newtonsoft.Json.Linq.JValue
  implements:
  - Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken}
  - System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken}
  - System.Collections.IEnumerable
  - Newtonsoft.Json.IJsonLineInfo
  - System.Dynamic.IDynamicMetaObjectProvider
  - System.IEquatable{Newtonsoft.Json.Linq.JValue}
  - System.IFormattable
  - System.IComparable
  - System.IComparable{Newtonsoft.Json.Linq.JValue}
  inheritedMembers:
  - Newtonsoft.Json.Linq.JValue.CreateComment(System.String)
  - Newtonsoft.Json.Linq.JValue.CreateString(System.String)
  - Newtonsoft.Json.Linq.JValue.CreateNull
  - Newtonsoft.Json.Linq.JValue.CreateUndefined
  - Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter,Newtonsoft.Json.JsonConverter[])
  - Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)
  - Newtonsoft.Json.Linq.JValue.Equals(System.Object)
  - Newtonsoft.Json.Linq.JValue.GetHashCode
  - Newtonsoft.Json.Linq.JValue.ToString
  - Newtonsoft.Json.Linq.JValue.ToString(System.String)
  - Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)
  - Newtonsoft.Json.Linq.JValue.ToString(System.String,System.IFormatProvider)
  - Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)
  - Newtonsoft.Json.Linq.JValue.System#IComparable#CompareTo(System.Object)
  - Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)
  - Newtonsoft.Json.Linq.JValue.HasValues
  - Newtonsoft.Json.Linq.JValue.Type
  - Newtonsoft.Json.Linq.JValue.Value
  - Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
  - Newtonsoft.Json.Linq.JToken.AddAfterSelf(System.Object)
  - Newtonsoft.Json.Linq.JToken.AddBeforeSelf(System.Object)
  - Newtonsoft.Json.Linq.JToken.Ancestors
  - Newtonsoft.Json.Linq.JToken.AncestorsAndSelf
  - Newtonsoft.Json.Linq.JToken.AfterSelf
  - Newtonsoft.Json.Linq.JToken.BeforeSelf
  - Newtonsoft.Json.Linq.JToken.Value``1(System.Object)
  - Newtonsoft.Json.Linq.JToken.Children
  - Newtonsoft.Json.Linq.JToken.Children``1
  - Newtonsoft.Json.Linq.JToken.Values``1
  - Newtonsoft.Json.Linq.JToken.Remove
  - Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)
  - Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting,Newtonsoft.Json.JsonConverter[])
  - Newtonsoft.Json.Linq.JToken.System#Collections#IEnumerable#GetEnumerator
  - Newtonsoft.Json.Linq.JToken.System#Collections#Generic#IEnumerable{Newtonsoft#Json#Linq#JToken}#GetEnumerator
  - Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#Linq#IJEnumerable{Newtonsoft#Json#Linq#JToken}#get_Item(System.Object)
  - Newtonsoft.Json.Linq.JToken.CreateReader
  - Newtonsoft.Json.Linq.JToken.FromObject(System.Object)
  - Newtonsoft.Json.Linq.JToken.FromObject(System.Object,Newtonsoft.Json.JsonSerializer)
  - Newtonsoft.Json.Linq.JToken.ToObject``1
  - Newtonsoft.Json.Linq.JToken.ToObject(System.Type)
  - Newtonsoft.Json.Linq.JToken.ToObject``1(Newtonsoft.Json.JsonSerializer)
  - Newtonsoft.Json.Linq.JToken.ToObject(System.Type,Newtonsoft.Json.JsonSerializer)
  - Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)
  - Newtonsoft.Json.Linq.JToken.Parse(System.String)
  - Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)
  - Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#IJsonLineInfo#HasLineInfo
  - Newtonsoft.Json.Linq.JToken.SelectToken(System.String)
  - Newtonsoft.Json.Linq.JToken.SelectToken(System.String,System.Boolean)
  - Newtonsoft.Json.Linq.JToken.SelectTokens(System.String)
  - Newtonsoft.Json.Linq.JToken.SelectTokens(System.String,System.Boolean)
  - Newtonsoft.Json.Linq.JToken.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  - Newtonsoft.Json.Linq.JToken.DeepClone
  - Newtonsoft.Json.Linq.JToken.AddAnnotation(System.Object)
  - Newtonsoft.Json.Linq.JToken.Annotation``1
  - Newtonsoft.Json.Linq.JToken.Annotation(System.Type)
  - Newtonsoft.Json.Linq.JToken.Annotations``1
  - Newtonsoft.Json.Linq.JToken.Annotations(System.Type)
  - Newtonsoft.Json.Linq.JToken.RemoveAnnotations``1
  - Newtonsoft.Json.Linq.JToken.RemoveAnnotations(System.Type)
  - Newtonsoft.Json.Linq.JToken.EqualityComparer
  - Newtonsoft.Json.Linq.JToken.Parent
  - Newtonsoft.Json.Linq.JToken.Root
  - Newtonsoft.Json.Linq.JToken.Next
  - Newtonsoft.Json.Linq.JToken.Previous
  - Newtonsoft.Json.Linq.JToken.Path
  - Newtonsoft.Json.Linq.JToken.Item(System.Object)
  - Newtonsoft.Json.Linq.JToken.First
  - Newtonsoft.Json.Linq.JToken.Last
  - Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#Linq#IJEnumerable{Newtonsoft#Json#Linq#JToken}#Item(System.Object)
  - Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#IJsonLineInfo#LineNumber
  - Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#IJsonLineInfo#LinePosition
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Shared.TwinCollectionValue.Item(System.String)
  commentId: P:Microsoft.Azure.Devices.Shared.TwinCollectionValue.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.Azure.Devices.Shared.TwinCollectionValue
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: TwinCollectionValue.Item[String]
  fullName: Microsoft.Azure.Devices.Shared.TwinCollectionValue.Item[System.String]
  type: Property
  source:
    remote:
      path: shared/Microsoft.Azure.Devices.Shared/TwinCollectionValue.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: this[]
    path: src/azure-iot-sdks/shared/Microsoft.Azure.Devices.Shared/TwinCollectionValue.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Devices.Shared.UWP
  namespace: Microsoft.Azure.Devices.Shared
  summary: "\nGets the value for the given property name\n"
  example: []
  syntax:
    content: public dynamic this[string propertyName] { get; }
    content.vb: Public ReadOnly Property Item(propertyName As String) As Object
    parameters:
    - id: propertyName
      type: System.String
      description: Property Name to lookup
    return:
      type: System.Object
      description: Value if present
  overload: Microsoft.Azure.Devices.Shared.TwinCollectionValue.Item*
  nameWithType.vb: TwinCollectionValue.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Shared.TwinCollectionValue.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetMetadata
  commentId: M:Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetMetadata
  id: GetMetadata
  parent: Microsoft.Azure.Devices.Shared.TwinCollectionValue
  langs:
  - csharp
  - vb
  name: GetMetadata()
  nameWithType: TwinCollectionValue.GetMetadata()
  fullName: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetMetadata()
  type: Method
  source:
    remote:
      path: shared/Microsoft.Azure.Devices.Shared/TwinCollectionValue.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: GetMetadata
    path: src/azure-iot-sdks/shared/Microsoft.Azure.Devices.Shared/TwinCollectionValue.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Devices.Shared.UWP
  namespace: Microsoft.Azure.Devices.Shared
  summary: "\nGets the Metadata for this property\n"
  example: []
  syntax:
    content: public Metadata GetMetadata()
    content.vb: Public Function GetMetadata As Metadata
    return:
      type: Microsoft.Azure.Devices.Shared.Metadata
      description: Metadata instance representing the metadata for this property
  overload: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetMetadata*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdated
  commentId: M:Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdated
  id: GetLastUpdated
  parent: Microsoft.Azure.Devices.Shared.TwinCollectionValue
  langs:
  - csharp
  - vb
  name: GetLastUpdated()
  nameWithType: TwinCollectionValue.GetLastUpdated()
  fullName: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdated()
  type: Method
  source:
    remote:
      path: shared/Microsoft.Azure.Devices.Shared/TwinCollectionValue.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: GetLastUpdated
    path: src/azure-iot-sdks/shared/Microsoft.Azure.Devices.Shared/TwinCollectionValue.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Devices.Shared.UWP
  namespace: Microsoft.Azure.Devices.Shared
  summary: "\nGets the LastUpdated time for this property\n"
  example: []
  syntax:
    content: public DateTime GetLastUpdated()
    content.vb: Public Function GetLastUpdated As Date
    return:
      type: System.DateTime
      description: DateTime instance representing the LastUpdated time for this property
  overload: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdated*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdatedVersion
  commentId: M:Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdatedVersion
  id: GetLastUpdatedVersion
  parent: Microsoft.Azure.Devices.Shared.TwinCollectionValue
  langs:
  - csharp
  - vb
  name: GetLastUpdatedVersion()
  nameWithType: TwinCollectionValue.GetLastUpdatedVersion()
  fullName: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdatedVersion()
  type: Method
  source:
    remote:
      path: shared/Microsoft.Azure.Devices.Shared/TwinCollectionValue.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: GetLastUpdatedVersion
    path: src/azure-iot-sdks/shared/Microsoft.Azure.Devices.Shared/TwinCollectionValue.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Devices.Shared.UWP
  namespace: Microsoft.Azure.Devices.Shared
  summary: "\nGets the LastUpdatedVersion for this property\n"
  example: []
  syntax:
    content: public long ? GetLastUpdatedVersion()
    content.vb: Public Function GetLastUpdatedVersion As Long?
    return:
      type: System.Nullable{System.Int64}
      description: LastUpdatdVersion if present, null otherwise
  overload: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdatedVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices.Shared.TwinCollection
  commentId: T:Microsoft.Azure.Devices.Shared.TwinCollection
  parent: Microsoft.Azure.Devices.Shared
  isExternal: false
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: Microsoft.Azure.Devices.Shared.TwinCollection
- uid: Microsoft.Azure.Devices.Shared
  commentId: N:Microsoft.Azure.Devices.Shared
  isExternal: false
  name: Microsoft.Azure.Devices.Shared
  nameWithType: Microsoft.Azure.Devices.Shared
  fullName: Microsoft.Azure.Devices.Shared
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Newtonsoft.Json.Linq.JToken
  commentId: T:Newtonsoft.Json.Linq.JToken
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: Newtonsoft.Json.Linq.JToken
- uid: Newtonsoft.Json.Linq.JValue
  commentId: T:Newtonsoft.Json.Linq.JValue
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JValue
  nameWithType: JValue
  fullName: Newtonsoft.Json.Linq.JValue
- uid: Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken}
  commentId: T:Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken}
  parent: Newtonsoft.Json.Linq
  definition: Newtonsoft.Json.Linq.IJEnumerable`1
  name: IJEnumerable<JToken>
  nameWithType: IJEnumerable<JToken>
  fullName: Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>
  nameWithType.vb: IJEnumerable(Of JToken)
  fullname.vb: Newtonsoft.Json.Linq.IJEnumerable(Of Newtonsoft.Json.Linq.JToken)
  name.vb: IJEnumerable(Of JToken)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.IJEnumerable`1
    name: IJEnumerable
    nameWithType: IJEnumerable
    fullName: Newtonsoft.Json.Linq.IJEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Newtonsoft.Json.Linq.IJEnumerable`1
    name: IJEnumerable
    nameWithType: IJEnumerable
    fullName: Newtonsoft.Json.Linq.IJEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken}
  commentId: T:System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<JToken>
  nameWithType: IEnumerable<JToken>
  fullName: System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>
  nameWithType.vb: IEnumerable(Of JToken)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Newtonsoft.Json.Linq.JToken)
  name.vb: IEnumerable(Of JToken)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Newtonsoft.Json.IJsonLineInfo
  commentId: T:Newtonsoft.Json.IJsonLineInfo
  parent: Newtonsoft.Json
  isExternal: true
  name: IJsonLineInfo
  nameWithType: IJsonLineInfo
  fullName: Newtonsoft.Json.IJsonLineInfo
- uid: System.Dynamic.IDynamicMetaObjectProvider
  commentId: T:System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.IEquatable{Newtonsoft.Json.Linq.JValue}
  commentId: T:System.IEquatable{Newtonsoft.Json.Linq.JValue}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<JValue>
  nameWithType: IEquatable<JValue>
  fullName: System.IEquatable<Newtonsoft.Json.Linq.JValue>
  nameWithType.vb: IEquatable(Of JValue)
  fullname.vb: System.IEquatable(Of Newtonsoft.Json.Linq.JValue)
  name.vb: IEquatable(Of JValue)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Newtonsoft.Json.Linq.JValue
    name: JValue
    nameWithType: JValue
    fullName: Newtonsoft.Json.Linq.JValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Newtonsoft.Json.Linq.JValue
    name: JValue
    nameWithType: JValue
    fullName: Newtonsoft.Json.Linq.JValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable{Newtonsoft.Json.Linq.JValue}
  commentId: T:System.IComparable{Newtonsoft.Json.Linq.JValue}
  parent: System
  definition: System.IComparable`1
  name: IComparable<JValue>
  nameWithType: IComparable<JValue>
  fullName: System.IComparable<Newtonsoft.Json.Linq.JValue>
  nameWithType.vb: IComparable(Of JValue)
  fullname.vb: System.IComparable(Of Newtonsoft.Json.Linq.JValue)
  name.vb: IComparable(Of JValue)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Newtonsoft.Json.Linq.JValue
    name: JValue
    nameWithType: JValue
    fullName: Newtonsoft.Json.Linq.JValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Newtonsoft.Json.Linq.JValue
    name: JValue
    nameWithType: JValue
    fullName: Newtonsoft.Json.Linq.JValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.CreateComment(System.String)
  commentId: M:Newtonsoft.Json.Linq.JValue.CreateComment(System.String)
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: CreateComment(String)
  nameWithType: JValue.CreateComment(String)
  fullName: Newtonsoft.Json.Linq.JValue.CreateComment(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.CreateComment(System.String)
    name: CreateComment
    nameWithType: JValue.CreateComment
    fullName: Newtonsoft.Json.Linq.JValue.CreateComment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.CreateComment(System.String)
    name: CreateComment
    nameWithType: JValue.CreateComment
    fullName: Newtonsoft.Json.Linq.JValue.CreateComment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.CreateString(System.String)
  commentId: M:Newtonsoft.Json.Linq.JValue.CreateString(System.String)
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: CreateString(String)
  nameWithType: JValue.CreateString(String)
  fullName: Newtonsoft.Json.Linq.JValue.CreateString(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.CreateString(System.String)
    name: CreateString
    nameWithType: JValue.CreateString
    fullName: Newtonsoft.Json.Linq.JValue.CreateString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.CreateString(System.String)
    name: CreateString
    nameWithType: JValue.CreateString
    fullName: Newtonsoft.Json.Linq.JValue.CreateString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.CreateNull
  commentId: M:Newtonsoft.Json.Linq.JValue.CreateNull
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: CreateNull()
  nameWithType: JValue.CreateNull()
  fullName: Newtonsoft.Json.Linq.JValue.CreateNull()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.CreateNull
    name: CreateNull
    nameWithType: JValue.CreateNull
    fullName: Newtonsoft.Json.Linq.JValue.CreateNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.CreateNull
    name: CreateNull
    nameWithType: JValue.CreateNull
    fullName: Newtonsoft.Json.Linq.JValue.CreateNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.CreateUndefined
  commentId: M:Newtonsoft.Json.Linq.JValue.CreateUndefined
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: CreateUndefined()
  nameWithType: JValue.CreateUndefined()
  fullName: Newtonsoft.Json.Linq.JValue.CreateUndefined()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.CreateUndefined
    name: CreateUndefined
    nameWithType: JValue.CreateUndefined
    fullName: Newtonsoft.Json.Linq.JValue.CreateUndefined
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.CreateUndefined
    name: CreateUndefined
    nameWithType: JValue.CreateUndefined
    fullName: Newtonsoft.Json.Linq.JValue.CreateUndefined
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter,Newtonsoft.Json.JsonConverter[])
  commentId: M:Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter,Newtonsoft.Json.JsonConverter[])
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: WriteTo(JsonWriter, JsonConverter[])
  nameWithType: JValue.WriteTo(JsonWriter, JsonConverter[])
  fullName: Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter[])
  nameWithType.vb: JValue.WriteTo(JsonWriter, JsonConverter())
  fullname.vb: Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter())
  name.vb: WriteTo(JsonWriter, JsonConverter())
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter,Newtonsoft.Json.JsonConverter[])
    name: WriteTo
    nameWithType: JValue.WriteTo
    fullName: Newtonsoft.Json.Linq.JValue.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonConverter
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: Newtonsoft.Json.JsonConverter
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter,Newtonsoft.Json.JsonConverter[])
    name: WriteTo
    nameWithType: JValue.WriteTo
    fullName: Newtonsoft.Json.Linq.JValue.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonConverter
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: Newtonsoft.Json.JsonConverter
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)
  commentId: M:Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: Equals(JValue)
  nameWithType: JValue.Equals(JValue)
  fullName: Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)
    name: Equals
    nameWithType: JValue.Equals
    fullName: Newtonsoft.Json.Linq.JValue.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JValue
    name: JValue
    nameWithType: JValue
    fullName: Newtonsoft.Json.Linq.JValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)
    name: Equals
    nameWithType: JValue.Equals
    fullName: Newtonsoft.Json.Linq.JValue.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JValue
    name: JValue
    nameWithType: JValue
    fullName: Newtonsoft.Json.Linq.JValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.Equals(System.Object)
  commentId: M:Newtonsoft.Json.Linq.JValue.Equals(System.Object)
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: Equals(Object)
  nameWithType: JValue.Equals(Object)
  fullName: Newtonsoft.Json.Linq.JValue.Equals(System.Object)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.Equals(System.Object)
    name: Equals
    nameWithType: JValue.Equals
    fullName: Newtonsoft.Json.Linq.JValue.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.Equals(System.Object)
    name: Equals
    nameWithType: JValue.Equals
    fullName: Newtonsoft.Json.Linq.JValue.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.GetHashCode
  commentId: M:Newtonsoft.Json.Linq.JValue.GetHashCode
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: GetHashCode()
  nameWithType: JValue.GetHashCode()
  fullName: Newtonsoft.Json.Linq.JValue.GetHashCode()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.GetHashCode
    name: GetHashCode
    nameWithType: JValue.GetHashCode
    fullName: Newtonsoft.Json.Linq.JValue.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.GetHashCode
    name: GetHashCode
    nameWithType: JValue.GetHashCode
    fullName: Newtonsoft.Json.Linq.JValue.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.ToString
  commentId: M:Newtonsoft.Json.Linq.JValue.ToString
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: ToString()
  nameWithType: JValue.ToString()
  fullName: Newtonsoft.Json.Linq.JValue.ToString()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.ToString
    name: ToString
    nameWithType: JValue.ToString
    fullName: Newtonsoft.Json.Linq.JValue.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.ToString
    name: ToString
    nameWithType: JValue.ToString
    fullName: Newtonsoft.Json.Linq.JValue.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.ToString(System.String)
  commentId: M:Newtonsoft.Json.Linq.JValue.ToString(System.String)
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: ToString(String)
  nameWithType: JValue.ToString(String)
  fullName: Newtonsoft.Json.Linq.JValue.ToString(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.ToString(System.String)
    name: ToString
    nameWithType: JValue.ToString
    fullName: Newtonsoft.Json.Linq.JValue.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.ToString(System.String)
    name: ToString
    nameWithType: JValue.ToString
    fullName: Newtonsoft.Json.Linq.JValue.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)
  commentId: M:Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: ToString(IFormatProvider)
  nameWithType: JValue.ToString(IFormatProvider)
  fullName: Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)
    name: ToString
    nameWithType: JValue.ToString
    fullName: Newtonsoft.Json.Linq.JValue.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)
    name: ToString
    nameWithType: JValue.ToString
    fullName: Newtonsoft.Json.Linq.JValue.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.ToString(System.String,System.IFormatProvider)
  commentId: M:Newtonsoft.Json.Linq.JValue.ToString(System.String,System.IFormatProvider)
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: ToString(String, IFormatProvider)
  nameWithType: JValue.ToString(String, IFormatProvider)
  fullName: Newtonsoft.Json.Linq.JValue.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: JValue.ToString
    fullName: Newtonsoft.Json.Linq.JValue.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: JValue.ToString
    fullName: Newtonsoft.Json.Linq.JValue.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: JValue.GetMetaObject(Expression)
  fullName: Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: JValue.GetMetaObject
    fullName: Newtonsoft.Json.Linq.JValue.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: JValue.GetMetaObject
    fullName: Newtonsoft.Json.Linq.JValue.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.System#IComparable#CompareTo(System.Object)
  commentId: M:Newtonsoft.Json.Linq.JValue.System#IComparable#CompareTo(System.Object)
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: IComparable.CompareTo(Object)
  nameWithType: JValue.IComparable.CompareTo(Object)
  fullName: Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(System.Object)
  nameWithType.vb: JValue.System.IComparable.CompareTo(Object)
  name.vb: System.IComparable.CompareTo(Object)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.System#IComparable#CompareTo(System.Object)
    name: IComparable.CompareTo
    nameWithType: JValue.IComparable.CompareTo
    fullName: Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.System#IComparable#CompareTo(System.Object)
    name: System.IComparable.CompareTo
    nameWithType: JValue.System.IComparable.CompareTo
    fullName: Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)
  commentId: M:Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: CompareTo(JValue)
  nameWithType: JValue.CompareTo(JValue)
  fullName: Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)
    name: CompareTo
    nameWithType: JValue.CompareTo
    fullName: Newtonsoft.Json.Linq.JValue.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JValue
    name: JValue
    nameWithType: JValue
    fullName: Newtonsoft.Json.Linq.JValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)
    name: CompareTo
    nameWithType: JValue.CompareTo
    fullName: Newtonsoft.Json.Linq.JValue.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JValue
    name: JValue
    nameWithType: JValue
    fullName: Newtonsoft.Json.Linq.JValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JValue.HasValues
  commentId: P:Newtonsoft.Json.Linq.JValue.HasValues
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: HasValues
  nameWithType: JValue.HasValues
  fullName: Newtonsoft.Json.Linq.JValue.HasValues
- uid: Newtonsoft.Json.Linq.JValue.Type
  commentId: P:Newtonsoft.Json.Linq.JValue.Type
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: Type
  nameWithType: JValue.Type
  fullName: Newtonsoft.Json.Linq.JValue.Type
- uid: Newtonsoft.Json.Linq.JValue.Value
  commentId: P:Newtonsoft.Json.Linq.JValue.Value
  parent: Newtonsoft.Json.Linq.JValue
  isExternal: true
  name: Value
  nameWithType: JValue.Value
  fullName: Newtonsoft.Json.Linq.JValue.Value
- uid: Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
  commentId: M:Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: DeepEquals(JToken, JToken)
  nameWithType: JToken.DeepEquals(JToken, JToken)
  fullName: Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
    name: DeepEquals
    nameWithType: JToken.DeepEquals
    fullName: Newtonsoft.Json.Linq.JToken.DeepEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
    name: DeepEquals
    nameWithType: JToken.DeepEquals
    fullName: Newtonsoft.Json.Linq.JToken.DeepEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.AddAfterSelf(System.Object)
  commentId: M:Newtonsoft.Json.Linq.JToken.AddAfterSelf(System.Object)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: AddAfterSelf(Object)
  nameWithType: JToken.AddAfterSelf(Object)
  fullName: Newtonsoft.Json.Linq.JToken.AddAfterSelf(System.Object)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.AddAfterSelf(System.Object)
    name: AddAfterSelf
    nameWithType: JToken.AddAfterSelf
    fullName: Newtonsoft.Json.Linq.JToken.AddAfterSelf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.AddAfterSelf(System.Object)
    name: AddAfterSelf
    nameWithType: JToken.AddAfterSelf
    fullName: Newtonsoft.Json.Linq.JToken.AddAfterSelf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.AddBeforeSelf(System.Object)
  commentId: M:Newtonsoft.Json.Linq.JToken.AddBeforeSelf(System.Object)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: AddBeforeSelf(Object)
  nameWithType: JToken.AddBeforeSelf(Object)
  fullName: Newtonsoft.Json.Linq.JToken.AddBeforeSelf(System.Object)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.AddBeforeSelf(System.Object)
    name: AddBeforeSelf
    nameWithType: JToken.AddBeforeSelf
    fullName: Newtonsoft.Json.Linq.JToken.AddBeforeSelf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.AddBeforeSelf(System.Object)
    name: AddBeforeSelf
    nameWithType: JToken.AddBeforeSelf
    fullName: Newtonsoft.Json.Linq.JToken.AddBeforeSelf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Ancestors
  commentId: M:Newtonsoft.Json.Linq.JToken.Ancestors
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Ancestors()
  nameWithType: JToken.Ancestors()
  fullName: Newtonsoft.Json.Linq.JToken.Ancestors()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Ancestors
    name: Ancestors
    nameWithType: JToken.Ancestors
    fullName: Newtonsoft.Json.Linq.JToken.Ancestors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Ancestors
    name: Ancestors
    nameWithType: JToken.Ancestors
    fullName: Newtonsoft.Json.Linq.JToken.Ancestors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.AncestorsAndSelf
  commentId: M:Newtonsoft.Json.Linq.JToken.AncestorsAndSelf
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: AncestorsAndSelf()
  nameWithType: JToken.AncestorsAndSelf()
  fullName: Newtonsoft.Json.Linq.JToken.AncestorsAndSelf()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.AncestorsAndSelf
    name: AncestorsAndSelf
    nameWithType: JToken.AncestorsAndSelf
    fullName: Newtonsoft.Json.Linq.JToken.AncestorsAndSelf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.AncestorsAndSelf
    name: AncestorsAndSelf
    nameWithType: JToken.AncestorsAndSelf
    fullName: Newtonsoft.Json.Linq.JToken.AncestorsAndSelf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.AfterSelf
  commentId: M:Newtonsoft.Json.Linq.JToken.AfterSelf
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: AfterSelf()
  nameWithType: JToken.AfterSelf()
  fullName: Newtonsoft.Json.Linq.JToken.AfterSelf()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.AfterSelf
    name: AfterSelf
    nameWithType: JToken.AfterSelf
    fullName: Newtonsoft.Json.Linq.JToken.AfterSelf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.AfterSelf
    name: AfterSelf
    nameWithType: JToken.AfterSelf
    fullName: Newtonsoft.Json.Linq.JToken.AfterSelf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.BeforeSelf
  commentId: M:Newtonsoft.Json.Linq.JToken.BeforeSelf
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: BeforeSelf()
  nameWithType: JToken.BeforeSelf()
  fullName: Newtonsoft.Json.Linq.JToken.BeforeSelf()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.BeforeSelf
    name: BeforeSelf
    nameWithType: JToken.BeforeSelf
    fullName: Newtonsoft.Json.Linq.JToken.BeforeSelf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.BeforeSelf
    name: BeforeSelf
    nameWithType: JToken.BeforeSelf
    fullName: Newtonsoft.Json.Linq.JToken.BeforeSelf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Value``1(System.Object)
  commentId: M:Newtonsoft.Json.Linq.JToken.Value``1(System.Object)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Value<T>(Object)
  nameWithType: JToken.Value<T>(Object)
  fullName: Newtonsoft.Json.Linq.JToken.Value<T>(System.Object)
  nameWithType.vb: JToken.Value(Of T)(Object)
  fullname.vb: Newtonsoft.Json.Linq.JToken.Value(Of T)(System.Object)
  name.vb: Value(Of T)(Object)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Value``1(System.Object)
    name: Value<T>
    nameWithType: JToken.Value<T>
    fullName: Newtonsoft.Json.Linq.JToken.Value<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Value``1(System.Object)
    name: Value(Of T)
    nameWithType: JToken.Value(Of T)
    fullName: Newtonsoft.Json.Linq.JToken.Value(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Children
  commentId: M:Newtonsoft.Json.Linq.JToken.Children
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Children()
  nameWithType: JToken.Children()
  fullName: Newtonsoft.Json.Linq.JToken.Children()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Children
    name: Children
    nameWithType: JToken.Children
    fullName: Newtonsoft.Json.Linq.JToken.Children
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Children
    name: Children
    nameWithType: JToken.Children
    fullName: Newtonsoft.Json.Linq.JToken.Children
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Children``1
  commentId: M:Newtonsoft.Json.Linq.JToken.Children``1
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Children<T>()
  nameWithType: JToken.Children<T>()
  fullName: Newtonsoft.Json.Linq.JToken.Children<T>()
  nameWithType.vb: JToken.Children(Of T)()
  fullname.vb: Newtonsoft.Json.Linq.JToken.Children(Of T)()
  name.vb: Children(Of T)()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Children``1
    name: Children<T>
    nameWithType: JToken.Children<T>
    fullName: Newtonsoft.Json.Linq.JToken.Children<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Children``1
    name: Children(Of T)
    nameWithType: JToken.Children(Of T)
    fullName: Newtonsoft.Json.Linq.JToken.Children(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Values``1
  commentId: M:Newtonsoft.Json.Linq.JToken.Values``1
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Values<T>()
  nameWithType: JToken.Values<T>()
  fullName: Newtonsoft.Json.Linq.JToken.Values<T>()
  nameWithType.vb: JToken.Values(Of T)()
  fullname.vb: Newtonsoft.Json.Linq.JToken.Values(Of T)()
  name.vb: Values(Of T)()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Values``1
    name: Values<T>
    nameWithType: JToken.Values<T>
    fullName: Newtonsoft.Json.Linq.JToken.Values<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Values``1
    name: Values(Of T)
    nameWithType: JToken.Values(Of T)
    fullName: Newtonsoft.Json.Linq.JToken.Values(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Remove
  commentId: M:Newtonsoft.Json.Linq.JToken.Remove
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Remove()
  nameWithType: JToken.Remove()
  fullName: Newtonsoft.Json.Linq.JToken.Remove()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Remove
    name: Remove
    nameWithType: JToken.Remove
    fullName: Newtonsoft.Json.Linq.JToken.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Remove
    name: Remove
    nameWithType: JToken.Remove
    fullName: Newtonsoft.Json.Linq.JToken.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)
  commentId: M:Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Replace(JToken)
  nameWithType: JToken.Replace(JToken)
  fullName: Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)
    name: Replace
    nameWithType: JToken.Replace
    fullName: Newtonsoft.Json.Linq.JToken.Replace
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)
    name: Replace
    nameWithType: JToken.Replace
    fullName: Newtonsoft.Json.Linq.JToken.Replace
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting,Newtonsoft.Json.JsonConverter[])
  commentId: M:Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting,Newtonsoft.Json.JsonConverter[])
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: ToString(Formatting, JsonConverter[])
  nameWithType: JToken.ToString(Formatting, JsonConverter[])
  fullName: Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonConverter[])
  nameWithType.vb: JToken.ToString(Formatting, JsonConverter())
  fullname.vb: Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonConverter())
  name.vb: ToString(Formatting, JsonConverter())
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting,Newtonsoft.Json.JsonConverter[])
    name: ToString
    nameWithType: JToken.ToString
    fullName: Newtonsoft.Json.Linq.JToken.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Formatting
    name: Formatting
    nameWithType: Formatting
    fullName: Newtonsoft.Json.Formatting
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonConverter
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: Newtonsoft.Json.JsonConverter
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting,Newtonsoft.Json.JsonConverter[])
    name: ToString
    nameWithType: JToken.ToString
    fullName: Newtonsoft.Json.Linq.JToken.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Formatting
    name: Formatting
    nameWithType: Formatting
    fullName: Newtonsoft.Json.Formatting
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonConverter
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: Newtonsoft.Json.JsonConverter
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Newtonsoft.Json.Linq.JToken.System#Collections#IEnumerable#GetEnumerator
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: JToken.IEnumerable.GetEnumerator()
  fullName: Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: JToken.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: JToken.IEnumerable.GetEnumerator
    fullName: Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: JToken.System.Collections.IEnumerable.GetEnumerator
    fullName: Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.System#Collections#Generic#IEnumerable{Newtonsoft#Json#Linq#JToken}#GetEnumerator
  commentId: M:Newtonsoft.Json.Linq.JToken.System#Collections#Generic#IEnumerable{Newtonsoft#Json#Linq#JToken}#GetEnumerator
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: IEnumerable<JToken>.GetEnumerator()
  nameWithType: JToken.IEnumerable<JToken>.GetEnumerator()
  fullName: Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()
  nameWithType.vb: JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.System#Collections#Generic#IEnumerable{Newtonsoft#Json#Linq#JToken}#GetEnumerator
    name: IEnumerable<JToken>.GetEnumerator
    nameWithType: JToken.IEnumerable<JToken>.GetEnumerator
    fullName: Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.System#Collections#Generic#IEnumerable{Newtonsoft#Json#Linq#JToken}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator
    nameWithType: JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator
    fullName: Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#Linq#IJEnumerable{Newtonsoft#Json#Linq#JToken}#get_Item(System.Object)
  commentId: M:Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#Linq#IJEnumerable{Newtonsoft#Json#Linq#JToken}#get_Item(System.Object)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: IJEnumerable<JToken>.get_Item(Object)
  nameWithType: JToken.IJEnumerable<JToken>.get_Item(Object)
  fullName: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.get_Item(System.Object)
  nameWithType.vb: JToken.Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.get_Item(Object)
  name.vb: Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.get_Item(Object)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#Linq#IJEnumerable{Newtonsoft#Json#Linq#JToken}#get_Item(System.Object)
    name: IJEnumerable<JToken>.get_Item
    nameWithType: JToken.IJEnumerable<JToken>.get_Item
    fullName: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#Linq#IJEnumerable{Newtonsoft#Json#Linq#JToken}#get_Item(System.Object)
    name: Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.get_Item
    nameWithType: JToken.Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.get_Item
    fullName: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.CreateReader
  commentId: M:Newtonsoft.Json.Linq.JToken.CreateReader
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: CreateReader()
  nameWithType: JToken.CreateReader()
  fullName: Newtonsoft.Json.Linq.JToken.CreateReader()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.CreateReader
    name: CreateReader
    nameWithType: JToken.CreateReader
    fullName: Newtonsoft.Json.Linq.JToken.CreateReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.CreateReader
    name: CreateReader
    nameWithType: JToken.CreateReader
    fullName: Newtonsoft.Json.Linq.JToken.CreateReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.FromObject(System.Object)
  commentId: M:Newtonsoft.Json.Linq.JToken.FromObject(System.Object)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: FromObject(Object)
  nameWithType: JToken.FromObject(Object)
  fullName: Newtonsoft.Json.Linq.JToken.FromObject(System.Object)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.FromObject(System.Object)
    name: FromObject
    nameWithType: JToken.FromObject
    fullName: Newtonsoft.Json.Linq.JToken.FromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.FromObject(System.Object)
    name: FromObject
    nameWithType: JToken.FromObject
    fullName: Newtonsoft.Json.Linq.JToken.FromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.FromObject(System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.Linq.JToken.FromObject(System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: FromObject(Object, JsonSerializer)
  nameWithType: JToken.FromObject(Object, JsonSerializer)
  fullName: Newtonsoft.Json.Linq.JToken.FromObject(System.Object, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.FromObject(System.Object,Newtonsoft.Json.JsonSerializer)
    name: FromObject
    nameWithType: JToken.FromObject
    fullName: Newtonsoft.Json.Linq.JToken.FromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.FromObject(System.Object,Newtonsoft.Json.JsonSerializer)
    name: FromObject
    nameWithType: JToken.FromObject
    fullName: Newtonsoft.Json.Linq.JToken.FromObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.ToObject``1
  commentId: M:Newtonsoft.Json.Linq.JToken.ToObject``1
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: ToObject<T>()
  nameWithType: JToken.ToObject<T>()
  fullName: Newtonsoft.Json.Linq.JToken.ToObject<T>()
  nameWithType.vb: JToken.ToObject(Of T)()
  fullname.vb: Newtonsoft.Json.Linq.JToken.ToObject(Of T)()
  name.vb: ToObject(Of T)()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.ToObject``1
    name: ToObject<T>
    nameWithType: JToken.ToObject<T>
    fullName: Newtonsoft.Json.Linq.JToken.ToObject<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.ToObject``1
    name: ToObject(Of T)
    nameWithType: JToken.ToObject(Of T)
    fullName: Newtonsoft.Json.Linq.JToken.ToObject(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.ToObject(System.Type)
  commentId: M:Newtonsoft.Json.Linq.JToken.ToObject(System.Type)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: ToObject(Type)
  nameWithType: JToken.ToObject(Type)
  fullName: Newtonsoft.Json.Linq.JToken.ToObject(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.ToObject(System.Type)
    name: ToObject
    nameWithType: JToken.ToObject
    fullName: Newtonsoft.Json.Linq.JToken.ToObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.ToObject(System.Type)
    name: ToObject
    nameWithType: JToken.ToObject
    fullName: Newtonsoft.Json.Linq.JToken.ToObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.ToObject``1(Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.Linq.JToken.ToObject``1(Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: ToObject<T>(JsonSerializer)
  nameWithType: JToken.ToObject<T>(JsonSerializer)
  fullName: Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JToken.ToObject(Of T)(JsonSerializer)
  fullname.vb: Newtonsoft.Json.Linq.JToken.ToObject(Of T)(Newtonsoft.Json.JsonSerializer)
  name.vb: ToObject(Of T)(JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.ToObject``1(Newtonsoft.Json.JsonSerializer)
    name: ToObject<T>
    nameWithType: JToken.ToObject<T>
    fullName: Newtonsoft.Json.Linq.JToken.ToObject<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.ToObject``1(Newtonsoft.Json.JsonSerializer)
    name: ToObject(Of T)
    nameWithType: JToken.ToObject(Of T)
    fullName: Newtonsoft.Json.Linq.JToken.ToObject(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.ToObject(System.Type,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.Linq.JToken.ToObject(System.Type,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: ToObject(Type, JsonSerializer)
  nameWithType: JToken.ToObject(Type, JsonSerializer)
  fullName: Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.ToObject(System.Type,Newtonsoft.Json.JsonSerializer)
    name: ToObject
    nameWithType: JToken.ToObject
    fullName: Newtonsoft.Json.Linq.JToken.ToObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.ToObject(System.Type,Newtonsoft.Json.JsonSerializer)
    name: ToObject
    nameWithType: JToken.ToObject
    fullName: Newtonsoft.Json.Linq.JToken.ToObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)
  commentId: M:Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: ReadFrom(JsonReader)
  nameWithType: JToken.ReadFrom(JsonReader)
  fullName: Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)
    name: ReadFrom
    nameWithType: JToken.ReadFrom
    fullName: Newtonsoft.Json.Linq.JToken.ReadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)
    name: ReadFrom
    nameWithType: JToken.ReadFrom
    fullName: Newtonsoft.Json.Linq.JToken.ReadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Parse(System.String)
  commentId: M:Newtonsoft.Json.Linq.JToken.Parse(System.String)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Parse(String)
  nameWithType: JToken.Parse(String)
  fullName: Newtonsoft.Json.Linq.JToken.Parse(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Parse(System.String)
    name: Parse
    nameWithType: JToken.Parse
    fullName: Newtonsoft.Json.Linq.JToken.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Parse(System.String)
    name: Parse
    nameWithType: JToken.Parse
    fullName: Newtonsoft.Json.Linq.JToken.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)
  commentId: M:Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Load(JsonReader)
  nameWithType: JToken.Load(JsonReader)
  fullName: Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)
    name: Load
    nameWithType: JToken.Load
    fullName: Newtonsoft.Json.Linq.JToken.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)
    name: Load
    nameWithType: JToken.Load
    fullName: Newtonsoft.Json.Linq.JToken.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#IJsonLineInfo#HasLineInfo
  commentId: M:Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#IJsonLineInfo#HasLineInfo
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: IJsonLineInfo.HasLineInfo()
  nameWithType: JToken.IJsonLineInfo.HasLineInfo()
  fullName: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()
  nameWithType.vb: JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()
  name.vb: Newtonsoft.Json.IJsonLineInfo.HasLineInfo()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#IJsonLineInfo#HasLineInfo
    name: IJsonLineInfo.HasLineInfo
    nameWithType: JToken.IJsonLineInfo.HasLineInfo
    fullName: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#IJsonLineInfo#HasLineInfo
    name: Newtonsoft.Json.IJsonLineInfo.HasLineInfo
    nameWithType: JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo
    fullName: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.SelectToken(System.String)
  commentId: M:Newtonsoft.Json.Linq.JToken.SelectToken(System.String)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: SelectToken(String)
  nameWithType: JToken.SelectToken(String)
  fullName: Newtonsoft.Json.Linq.JToken.SelectToken(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.SelectToken(System.String)
    name: SelectToken
    nameWithType: JToken.SelectToken
    fullName: Newtonsoft.Json.Linq.JToken.SelectToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.SelectToken(System.String)
    name: SelectToken
    nameWithType: JToken.SelectToken
    fullName: Newtonsoft.Json.Linq.JToken.SelectToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.SelectToken(System.String,System.Boolean)
  commentId: M:Newtonsoft.Json.Linq.JToken.SelectToken(System.String,System.Boolean)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: SelectToken(String, Boolean)
  nameWithType: JToken.SelectToken(String, Boolean)
  fullName: Newtonsoft.Json.Linq.JToken.SelectToken(System.String, System.Boolean)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.SelectToken(System.String,System.Boolean)
    name: SelectToken
    nameWithType: JToken.SelectToken
    fullName: Newtonsoft.Json.Linq.JToken.SelectToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.SelectToken(System.String,System.Boolean)
    name: SelectToken
    nameWithType: JToken.SelectToken
    fullName: Newtonsoft.Json.Linq.JToken.SelectToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.SelectTokens(System.String)
  commentId: M:Newtonsoft.Json.Linq.JToken.SelectTokens(System.String)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: SelectTokens(String)
  nameWithType: JToken.SelectTokens(String)
  fullName: Newtonsoft.Json.Linq.JToken.SelectTokens(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.SelectTokens(System.String)
    name: SelectTokens
    nameWithType: JToken.SelectTokens
    fullName: Newtonsoft.Json.Linq.JToken.SelectTokens
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.SelectTokens(System.String)
    name: SelectTokens
    nameWithType: JToken.SelectTokens
    fullName: Newtonsoft.Json.Linq.JToken.SelectTokens
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.SelectTokens(System.String,System.Boolean)
  commentId: M:Newtonsoft.Json.Linq.JToken.SelectTokens(System.String,System.Boolean)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: SelectTokens(String, Boolean)
  nameWithType: JToken.SelectTokens(String, Boolean)
  fullName: Newtonsoft.Json.Linq.JToken.SelectTokens(System.String, System.Boolean)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.SelectTokens(System.String,System.Boolean)
    name: SelectTokens
    nameWithType: JToken.SelectTokens
    fullName: Newtonsoft.Json.Linq.JToken.SelectTokens
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.SelectTokens(System.String,System.Boolean)
    name: SelectTokens
    nameWithType: JToken.SelectTokens
    fullName: Newtonsoft.Json.Linq.JToken.SelectTokens
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:Newtonsoft.Json.Linq.JToken.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  nameWithType: JToken.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  nameWithType.vb: JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  name.vb: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
    name: IDynamicMetaObjectProvider.GetMetaObject
    nameWithType: JToken.IDynamicMetaObjectProvider.GetMetaObject
    fullName: Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
    name: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    nameWithType: JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    fullName: Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.DeepClone
  commentId: M:Newtonsoft.Json.Linq.JToken.DeepClone
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: DeepClone()
  nameWithType: JToken.DeepClone()
  fullName: Newtonsoft.Json.Linq.JToken.DeepClone()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.DeepClone
    name: DeepClone
    nameWithType: JToken.DeepClone
    fullName: Newtonsoft.Json.Linq.JToken.DeepClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.DeepClone
    name: DeepClone
    nameWithType: JToken.DeepClone
    fullName: Newtonsoft.Json.Linq.JToken.DeepClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.AddAnnotation(System.Object)
  commentId: M:Newtonsoft.Json.Linq.JToken.AddAnnotation(System.Object)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: AddAnnotation(Object)
  nameWithType: JToken.AddAnnotation(Object)
  fullName: Newtonsoft.Json.Linq.JToken.AddAnnotation(System.Object)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.AddAnnotation(System.Object)
    name: AddAnnotation
    nameWithType: JToken.AddAnnotation
    fullName: Newtonsoft.Json.Linq.JToken.AddAnnotation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.AddAnnotation(System.Object)
    name: AddAnnotation
    nameWithType: JToken.AddAnnotation
    fullName: Newtonsoft.Json.Linq.JToken.AddAnnotation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Annotation``1
  commentId: M:Newtonsoft.Json.Linq.JToken.Annotation``1
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Annotation<T>()
  nameWithType: JToken.Annotation<T>()
  fullName: Newtonsoft.Json.Linq.JToken.Annotation<T>()
  nameWithType.vb: JToken.Annotation(Of T)()
  fullname.vb: Newtonsoft.Json.Linq.JToken.Annotation(Of T)()
  name.vb: Annotation(Of T)()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Annotation``1
    name: Annotation<T>
    nameWithType: JToken.Annotation<T>
    fullName: Newtonsoft.Json.Linq.JToken.Annotation<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Annotation``1
    name: Annotation(Of T)
    nameWithType: JToken.Annotation(Of T)
    fullName: Newtonsoft.Json.Linq.JToken.Annotation(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Annotation(System.Type)
  commentId: M:Newtonsoft.Json.Linq.JToken.Annotation(System.Type)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Annotation(Type)
  nameWithType: JToken.Annotation(Type)
  fullName: Newtonsoft.Json.Linq.JToken.Annotation(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Annotation(System.Type)
    name: Annotation
    nameWithType: JToken.Annotation
    fullName: Newtonsoft.Json.Linq.JToken.Annotation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Annotation(System.Type)
    name: Annotation
    nameWithType: JToken.Annotation
    fullName: Newtonsoft.Json.Linq.JToken.Annotation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Annotations``1
  commentId: M:Newtonsoft.Json.Linq.JToken.Annotations``1
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Annotations<T>()
  nameWithType: JToken.Annotations<T>()
  fullName: Newtonsoft.Json.Linq.JToken.Annotations<T>()
  nameWithType.vb: JToken.Annotations(Of T)()
  fullname.vb: Newtonsoft.Json.Linq.JToken.Annotations(Of T)()
  name.vb: Annotations(Of T)()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Annotations``1
    name: Annotations<T>
    nameWithType: JToken.Annotations<T>
    fullName: Newtonsoft.Json.Linq.JToken.Annotations<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Annotations``1
    name: Annotations(Of T)
    nameWithType: JToken.Annotations(Of T)
    fullName: Newtonsoft.Json.Linq.JToken.Annotations(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Annotations(System.Type)
  commentId: M:Newtonsoft.Json.Linq.JToken.Annotations(System.Type)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Annotations(Type)
  nameWithType: JToken.Annotations(Type)
  fullName: Newtonsoft.Json.Linq.JToken.Annotations(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Annotations(System.Type)
    name: Annotations
    nameWithType: JToken.Annotations
    fullName: Newtonsoft.Json.Linq.JToken.Annotations
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Annotations(System.Type)
    name: Annotations
    nameWithType: JToken.Annotations
    fullName: Newtonsoft.Json.Linq.JToken.Annotations
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.RemoveAnnotations``1
  commentId: M:Newtonsoft.Json.Linq.JToken.RemoveAnnotations``1
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: RemoveAnnotations<T>()
  nameWithType: JToken.RemoveAnnotations<T>()
  fullName: Newtonsoft.Json.Linq.JToken.RemoveAnnotations<T>()
  nameWithType.vb: JToken.RemoveAnnotations(Of T)()
  fullname.vb: Newtonsoft.Json.Linq.JToken.RemoveAnnotations(Of T)()
  name.vb: RemoveAnnotations(Of T)()
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.RemoveAnnotations``1
    name: RemoveAnnotations<T>
    nameWithType: JToken.RemoveAnnotations<T>
    fullName: Newtonsoft.Json.Linq.JToken.RemoveAnnotations<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.RemoveAnnotations``1
    name: RemoveAnnotations(Of T)
    nameWithType: JToken.RemoveAnnotations(Of T)
    fullName: Newtonsoft.Json.Linq.JToken.RemoveAnnotations(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.RemoveAnnotations(System.Type)
  commentId: M:Newtonsoft.Json.Linq.JToken.RemoveAnnotations(System.Type)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: RemoveAnnotations(Type)
  nameWithType: JToken.RemoveAnnotations(Type)
  fullName: Newtonsoft.Json.Linq.JToken.RemoveAnnotations(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.RemoveAnnotations(System.Type)
    name: RemoveAnnotations
    nameWithType: JToken.RemoveAnnotations
    fullName: Newtonsoft.Json.Linq.JToken.RemoveAnnotations
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.RemoveAnnotations(System.Type)
    name: RemoveAnnotations
    nameWithType: JToken.RemoveAnnotations
    fullName: Newtonsoft.Json.Linq.JToken.RemoveAnnotations
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.EqualityComparer
  commentId: P:Newtonsoft.Json.Linq.JToken.EqualityComparer
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: EqualityComparer
  nameWithType: JToken.EqualityComparer
  fullName: Newtonsoft.Json.Linq.JToken.EqualityComparer
- uid: Newtonsoft.Json.Linq.JToken.Parent
  commentId: P:Newtonsoft.Json.Linq.JToken.Parent
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Parent
  nameWithType: JToken.Parent
  fullName: Newtonsoft.Json.Linq.JToken.Parent
- uid: Newtonsoft.Json.Linq.JToken.Root
  commentId: P:Newtonsoft.Json.Linq.JToken.Root
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Root
  nameWithType: JToken.Root
  fullName: Newtonsoft.Json.Linq.JToken.Root
- uid: Newtonsoft.Json.Linq.JToken.Next
  commentId: P:Newtonsoft.Json.Linq.JToken.Next
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Next
  nameWithType: JToken.Next
  fullName: Newtonsoft.Json.Linq.JToken.Next
- uid: Newtonsoft.Json.Linq.JToken.Previous
  commentId: P:Newtonsoft.Json.Linq.JToken.Previous
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Previous
  nameWithType: JToken.Previous
  fullName: Newtonsoft.Json.Linq.JToken.Previous
- uid: Newtonsoft.Json.Linq.JToken.Path
  commentId: P:Newtonsoft.Json.Linq.JToken.Path
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Path
  nameWithType: JToken.Path
  fullName: Newtonsoft.Json.Linq.JToken.Path
- uid: Newtonsoft.Json.Linq.JToken.Item(System.Object)
  commentId: P:Newtonsoft.Json.Linq.JToken.Item(System.Object)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Item[Object]
  nameWithType: JToken.Item[Object]
  fullName: Newtonsoft.Json.Linq.JToken.Item[System.Object]
  nameWithType.vb: JToken.Item(Object)
  fullname.vb: Newtonsoft.Json.Linq.JToken.Item(System.Object)
  name.vb: Item(Object)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Item(System.Object)
    name: Item
    nameWithType: JToken.Item
    fullName: Newtonsoft.Json.Linq.JToken.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Item(System.Object)
    name: Item
    nameWithType: JToken.Item
    fullName: Newtonsoft.Json.Linq.JToken.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.First
  commentId: P:Newtonsoft.Json.Linq.JToken.First
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: First
  nameWithType: JToken.First
  fullName: Newtonsoft.Json.Linq.JToken.First
- uid: Newtonsoft.Json.Linq.JToken.Last
  commentId: P:Newtonsoft.Json.Linq.JToken.Last
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: Last
  nameWithType: JToken.Last
  fullName: Newtonsoft.Json.Linq.JToken.Last
- uid: Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#Linq#IJEnumerable{Newtonsoft#Json#Linq#JToken}#Item(System.Object)
  commentId: P:Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#Linq#IJEnumerable{Newtonsoft#Json#Linq#JToken}#Item(System.Object)
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: IJEnumerable<JToken>.Item[Object]
  nameWithType: JToken.IJEnumerable<JToken>.Item[Object]
  fullName: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.Item[System.Object]
  nameWithType.vb: JToken.Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.Item(Object)
  fullname.vb: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.Item(System.Object)
  name.vb: Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.Item(Object)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#Linq#IJEnumerable{Newtonsoft#Json#Linq#JToken}#Item(System.Object)
    name: IJEnumerable<JToken>.Item
    nameWithType: JToken.IJEnumerable<JToken>.Item
    fullName: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#Linq#IJEnumerable{Newtonsoft#Json#Linq#JToken}#Item(System.Object)
    name: Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.Item
    nameWithType: JToken.Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.Item
    fullName: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#IJsonLineInfo#LineNumber
  commentId: P:Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#IJsonLineInfo#LineNumber
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: IJsonLineInfo.LineNumber
  nameWithType: JToken.IJsonLineInfo.LineNumber
  fullName: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.LineNumber
  nameWithType.vb: JToken.Newtonsoft.Json.IJsonLineInfo.LineNumber
  name.vb: Newtonsoft.Json.IJsonLineInfo.LineNumber
- uid: Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#IJsonLineInfo#LinePosition
  commentId: P:Newtonsoft.Json.Linq.JToken.Newtonsoft#Json#IJsonLineInfo#LinePosition
  parent: Newtonsoft.Json.Linq.JToken
  isExternal: true
  name: IJsonLineInfo.LinePosition
  nameWithType: JToken.IJsonLineInfo.LinePosition
  fullName: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.LinePosition
  nameWithType.vb: JToken.Newtonsoft.Json.IJsonLineInfo.LinePosition
  name.vb: Newtonsoft.Json.IJsonLineInfo.LinePosition
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: false
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Newtonsoft.Json.Linq.IJEnumerable`1
  commentId: T:Newtonsoft.Json.Linq.IJEnumerable`1
  isExternal: true
  name: IJEnumerable<T>
  nameWithType: IJEnumerable<T>
  fullName: Newtonsoft.Json.Linq.IJEnumerable<T>
  nameWithType.vb: IJEnumerable(Of T)
  fullname.vb: Newtonsoft.Json.Linq.IJEnumerable(Of T)
  name.vb: IJEnumerable(Of T)
  spec.csharp:
  - uid: Newtonsoft.Json.Linq.IJEnumerable`1
    name: IJEnumerable
    nameWithType: IJEnumerable
    fullName: Newtonsoft.Json.Linq.IJEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Newtonsoft.Json.Linq.IJEnumerable`1
    name: IJEnumerable
    nameWithType: IJEnumerable
    fullName: Newtonsoft.Json.Linq.IJEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: false
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Shared.TwinCollectionValue.Item*
  commentId: Overload:Microsoft.Azure.Devices.Shared.TwinCollectionValue.Item
  isExternal: false
  name: Item
  nameWithType: TwinCollectionValue.Item
  fullName: Microsoft.Azure.Devices.Shared.TwinCollectionValue.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetMetadata*
  commentId: Overload:Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetMetadata
  isExternal: false
  name: GetMetadata
  nameWithType: TwinCollectionValue.GetMetadata
  fullName: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetMetadata
- uid: Microsoft.Azure.Devices.Shared.Metadata
  commentId: T:Microsoft.Azure.Devices.Shared.Metadata
  parent: Microsoft.Azure.Devices.Shared
  isExternal: false
  name: Metadata
  nameWithType: Metadata
  fullName: Microsoft.Azure.Devices.Shared.Metadata
- uid: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdated*
  commentId: Overload:Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdated
  isExternal: false
  name: GetLastUpdated
  nameWithType: TwinCollectionValue.GetLastUpdated
  fullName: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdated
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdatedVersion*
  commentId: Overload:Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdatedVersion
  isExternal: false
  name: GetLastUpdatedVersion
  nameWithType: TwinCollectionValue.GetLastUpdatedVersion
  fullName: Microsoft.Azure.Devices.Shared.TwinCollectionValue.GetLastUpdatedVersion
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
