### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
  commentId: T:Microsoft.Azure.Management.Media.IMediaServiceOperations
  id: IMediaServiceOperations
  parent: Microsoft.Azure.Management.Media
  children:
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IMediaServiceOperations
  nameWithType: IMediaServiceOperations
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IMediaServiceOperations
    path: src/azure-sdk-for-net/src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Media
  namespace: Microsoft.Azure.Management.Media
  summary: "\nMediaServiceOperations operations.\n"
  example: []
  syntax:
    content: public interface IMediaServiceOperations
    content.vb: Public Interface IMediaServiceOperations
  extensionMethods:
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(System.String)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(System.String,System.String)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(System.String,System.String)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(System.String,System.String)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  - Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: CheckNameAvailabiltyWithHttpMessagesAsync(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.IMediaServiceOperations
  langs:
  - csharp
  - vb
  name: CheckNameAvailabiltyWithHttpMessagesAsync(CheckNameAvailabilityInput, Dictionary<String, List<String>>, CancellationToken)
  nameWithType: IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync(CheckNameAvailabilityInput, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckNameAvailabiltyWithHttpMessagesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Media
  namespace: Microsoft.Azure.Management.Media
  summary: "\nCheck whether the Media Service resource name is available. The\nname must be globally unique.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<CheckNameAvailabilityOutput>> CheckNameAvailabiltyWithHttpMessagesAsync(CheckNameAvailabilityInput checkNameAvailabilityInput, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function CheckNameAvailabiltyWithHttpMessagesAsync(checkNameAvailabilityInput As CheckNameAvailabilityInput, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of CheckNameAvailabilityOutput))
    parameters:
    - id: checkNameAvailabilityInput
      type: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
      description: "\nProperties needed to check the availability of a name.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput}}
  overload: Microsoft.Azure.Management.Media.IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync*
  nameWithType.vb: IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync(CheckNameAvailabilityInput, Dictionary(Of String, List(Of String)), CancellationToken)
  fullName.vb: Microsoft.Azure.Management.Media.IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: CheckNameAvailabiltyWithHttpMessagesAsync(CheckNameAvailabilityInput, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.IMediaServiceOperations
  langs:
  - csharp
  - vb
  name: ListByResourceGroupWithHttpMessagesAsync(String, Dictionary<String, List<String>>, CancellationToken)
  nameWithType: IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync(String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupWithHttpMessagesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Media
  namespace: Microsoft.Azure.Management.Media
  summary: "\nList all of the Media Services in a resource group.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<IEnumerable<MediaService>>> ListByResourceGroupWithHttpMessagesAsync(string resourceGroupName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListByResourceGroupWithHttpMessagesAsync(resourceGroupName As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of IEnumerable(Of MediaService)))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Media.Models.MediaService}}}
  overload: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync*
  nameWithType.vb: IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync(String, Dictionary(Of String, List(Of String)), CancellationToken)
  fullName.vb: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListByResourceGroupWithHttpMessagesAsync(String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.IMediaServiceOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.IMediaServiceOperations
  langs:
  - csharp
  - vb
  name: GetWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  nameWithType: IMediaServiceOperations.GetWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.GetWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetWithHttpMessagesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Media
  namespace: Microsoft.Azure.Management.Media
  summary: "\nGet a Media Service.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<MediaService>> GetWithHttpMessagesAsync(string resourceGroupName, string mediaServiceName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function GetWithHttpMessagesAsync(resourceGroupName As String, mediaServiceName As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of MediaService))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.MediaService}}
  overload: Microsoft.Azure.Management.Media.IMediaServiceOperations.GetWithHttpMessagesAsync*
  nameWithType.vb: IMediaServiceOperations.GetWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
  fullName.vb: Microsoft.Azure.Management.Media.IMediaServiceOperations.GetWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: GetWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.IMediaServiceOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.IMediaServiceOperations
  langs:
  - csharp
  - vb
  name: CreateWithHttpMessagesAsync(String, String, MediaService, Dictionary<String, List<String>>, CancellationToken)
  nameWithType: IMediaServiceOperations.CreateWithHttpMessagesAsync(String, String, MediaService, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.CreateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateWithHttpMessagesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Media
  namespace: Microsoft.Azure.Management.Media
  summary: "\nCreate a Media Service.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<MediaService>> CreateWithHttpMessagesAsync(string resourceGroupName, string mediaServiceName, MediaService mediaService, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function CreateWithHttpMessagesAsync(resourceGroupName As String, mediaServiceName As String, mediaService As MediaService, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of MediaService))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: mediaService
      type: Microsoft.Azure.Management.Media.Models.MediaService
      description: "\nMedia Service properties needed for creation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.MediaService}}
  overload: Microsoft.Azure.Management.Media.IMediaServiceOperations.CreateWithHttpMessagesAsync*
  nameWithType.vb: IMediaServiceOperations.CreateWithHttpMessagesAsync(String, String, MediaService, Dictionary(Of String, List(Of String)), CancellationToken)
  fullName.vb: Microsoft.Azure.Management.Media.IMediaServiceOperations.CreateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: CreateWithHttpMessagesAsync(String, String, MediaService, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.IMediaServiceOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.IMediaServiceOperations
  langs:
  - csharp
  - vb
  name: DeleteWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  nameWithType: IMediaServiceOperations.DeleteWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.DeleteWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteWithHttpMessagesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Management.Media
  namespace: Microsoft.Azure.Management.Media
  summary: "\nDelete a Media Service.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string mediaServiceName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function DeleteWithHttpMessagesAsync(resourceGroupName As String, mediaServiceName As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse}
  overload: Microsoft.Azure.Management.Media.IMediaServiceOperations.DeleteWithHttpMessagesAsync*
  nameWithType.vb: IMediaServiceOperations.DeleteWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
  fullName.vb: Microsoft.Azure.Management.Media.IMediaServiceOperations.DeleteWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: DeleteWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.IMediaServiceOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.IMediaServiceOperations
  langs:
  - csharp
  - vb
  name: UpdateWithHttpMessagesAsync(String, String, MediaService, Dictionary<String, List<String>>, CancellationToken)
  nameWithType: IMediaServiceOperations.UpdateWithHttpMessagesAsync(String, String, MediaService, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.UpdateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateWithHttpMessagesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Management.Media
  namespace: Microsoft.Azure.Management.Media
  summary: "\nUpdate a Media Service.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<MediaService>> UpdateWithHttpMessagesAsync(string resourceGroupName, string mediaServiceName, MediaService mediaService, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function UpdateWithHttpMessagesAsync(resourceGroupName As String, mediaServiceName As String, mediaService As MediaService, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of MediaService))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: mediaService
      type: Microsoft.Azure.Management.Media.Models.MediaService
      description: "\nMedia Service properties needed for update.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.MediaService}}
  overload: Microsoft.Azure.Management.Media.IMediaServiceOperations.UpdateWithHttpMessagesAsync*
  nameWithType.vb: IMediaServiceOperations.UpdateWithHttpMessagesAsync(String, String, MediaService, Dictionary(Of String, List(Of String)), CancellationToken)
  fullName.vb: Microsoft.Azure.Management.Media.IMediaServiceOperations.UpdateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: UpdateWithHttpMessagesAsync(String, String, MediaService, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.IMediaServiceOperations
  langs:
  - csharp
  - vb
  name: RegenerateKeyWithHttpMessagesAsync(String, String, RegenerateKeyInput, Dictionary<String, List<String>>, CancellationToken)
  nameWithType: IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync(String, String, RegenerateKeyInput, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.RegenerateKeyInput, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKeyWithHttpMessagesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Media
  namespace: Microsoft.Azure.Management.Media
  summary: "\nRegenerate the key for a Media Service.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<RegenerateKeyOutput>> RegenerateKeyWithHttpMessagesAsync(string resourceGroupName, string mediaServiceName, RegenerateKeyInput regenerateKeyInput, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function RegenerateKeyWithHttpMessagesAsync(resourceGroupName As String, mediaServiceName As String, regenerateKeyInput As RegenerateKeyInput, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of RegenerateKeyOutput))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: regenerateKeyInput
      type: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
      description: "\nProperties needed to regenerate the Media Service key.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput}}
  overload: Microsoft.Azure.Management.Media.IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync*
  nameWithType.vb: IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync(String, String, RegenerateKeyInput, Dictionary(Of String, List(Of String)), CancellationToken)
  fullName.vb: Microsoft.Azure.Management.Media.IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.RegenerateKeyInput, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: RegenerateKeyWithHttpMessagesAsync(String, String, RegenerateKeyInput, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.IMediaServiceOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.IMediaServiceOperations
  langs:
  - csharp
  - vb
  name: ListKeysWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  nameWithType: IMediaServiceOperations.ListKeysWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListKeysWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListKeysWithHttpMessagesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.Management.Media
  namespace: Microsoft.Azure.Management.Media
  summary: "\nList the keys for a Media Service.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<ServiceKeys>> ListKeysWithHttpMessagesAsync(string resourceGroupName, string mediaServiceName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListKeysWithHttpMessagesAsync(resourceGroupName As String, mediaServiceName As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of ServiceKeys))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.ServiceKeys}}
  overload: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListKeysWithHttpMessagesAsync*
  nameWithType.vb: IMediaServiceOperations.ListKeysWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
  fullName.vb: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListKeysWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListKeysWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: SyncStorageKeysWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.IMediaServiceOperations
  langs:
  - csharp
  - vb
  name: SyncStorageKeysWithHttpMessagesAsync(String, String, SyncStorageKeysInput, Dictionary<String, List<String>>, CancellationToken)
  nameWithType: IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync(String, String, SyncStorageKeysInput, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SyncStorageKeysWithHttpMessagesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/IMediaServiceOperations.cs
    startLine: 168
  assemblies:
  - Microsoft.Azure.Management.Media
  namespace: Microsoft.Azure.Management.Media
  summary: "\nSynchronize the keys for a storage account to the Media Service.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<MediaService>> SyncStorageKeysWithHttpMessagesAsync(string resourceGroupName, string mediaServiceName, SyncStorageKeysInput syncStorageKeysInput, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function SyncStorageKeysWithHttpMessagesAsync(resourceGroupName As String, mediaServiceName As String, syncStorageKeysInput As SyncStorageKeysInput, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of MediaService))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: syncStorageKeysInput
      type: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
      description: "\nProperties needed to sycnronize the keys for a storage account to\nthe Media Service.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.MediaService}}
  overload: Microsoft.Azure.Management.Media.IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync*
  nameWithType.vb: IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync(String, String, SyncStorageKeysInput, Dictionary(Of String, List(Of String)), CancellationToken)
  fullName.vb: Microsoft.Azure.Management.Media.IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: SyncStorageKeysWithHttpMessagesAsync(String, String, SyncStorageKeysInput, Dictionary(Of String, List(Of String)), CancellationToken)
references:
- uid: Microsoft.Azure.Management.Media
  commentId: N:Microsoft.Azure.Management.Media
  isExternal: false
  name: Microsoft.Azure.Management.Media
  nameWithType: Microsoft.Azure.Management.Media
  fullName: Microsoft.Azure.Management.Media
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  name: CheckNameAvailabilty(CheckNameAvailabilityInput)
  nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabilty(CheckNameAvailabilityInput)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
    name: CheckNameAvailabilty
    nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabilty
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
    name: CheckNameAvailabilityInput
    nameWithType: CheckNameAvailabilityInput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
    name: CheckNameAvailabilty
    nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabilty
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
    name: CheckNameAvailabilityInput
    nameWithType: CheckNameAvailabilityInput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
  name: CheckNameAvailabiltyAsync(CheckNameAvailabilityInput, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(CheckNameAvailabilityInput, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
    name: CheckNameAvailabiltyAsync
    nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
    name: CheckNameAvailabilityInput
    nameWithType: CheckNameAvailabilityInput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
    name: CheckNameAvailabiltyAsync
    nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
    name: CheckNameAvailabilityInput
    nameWithType: CheckNameAvailabilityInput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String)
  name: ListByResourceGroup(String)
  nameWithType: MediaServiceOperationsExtensions.ListByResourceGroup(String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(System.String)
    name: ListByResourceGroup
    nameWithType: MediaServiceOperationsExtensions.ListByResourceGroup
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(System.String)
    name: ListByResourceGroup
    nameWithType: MediaServiceOperationsExtensions.ListByResourceGroup
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.Threading.CancellationToken)
  name: ListByResourceGroupAsync(String, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.ListByResourceGroupAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(System.String,System.Threading.CancellationToken)
    name: ListByResourceGroupAsync
    nameWithType: MediaServiceOperationsExtensions.ListByResourceGroupAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(System.String,System.Threading.CancellationToken)
    name: ListByResourceGroupAsync
    nameWithType: MediaServiceOperationsExtensions.ListByResourceGroupAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  name: Get(String, String)
  nameWithType: MediaServiceOperationsExtensions.Get(String, String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(System.String,System.String)
    name: Get
    nameWithType: MediaServiceOperationsExtensions.Get
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(System.String,System.String)
    name: Get
    nameWithType: MediaServiceOperationsExtensions.Get
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  name: GetAsync(String, String, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.GetAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: MediaServiceOperationsExtensions.GetAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: MediaServiceOperationsExtensions.GetAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  name: Create(String, String, MediaService)
  nameWithType: MediaServiceOperationsExtensions.Create(String, String, MediaService)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
    name: Create
    nameWithType: MediaServiceOperationsExtensions.Create
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
    name: Create
    nameWithType: MediaServiceOperationsExtensions.Create
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  name: CreateAsync(String, String, MediaService, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.CreateAsync(String, String, MediaService, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: MediaServiceOperationsExtensions.CreateAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: MediaServiceOperationsExtensions.CreateAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  name: Delete(String, String)
  nameWithType: MediaServiceOperationsExtensions.Delete(String, String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(System.String,System.String)
    name: Delete
    nameWithType: MediaServiceOperationsExtensions.Delete
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(System.String,System.String)
    name: Delete
    nameWithType: MediaServiceOperationsExtensions.Delete
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  name: DeleteAsync(String, String, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.DeleteAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: MediaServiceOperationsExtensions.DeleteAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: MediaServiceOperationsExtensions.DeleteAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  name: Update(String, String, MediaService)
  nameWithType: MediaServiceOperationsExtensions.Update(String, String, MediaService)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
    name: Update
    nameWithType: MediaServiceOperationsExtensions.Update
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
    name: Update
    nameWithType: MediaServiceOperationsExtensions.Update
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  name: UpdateAsync(String, String, MediaService, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.UpdateAsync(String, String, MediaService, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: MediaServiceOperationsExtensions.UpdateAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: MediaServiceOperationsExtensions.UpdateAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  name: RegenerateKey(String, String, RegenerateKeyInput)
  nameWithType: MediaServiceOperationsExtensions.RegenerateKey(String, String, RegenerateKeyInput)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(System.String, System.String, Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
    name: RegenerateKey
    nameWithType: MediaServiceOperationsExtensions.RegenerateKey
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
    name: RegenerateKeyInput
    nameWithType: RegenerateKeyInput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
    name: RegenerateKey
    nameWithType: MediaServiceOperationsExtensions.RegenerateKey
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
    name: RegenerateKeyInput
    nameWithType: RegenerateKeyInput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
  name: RegenerateKeyAsync(String, String, RegenerateKeyInput, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.RegenerateKeyAsync(String, String, RegenerateKeyInput, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.RegenerateKeyInput, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
    name: RegenerateKeyAsync
    nameWithType: MediaServiceOperationsExtensions.RegenerateKeyAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
    name: RegenerateKeyInput
    nameWithType: RegenerateKeyInput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
    name: RegenerateKeyAsync
    nameWithType: MediaServiceOperationsExtensions.RegenerateKeyAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
    name: RegenerateKeyInput
    nameWithType: RegenerateKeyInput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  name: ListKeys(String, String)
  nameWithType: MediaServiceOperationsExtensions.ListKeys(String, String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(System.String,System.String)
    name: ListKeys
    nameWithType: MediaServiceOperationsExtensions.ListKeys
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(System.String,System.String)
    name: ListKeys
    nameWithType: MediaServiceOperationsExtensions.ListKeys
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  name: ListKeysAsync(String, String, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.ListKeysAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(System.String,System.String,System.Threading.CancellationToken)
    name: ListKeysAsync
    nameWithType: MediaServiceOperationsExtensions.ListKeysAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(System.String,System.String,System.Threading.CancellationToken)
    name: ListKeysAsync
    nameWithType: MediaServiceOperationsExtensions.ListKeysAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  name: SyncStorageKeys(String, String, SyncStorageKeysInput)
  nameWithType: MediaServiceOperationsExtensions.SyncStorageKeys(String, String, SyncStorageKeysInput)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(System.String, System.String, Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
    name: SyncStorageKeys
    nameWithType: MediaServiceOperationsExtensions.SyncStorageKeys
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
    name: SyncStorageKeysInput
    nameWithType: SyncStorageKeysInput
    fullName: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
    name: SyncStorageKeys
    nameWithType: MediaServiceOperationsExtensions.SyncStorageKeys
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
    name: SyncStorageKeysInput
    nameWithType: SyncStorageKeysInput
    fullName: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  definition: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
  name: SyncStorageKeysAsync(String, String, SyncStorageKeysInput, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.SyncStorageKeysAsync(String, String, SyncStorageKeysInput, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(System.String, System.String, Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
    name: SyncStorageKeysAsync
    nameWithType: MediaServiceOperationsExtensions.SyncStorageKeysAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
    name: SyncStorageKeysInput
    nameWithType: SyncStorageKeysInput
    fullName: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
    name: SyncStorageKeysAsync
    nameWithType: MediaServiceOperationsExtensions.SyncStorageKeysAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
    name: SyncStorageKeysInput
    nameWithType: SyncStorageKeysInput
    fullName: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  isExternal: false
  name: CheckNameAvailabilty(IMediaServiceOperations, CheckNameAvailabilityInput)
  nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabilty(IMediaServiceOperations, CheckNameAvailabilityInput)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations, Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
    name: CheckNameAvailabilty
    nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabilty
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
    name: CheckNameAvailabilityInput
    nameWithType: CheckNameAvailabilityInput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
    name: CheckNameAvailabilty
    nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabilty
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
    name: CheckNameAvailabilityInput
    nameWithType: CheckNameAvailabilityInput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  parent: Microsoft.Azure.Management.Media
  isExternal: false
  name: MediaServiceOperationsExtensions
  nameWithType: MediaServiceOperationsExtensions
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
  isExternal: true
  name: CheckNameAvailabiltyAsync(IMediaServiceOperations, CheckNameAvailabilityInput, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(IMediaServiceOperations, CheckNameAvailabilityInput, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
    name: CheckNameAvailabiltyAsync
    nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
    name: CheckNameAvailabilityInput
    nameWithType: CheckNameAvailabilityInput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
    name: CheckNameAvailabiltyAsync
    nameWithType: MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
    name: CheckNameAvailabilityInput
    nameWithType: CheckNameAvailabilityInput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String)
  isExternal: true
  name: ListByResourceGroup(IMediaServiceOperations, String)
  nameWithType: MediaServiceOperationsExtensions.ListByResourceGroup(IMediaServiceOperations, String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String)
    name: ListByResourceGroup
    nameWithType: MediaServiceOperationsExtensions.ListByResourceGroup
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String)
    name: ListByResourceGroup
    nameWithType: MediaServiceOperationsExtensions.ListByResourceGroup
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: ListByResourceGroupAsync(IMediaServiceOperations, String, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.ListByResourceGroupAsync(IMediaServiceOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.Threading.CancellationToken)
    name: ListByResourceGroupAsync
    nameWithType: MediaServiceOperationsExtensions.ListByResourceGroupAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.Threading.CancellationToken)
    name: ListByResourceGroupAsync
    nameWithType: MediaServiceOperationsExtensions.ListByResourceGroupAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  isExternal: true
  name: Get(IMediaServiceOperations, String, String)
  nameWithType: MediaServiceOperationsExtensions.Get(IMediaServiceOperations, String, String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
    name: Get
    nameWithType: MediaServiceOperationsExtensions.Get
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
    name: Get
    nameWithType: MediaServiceOperationsExtensions.Get
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: GetAsync(IMediaServiceOperations, String, String, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.GetAsync(IMediaServiceOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: MediaServiceOperationsExtensions.GetAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: MediaServiceOperationsExtensions.GetAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  isExternal: true
  name: Create(IMediaServiceOperations, String, String, MediaService)
  nameWithType: MediaServiceOperationsExtensions.Create(IMediaServiceOperations, String, String, MediaService)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
    name: Create
    nameWithType: MediaServiceOperationsExtensions.Create
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
    name: Create
    nameWithType: MediaServiceOperationsExtensions.Create
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  isExternal: true
  name: CreateAsync(IMediaServiceOperations, String, String, MediaService, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.CreateAsync(IMediaServiceOperations, String, String, MediaService, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: MediaServiceOperationsExtensions.CreateAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: MediaServiceOperationsExtensions.CreateAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  isExternal: true
  name: Delete(IMediaServiceOperations, String, String)
  nameWithType: MediaServiceOperationsExtensions.Delete(IMediaServiceOperations, String, String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
    name: Delete
    nameWithType: MediaServiceOperationsExtensions.Delete
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
    name: Delete
    nameWithType: MediaServiceOperationsExtensions.Delete
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: DeleteAsync(IMediaServiceOperations, String, String, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.DeleteAsync(IMediaServiceOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: MediaServiceOperationsExtensions.DeleteAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: MediaServiceOperationsExtensions.DeleteAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  isExternal: true
  name: Update(IMediaServiceOperations, String, String, MediaService)
  nameWithType: MediaServiceOperationsExtensions.Update(IMediaServiceOperations, String, String, MediaService)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
    name: Update
    nameWithType: MediaServiceOperationsExtensions.Update
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
    name: Update
    nameWithType: MediaServiceOperationsExtensions.Update
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  isExternal: true
  name: UpdateAsync(IMediaServiceOperations, String, String, MediaService, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.UpdateAsync(IMediaServiceOperations, String, String, MediaService, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: MediaServiceOperationsExtensions.UpdateAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: MediaServiceOperationsExtensions.UpdateAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  isExternal: true
  name: RegenerateKey(IMediaServiceOperations, String, String, RegenerateKeyInput)
  nameWithType: MediaServiceOperationsExtensions.RegenerateKey(IMediaServiceOperations, String, String, RegenerateKeyInput)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
    name: RegenerateKey
    nameWithType: MediaServiceOperationsExtensions.RegenerateKey
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
    name: RegenerateKeyInput
    nameWithType: RegenerateKeyInput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
    name: RegenerateKey
    nameWithType: MediaServiceOperationsExtensions.RegenerateKey
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
    name: RegenerateKeyInput
    nameWithType: RegenerateKeyInput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
  isExternal: true
  name: RegenerateKeyAsync(IMediaServiceOperations, String, String, RegenerateKeyInput, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.RegenerateKeyAsync(IMediaServiceOperations, String, String, RegenerateKeyInput, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.RegenerateKeyInput, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
    name: RegenerateKeyAsync
    nameWithType: MediaServiceOperationsExtensions.RegenerateKeyAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
    name: RegenerateKeyInput
    nameWithType: RegenerateKeyInput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
    name: RegenerateKeyAsync
    nameWithType: MediaServiceOperationsExtensions.RegenerateKeyAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
    name: RegenerateKeyInput
    nameWithType: RegenerateKeyInput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  isExternal: true
  name: ListKeys(IMediaServiceOperations, String, String)
  nameWithType: MediaServiceOperationsExtensions.ListKeys(IMediaServiceOperations, String, String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
    name: ListKeys
    nameWithType: MediaServiceOperationsExtensions.ListKeys
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
    name: ListKeys
    nameWithType: MediaServiceOperationsExtensions.ListKeys
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: ListKeysAsync(IMediaServiceOperations, String, String, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.ListKeysAsync(IMediaServiceOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
    name: ListKeysAsync
    nameWithType: MediaServiceOperationsExtensions.ListKeysAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
    name: ListKeysAsync
    nameWithType: MediaServiceOperationsExtensions.ListKeysAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  isExternal: true
  name: SyncStorageKeys(IMediaServiceOperations, String, String, SyncStorageKeysInput)
  nameWithType: MediaServiceOperationsExtensions.SyncStorageKeys(IMediaServiceOperations, String, String, SyncStorageKeysInput)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
    name: SyncStorageKeys
    nameWithType: MediaServiceOperationsExtensions.SyncStorageKeys
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
    name: SyncStorageKeysInput
    nameWithType: SyncStorageKeysInput
    fullName: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
    name: SyncStorageKeys
    nameWithType: MediaServiceOperationsExtensions.SyncStorageKeys
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
    name: SyncStorageKeysInput
    nameWithType: SyncStorageKeysInput
    fullName: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
  isExternal: true
  name: SyncStorageKeysAsync(IMediaServiceOperations, String, String, SyncStorageKeysInput, CancellationToken)
  nameWithType: MediaServiceOperationsExtensions.SyncStorageKeysAsync(IMediaServiceOperations, String, String, SyncStorageKeysInput, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
    name: SyncStorageKeysAsync
    nameWithType: MediaServiceOperationsExtensions.SyncStorageKeysAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
    name: SyncStorageKeysInput
    nameWithType: SyncStorageKeysInput
    fullName: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
    name: SyncStorageKeysAsync
    nameWithType: MediaServiceOperationsExtensions.SyncStorageKeysAsync
    fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
    name: IMediaServiceOperations
    nameWithType: IMediaServiceOperations
    fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
    name: SyncStorageKeysInput
    nameWithType: SyncStorageKeysInput
    fullName: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync*
  commentId: Overload:Microsoft.Azure.Management.Media.IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync
  isExternal: false
  name: CheckNameAvailabiltyWithHttpMessagesAsync
  nameWithType: IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.CheckNameAvailabiltyWithHttpMessagesAsync
- uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
  commentId: T:Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
  parent: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: CheckNameAvailabilityInput
  nameWithType: CheckNameAvailabilityInput
  fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<String>>
  nameWithType: Dictionary<String, List<String>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>
  nameWithType.vb: Dictionary(Of String, List(Of String))
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String))
  name.vb: Dictionary(Of String, List(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<CheckNameAvailabilityOutput>>
  nameWithType: Task<AzureOperationResponse<CheckNameAvailabilityOutput>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput>>
  nameWithType.vb: Task(Of AzureOperationResponse(Of CheckNameAvailabilityOutput))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.AzureOperationResponse(Of Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput))
  name.vb: Task(Of AzureOperationResponse(Of CheckNameAvailabilityOutput))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput
    name: CheckNameAvailabilityOutput
    nameWithType: CheckNameAvailabilityOutput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput
    name: CheckNameAvailabilityOutput
    nameWithType: CheckNameAvailabilityOutput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.Models
  commentId: N:Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: Microsoft.Azure.Management.Media.Models
  nameWithType: Microsoft.Azure.Management.Media.Models
  fullName: Microsoft.Azure.Management.Media.Models
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync*
  commentId: Overload:Microsoft.Azure.Management.Media.IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync
  isExternal: false
  name: ListByResourceGroupWithHttpMessagesAsync
  nameWithType: IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListByResourceGroupWithHttpMessagesAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Media.Models.MediaService}}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Media.Models.MediaService}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<IEnumerable<MediaService>>>
  nameWithType: Task<AzureOperationResponse<IEnumerable<MediaService>>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<System.Collections.Generic.IEnumerable<Microsoft.Azure.Management.Media.Models.MediaService>>>
  nameWithType.vb: Task(Of AzureOperationResponse(Of IEnumerable(Of MediaService)))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.AzureOperationResponse(Of System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Management.Media.Models.MediaService)))
  name.vb: Task(Of AzureOperationResponse(Of IEnumerable(Of MediaService)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.GetWithHttpMessagesAsync*
  commentId: Overload:Microsoft.Azure.Management.Media.IMediaServiceOperations.GetWithHttpMessagesAsync
  isExternal: false
  name: GetWithHttpMessagesAsync
  nameWithType: IMediaServiceOperations.GetWithHttpMessagesAsync
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.GetWithHttpMessagesAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.MediaService}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.MediaService}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<MediaService>>
  nameWithType: Task<AzureOperationResponse<MediaService>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Azure.Management.Media.Models.MediaService>>
  nameWithType.vb: Task(Of AzureOperationResponse(Of MediaService))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.AzureOperationResponse(Of Microsoft.Azure.Management.Media.Models.MediaService))
  name.vb: Task(Of AzureOperationResponse(Of MediaService))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    nameWithType: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.CreateWithHttpMessagesAsync*
  commentId: Overload:Microsoft.Azure.Management.Media.IMediaServiceOperations.CreateWithHttpMessagesAsync
  isExternal: false
  name: CreateWithHttpMessagesAsync
  nameWithType: IMediaServiceOperations.CreateWithHttpMessagesAsync
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.CreateWithHttpMessagesAsync
- uid: Microsoft.Azure.Management.Media.Models.MediaService
  commentId: T:Microsoft.Azure.Management.Media.Models.MediaService
  parent: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: MediaService
  nameWithType: MediaService
  fullName: Microsoft.Azure.Management.Media.Models.MediaService
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.DeleteWithHttpMessagesAsync*
  commentId: Overload:Microsoft.Azure.Management.Media.IMediaServiceOperations.DeleteWithHttpMessagesAsync
  isExternal: false
  name: DeleteWithHttpMessagesAsync
  nameWithType: IMediaServiceOperations.DeleteWithHttpMessagesAsync
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.DeleteWithHttpMessagesAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.UpdateWithHttpMessagesAsync*
  commentId: Overload:Microsoft.Azure.Management.Media.IMediaServiceOperations.UpdateWithHttpMessagesAsync
  isExternal: false
  name: UpdateWithHttpMessagesAsync
  nameWithType: IMediaServiceOperations.UpdateWithHttpMessagesAsync
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.UpdateWithHttpMessagesAsync
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync*
  commentId: Overload:Microsoft.Azure.Management.Media.IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync
  isExternal: false
  name: RegenerateKeyWithHttpMessagesAsync
  nameWithType: IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.RegenerateKeyWithHttpMessagesAsync
- uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
  commentId: T:Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
  parent: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: RegenerateKeyInput
  nameWithType: RegenerateKeyInput
  fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<RegenerateKeyOutput>>
  nameWithType: Task<AzureOperationResponse<RegenerateKeyOutput>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput>>
  nameWithType.vb: Task(Of AzureOperationResponse(Of RegenerateKeyOutput))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.AzureOperationResponse(Of Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput))
  name.vb: Task(Of AzureOperationResponse(Of RegenerateKeyOutput))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput
    name: RegenerateKeyOutput
    nameWithType: RegenerateKeyOutput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput
    name: RegenerateKeyOutput
    nameWithType: RegenerateKeyOutput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListKeysWithHttpMessagesAsync*
  commentId: Overload:Microsoft.Azure.Management.Media.IMediaServiceOperations.ListKeysWithHttpMessagesAsync
  isExternal: false
  name: ListKeysWithHttpMessagesAsync
  nameWithType: IMediaServiceOperations.ListKeysWithHttpMessagesAsync
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.ListKeysWithHttpMessagesAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.ServiceKeys}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Media.Models.ServiceKeys}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<ServiceKeys>>
  nameWithType: Task<AzureOperationResponse<ServiceKeys>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Azure.Management.Media.Models.ServiceKeys>>
  nameWithType.vb: Task(Of AzureOperationResponse(Of ServiceKeys))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.AzureOperationResponse(Of Microsoft.Azure.Management.Media.Models.ServiceKeys))
  name.vb: Task(Of AzureOperationResponse(Of ServiceKeys))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Media.Models.ServiceKeys
    name: ServiceKeys
    nameWithType: ServiceKeys
    fullName: Microsoft.Azure.Management.Media.Models.ServiceKeys
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Media.Models.ServiceKeys
    name: ServiceKeys
    nameWithType: ServiceKeys
    fullName: Microsoft.Azure.Management.Media.Models.ServiceKeys
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync*
  commentId: Overload:Microsoft.Azure.Management.Media.IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync
  isExternal: false
  name: SyncStorageKeysWithHttpMessagesAsync
  nameWithType: IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations.SyncStorageKeysWithHttpMessagesAsync
- uid: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
  commentId: T:Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
  parent: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: SyncStorageKeysInput
  nameWithType: SyncStorageKeysInput
  fullName: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
