### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.WinRMListener
  commentId: T:Microsoft.Azure.Management.Compute.Models.WinRMListener
  id: WinRMListener
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.WinRMListener.#ctor
  - Microsoft.Azure.Management.Compute.Models.WinRMListener.#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.ProtocolTypes},System.String)
  - Microsoft.Azure.Management.Compute.Models.WinRMListener.CertificateUrl
  - Microsoft.Azure.Management.Compute.Models.WinRMListener.Protocol
  langs:
  - csharp
  - vb
  name: WinRMListener
  nameWithType: WinRMListener
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMListener
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMListener.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WinRMListener
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMListener.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nDescribes Protocol and thumbprint of Windows Remote Management listener\n"
  example: []
  syntax:
    content: public class WinRMListener
    content.vb: Public Class WinRMListener
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.WinRMListener.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.WinRMListener.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.WinRMListener
  langs:
  - csharp
  - vb
  name: WinRMListener()
  nameWithType: WinRMListener.WinRMListener()
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMListener.WinRMListener()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMListener.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMListener.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the WinRMListener class.\n"
  example: []
  syntax:
    content: public WinRMListener()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.WinRMListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.WinRMListener.#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.ProtocolTypes},System.String)
  commentId: M:Microsoft.Azure.Management.Compute.Models.WinRMListener.#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.ProtocolTypes},System.String)
  id: '#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.ProtocolTypes},System.String)'
  parent: Microsoft.Azure.Management.Compute.Models.WinRMListener
  langs:
  - csharp
  - vb
  name: WinRMListener(Nullable<ProtocolTypes>, String)
  nameWithType: WinRMListener.WinRMListener(Nullable<ProtocolTypes>, String)
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMListener.WinRMListener(System.Nullable<Microsoft.Azure.Management.Compute.Models.ProtocolTypes>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMListener.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMListener.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the WinRMListener class.\n"
  example: []
  syntax:
    content: public WinRMListener(ProtocolTypes? protocol = null, string certificateUrl = null)
    content.vb: Public Sub New(protocol As ProtocolTypes? = Nothing, certificateUrl As String = Nothing)
    parameters:
    - id: protocol
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.ProtocolTypes}
      description: >-
        the Protocol used by WinRM listener.

        Currently only Http and Https are supported. Possible values

        include: 'Http', 'Https'
    - id: certificateUrl
      type: System.String
      description: >-
        the Certificate URL in KMS for Https

        listeners. Should be null for Http listeners.
  overload: Microsoft.Azure.Management.Compute.Models.WinRMListener.#ctor*
  nameWithType.vb: WinRMListener.WinRMListener(Nullable(Of ProtocolTypes), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Compute.Models.WinRMListener.WinRMListener(System.Nullable(Of Microsoft.Azure.Management.Compute.Models.ProtocolTypes), System.String)
  name.vb: WinRMListener(Nullable(Of ProtocolTypes), String)
- uid: Microsoft.Azure.Management.Compute.Models.WinRMListener.Protocol
  commentId: P:Microsoft.Azure.Management.Compute.Models.WinRMListener.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Compute.Models.WinRMListener
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: WinRMListener.Protocol
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMListener.Protocol
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMListener.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Protocol
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMListener.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the Protocol used by WinRM listener. Currently only\nHttp and Https are supported. Possible values include: 'Http',\n'Https'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "protocol")]

      public ProtocolTypes? Protocol { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="protocol")>

      Public Property Protocol As ProtocolTypes?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.ProtocolTypes}
  overload: Microsoft.Azure.Management.Compute.Models.WinRMListener.Protocol*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: protocol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.WinRMListener.CertificateUrl
  commentId: P:Microsoft.Azure.Management.Compute.Models.WinRMListener.CertificateUrl
  id: CertificateUrl
  parent: Microsoft.Azure.Management.Compute.Models.WinRMListener
  langs:
  - csharp
  - vb
  name: CertificateUrl
  nameWithType: WinRMListener.CertificateUrl
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMListener.CertificateUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMListener.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateUrl
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMListener.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the Certificate URL in KMS for Https listeners.\nShould be null for Http listeners.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "certificateUrl")]

      public string CertificateUrl { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="certificateUrl")>

      Public Property CertificateUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.WinRMListener.CertificateUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: certificateUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.WinRMListener.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.WinRMListener.#ctor
  isExternal: false
  name: WinRMListener
  nameWithType: WinRMListener.WinRMListener
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMListener.WinRMListener
- uid: System.Nullable{Microsoft.Azure.Management.Compute.Models.ProtocolTypes}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Compute.Models.ProtocolTypes}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ProtocolTypes>
  nameWithType: Nullable<ProtocolTypes>
  fullName: System.Nullable<Microsoft.Azure.Management.Compute.Models.ProtocolTypes>
  nameWithType.vb: Nullable(Of ProtocolTypes)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Compute.Models.ProtocolTypes)
  name.vb: Nullable(Of ProtocolTypes)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.ProtocolTypes
    name: ProtocolTypes
    nameWithType: ProtocolTypes
    fullName: Microsoft.Azure.Management.Compute.Models.ProtocolTypes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.ProtocolTypes
    name: ProtocolTypes
    nameWithType: ProtocolTypes
    fullName: Microsoft.Azure.Management.Compute.Models.ProtocolTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.WinRMListener.Protocol*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.WinRMListener.Protocol
  isExternal: false
  name: Protocol
  nameWithType: WinRMListener.Protocol
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMListener.Protocol
- uid: Microsoft.Azure.Management.Compute.Models.WinRMListener.CertificateUrl*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.WinRMListener.CertificateUrl
  isExternal: false
  name: CertificateUrl
  nameWithType: WinRMListener.CertificateUrl
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMListener.CertificateUrl
