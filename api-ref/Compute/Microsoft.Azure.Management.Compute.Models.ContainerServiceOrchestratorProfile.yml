### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  commentId: T:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  id: ContainerServiceOrchestratorProfile
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes})
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
  langs:
  - csharp
  - vb
  name: ContainerServiceOrchestratorProfile
  nameWithType: ContainerServiceOrchestratorProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContainerServiceOrchestratorProfile
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nProfile for Orchestrator\n"
  example: []
  syntax:
    content: public class ContainerServiceOrchestratorProfile
    content.vb: Public Class ContainerServiceOrchestratorProfile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  langs:
  - csharp
  - vb
  name: ContainerServiceOrchestratorProfile()
  nameWithType: ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile()
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the\nContainerServiceOrchestratorProfile class.\n"
  example: []
  syntax:
    content: public ContainerServiceOrchestratorProfile()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes})
  commentId: M:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes})
  id: '#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes})'
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  langs:
  - csharp
  - vb
  name: ContainerServiceOrchestratorProfile(Nullable<ContainerServiceOchestratorTypes>)
  nameWithType: ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile(Nullable<ContainerServiceOchestratorTypes>)
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile(System.Nullable<Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the\nContainerServiceOrchestratorProfile class.\n"
  example: []
  syntax:
    content: public ContainerServiceOrchestratorProfile(ContainerServiceOchestratorTypes? orchestratorType = null)
    content.vb: Public Sub New(orchestratorType As ContainerServiceOchestratorTypes? = Nothing)
    parameters:
    - id: orchestratorType
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes}
      description: >-
        Specifies what orchestrator will be

        used to manage container cluster resources. Possible values

        include: 'Swarm', 'DCOS'
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor*
  nameWithType.vb: ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile(Nullable(Of ContainerServiceOchestratorTypes))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile(System.Nullable(Of Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes))
  name.vb: ContainerServiceOrchestratorProfile(Nullable(Of ContainerServiceOchestratorTypes))
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
  commentId: P:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
  id: OrchestratorType
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  langs:
  - csharp
  - vb
  name: OrchestratorType
  nameWithType: ContainerServiceOrchestratorProfile.OrchestratorType
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OrchestratorType
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets specifies what orchestrator will be used to manage\ncontainer cluster resources. Possible values include: 'Swarm',\n'DCOS'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "orchestratorType")]

      public ContainerServiceOchestratorTypes? OrchestratorType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="orchestratorType")>

      Public Property OrchestratorType As ContainerServiceOchestratorTypes?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes}
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: orchestratorType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor
  isExternal: false
  name: ContainerServiceOrchestratorProfile
  nameWithType: ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile
- uid: System.Nullable{Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ContainerServiceOchestratorTypes>
  nameWithType: Nullable<ContainerServiceOchestratorTypes>
  fullName: System.Nullable<Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes>
  nameWithType.vb: Nullable(Of ContainerServiceOchestratorTypes)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes)
  name.vb: Nullable(Of ContainerServiceOchestratorTypes)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes
    name: ContainerServiceOchestratorTypes
    nameWithType: ContainerServiceOchestratorTypes
    fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes
    name: ContainerServiceOchestratorTypes
    nameWithType: ContainerServiceOchestratorTypes
    fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
  isExternal: false
  name: OrchestratorType
  nameWithType: ContainerServiceOrchestratorProfile.OrchestratorType
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
