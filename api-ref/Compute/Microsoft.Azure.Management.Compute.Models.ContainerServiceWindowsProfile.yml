### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
  commentId: T:Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
  id: ContainerServiceWindowsProfile
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.#ctor
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.#ctor(System.String,System.String)
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminPassword
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminUsername
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.Validate
  langs:
  - csharp
  - vb
  name: ContainerServiceWindowsProfile
  nameWithType: ContainerServiceWindowsProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContainerServiceWindowsProfile
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nProfile for Windows VMs\n"
  example: []
  syntax:
    content: public class ContainerServiceWindowsProfile
    content.vb: Public Class ContainerServiceWindowsProfile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
  langs:
  - csharp
  - vb
  name: ContainerServiceWindowsProfile()
  nameWithType: ContainerServiceWindowsProfile.ContainerServiceWindowsProfile()
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.ContainerServiceWindowsProfile()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the ContainerServiceWindowsProfile\nclass.\n"
  example: []
  syntax:
    content: public ContainerServiceWindowsProfile()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
  langs:
  - csharp
  - vb
  name: ContainerServiceWindowsProfile(String, String)
  nameWithType: ContainerServiceWindowsProfile.ContainerServiceWindowsProfile(String, String)
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.ContainerServiceWindowsProfile(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the ContainerServiceWindowsProfile\nclass.\n"
  example: []
  syntax:
    content: public ContainerServiceWindowsProfile(string adminUsername, string adminPassword)
    content.vb: Public Sub New(adminUsername As String, adminPassword As String)
    parameters:
    - id: adminUsername
      type: System.String
      description: >-
        The administrator username to use for

        Windows VMs
    - id: adminPassword
      type: System.String
      description: >-
        The administrator password to use for

        Windows VMs
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminUsername
  commentId: P:Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminUsername
  id: AdminUsername
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
  langs:
  - csharp
  - vb
  name: AdminUsername
  nameWithType: ContainerServiceWindowsProfile.AdminUsername
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminUsername
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AdminUsername
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the administrator username to use for Windows VMs\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "adminUsername")]

      public string AdminUsername { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="adminUsername")>

      Public Property AdminUsername As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminUsername*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: adminUsername
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminPassword
  commentId: P:Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminPassword
  id: AdminPassword
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
  langs:
  - csharp
  - vb
  name: AdminPassword
  nameWithType: ContainerServiceWindowsProfile.AdminPassword
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminPassword
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AdminPassword
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the administrator password to use for Windows VMs\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "adminPassword")]

      public string AdminPassword { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="adminPassword")>

      Public Property AdminPassword As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminPassword*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: adminPassword
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.Validate
  commentId: M:Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ContainerServiceWindowsProfile.Validate()
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceWindowsProfile.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.#ctor
  isExternal: false
  name: ContainerServiceWindowsProfile
  nameWithType: ContainerServiceWindowsProfile.ContainerServiceWindowsProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.ContainerServiceWindowsProfile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminUsername*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminUsername
  isExternal: false
  name: AdminUsername
  nameWithType: ContainerServiceWindowsProfile.AdminUsername
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminUsername
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminPassword*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminPassword
  isExternal: false
  name: AdminPassword
  nameWithType: ContainerServiceWindowsProfile.AdminPassword
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.AdminPassword
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.Validate*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.Validate
  isExternal: false
  name: Validate
  nameWithType: ContainerServiceWindowsProfile.Validate
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
