### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  commentId: T:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  id: VirtualMachineExtensionHandlerInstanceView
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor(System.String,System.String,Microsoft.Azure.Management.Compute.Models.InstanceViewStatus)
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensionHandlerInstanceView
  nameWithType: VirtualMachineExtensionHandlerInstanceView
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineExtensionHandlerInstanceView
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nThe instance view of a virtual machine extension handler.\n"
  example: []
  syntax:
    content: public class VirtualMachineExtensionHandlerInstanceView
    content.vb: Public Class VirtualMachineExtensionHandlerInstanceView
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensionHandlerInstanceView()
  nameWithType: VirtualMachineExtensionHandlerInstanceView.VirtualMachineExtensionHandlerInstanceView()
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.VirtualMachineExtensionHandlerInstanceView()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the\nVirtualMachineExtensionHandlerInstanceView class.\n"
  example: []
  syntax:
    content: public VirtualMachineExtensionHandlerInstanceView()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor(System.String,System.String,Microsoft.Azure.Management.Compute.Models.InstanceViewStatus)
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor(System.String,System.String,Microsoft.Azure.Management.Compute.Models.InstanceViewStatus)
  id: '#ctor(System.String,System.String,Microsoft.Azure.Management.Compute.Models.InstanceViewStatus)'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensionHandlerInstanceView(String, String, InstanceViewStatus)
  nameWithType: VirtualMachineExtensionHandlerInstanceView.VirtualMachineExtensionHandlerInstanceView(String, String, InstanceViewStatus)
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.VirtualMachineExtensionHandlerInstanceView(System.String, System.String, Microsoft.Azure.Management.Compute.Models.InstanceViewStatus)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the\nVirtualMachineExtensionHandlerInstanceView class.\n"
  example: []
  syntax:
    content: public VirtualMachineExtensionHandlerInstanceView(string type = null, string typeHandlerVersion = null, InstanceViewStatus status = null)
    content.vb: Public Sub New(type As String = Nothing, typeHandlerVersion As String = Nothing, status As InstanceViewStatus = Nothing)
    parameters:
    - id: type
      type: System.String
      description: >-
        full type of the extension handler which

        includes both publisher and type.
    - id: typeHandlerVersion
      type: System.String
      description: >-
        the type version of the extension

        handler.
    - id: status
      type: Microsoft.Azure.Management.Compute.Models.InstanceViewStatus
      description: the extension handler status.
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type
  id: Type
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: VirtualMachineExtensionHandlerInstanceView.Type
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Type
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets full type of the extension handler which includes\nboth publisher and type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "type")]

      public string Type { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="type")>

      Public Property Type As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
  id: TypeHandlerVersion
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  langs:
  - csharp
  - vb
  name: TypeHandlerVersion
  nameWithType: VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TypeHandlerVersion
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the type version of the extension handler.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "typeHandlerVersion")]

      public string TypeHandlerVersion { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="typeHandlerVersion")>

      Public Property TypeHandlerVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: typeHandlerVersion
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status
  id: Status
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: VirtualMachineExtensionHandlerInstanceView.Status
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the extension handler status.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "status")]

      public InstanceViewStatus Status { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="status")>

      Public Property Status As InstanceViewStatus
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.InstanceViewStatus
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor
  isExternal: false
  name: VirtualMachineExtensionHandlerInstanceView
  nameWithType: VirtualMachineExtensionHandlerInstanceView.VirtualMachineExtensionHandlerInstanceView
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.VirtualMachineExtensionHandlerInstanceView
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Compute.Models.InstanceViewStatus
  commentId: T:Microsoft.Azure.Management.Compute.Models.InstanceViewStatus
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: InstanceViewStatus
  nameWithType: InstanceViewStatus
  fullName: Microsoft.Azure.Management.Compute.Models.InstanceViewStatus
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type
  isExternal: false
  name: Type
  nameWithType: VirtualMachineExtensionHandlerInstanceView.Type
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
  isExternal: false
  name: TypeHandlerVersion
  nameWithType: VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status
  isExternal: false
  name: Status
  nameWithType: VirtualMachineExtensionHandlerInstanceView.Status
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status
