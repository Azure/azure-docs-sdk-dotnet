### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  commentId: T:Microsoft.Azure.Management.Compute.Models.VaultCertificate
  id: VaultCertificate
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor
  - Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor(System.String,System.String)
  - Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore
  - Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl
  langs:
  - csharp
  - vb
  name: VaultCertificate
  nameWithType: VaultCertificate
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultCertificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VaultCertificate
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultCertificate.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nDescribes a single certificate reference in a Key Vault, and where the\ncertificate should reside on the VM.\n"
  example: []
  syntax:
    content: public class VaultCertificate
    content.vb: Public Class VaultCertificate
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  langs:
  - csharp
  - vb
  name: VaultCertificate()
  nameWithType: VaultCertificate.VaultCertificate()
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate.VaultCertificate()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultCertificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultCertificate.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the VaultCertificate class.\n"
  example: []
  syntax:
    content: public VaultCertificate()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  langs:
  - csharp
  - vb
  name: VaultCertificate(String, String)
  nameWithType: VaultCertificate.VaultCertificate(String, String)
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate.VaultCertificate(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultCertificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultCertificate.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the VaultCertificate class.\n"
  example: []
  syntax:
    content: public VaultCertificate(string certificateUrl = null, string certificateStore = null)
    content.vb: Public Sub New(certificateUrl As String = Nothing, certificateStore As String = Nothing)
    parameters:
    - id: certificateUrl
      type: System.String
      description: >-
        the URL referencing a secret in a Key

        Vault which contains a properly formatted certificate.
    - id: certificateStore
      type: System.String
      description: >-
        the Certificate store in

        LocalMachine to add the certificate to on Windows, leave empty on

        Linux.
  overload: Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl
  commentId: P:Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl
  id: CertificateUrl
  parent: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  langs:
  - csharp
  - vb
  name: CertificateUrl
  nameWithType: VaultCertificate.CertificateUrl
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultCertificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateUrl
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultCertificate.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the URL referencing a secret in a Key Vault which\ncontains a properly formatted certificate.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "certificateUrl")]

      public string CertificateUrl { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="certificateUrl")>

      Public Property CertificateUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: certificateUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore
  commentId: P:Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore
  id: CertificateStore
  parent: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  langs:
  - csharp
  - vb
  name: CertificateStore
  nameWithType: VaultCertificate.CertificateStore
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultCertificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateStore
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultCertificate.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the Certificate store in LocalMachine to add the\ncertificate to on Windows, leave empty on Linux.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "certificateStore")]

      public string CertificateStore { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="certificateStore")>

      Public Property CertificateStore As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: certificateStore
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor
  isExternal: false
  name: VaultCertificate
  nameWithType: VaultCertificate.VaultCertificate
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate.VaultCertificate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl
  isExternal: false
  name: CertificateUrl
  nameWithType: VaultCertificate.CertificateUrl
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore
  isExternal: false
  name: CertificateStore
  nameWithType: VaultCertificate.CertificateStore
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore
