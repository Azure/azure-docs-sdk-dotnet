### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent
  commentId: T:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent
  id: AdditionalUnattendContent
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.#ctor
  - Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.PassNames},System.Nullable{Microsoft.Azure.Management.Compute.Models.ComponentNames},System.Nullable{Microsoft.Azure.Management.Compute.Models.SettingNames},System.String)
  - Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.ComponentName
  - Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.Content
  - Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.PassName
  - Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.SettingName
  langs:
  - csharp
  - vb
  name: AdditionalUnattendContent
  nameWithType: AdditionalUnattendContent
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AdditionalUnattendContent
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nadditional XML formatted information that can be included in the\nUnattend.xml file, which is used by Windows Setup. Contents are\ndefined by setting name, component name, and the pass in which the\ncontent is a applied.\n"
  example: []
  syntax:
    content: public class AdditionalUnattendContent
    content.vb: Public Class AdditionalUnattendContent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent
  langs:
  - csharp
  - vb
  name: AdditionalUnattendContent()
  nameWithType: AdditionalUnattendContent.AdditionalUnattendContent()
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.AdditionalUnattendContent()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the AdditionalUnattendContent class.\n"
  example: []
  syntax:
    content: public AdditionalUnattendContent()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.PassNames},System.Nullable{Microsoft.Azure.Management.Compute.Models.ComponentNames},System.Nullable{Microsoft.Azure.Management.Compute.Models.SettingNames},System.String)
  commentId: M:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.PassNames},System.Nullable{Microsoft.Azure.Management.Compute.Models.ComponentNames},System.Nullable{Microsoft.Azure.Management.Compute.Models.SettingNames},System.String)
  id: '#ctor(System.Nullable{Microsoft.Azure.Management.Compute.Models.PassNames},System.Nullable{Microsoft.Azure.Management.Compute.Models.ComponentNames},System.Nullable{Microsoft.Azure.Management.Compute.Models.SettingNames},System.String)'
  parent: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent
  langs:
  - csharp
  - vb
  name: AdditionalUnattendContent(Nullable<PassNames>, Nullable<ComponentNames>, Nullable<SettingNames>, String)
  nameWithType: AdditionalUnattendContent.AdditionalUnattendContent(Nullable<PassNames>, Nullable<ComponentNames>, Nullable<SettingNames>, String)
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.AdditionalUnattendContent(System.Nullable<Microsoft.Azure.Management.Compute.Models.PassNames>, System.Nullable<Microsoft.Azure.Management.Compute.Models.ComponentNames>, System.Nullable<Microsoft.Azure.Management.Compute.Models.SettingNames>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the AdditionalUnattendContent class.\n"
  example: []
  syntax:
    content: public AdditionalUnattendContent(PassNames? passName = null, ComponentNames? componentName = null, SettingNames? settingName = null, string content = null)
    content.vb: Public Sub New(passName As PassNames? = Nothing, componentName As ComponentNames? = Nothing, settingName As SettingNames? = Nothing, content As String = Nothing)
    parameters:
    - id: passName
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.PassNames}
      description: >-
        the pass name. Currently, the only

        allowable value is oobeSystem. Possible values include:

        'oobeSystem'
    - id: componentName
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.ComponentNames}
      description: >-
        the component name. Currently, the

        only allowable value is Microsoft-Windows-Shell-Setup. Possible

        values include: 'Microsoft-Windows-Shell-Setup'
    - id: settingName
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.SettingNames}
      description: >-
        setting name (e.g. FirstLogonCommands,

        AutoLogon ). Possible values include: 'AutoLogon',

        'FirstLogonCommands'
    - id: content
      type: System.String
      description: >-
        XML formatted content that is added to the

        unattend.xml file in the specified pass and component. The XML

        must be less than 4 KB and must include the root element for the

        setting or feature that is being inserted.
  overload: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.#ctor*
  nameWithType.vb: AdditionalUnattendContent.AdditionalUnattendContent(Nullable(Of PassNames), Nullable(Of ComponentNames), Nullable(Of SettingNames), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.AdditionalUnattendContent(System.Nullable(Of Microsoft.Azure.Management.Compute.Models.PassNames), System.Nullable(Of Microsoft.Azure.Management.Compute.Models.ComponentNames), System.Nullable(Of Microsoft.Azure.Management.Compute.Models.SettingNames), System.String)
  name.vb: AdditionalUnattendContent(Nullable(Of PassNames), Nullable(Of ComponentNames), Nullable(Of SettingNames), String)
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.PassName
  commentId: P:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.PassName
  id: PassName
  parent: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent
  langs:
  - csharp
  - vb
  name: PassName
  nameWithType: AdditionalUnattendContent.PassName
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.PassName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PassName
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the pass name. Currently, the only allowable value is\noobeSystem. Possible values include: 'oobeSystem'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "passName")]

      public PassNames? PassName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="passName")>

      Public Property PassName As PassNames?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.PassNames}
  overload: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.PassName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: passName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.ComponentName
  commentId: P:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.ComponentName
  id: ComponentName
  parent: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent
  langs:
  - csharp
  - vb
  name: ComponentName
  nameWithType: AdditionalUnattendContent.ComponentName
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.ComponentName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ComponentName
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the component name. Currently, the only allowable\nvalue is Microsoft-Windows-Shell-Setup. Possible values include:\n'Microsoft-Windows-Shell-Setup'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "componentName")]

      public ComponentNames? ComponentName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="componentName")>

      Public Property ComponentName As ComponentNames?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.ComponentNames}
  overload: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.ComponentName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: componentName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.SettingName
  commentId: P:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.SettingName
  id: SettingName
  parent: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent
  langs:
  - csharp
  - vb
  name: SettingName
  nameWithType: AdditionalUnattendContent.SettingName
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.SettingName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SettingName
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets setting name (e.g. FirstLogonCommands, AutoLogon ).\nPossible values include: 'AutoLogon', 'FirstLogonCommands'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "settingName")]

      public SettingNames? SettingName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="settingName")>

      Public Property SettingName As SettingNames?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.SettingNames}
  overload: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.SettingName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: settingName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.Content
  commentId: P:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.Content
  id: Content
  parent: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: AdditionalUnattendContent.Content
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.Content
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Content
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/AdditionalUnattendContent.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets XML formatted content that is added to the\nunattend.xml file in the specified pass and component. The XML\nmust be less than 4 KB and must include the root element for the\nsetting or feature that is being inserted.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "content")]

      public string Content { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="content")>

      Public Property Content As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.Content*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: content
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.#ctor
  isExternal: false
  name: AdditionalUnattendContent
  nameWithType: AdditionalUnattendContent.AdditionalUnattendContent
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.AdditionalUnattendContent
- uid: System.Nullable{Microsoft.Azure.Management.Compute.Models.PassNames}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Compute.Models.PassNames}
  parent: System
  definition: System.Nullable`1
  name: Nullable<PassNames>
  nameWithType: Nullable<PassNames>
  fullName: System.Nullable<Microsoft.Azure.Management.Compute.Models.PassNames>
  nameWithType.vb: Nullable(Of PassNames)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Compute.Models.PassNames)
  name.vb: Nullable(Of PassNames)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.PassNames
    name: PassNames
    nameWithType: PassNames
    fullName: Microsoft.Azure.Management.Compute.Models.PassNames
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.PassNames
    name: PassNames
    nameWithType: PassNames
    fullName: Microsoft.Azure.Management.Compute.Models.PassNames
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Compute.Models.ComponentNames}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Compute.Models.ComponentNames}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ComponentNames>
  nameWithType: Nullable<ComponentNames>
  fullName: System.Nullable<Microsoft.Azure.Management.Compute.Models.ComponentNames>
  nameWithType.vb: Nullable(Of ComponentNames)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Compute.Models.ComponentNames)
  name.vb: Nullable(Of ComponentNames)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.ComponentNames
    name: ComponentNames
    nameWithType: ComponentNames
    fullName: Microsoft.Azure.Management.Compute.Models.ComponentNames
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.ComponentNames
    name: ComponentNames
    nameWithType: ComponentNames
    fullName: Microsoft.Azure.Management.Compute.Models.ComponentNames
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Compute.Models.SettingNames}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Compute.Models.SettingNames}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SettingNames>
  nameWithType: Nullable<SettingNames>
  fullName: System.Nullable<Microsoft.Azure.Management.Compute.Models.SettingNames>
  nameWithType.vb: Nullable(Of SettingNames)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Compute.Models.SettingNames)
  name.vb: Nullable(Of SettingNames)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.SettingNames
    name: SettingNames
    nameWithType: SettingNames
    fullName: Microsoft.Azure.Management.Compute.Models.SettingNames
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.SettingNames
    name: SettingNames
    nameWithType: SettingNames
    fullName: Microsoft.Azure.Management.Compute.Models.SettingNames
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.PassName*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.PassName
  isExternal: false
  name: PassName
  nameWithType: AdditionalUnattendContent.PassName
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.PassName
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.ComponentName*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.ComponentName
  isExternal: false
  name: ComponentName
  nameWithType: AdditionalUnattendContent.ComponentName
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.ComponentName
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.SettingName*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.SettingName
  isExternal: false
  name: SettingName
  nameWithType: AdditionalUnattendContent.SettingName
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.SettingName
- uid: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.Content*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.Content
  isExternal: false
  name: Content
  nameWithType: AdditionalUnattendContent.Content
  fullName: Microsoft.Azure.Management.Compute.Models.AdditionalUnattendContent.Content
