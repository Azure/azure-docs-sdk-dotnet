### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration
  commentId: T:Microsoft.Azure.Management.Compute.Models.WinRMConfiguration
  id: WinRMConfiguration
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.#ctor
  - Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.WinRMListener})
  - Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.Listeners
  langs:
  - csharp
  - vb
  name: WinRMConfiguration
  nameWithType: WinRMConfiguration
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WinRMConfiguration
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMConfiguration.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nDescribes Windows Remote Management configuration of the VM\n"
  example: []
  syntax:
    content: public class WinRMConfiguration
    content.vb: Public Class WinRMConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration
  langs:
  - csharp
  - vb
  name: WinRMConfiguration()
  nameWithType: WinRMConfiguration.WinRMConfiguration()
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.WinRMConfiguration()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMConfiguration.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the WinRMConfiguration class.\n"
  example: []
  syntax:
    content: public WinRMConfiguration()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.WinRMListener})
  commentId: M:Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.WinRMListener})
  id: '#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.WinRMListener})'
  parent: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration
  langs:
  - csharp
  - vb
  name: WinRMConfiguration(IList<WinRMListener>)
  nameWithType: WinRMConfiguration.WinRMConfiguration(IList<WinRMListener>)
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.WinRMConfiguration(System.Collections.Generic.IList<Microsoft.Azure.Management.Compute.Models.WinRMListener>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMConfiguration.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the WinRMConfiguration class.\n"
  example: []
  syntax:
    content: public WinRMConfiguration(IList<WinRMListener> listeners = null)
    content.vb: Public Sub New(listeners As IList(Of WinRMListener) = Nothing)
    parameters:
    - id: listeners
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.WinRMListener}
      description: >-
        the list of Windows Remote Management

        listeners
  overload: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.#ctor*
  nameWithType.vb: WinRMConfiguration.WinRMConfiguration(IList(Of WinRMListener))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.WinRMConfiguration(System.Collections.Generic.IList(Of Microsoft.Azure.Management.Compute.Models.WinRMListener))
  name.vb: WinRMConfiguration(IList(Of WinRMListener))
- uid: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.Listeners
  commentId: P:Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.Listeners
  id: Listeners
  parent: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration
  langs:
  - csharp
  - vb
  name: Listeners
  nameWithType: WinRMConfiguration.Listeners
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.Listeners
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Listeners
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/WinRMConfiguration.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the list of Windows Remote Management listeners\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "listeners")]

      public IList<WinRMListener> Listeners { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="listeners")>

      Public Property Listeners As IList(Of WinRMListener)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.WinRMListener}
  overload: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.Listeners*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: listeners
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.#ctor
  isExternal: false
  name: WinRMConfiguration
  nameWithType: WinRMConfiguration.WinRMConfiguration
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.WinRMConfiguration
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.WinRMListener}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.WinRMListener}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<WinRMListener>
  nameWithType: IList<WinRMListener>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Compute.Models.WinRMListener>
  nameWithType.vb: IList(Of WinRMListener)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Compute.Models.WinRMListener)
  name.vb: IList(Of WinRMListener)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.WinRMListener
    name: WinRMListener
    nameWithType: WinRMListener
    fullName: Microsoft.Azure.Management.Compute.Models.WinRMListener
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.WinRMListener
    name: WinRMListener
    nameWithType: WinRMListener
    fullName: Microsoft.Azure.Management.Compute.Models.WinRMListener
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.Listeners*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.Listeners
  isExternal: false
  name: Listeners
  nameWithType: WinRMConfiguration.Listeners
  fullName: Microsoft.Azure.Management.Compute.Models.WinRMConfiguration.Listeners
