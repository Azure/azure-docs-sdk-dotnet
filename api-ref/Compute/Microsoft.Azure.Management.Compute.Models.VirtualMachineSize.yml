### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  commentId: T:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  id: VirtualMachineSize
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OsDiskSizeInMB
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB
  langs:
  - csharp
  - vb
  name: VirtualMachineSize
  nameWithType: VirtualMachineSize
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineSize
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nDescribes the properties of a VM size.\n"
  example: []
  syntax:
    content: public class VirtualMachineSize
    content.vb: Public Class VirtualMachineSize
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: VirtualMachineSize()
  nameWithType: VirtualMachineSize.VirtualMachineSize()
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.VirtualMachineSize()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the VirtualMachineSize class.\n"
  example: []
  syntax:
    content: public VirtualMachineSize()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: '#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: VirtualMachineSize(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>)
  nameWithType: VirtualMachineSize.VirtualMachineSize(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>)
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.VirtualMachineSize(System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the VirtualMachineSize class.\n"
  example: []
  syntax:
    content: public VirtualMachineSize(string name = null, int ? numberOfCores = null, int ? osDiskSizeInMB = null, int ? resourceDiskSizeInMB = null, int ? memoryInMB = null, int ? maxDataDiskCount = null)
    content.vb: Public Sub New(name As String = Nothing, numberOfCores As Integer? = Nothing, osDiskSizeInMB As Integer? = Nothing, resourceDiskSizeInMB As Integer? = Nothing, memoryInMB As Integer? = Nothing, maxDataDiskCount As Integer? = Nothing)
    parameters:
    - id: name
      type: System.String
      description: the VM size name.
    - id: numberOfCores
      type: System.Nullable{System.Int32}
      description: >-
        the Number of cores supported by a VM

        size.
    - id: osDiskSizeInMB
      type: System.Nullable{System.Int32}
      description: >-
        the OS disk size allowed by a VM

        size.
    - id: resourceDiskSizeInMB
      type: System.Nullable{System.Int32}
      description: >-
        the Resource disk size allowed

        by a VM size.
    - id: memoryInMB
      type: System.Nullable{System.Int32}
      description: >-
        the Memory size supported by a VM

        size.
    - id: maxDataDiskCount
      type: System.Nullable{System.Int32}
      description: >-
        the Maximum number of data disks

        allowed by a VM size.
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor*
  nameWithType.vb: VirtualMachineSize.VirtualMachineSize(String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.VirtualMachineSize(System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  name.vb: VirtualMachineSize(String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32))
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name
  id: Name
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: VirtualMachineSize.Name
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the VM size name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores
  id: NumberOfCores
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: NumberOfCores
  nameWithType: VirtualMachineSize.NumberOfCores
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NumberOfCores
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the Number of cores supported by a VM size.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "numberOfCores")]

      public int ? NumberOfCores { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="numberOfCores")>

      Public Property NumberOfCores As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: numberOfCores
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OsDiskSizeInMB
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OsDiskSizeInMB
  id: OsDiskSizeInMB
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: OsDiskSizeInMB
  nameWithType: VirtualMachineSize.OsDiskSizeInMB
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OsDiskSizeInMB
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OsDiskSizeInMB
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the OS disk size allowed by a VM size.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "osDiskSizeInMB")]

      public int ? OsDiskSizeInMB { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="osDiskSizeInMB")>

      Public Property OsDiskSizeInMB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OsDiskSizeInMB*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: osDiskSizeInMB
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB
  id: ResourceDiskSizeInMB
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: ResourceDiskSizeInMB
  nameWithType: VirtualMachineSize.ResourceDiskSizeInMB
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceDiskSizeInMB
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the Resource disk size allowed by a VM size.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "resourceDiskSizeInMB")]

      public int ? ResourceDiskSizeInMB { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="resourceDiskSizeInMB")>

      Public Property ResourceDiskSizeInMB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: resourceDiskSizeInMB
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB
  id: MemoryInMB
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: MemoryInMB
  nameWithType: VirtualMachineSize.MemoryInMB
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MemoryInMB
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the Memory size supported by a VM size.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "memoryInMB")]

      public int ? MemoryInMB { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="memoryInMB")>

      Public Property MemoryInMB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: memoryInMB
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount
  id: MaxDataDiskCount
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: MaxDataDiskCount
  nameWithType: VirtualMachineSize.MaxDataDiskCount
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxDataDiskCount
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineSize.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the Maximum number of data disks allowed by a VM size.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "maxDataDiskCount")]

      public int ? MaxDataDiskCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="maxDataDiskCount")>

      Public Property MaxDataDiskCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: maxDataDiskCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor
  isExternal: false
  name: VirtualMachineSize
  nameWithType: VirtualMachineSize.VirtualMachineSize
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.VirtualMachineSize
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name
  isExternal: false
  name: Name
  nameWithType: VirtualMachineSize.Name
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores
  isExternal: false
  name: NumberOfCores
  nameWithType: VirtualMachineSize.NumberOfCores
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OsDiskSizeInMB*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OsDiskSizeInMB
  isExternal: false
  name: OsDiskSizeInMB
  nameWithType: VirtualMachineSize.OsDiskSizeInMB
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OsDiskSizeInMB
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB
  isExternal: false
  name: ResourceDiskSizeInMB
  nameWithType: VirtualMachineSize.ResourceDiskSizeInMB
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB
  isExternal: false
  name: MemoryInMB
  nameWithType: VirtualMachineSize.MemoryInMB
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount
  isExternal: false
  name: MaxDataDiskCount
  nameWithType: VirtualMachineSize.MaxDataDiskCount
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount
