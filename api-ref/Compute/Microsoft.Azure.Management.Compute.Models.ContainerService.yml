### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService
  commentId: T:Microsoft.Azure.Management.Compute.Models.ContainerService
  id: ContainerService
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.ContainerService.#ctor
  - Microsoft.Azure.Management.Compute.Models.ContainerService.#ctor(System.String,Microsoft.Azure.Management.Compute.Models.ContainerServiceMasterProfile,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile},Microsoft.Azure.Management.Compute.Models.ContainerServiceLinuxProfile,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile,Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile,Microsoft.Azure.Management.Compute.Models.ContainerServiceDiagnosticsProfile)
  - Microsoft.Azure.Management.Compute.Models.ContainerService.AgentPoolProfiles
  - Microsoft.Azure.Management.Compute.Models.ContainerService.DiagnosticsProfile
  - Microsoft.Azure.Management.Compute.Models.ContainerService.LinuxProfile
  - Microsoft.Azure.Management.Compute.Models.ContainerService.MasterProfile
  - Microsoft.Azure.Management.Compute.Models.ContainerService.OrchestratorProfile
  - Microsoft.Azure.Management.Compute.Models.ContainerService.ProvisioningState
  - Microsoft.Azure.Management.Compute.Models.ContainerService.Validate
  - Microsoft.Azure.Management.Compute.Models.ContainerService.WindowsProfile
  langs:
  - csharp
  - vb
  name: ContainerService
  nameWithType: ContainerService
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContainerService
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nContainer service\n"
  example: []
  syntax:
    content: 'public class ContainerService : Resource, IResource'
    content.vb: >-
      Public Class ContainerService
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Compute.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Compute.Models.Resource.Id
  - Microsoft.Azure.Management.Compute.Models.Resource.Name
  - Microsoft.Azure.Management.Compute.Models.Resource.Type
  - Microsoft.Azure.Management.Compute.Models.Resource.Location
  - Microsoft.Azure.Management.Compute.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.ContainerService.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.ContainerService
  langs:
  - csharp
  - vb
  name: ContainerService()
  nameWithType: ContainerService.ContainerService()
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.ContainerService()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the ContainerService class.\n"
  example: []
  syntax:
    content: public ContainerService()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.ContainerService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.#ctor(System.String,Microsoft.Azure.Management.Compute.Models.ContainerServiceMasterProfile,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile},Microsoft.Azure.Management.Compute.Models.ContainerServiceLinuxProfile,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile,Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile,Microsoft.Azure.Management.Compute.Models.ContainerServiceDiagnosticsProfile)
  commentId: M:Microsoft.Azure.Management.Compute.Models.ContainerService.#ctor(System.String,Microsoft.Azure.Management.Compute.Models.ContainerServiceMasterProfile,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile},Microsoft.Azure.Management.Compute.Models.ContainerServiceLinuxProfile,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile,Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile,Microsoft.Azure.Management.Compute.Models.ContainerServiceDiagnosticsProfile)
  id: '#ctor(System.String,Microsoft.Azure.Management.Compute.Models.ContainerServiceMasterProfile,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile},Microsoft.Azure.Management.Compute.Models.ContainerServiceLinuxProfile,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile,Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile,Microsoft.Azure.Management.Compute.Models.ContainerServiceDiagnosticsProfile)'
  parent: Microsoft.Azure.Management.Compute.Models.ContainerService
  langs:
  - csharp
  - vb
  name: ContainerService(String, ContainerServiceMasterProfile, IList<ContainerServiceAgentPoolProfile>, ContainerServiceLinuxProfile, String, String, String, IDictionary<String, String>, String, ContainerServiceOrchestratorProfile, ContainerServiceWindowsProfile, ContainerServiceDiagnosticsProfile)
  nameWithType: ContainerService.ContainerService(String, ContainerServiceMasterProfile, IList<ContainerServiceAgentPoolProfile>, ContainerServiceLinuxProfile, String, String, String, IDictionary<String, String>, String, ContainerServiceOrchestratorProfile, ContainerServiceWindowsProfile, ContainerServiceDiagnosticsProfile)
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.ContainerService(System.String, Microsoft.Azure.Management.Compute.Models.ContainerServiceMasterProfile, System.Collections.Generic.IList<Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile>, Microsoft.Azure.Management.Compute.Models.ContainerServiceLinuxProfile, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.String, Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile, Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile, Microsoft.Azure.Management.Compute.Models.ContainerServiceDiagnosticsProfile)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the ContainerService class.\n"
  example: []
  syntax:
    content: public ContainerService(string location, ContainerServiceMasterProfile masterProfile, IList<ContainerServiceAgentPoolProfile> agentPoolProfiles, ContainerServiceLinuxProfile linuxProfile, string id = null, string name = null, string type = null, IDictionary<string, string> tags = null, string provisioningState = null, ContainerServiceOrchestratorProfile orchestratorProfile = null, ContainerServiceWindowsProfile windowsProfile = null, ContainerServiceDiagnosticsProfile diagnosticsProfile = null)
    content.vb: Public Sub New(location As String, masterProfile As ContainerServiceMasterProfile, agentPoolProfiles As IList(Of ContainerServiceAgentPoolProfile), linuxProfile As ContainerServiceLinuxProfile, id As String = Nothing, name As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, provisioningState As String = Nothing, orchestratorProfile As ContainerServiceOrchestratorProfile = Nothing, windowsProfile As ContainerServiceWindowsProfile = Nothing, diagnosticsProfile As ContainerServiceDiagnosticsProfile = Nothing)
    parameters:
    - id: location
      type: System.String
      description: Resource location
    - id: masterProfile
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceMasterProfile
      description: Properties of master agents
    - id: agentPoolProfiles
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile}
      description: Properties of agent pools
    - id: linuxProfile
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceLinuxProfile
      description: Properties for Linux VMs
    - id: id
      type: System.String
      description: Resource Id
    - id: name
      type: System.String
      description: Resource name
    - id: type
      type: System.String
      description: Resource type
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Resource tags
    - id: provisioningState
      type: System.String
      description: >-
        the provisioning state, which only

        appears in the response.
    - id: orchestratorProfile
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
      description: >-
        Properties of

        orchestrator
    - id: windowsProfile
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
      description: Properties of Windows VMs
    - id: diagnosticsProfile
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceDiagnosticsProfile
      description: >-
        Properties for Diagnostic

        Agent
  overload: Microsoft.Azure.Management.Compute.Models.ContainerService.#ctor*
  nameWithType.vb: ContainerService.ContainerService(String, ContainerServiceMasterProfile, IList(Of ContainerServiceAgentPoolProfile), ContainerServiceLinuxProfile, String, String, String, IDictionary(Of String, String), String, ContainerServiceOrchestratorProfile, ContainerServiceWindowsProfile, ContainerServiceDiagnosticsProfile)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Compute.Models.ContainerService.ContainerService(System.String, Microsoft.Azure.Management.Compute.Models.ContainerServiceMasterProfile, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile), Microsoft.Azure.Management.Compute.Models.ContainerServiceLinuxProfile, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile, Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile, Microsoft.Azure.Management.Compute.Models.ContainerServiceDiagnosticsProfile)
  name.vb: ContainerService(String, ContainerServiceMasterProfile, IList(Of ContainerServiceAgentPoolProfile), ContainerServiceLinuxProfile, String, String, String, IDictionary(Of String, String), String, ContainerServiceOrchestratorProfile, ContainerServiceWindowsProfile, ContainerServiceDiagnosticsProfile)
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Compute.Models.ContainerService.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Compute.Models.ContainerService
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: ContainerService.ProvisioningState
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets the provisioning state, which only appears in the response.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public ReadOnly Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.ContainerService.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.OrchestratorProfile
  commentId: P:Microsoft.Azure.Management.Compute.Models.ContainerService.OrchestratorProfile
  id: OrchestratorProfile
  parent: Microsoft.Azure.Management.Compute.Models.ContainerService
  langs:
  - csharp
  - vb
  name: OrchestratorProfile
  nameWithType: ContainerService.OrchestratorProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.OrchestratorProfile
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OrchestratorProfile
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets properties of orchestrator\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.orchestratorProfile")]

      public ContainerServiceOrchestratorProfile OrchestratorProfile { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.orchestratorProfile")>

      Public Property OrchestratorProfile As ContainerServiceOrchestratorProfile
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  overload: Microsoft.Azure.Management.Compute.Models.ContainerService.OrchestratorProfile*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.orchestratorProfile
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.MasterProfile
  commentId: P:Microsoft.Azure.Management.Compute.Models.ContainerService.MasterProfile
  id: MasterProfile
  parent: Microsoft.Azure.Management.Compute.Models.ContainerService
  langs:
  - csharp
  - vb
  name: MasterProfile
  nameWithType: ContainerService.MasterProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.MasterProfile
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MasterProfile
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets properties of master agents\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.masterProfile")]

      public ContainerServiceMasterProfile MasterProfile { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.masterProfile")>

      Public Property MasterProfile As ContainerServiceMasterProfile
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceMasterProfile
  overload: Microsoft.Azure.Management.Compute.Models.ContainerService.MasterProfile*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.masterProfile
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.AgentPoolProfiles
  commentId: P:Microsoft.Azure.Management.Compute.Models.ContainerService.AgentPoolProfiles
  id: AgentPoolProfiles
  parent: Microsoft.Azure.Management.Compute.Models.ContainerService
  langs:
  - csharp
  - vb
  name: AgentPoolProfiles
  nameWithType: ContainerService.AgentPoolProfiles
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.AgentPoolProfiles
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AgentPoolProfiles
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets properties of agent pools\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.agentPoolProfiles")]

      public IList<ContainerServiceAgentPoolProfile> AgentPoolProfiles { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.agentPoolProfiles")>

      Public Property AgentPoolProfiles As IList(Of ContainerServiceAgentPoolProfile)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile}
  overload: Microsoft.Azure.Management.Compute.Models.ContainerService.AgentPoolProfiles*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.agentPoolProfiles
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.WindowsProfile
  commentId: P:Microsoft.Azure.Management.Compute.Models.ContainerService.WindowsProfile
  id: WindowsProfile
  parent: Microsoft.Azure.Management.Compute.Models.ContainerService
  langs:
  - csharp
  - vb
  name: WindowsProfile
  nameWithType: ContainerService.WindowsProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.WindowsProfile
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WindowsProfile
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets properties of Windows VMs\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.windowsProfile")]

      public ContainerServiceWindowsProfile WindowsProfile { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.windowsProfile")>

      Public Property WindowsProfile As ContainerServiceWindowsProfile
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
  overload: Microsoft.Azure.Management.Compute.Models.ContainerService.WindowsProfile*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.windowsProfile
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.LinuxProfile
  commentId: P:Microsoft.Azure.Management.Compute.Models.ContainerService.LinuxProfile
  id: LinuxProfile
  parent: Microsoft.Azure.Management.Compute.Models.ContainerService
  langs:
  - csharp
  - vb
  name: LinuxProfile
  nameWithType: ContainerService.LinuxProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.LinuxProfile
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LinuxProfile
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets properties for Linux VMs\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.linuxProfile")]

      public ContainerServiceLinuxProfile LinuxProfile { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.linuxProfile")>

      Public Property LinuxProfile As ContainerServiceLinuxProfile
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceLinuxProfile
  overload: Microsoft.Azure.Management.Compute.Models.ContainerService.LinuxProfile*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.linuxProfile
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.DiagnosticsProfile
  commentId: P:Microsoft.Azure.Management.Compute.Models.ContainerService.DiagnosticsProfile
  id: DiagnosticsProfile
  parent: Microsoft.Azure.Management.Compute.Models.ContainerService
  langs:
  - csharp
  - vb
  name: DiagnosticsProfile
  nameWithType: ContainerService.DiagnosticsProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.DiagnosticsProfile
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DiagnosticsProfile
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets properties for Diagnostic Agent\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.diagnosticsProfile")]

      public ContainerServiceDiagnosticsProfile DiagnosticsProfile { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.diagnosticsProfile")>

      Public Property DiagnosticsProfile As ContainerServiceDiagnosticsProfile
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceDiagnosticsProfile
  overload: Microsoft.Azure.Management.Compute.Models.ContainerService.DiagnosticsProfile*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.diagnosticsProfile
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.Validate
  commentId: M:Microsoft.Azure.Management.Compute.Models.ContainerService.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Compute.Models.ContainerService
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ContainerService.Validate()
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerService.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.Compute.Models.Resource.Validate
  overload: Microsoft.Azure.Management.Compute.Models.ContainerService.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Compute.Models.Resource
  commentId: T:Microsoft.Azure.Management.Compute.Models.Resource
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.Compute.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.Compute.Models.Resource.Id
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Id
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.Compute.Models.Resource.Name
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Name
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.Compute.Models.Resource.Type
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Type
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.Compute.Models.Resource.Location
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Location
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.Compute.Models.Resource.Tags
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerService.#ctor
  isExternal: false
  name: ContainerService
  nameWithType: ContainerService.ContainerService
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.ContainerService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceMasterProfile
  commentId: T:Microsoft.Azure.Management.Compute.Models.ContainerServiceMasterProfile
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: ContainerServiceMasterProfile
  nameWithType: ContainerServiceMasterProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceMasterProfile
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ContainerServiceAgentPoolProfile>
  nameWithType: IList<ContainerServiceAgentPoolProfile>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile>
  nameWithType.vb: IList(Of ContainerServiceAgentPoolProfile)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile)
  name.vb: IList(Of ContainerServiceAgentPoolProfile)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile
    name: ContainerServiceAgentPoolProfile
    nameWithType: ContainerServiceAgentPoolProfile
    fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile
    name: ContainerServiceAgentPoolProfile
    nameWithType: ContainerServiceAgentPoolProfile
    fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceAgentPoolProfile
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceLinuxProfile
  commentId: T:Microsoft.Azure.Management.Compute.Models.ContainerServiceLinuxProfile
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: ContainerServiceLinuxProfile
  nameWithType: ContainerServiceLinuxProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceLinuxProfile
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  commentId: T:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: ContainerServiceOrchestratorProfile
  nameWithType: ContainerServiceOrchestratorProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
  commentId: T:Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: ContainerServiceWindowsProfile
  nameWithType: ContainerServiceWindowsProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceWindowsProfile
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceDiagnosticsProfile
  commentId: T:Microsoft.Azure.Management.Compute.Models.ContainerServiceDiagnosticsProfile
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: ContainerServiceDiagnosticsProfile
  nameWithType: ContainerServiceDiagnosticsProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceDiagnosticsProfile
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerService.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: ContainerService.ProvisioningState
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.ProvisioningState
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.OrchestratorProfile*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerService.OrchestratorProfile
  isExternal: false
  name: OrchestratorProfile
  nameWithType: ContainerService.OrchestratorProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.OrchestratorProfile
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.MasterProfile*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerService.MasterProfile
  isExternal: false
  name: MasterProfile
  nameWithType: ContainerService.MasterProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.MasterProfile
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.AgentPoolProfiles*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerService.AgentPoolProfiles
  isExternal: false
  name: AgentPoolProfiles
  nameWithType: ContainerService.AgentPoolProfiles
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.AgentPoolProfiles
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.WindowsProfile*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerService.WindowsProfile
  isExternal: false
  name: WindowsProfile
  nameWithType: ContainerService.WindowsProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.WindowsProfile
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.LinuxProfile*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerService.LinuxProfile
  isExternal: false
  name: LinuxProfile
  nameWithType: ContainerService.LinuxProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.LinuxProfile
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.DiagnosticsProfile*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerService.DiagnosticsProfile
  isExternal: false
  name: DiagnosticsProfile
  nameWithType: ContainerService.DiagnosticsProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.DiagnosticsProfile
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.Compute.Models.Resource.Validate
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Compute.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.Compute.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Compute.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.Compute.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.ContainerService.Validate*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerService.Validate
  isExternal: false
  name: Validate
  nameWithType: ContainerService.Validate
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerService.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
