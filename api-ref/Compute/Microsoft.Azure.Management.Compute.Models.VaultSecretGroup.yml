### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup
  commentId: T:Microsoft.Azure.Management.Compute.Models.VaultSecretGroup
  id: VaultSecretGroup
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.#ctor
  - Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.#ctor(Microsoft.Azure.Management.Compute.Models.SubResource,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultCertificate})
  - Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.SourceVault
  - Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultCertificates
  langs:
  - csharp
  - vb
  name: VaultSecretGroup
  nameWithType: VaultSecretGroup
  fullName: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultSecretGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VaultSecretGroup
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultSecretGroup.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nDescribes a set of certificates which are all in the same Key Vault.\n"
  example: []
  syntax:
    content: public class VaultSecretGroup
    content.vb: Public Class VaultSecretGroup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup
  langs:
  - csharp
  - vb
  name: VaultSecretGroup()
  nameWithType: VaultSecretGroup.VaultSecretGroup()
  fullName: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultSecretGroup()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultSecretGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultSecretGroup.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the VaultSecretGroup class.\n"
  example: []
  syntax:
    content: public VaultSecretGroup()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.#ctor(Microsoft.Azure.Management.Compute.Models.SubResource,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultCertificate})
  commentId: M:Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.#ctor(Microsoft.Azure.Management.Compute.Models.SubResource,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultCertificate})
  id: '#ctor(Microsoft.Azure.Management.Compute.Models.SubResource,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultCertificate})'
  parent: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup
  langs:
  - csharp
  - vb
  name: VaultSecretGroup(SubResource, IList<VaultCertificate>)
  nameWithType: VaultSecretGroup.VaultSecretGroup(SubResource, IList<VaultCertificate>)
  fullName: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultSecretGroup(Microsoft.Azure.Management.Compute.Models.SubResource, System.Collections.Generic.IList<Microsoft.Azure.Management.Compute.Models.VaultCertificate>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultSecretGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultSecretGroup.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the VaultSecretGroup class.\n"
  example: []
  syntax:
    content: public VaultSecretGroup(SubResource sourceVault = null, IList<VaultCertificate> vaultCertificates = null)
    content.vb: Public Sub New(sourceVault As SubResource = Nothing, vaultCertificates As IList(Of VaultCertificate) = Nothing)
    parameters:
    - id: sourceVault
      type: Microsoft.Azure.Management.Compute.Models.SubResource
      description: >-
        the Relative URL of the Key Vault

        containing all of the certificates in VaultCertificates.
    - id: vaultCertificates
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultCertificate}
      description: >-
        the list of key vault references

        in SourceVault which contain certificates
  overload: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.#ctor*
  nameWithType.vb: VaultSecretGroup.VaultSecretGroup(SubResource, IList(Of VaultCertificate))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultSecretGroup(Microsoft.Azure.Management.Compute.Models.SubResource, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Compute.Models.VaultCertificate))
  name.vb: VaultSecretGroup(SubResource, IList(Of VaultCertificate))
- uid: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.SourceVault
  commentId: P:Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.SourceVault
  id: SourceVault
  parent: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup
  langs:
  - csharp
  - vb
  name: SourceVault
  nameWithType: VaultSecretGroup.SourceVault
  fullName: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.SourceVault
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultSecretGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SourceVault
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultSecretGroup.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the Relative URL of the Key Vault containing all of\nthe certificates in VaultCertificates.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sourceVault")]

      public SubResource SourceVault { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sourceVault")>

      Public Property SourceVault As SubResource
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.SubResource
  overload: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.SourceVault*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sourceVault
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultCertificates
  commentId: P:Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultCertificates
  id: VaultCertificates
  parent: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup
  langs:
  - csharp
  - vb
  name: VaultCertificates
  nameWithType: VaultSecretGroup.VaultCertificates
  fullName: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultCertificates
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultSecretGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VaultCertificates
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VaultSecretGroup.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the list of key vault references in SourceVault which\ncontain certificates\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "vaultCertificates")]

      public IList<VaultCertificate> VaultCertificates { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="vaultCertificates")>

      Public Property VaultCertificates As IList(Of VaultCertificate)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultCertificate}
  overload: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultCertificates*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: vaultCertificates
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.#ctor
  isExternal: false
  name: VaultSecretGroup
  nameWithType: VaultSecretGroup.VaultSecretGroup
  fullName: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultSecretGroup
- uid: Microsoft.Azure.Management.Compute.Models.SubResource
  commentId: T:Microsoft.Azure.Management.Compute.Models.SubResource
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: SubResource
  nameWithType: SubResource
  fullName: Microsoft.Azure.Management.Compute.Models.SubResource
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultCertificate}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultCertificate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<VaultCertificate>
  nameWithType: IList<VaultCertificate>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Compute.Models.VaultCertificate>
  nameWithType.vb: IList(Of VaultCertificate)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Compute.Models.VaultCertificate)
  name.vb: IList(Of VaultCertificate)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate
    name: VaultCertificate
    nameWithType: VaultCertificate
    fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate
    name: VaultCertificate
    nameWithType: VaultCertificate
    fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.SourceVault*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.SourceVault
  isExternal: false
  name: SourceVault
  nameWithType: VaultSecretGroup.SourceVault
  fullName: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.SourceVault
- uid: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultCertificates*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultCertificates
  isExternal: false
  name: VaultCertificates
  nameWithType: VaultSecretGroup.VaultCertificates
  fullName: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup.VaultCertificates
