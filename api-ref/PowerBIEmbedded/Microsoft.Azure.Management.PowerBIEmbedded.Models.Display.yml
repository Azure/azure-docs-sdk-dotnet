### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display
  commentId: T:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display
  id: Display
  parent: Microsoft.Azure.Management.PowerBIEmbedded.Models
  children:
  - Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.#ctor
  - Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.#ctor(System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Description
  - Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Operation
  - Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Origin
  - Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Provider
  - Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Resource
  langs:
  - csharp
  - vb
  name: Display
  nameWithType: Display
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display
  type: Class
  source:
    remote:
      path: src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Display
    path: src/azure-sdk-for-net/src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Management.PowerBIEmbedded
  namespace: Microsoft.Azure.Management.PowerBIEmbedded.Models
  syntax:
    content: public class Display
    content.vb: Public Class Display
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.#ctor
  commentId: M:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display
  langs:
  - csharp
  - vb
  name: Display()
  nameWithType: Display.Display()
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Display()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.PowerBIEmbedded
  namespace: Microsoft.Azure.Management.PowerBIEmbedded.Models
  summary: "\nInitializes a new instance of the Display class.\n"
  example: []
  syntax:
    content: public Display()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display
  langs:
  - csharp
  - vb
  name: Display(String, String, String, String, String)
  nameWithType: Display.Display(String, String, String, String, String)
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Display(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.PowerBIEmbedded
  namespace: Microsoft.Azure.Management.PowerBIEmbedded.Models
  summary: "\nInitializes a new instance of the Display class.\n"
  example: []
  syntax:
    content: public Display(string provider = null, string resource = null, string operation = null, string description = null, string origin = null)
    content.vb: Public Sub New(provider As String = Nothing, resource As String = Nothing, operation As String = Nothing, description As String = Nothing, origin As String = Nothing)
    parameters:
    - id: provider
      type: System.String
    - id: resource
      type: System.String
    - id: operation
      type: System.String
    - id: description
      type: System.String
    - id: origin
      type: System.String
  overload: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Provider
  commentId: P:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Provider
  id: Provider
  parent: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: Display.Provider
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Provider
  type: Property
  source:
    remote:
      path: src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Provider
    path: src/azure-sdk-for-net/src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.PowerBIEmbedded
  namespace: Microsoft.Azure.Management.PowerBIEmbedded.Models
  summary: "\nGets or sets the localized friendly form of the resource provider\nname – it is expected to also include the publisher/company\nresponsible. It should use Title Casing and begin with\n“Microsoft” for 1st party services.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "provider")]

      public string Provider { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="provider")>

      Public Property Provider As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Provider*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: provider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Resource
  commentId: P:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Resource
  id: Resource
  parent: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display
  langs:
  - csharp
  - vb
  name: Resource
  nameWithType: Display.Resource
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Resource
  type: Property
  source:
    remote:
      path: src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Resource
    path: src/azure-sdk-for-net/src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.PowerBIEmbedded
  namespace: Microsoft.Azure.Management.PowerBIEmbedded.Models
  summary: "\nGets or sets the localized friendly form of the resource type\nrelated to this action/operation – it should match the public\ndocumentation for the resource provider. It should use Title\nCasing – for examples, please refer to the “name” section.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "resource")]

      public string Resource { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="resource")>

      Public Property Resource As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Resource*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: resource
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Operation
  commentId: P:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Operation
  id: Operation
  parent: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display
  langs:
  - csharp
  - vb
  name: Operation
  nameWithType: Display.Operation
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Operation
  type: Property
  source:
    remote:
      path: src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Operation
    path: src/azure-sdk-for-net/src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.PowerBIEmbedded
  namespace: Microsoft.Azure.Management.PowerBIEmbedded.Models
  summary: "\nGets or sets the localized friendly name for the operation, as it\nshould be shown to the user. It should be concise (to fit in drop\ndowns) but clear (i.e. self-documenting). It should use Title\nCasing and include the entity/resource to which it applies.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "operation")]

      public string Operation { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="operation")>

      Public Property Operation As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Operation*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: operation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Description
  commentId: P:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Description
  id: Description
  parent: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Display.Description
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Description
  type: Property
  source:
    remote:
      path: src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Description
    path: src/azure-sdk-for-net/src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.PowerBIEmbedded
  namespace: Microsoft.Azure.Management.PowerBIEmbedded.Models
  summary: "\nGets or sets the localized friendly description for the operation,\nas it should be shown to the user. It should be thorough, yet\nconcise – it will be used in tool tips and detailed views.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "description")]

      public string Description { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="description")>

      Public Property Description As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Description*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Origin
  commentId: P:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Origin
  id: Origin
  parent: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: Display.Origin
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Origin
  type: Property
  source:
    remote:
      path: src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Origin
    path: src/azure-sdk-for-net/src/ResourceManagement/PowerBIEmbedded/Microsoft.Azure.Management.PowerBIEmbedded/Generated/Models/Display.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.PowerBIEmbedded
  namespace: Microsoft.Azure.Management.PowerBIEmbedded.Models
  summary: "\nGets or sets the intended executor of the operation; governs the\ndisplay of the operation in the RBAC UX and the audit logs UX.\nDefault value is 'user,system'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "origin")]

      public string Origin { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="origin")>

      Public Property Origin As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Origin*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: origin
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models
  commentId: N:Microsoft.Azure.Management.PowerBIEmbedded.Models
  isExternal: false
  name: Microsoft.Azure.Management.PowerBIEmbedded.Models
  nameWithType: Microsoft.Azure.Management.PowerBIEmbedded.Models
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.#ctor*
  commentId: Overload:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.#ctor
  isExternal: false
  name: Display
  nameWithType: Display.Display
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Display
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Provider*
  commentId: Overload:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Provider
  isExternal: false
  name: Provider
  nameWithType: Display.Provider
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Provider
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Resource*
  commentId: Overload:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Resource
  isExternal: false
  name: Resource
  nameWithType: Display.Resource
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Resource
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Operation*
  commentId: Overload:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Operation
  isExternal: false
  name: Operation
  nameWithType: Display.Operation
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Operation
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Description*
  commentId: Overload:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Description
  isExternal: false
  name: Description
  nameWithType: Display.Description
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Description
- uid: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Origin*
  commentId: Overload:Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Origin
  isExternal: false
  name: Origin
  nameWithType: Display.Origin
  fullName: Microsoft.Azure.Management.PowerBIEmbedded.Models.Display.Origin
