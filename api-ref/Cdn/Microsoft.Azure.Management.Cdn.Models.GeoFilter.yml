### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter
  commentId: T:Microsoft.Azure.Management.Cdn.Models.GeoFilter
  id: GeoFilter
  parent: Microsoft.Azure.Management.Cdn.Models
  children:
  - Microsoft.Azure.Management.Cdn.Models.GeoFilter.#ctor
  - Microsoft.Azure.Management.Cdn.Models.GeoFilter.#ctor(System.String,Microsoft.Azure.Management.Cdn.Models.GeoFilterActions,System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Management.Cdn.Models.GeoFilter.Action
  - Microsoft.Azure.Management.Cdn.Models.GeoFilter.CountryCodes
  - Microsoft.Azure.Management.Cdn.Models.GeoFilter.RelativePath
  - Microsoft.Azure.Management.Cdn.Models.GeoFilter.Validate
  langs:
  - csharp
  - vb
  name: GeoFilter
  nameWithType: GeoFilter
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: GeoFilter
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGeo filter of a CDN endpoint.\n"
  example: []
  syntax:
    content: public class GeoFilter
    content.vb: Public Class GeoFilter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter.#ctor
  commentId: M:Microsoft.Azure.Management.Cdn.Models.GeoFilter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Cdn.Models.GeoFilter
  langs:
  - csharp
  - vb
  name: GeoFilter()
  nameWithType: GeoFilter.GeoFilter()
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter.GeoFilter()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nInitializes a new instance of the GeoFilter class.\n"
  example: []
  syntax:
    content: public GeoFilter()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Cdn.Models.GeoFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter.#ctor(System.String,Microsoft.Azure.Management.Cdn.Models.GeoFilterActions,System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Management.Cdn.Models.GeoFilter.#ctor(System.String,Microsoft.Azure.Management.Cdn.Models.GeoFilterActions,System.Collections.Generic.IList{System.String})
  id: '#ctor(System.String,Microsoft.Azure.Management.Cdn.Models.GeoFilterActions,System.Collections.Generic.IList{System.String})'
  parent: Microsoft.Azure.Management.Cdn.Models.GeoFilter
  langs:
  - csharp
  - vb
  name: GeoFilter(String, GeoFilterActions, IList<String>)
  nameWithType: GeoFilter.GeoFilter(String, GeoFilterActions, IList<String>)
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter.GeoFilter(System.String, Microsoft.Azure.Management.Cdn.Models.GeoFilterActions, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nInitializes a new instance of the GeoFilter class.\n"
  example: []
  syntax:
    content: public GeoFilter(string relativePath, GeoFilterActions action, IList<string> countryCodes)
    content.vb: Public Sub New(relativePath As String, action As GeoFilterActions, countryCodes As IList(Of String))
    parameters:
    - id: relativePath
      type: System.String
      description: >-
        Relative path applicable to geo filter.

        (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
    - id: action
      type: Microsoft.Azure.Management.Cdn.Models.GeoFilterActions
      description: >-
        Action of the geo filter. Possible values

        include: 'Block', 'Allow'
    - id: countryCodes
      type: System.Collections.Generic.IList{System.String}
      description: >-
        Two letter country codes of the geo

        filter. (e.g. AU, MX, and etc.)
  overload: Microsoft.Azure.Management.Cdn.Models.GeoFilter.#ctor*
  nameWithType.vb: GeoFilter.GeoFilter(String, GeoFilterActions, IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Cdn.Models.GeoFilter.GeoFilter(System.String, Microsoft.Azure.Management.Cdn.Models.GeoFilterActions, System.Collections.Generic.IList(Of System.String))
  name.vb: GeoFilter(String, GeoFilterActions, IList(Of String))
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter.RelativePath
  commentId: P:Microsoft.Azure.Management.Cdn.Models.GeoFilter.RelativePath
  id: RelativePath
  parent: Microsoft.Azure.Management.Cdn.Models.GeoFilter
  langs:
  - csharp
  - vb
  name: RelativePath
  nameWithType: GeoFilter.RelativePath
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter.RelativePath
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: RelativePath
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets relative path applicable to geo filter. (e.g.\n'/mypictures', '/mypicture/kitty.jpg', and etc.)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "relativePath")]

      public string RelativePath { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="relativePath")>

      Public Property RelativePath As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Cdn.Models.GeoFilter.RelativePath*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: relativePath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter.Action
  commentId: P:Microsoft.Azure.Management.Cdn.Models.GeoFilter.Action
  id: Action
  parent: Microsoft.Azure.Management.Cdn.Models.GeoFilter
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: GeoFilter.Action
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter.Action
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Action
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets action of the geo filter. Possible values include:\n'Block', 'Allow'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "action")]

      public GeoFilterActions Action { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="action")>

      Public Property Action As GeoFilterActions
    parameters: []
    return:
      type: Microsoft.Azure.Management.Cdn.Models.GeoFilterActions
  overload: Microsoft.Azure.Management.Cdn.Models.GeoFilter.Action*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: action
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter.CountryCodes
  commentId: P:Microsoft.Azure.Management.Cdn.Models.GeoFilter.CountryCodes
  id: CountryCodes
  parent: Microsoft.Azure.Management.Cdn.Models.GeoFilter
  langs:
  - csharp
  - vb
  name: CountryCodes
  nameWithType: GeoFilter.CountryCodes
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter.CountryCodes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: CountryCodes
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets two letter country codes of the geo filter. (e.g. AU,\nMX, and etc.)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "countryCodes")]

      public IList<string> CountryCodes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="countryCodes")>

      Public Property CountryCodes As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.Cdn.Models.GeoFilter.CountryCodes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: countryCodes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter.Validate
  commentId: M:Microsoft.Azure.Management.Cdn.Models.GeoFilter.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Cdn.Models.GeoFilter
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: GeoFilter.Validate()
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/GeoFilter.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Cdn.Models.GeoFilter.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Cdn.Models
  commentId: N:Microsoft.Azure.Management.Cdn.Models
  isExternal: false
  name: Microsoft.Azure.Management.Cdn.Models
  nameWithType: Microsoft.Azure.Management.Cdn.Models
  fullName: Microsoft.Azure.Management.Cdn.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.GeoFilter.#ctor
  isExternal: false
  name: GeoFilter
  nameWithType: GeoFilter.GeoFilter
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter.GeoFilter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilterActions
  commentId: T:Microsoft.Azure.Management.Cdn.Models.GeoFilterActions
  parent: Microsoft.Azure.Management.Cdn.Models
  isExternal: false
  name: GeoFilterActions
  nameWithType: GeoFilterActions
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilterActions
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter.RelativePath*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.GeoFilter.RelativePath
  isExternal: false
  name: RelativePath
  nameWithType: GeoFilter.RelativePath
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter.RelativePath
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter.Action*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.GeoFilter.Action
  isExternal: false
  name: Action
  nameWithType: GeoFilter.Action
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter.Action
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter.CountryCodes*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.GeoFilter.CountryCodes
  isExternal: false
  name: CountryCodes
  nameWithType: GeoFilter.CountryCodes
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter.CountryCodes
- uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter.Validate*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.GeoFilter.Validate
  isExternal: false
  name: Validate
  nameWithType: GeoFilter.Validate
  fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
