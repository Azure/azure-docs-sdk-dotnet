### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint
  commentId: T:Microsoft.Azure.Management.Cdn.Models.Endpoint
  id: Endpoint
  parent: Microsoft.Azure.Management.Cdn.Models
  children:
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.#ctor
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.GeoFilter},System.String,System.String,System.String)
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.ContentTypesToCompress
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.GeoFilters
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.HostName
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.IsCompressionEnabled
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpAllowed
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpsAllowed
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.OptimizationType
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginHostHeader
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginPath
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.Origins
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.ProvisioningState
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.QueryStringCachingBehavior
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.ResourceState
  - Microsoft.Azure.Management.Cdn.Models.Endpoint.Validate
  langs:
  - csharp
  - vb
  name: Endpoint
  nameWithType: Endpoint
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Endpoint
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nCDN endpoint is the entity within a CDN profile containing\nconfiguration information regarding caching behaviors and origins.\nThe CDN endpoint is exposed using the URL format\n&lt;endpointname&gt;.azureedge.net by default, but custom domains can\nalso be created.\n"
  example: []
  syntax:
    content: 'public class Endpoint : Resource, IResource'
    content.vb: >-
      Public Class Endpoint
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Cdn.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Cdn.Models.Resource.Id
  - Microsoft.Azure.Management.Cdn.Models.Resource.Name
  - Microsoft.Azure.Management.Cdn.Models.Resource.Type
  - Microsoft.Azure.Management.Cdn.Models.Resource.Location
  - Microsoft.Azure.Management.Cdn.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.#ctor
  commentId: M:Microsoft.Azure.Management.Cdn.Models.Endpoint.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: Endpoint()
  nameWithType: Endpoint.Endpoint()
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.Endpoint()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nInitializes a new instance of the Endpoint class.\n"
  example: []
  syntax:
    content: public Endpoint()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.GeoFilter},System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Cdn.Models.Endpoint.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.GeoFilter},System.String,System.String,System.String)
  id: '#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.GeoFilter},System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: Endpoint(String, IList<DeepCreatedOrigin>, String, String, String, IDictionary<String, String>, String, String, IList<String>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<QueryStringCachingBehavior>, String, IList<GeoFilter>, String, String, String)
  nameWithType: Endpoint.Endpoint(String, IList<DeepCreatedOrigin>, String, String, String, IDictionary<String, String>, String, String, IList<String>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<QueryStringCachingBehavior>, String, IList<GeoFilter>, String, String, String)
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.Endpoint(System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin>, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.String, System.String, System.Collections.Generic.IList<System.String>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior>, System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.Cdn.Models.GeoFilter>, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nInitializes a new instance of the Endpoint class.\n"
  example: []
  syntax:
    content: public Endpoint(string location, IList<DeepCreatedOrigin> origins, string id = null, string name = null, string type = null, IDictionary<string, string> tags = null, string originHostHeader = null, string originPath = null, IList<string> contentTypesToCompress = null, bool ? isCompressionEnabled = null, bool ? isHttpAllowed = null, bool ? isHttpsAllowed = null, QueryStringCachingBehavior? queryStringCachingBehavior = null, string optimizationType = null, IList<GeoFilter> geoFilters = null, string hostName = null, string resourceState = null, string provisioningState = null)
    content.vb: Public Sub New(location As String, origins As IList(Of DeepCreatedOrigin), id As String = Nothing, name As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, originHostHeader As String = Nothing, originPath As String = Nothing, contentTypesToCompress As IList(Of String) = Nothing, isCompressionEnabled As Boolean? = Nothing, isHttpAllowed As Boolean? = Nothing, isHttpsAllowed As Boolean? = Nothing, queryStringCachingBehavior As QueryStringCachingBehavior? = Nothing, optimizationType As String = Nothing, geoFilters As IList(Of GeoFilter) = Nothing, hostName As String = Nothing, resourceState As String = Nothing, provisioningState As String = Nothing)
    parameters:
    - id: location
      type: System.String
      description: Resource location.
    - id: origins
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin}
      description: >-
        The set of origins for the CDN endpoint.

        When multiple origins exist, the first origin will be used as

        primary and rest will be used as failover options.
    - id: id
      type: System.String
      description: Resource ID.
    - id: name
      type: System.String
      description: Resource name.
    - id: type
      type: System.String
      description: Resource type.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Resource tags.
    - id: originHostHeader
      type: System.String
      description: >-
        The host header the CDN provider

        will send along with content requests to origins. The default

        value is the host name of the origin.
    - id: originPath
      type: System.String
      description: The path used for origin requests.
    - id: contentTypesToCompress
      type: System.Collections.Generic.IList{System.String}
      description: >-
        List of content types on

        which compression will be applied. The value for the elements

        should be a valid MIME type.
    - id: isCompressionEnabled
      type: System.Nullable{System.Boolean}
      description: >-
        Indicates whether content

        compression is enabled. The default value is false. If

        compression is enabled, the content transferred from the CDN

        endpoint to the end user will be compressed. The requested

        content must be larger than 1 byte and smaller than 1 MB.
    - id: isHttpAllowed
      type: System.Nullable{System.Boolean}
      description: >-
        Indicates whether HTTP traffic is

        allowed on the endpoint. Default value is true. At least one

        protocol (HTTP or HTTPS) must be allowed.
    - id: isHttpsAllowed
      type: System.Nullable{System.Boolean}
      description: >-
        Indicates whether HTTPS traffic is

        allowed on the endpoint. Default value is true. At least one

        protocol (HTTP or HTTPS) must be allowed.
    - id: queryStringCachingBehavior
      type: System.Nullable{Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior}
      description: >-
        Defines the query string

        caching behavior. Possible values include: 'IgnoreQueryString',

        'BypassCaching', 'UseQueryString', 'NotSet'
    - id: optimizationType
      type: System.String
      description: >-
        Customer can specify what scenario

        they want this CDN endpoint to optimize. (e.g. Download, Media

        services, and etc.) With this information we can apply scenario

        driven optimization.
    - id: geoFilters
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.GeoFilter}
      description: >-
        The list of geo filters for the CDN

        endpoint.
    - id: hostName
      type: System.String
      description: >-
        The host name of the endpoint

        {endpointName}.{DNSZone}
    - id: resourceState
      type: System.String
      description: >-
        Resource status of the endpoint.

        Possible values include: 'Creating', 'Deleting', 'Running',

        'Starting', 'Stopped', 'Stopping'
    - id: provisioningState
      type: System.String
      description: >-
        Provisioning status of the

        endpoint.
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.#ctor*
  nameWithType.vb: Endpoint.Endpoint(String, IList(Of DeepCreatedOrigin), String, String, String, IDictionary(Of String, String), String, String, IList(Of String), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of QueryStringCachingBehavior), String, IList(Of GeoFilter), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Cdn.Models.Endpoint.Endpoint(System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin), System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, System.String, System.Collections.Generic.IList(Of System.String), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior), System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Cdn.Models.GeoFilter), System.String, System.String, System.String)
  name.vb: Endpoint(String, IList(Of DeepCreatedOrigin), String, String, String, IDictionary(Of String, String), String, String, IList(Of String), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of QueryStringCachingBehavior), String, IList(Of GeoFilter), String, String, String)
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginHostHeader
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginHostHeader
  id: OriginHostHeader
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: OriginHostHeader
  nameWithType: Endpoint.OriginHostHeader
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginHostHeader
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OriginHostHeader
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets the host header the CDN provider will send along with\ncontent requests to origins. The default value is the host name\nof the origin.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.originHostHeader")]

      public string OriginHostHeader { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.originHostHeader")>

      Public Property OriginHostHeader As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginHostHeader*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.originHostHeader
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginPath
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginPath
  id: OriginPath
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: OriginPath
  nameWithType: Endpoint.OriginPath
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginPath
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OriginPath
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets the path used for origin requests.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.originPath")]

      public string OriginPath { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.originPath")>

      Public Property OriginPath As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginPath*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.originPath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.ContentTypesToCompress
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.ContentTypesToCompress
  id: ContentTypesToCompress
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: ContentTypesToCompress
  nameWithType: Endpoint.ContentTypesToCompress
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.ContentTypesToCompress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContentTypesToCompress
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets list of content types on which compression will be\napplied. The value for the elements should be a valid MIME type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.contentTypesToCompress")]

      public IList<string> ContentTypesToCompress { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.contentTypesToCompress")>

      Public Property ContentTypesToCompress As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.ContentTypesToCompress*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.contentTypesToCompress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsCompressionEnabled
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.IsCompressionEnabled
  id: IsCompressionEnabled
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: IsCompressionEnabled
  nameWithType: Endpoint.IsCompressionEnabled
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsCompressionEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsCompressionEnabled
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets indicates whether content compression is enabled. The\ndefault value is false. If compression is enabled, the content\ntransferred from the CDN endpoint to the end user will be\ncompressed. The requested content must be larger than 1 byte and\nsmaller than 1 MB.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.isCompressionEnabled")]

      public bool ? IsCompressionEnabled { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.isCompressionEnabled")>

      Public Property IsCompressionEnabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsCompressionEnabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.isCompressionEnabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpAllowed
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpAllowed
  id: IsHttpAllowed
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: IsHttpAllowed
  nameWithType: Endpoint.IsHttpAllowed
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpAllowed
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsHttpAllowed
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets indicates whether HTTP traffic is allowed on the\nendpoint. Default value is true. At least one protocol (HTTP or\nHTTPS) must be allowed.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.isHttpAllowed")]

      public bool ? IsHttpAllowed { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.isHttpAllowed")>

      Public Property IsHttpAllowed As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpAllowed*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.isHttpAllowed
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpsAllowed
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpsAllowed
  id: IsHttpsAllowed
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: IsHttpsAllowed
  nameWithType: Endpoint.IsHttpsAllowed
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpsAllowed
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsHttpsAllowed
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets indicates whether HTTPS traffic is allowed on the\nendpoint. Default value is true. At least one protocol (HTTP or\nHTTPS) must be allowed.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.isHttpsAllowed")]

      public bool ? IsHttpsAllowed { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.isHttpsAllowed")>

      Public Property IsHttpsAllowed As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpsAllowed*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.isHttpsAllowed
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.QueryStringCachingBehavior
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.QueryStringCachingBehavior
  id: QueryStringCachingBehavior
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: QueryStringCachingBehavior
  nameWithType: Endpoint.QueryStringCachingBehavior
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.QueryStringCachingBehavior
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: QueryStringCachingBehavior
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets defines the query string caching behavior. Possible\nvalues include: 'IgnoreQueryString', 'BypassCaching',\n'UseQueryString', 'NotSet'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.queryStringCachingBehavior")]

      public QueryStringCachingBehavior? QueryStringCachingBehavior { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.queryStringCachingBehavior")>

      Public Property QueryStringCachingBehavior As QueryStringCachingBehavior?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior}
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.QueryStringCachingBehavior*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.queryStringCachingBehavior
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.OptimizationType
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.OptimizationType
  id: OptimizationType
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: OptimizationType
  nameWithType: Endpoint.OptimizationType
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.OptimizationType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OptimizationType
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 150
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets customer can specify what scenario they want this CDN\nendpoint to optimize. (e.g. Download, Media services, and etc.)\nWith this information we can apply scenario driven optimization.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.optimizationType")]

      public string OptimizationType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.optimizationType")>

      Public Property OptimizationType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.OptimizationType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.optimizationType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.GeoFilters
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.GeoFilters
  id: GeoFilters
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: GeoFilters
  nameWithType: Endpoint.GeoFilters
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.GeoFilters
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GeoFilters
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets the list of geo filters for the CDN endpoint.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.geoFilters")]

      public IList<GeoFilter> GeoFilters { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.geoFilters")>

      Public Property GeoFilters As IList(Of GeoFilter)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.GeoFilter}
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.GeoFilters*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.geoFilters
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.HostName
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.HostName
  id: HostName
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: HostName
  nameWithType: Endpoint.HostName
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.HostName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HostName
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 162
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets the host name of the endpoint {endpointName}.{DNSZone}\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.hostName")]

      public string HostName { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.hostName")>

      Public ReadOnly Property HostName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.HostName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.hostName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.Origins
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.Origins
  id: Origins
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: Origins
  nameWithType: Endpoint.Origins
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.Origins
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Origins
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 170
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets the set of origins for the CDN endpoint. When\nmultiple origins exist, the first origin will be used as primary\nand rest will be used as failover options.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.origins")]

      public IList<DeepCreatedOrigin> Origins { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.origins")>

      Public Property Origins As IList(Of DeepCreatedOrigin)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin}
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.Origins*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.origins
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.ResourceState
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.ResourceState
  id: ResourceState
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: ResourceState
  nameWithType: Endpoint.ResourceState
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.ResourceState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceState
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 178
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets resource status of the endpoint. Possible values include:\n'Creating', 'Deleting', 'Running', 'Starting', 'Stopped',\n'Stopping'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.resourceState")]

      public string ResourceState { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.resourceState")>

      Public ReadOnly Property ResourceState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.ResourceState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.resourceState
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Endpoint.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: Endpoint.ProvisioningState
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 184
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets provisioning status of the endpoint.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public ReadOnly Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.Validate
  commentId: M:Microsoft.Azure.Management.Cdn.Models.Endpoint.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Cdn.Models.Endpoint
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Endpoint.Validate()
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/Endpoint.cs
    startLine: 193
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.Cdn.Models.Resource.Validate
  overload: Microsoft.Azure.Management.Cdn.Models.Endpoint.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.Cdn.Models
  commentId: N:Microsoft.Azure.Management.Cdn.Models
  isExternal: false
  name: Microsoft.Azure.Management.Cdn.Models
  nameWithType: Microsoft.Azure.Management.Cdn.Models
  fullName: Microsoft.Azure.Management.Cdn.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Cdn.Models.Resource
  commentId: T:Microsoft.Azure.Management.Cdn.Models.Resource
  parent: Microsoft.Azure.Management.Cdn.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.Cdn.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Cdn.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Resource.Id
  parent: Microsoft.Azure.Management.Cdn.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.Cdn.Models.Resource.Id
- uid: Microsoft.Azure.Management.Cdn.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Resource.Name
  parent: Microsoft.Azure.Management.Cdn.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.Cdn.Models.Resource.Name
- uid: Microsoft.Azure.Management.Cdn.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Resource.Type
  parent: Microsoft.Azure.Management.Cdn.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.Cdn.Models.Resource.Type
- uid: Microsoft.Azure.Management.Cdn.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Resource.Location
  parent: Microsoft.Azure.Management.Cdn.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.Cdn.Models.Resource.Location
- uid: Microsoft.Azure.Management.Cdn.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.Cdn.Models.Resource.Tags
  parent: Microsoft.Azure.Management.Cdn.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.Cdn.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.#ctor
  isExternal: false
  name: Endpoint
  nameWithType: Endpoint.Endpoint
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.Endpoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<DeepCreatedOrigin>
  nameWithType: IList<DeepCreatedOrigin>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin>
  nameWithType.vb: IList(Of DeepCreatedOrigin)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin)
  name.vb: IList(Of DeepCreatedOrigin)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin
    name: DeepCreatedOrigin
    nameWithType: DeepCreatedOrigin
    fullName: Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin
    name: DeepCreatedOrigin
    nameWithType: DeepCreatedOrigin
    fullName: Microsoft.Azure.Management.Cdn.Models.DeepCreatedOrigin
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior}
  parent: System
  definition: System.Nullable`1
  name: Nullable<QueryStringCachingBehavior>
  nameWithType: Nullable<QueryStringCachingBehavior>
  fullName: System.Nullable<Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior>
  nameWithType.vb: Nullable(Of QueryStringCachingBehavior)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior)
  name.vb: Nullable(Of QueryStringCachingBehavior)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior
    name: QueryStringCachingBehavior
    nameWithType: QueryStringCachingBehavior
    fullName: Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior
    name: QueryStringCachingBehavior
    nameWithType: QueryStringCachingBehavior
    fullName: Microsoft.Azure.Management.Cdn.Models.QueryStringCachingBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.GeoFilter}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.GeoFilter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<GeoFilter>
  nameWithType: IList<GeoFilter>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Cdn.Models.GeoFilter>
  nameWithType.vb: IList(Of GeoFilter)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Cdn.Models.GeoFilter)
  name.vb: IList(Of GeoFilter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter
    name: GeoFilter
    nameWithType: GeoFilter
    fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Cdn.Models.GeoFilter
    name: GeoFilter
    nameWithType: GeoFilter
    fullName: Microsoft.Azure.Management.Cdn.Models.GeoFilter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginHostHeader*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginHostHeader
  isExternal: false
  name: OriginHostHeader
  nameWithType: Endpoint.OriginHostHeader
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginHostHeader
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginPath*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginPath
  isExternal: false
  name: OriginPath
  nameWithType: Endpoint.OriginPath
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.OriginPath
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.ContentTypesToCompress*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.ContentTypesToCompress
  isExternal: false
  name: ContentTypesToCompress
  nameWithType: Endpoint.ContentTypesToCompress
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.ContentTypesToCompress
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsCompressionEnabled*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.IsCompressionEnabled
  isExternal: false
  name: IsCompressionEnabled
  nameWithType: Endpoint.IsCompressionEnabled
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsCompressionEnabled
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpAllowed*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpAllowed
  isExternal: false
  name: IsHttpAllowed
  nameWithType: Endpoint.IsHttpAllowed
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpAllowed
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpsAllowed*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpsAllowed
  isExternal: false
  name: IsHttpsAllowed
  nameWithType: Endpoint.IsHttpsAllowed
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.IsHttpsAllowed
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.QueryStringCachingBehavior*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.QueryStringCachingBehavior
  isExternal: false
  name: QueryStringCachingBehavior
  nameWithType: Endpoint.QueryStringCachingBehavior
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.QueryStringCachingBehavior
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.OptimizationType*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.OptimizationType
  isExternal: false
  name: OptimizationType
  nameWithType: Endpoint.OptimizationType
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.OptimizationType
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.GeoFilters*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.GeoFilters
  isExternal: false
  name: GeoFilters
  nameWithType: Endpoint.GeoFilters
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.GeoFilters
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.HostName*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.HostName
  isExternal: false
  name: HostName
  nameWithType: Endpoint.HostName
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.HostName
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.Origins*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.Origins
  isExternal: false
  name: Origins
  nameWithType: Endpoint.Origins
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.Origins
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.ResourceState*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.ResourceState
  isExternal: false
  name: ResourceState
  nameWithType: Endpoint.ResourceState
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.ResourceState
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: Endpoint.ProvisioningState
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.ProvisioningState
- uid: Microsoft.Azure.Management.Cdn.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.Cdn.Models.Resource.Validate
  parent: Microsoft.Azure.Management.Cdn.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.Cdn.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Cdn.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.Cdn.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Cdn.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.Cdn.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Cdn.Models.Endpoint.Validate*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.Endpoint.Validate
  isExternal: false
  name: Validate
  nameWithType: Endpoint.Validate
  fullName: Microsoft.Azure.Management.Cdn.Models.Endpoint.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
