### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  id: ShardKey
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType,System.Object)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Byte[])
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.DateTime)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.DateTimeOffset)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Guid)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Int64)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Object)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.TimeSpan)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DataType
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DetectShardKeyType(System.Object)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals(System.Object)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.FromRawValue(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType,System.Byte[])
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetHashCode
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetValue``1
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.HasValue
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMax
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMin
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsSupportedType(System.Type)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.KeyType
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Max(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxBinary
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTime
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTimeOffset
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxGuid
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt32
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt64
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxTimeSpan
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Min(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinBinary
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTime
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTimeOffset
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinGuid
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt32
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt64
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinTimeSpan
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.RawValue
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKeyTypeFromType(System.Type)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ToString
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.TypeFromShardKeyType(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Value
  langs:
  - csharp
  - vb
  name: ShardKey
  nameWithType: ShardKey
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardKey
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nShard key value. Wraps the type and value and allows normalization/denormalization\nfor serialization.\n"
  example: []
  syntax:
    content: 'public sealed class ShardKey : IComparable<ShardKey>, IEquatable<ShardKey>'
    content.vb: >-
      Public NotInheritable Class ShardKey
          Implements IComparable(Of ShardKey), IEquatable(Of ShardKey)
  inheritance:
  - System.Object
  implements:
  - System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt32
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt32
  id: MinInt32
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MinInt32
  nameWithType: ShardKey.MinInt32
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt32
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MinInt32
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MinInt32 { get; }
    content.vb: Public Shared ReadOnly Property MinInt32 As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt32*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt32
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt32
  id: MaxInt32
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MaxInt32
  nameWithType: ShardKey.MaxInt32
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt32
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MaxInt32
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MaxInt32 { get; }
    content.vb: Public Shared ReadOnly Property MaxInt32 As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt32*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt64
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt64
  id: MinInt64
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MinInt64
  nameWithType: ShardKey.MinInt64
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt64
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MinInt64
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MinInt64 { get; }
    content.vb: Public Shared ReadOnly Property MinInt64 As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt64*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt64
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt64
  id: MaxInt64
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MaxInt64
  nameWithType: ShardKey.MaxInt64
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt64
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MaxInt64
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 129
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MaxInt64 { get; }
    content.vb: Public Shared ReadOnly Property MaxInt64 As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt64*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinGuid
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinGuid
  id: MinGuid
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MinGuid
  nameWithType: ShardKey.MinGuid
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinGuid
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MinGuid
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MinGuid { get; }
    content.vb: Public Shared ReadOnly Property MinGuid As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinGuid*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxGuid
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxGuid
  id: MaxGuid
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MaxGuid
  nameWithType: ShardKey.MaxGuid
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxGuid
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MaxGuid
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 147
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MaxGuid { get; }
    content.vb: Public Shared ReadOnly Property MaxGuid As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxGuid*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinBinary
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinBinary
  id: MinBinary
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MinBinary
  nameWithType: ShardKey.MinBinary
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinBinary
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MinBinary
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MinBinary { get; }
    content.vb: Public Shared ReadOnly Property MinBinary As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinBinary*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxBinary
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxBinary
  id: MaxBinary
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MaxBinary
  nameWithType: ShardKey.MaxBinary
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxBinary
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MaxBinary
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 165
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MaxBinary { get; }
    content.vb: Public Shared ReadOnly Property MaxBinary As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxBinary*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTime
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTime
  id: MinDateTime
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MinDateTime
  nameWithType: ShardKey.MinDateTime
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTime
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MinDateTime
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 174
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MinDateTime { get; }
    content.vb: Public Shared ReadOnly Property MinDateTime As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTime*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTime
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTime
  id: MaxDateTime
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MaxDateTime
  nameWithType: ShardKey.MaxDateTime
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTime
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MaxDateTime
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 183
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MaxDateTime { get; }
    content.vb: Public Shared ReadOnly Property MaxDateTime As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTime*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinTimeSpan
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinTimeSpan
  id: MinTimeSpan
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MinTimeSpan
  nameWithType: ShardKey.MinTimeSpan
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinTimeSpan
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MinTimeSpan
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 192
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MinTimeSpan { get; }
    content.vb: Public Shared ReadOnly Property MinTimeSpan As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinTimeSpan*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxTimeSpan
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxTimeSpan
  id: MaxTimeSpan
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MaxTimeSpan
  nameWithType: ShardKey.MaxTimeSpan
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxTimeSpan
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MaxTimeSpan
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 201
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MaxTimeSpan { get; }
    content.vb: Public Shared ReadOnly Property MaxTimeSpan As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxTimeSpan*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTimeOffset
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTimeOffset
  id: MinDateTimeOffset
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MinDateTimeOffset
  nameWithType: ShardKey.MinDateTimeOffset
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTimeOffset
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MinDateTimeOffset
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 210
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MinDateTimeOffset { get; }
    content.vb: Public Shared ReadOnly Property MinDateTimeOffset As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTimeOffset*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTimeOffset
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTimeOffset
  id: MaxDateTimeOffset
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: MaxDateTimeOffset
  nameWithType: ShardKey.MaxDateTimeOffset
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTimeOffset
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MaxDateTimeOffset
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 219
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Represents negative infinity.
  example: []
  syntax:
    content: public static ShardKey MaxDateTimeOffset { get; }
    content.vb: Public Shared ReadOnly Property MaxDateTimeOffset As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTimeOffset*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: ShardKey(Int32)
  nameWithType: ShardKey.ShardKey(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKey(System.Int32)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 241
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Constructs a shard key using 32-bit integer value.
  example: []
  syntax:
    content: public ShardKey(int value)
    content.vb: Public Sub New(value As Integer)
    parameters:
    - id: value
      type: System.Int32
      description: Input 32-bit integer.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Int64)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: ShardKey(Int64)
  nameWithType: ShardKey.ShardKey(Int64)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKey(System.Int64)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 247
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Constructs a shard key using 64-bit integer value.
  example: []
  syntax:
    content: public ShardKey(long value)
    content.vb: Public Sub New(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: Input 64-bit integer.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Guid)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: ShardKey(Guid)
  nameWithType: ShardKey.ShardKey(Guid)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKey(System.Guid)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 253
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Constructs a shard key using a Guid.
  example: []
  syntax:
    content: public ShardKey(Guid value)
    content.vb: Public Sub New(value As Guid)
    parameters:
    - id: value
      type: System.Guid
      description: Input Guid.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Byte[])
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: ShardKey(Byte[])
  nameWithType: ShardKey.ShardKey(Byte[])
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKey(System.Byte[])
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 259
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Constructs a shard key using a byte array.
  example: []
  syntax:
    content: public ShardKey(byte[] value)
    content.vb: Public Sub New(value As Byte())
    parameters:
    - id: value
      type: System.Byte[]
      description: Input byte array.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor*
  nameWithType.vb: ShardKey.ShardKey(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKey(System.Byte())
  name.vb: ShardKey(Byte())
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.DateTime)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: ShardKey(DateTime)
  nameWithType: ShardKey.ShardKey(DateTime)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKey(System.DateTime)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 265
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Constructs a shard key using DateTime value.
  example: []
  syntax:
    content: public ShardKey(DateTime value)
    content.vb: Public Sub New(value As Date)
    parameters:
    - id: value
      type: System.DateTime
      description: Input DateTime.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.TimeSpan)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.TimeSpan)
  id: '#ctor(System.TimeSpan)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: ShardKey(TimeSpan)
  nameWithType: ShardKey.ShardKey(TimeSpan)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKey(System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 272
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Constructs a shard key using TimeSpan value.
  example: []
  syntax:
    content: public ShardKey(TimeSpan value)
    content.vb: Public Sub New(value As TimeSpan)
    parameters:
    - id: value
      type: System.TimeSpan
      description: Input TimeSpan.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.DateTimeOffset)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.DateTimeOffset)
  id: '#ctor(System.DateTimeOffset)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: ShardKey(DateTimeOffset)
  nameWithType: ShardKey.ShardKey(DateTimeOffset)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKey(System.DateTimeOffset)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 279
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Constructs a shard key using TimeSpan value.
  example: []
  syntax:
    content: public ShardKey(DateTimeOffset value)
    content.vb: Public Sub New(value As DateTimeOffset)
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: Input DateTimeOffset.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Object)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: ShardKey(Object)
  nameWithType: ShardKey.ShardKey(Object)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKey(System.Object)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 286
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Constructs a shard key using given object.
  example: []
  syntax:
    content: public ShardKey(object value)
    content.vb: Public Sub New(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: Input object.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType,System.Object)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType,System.Object)
  id: '#ctor(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType,System.Object)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: ShardKey(ShardKeyType, Object)
  nameWithType: ShardKey.ShardKey(ShardKeyType, Object)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKey(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType, System.Object)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 317
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nConstructs a shard key using given object and keyType.\n"
  example: []
  syntax:
    content: public ShardKey(ShardKeyType keyType, object value)
    content.vb: Public Sub New(keyType As ShardKeyType, value As Object)
    parameters:
    - id: keyType
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
      description: The key type of value in object.
    - id: value
      type: System.Object
      description: Input object.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.HasValue
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.HasValue
  id: HasValue
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: HasValue
  nameWithType: ShardKey.HasValue
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.HasValue
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: HasValue
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 429
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nTrue if the key has a value; otherwise, false. Positive infinity returns false.\n"
  example: []
  syntax:
    content: public bool HasValue { get; }
    content.vb: Public ReadOnly Property HasValue As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.HasValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMin
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMin
  id: IsMin
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: IsMin
  nameWithType: ShardKey.IsMin
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMin
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: IsMin
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 440
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nReturns true if the key value is negative infinity; otherwise, false.\n"
  example: []
  syntax:
    content: public bool IsMin { get; }
    content.vb: Public ReadOnly Property IsMin As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMax
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMax
  id: IsMax
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: IsMax
  nameWithType: ShardKey.IsMax
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMax
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: IsMax
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 451
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nTrue if the key value is positive infinity; otherwise, false.\n"
  example: []
  syntax:
    content: public bool IsMax { get; }
    content.vb: Public ReadOnly Property IsMax As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMax*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.RawValue
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.RawValue
  id: RawValue
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: RawValue
  nameWithType: ShardKey.RawValue
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.RawValue
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: RawValue
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 462
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets a byte array representing the key value.\n"
  example: []
  syntax:
    content: public byte[] RawValue { get; }
    content.vb: Public ReadOnly Property RawValue As Byte()
    parameters: []
    return:
      type: System.Byte[]
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.RawValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Value
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Value
  id: Value
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ShardKey.Value
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Value
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Value
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 484
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the denormalized value of the key.\n"
  example: []
  syntax:
    content: public object Value { get; }
    content.vb: Public ReadOnly Property Value As Object
    parameters: []
    return:
      type: System.Object
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.KeyType
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.KeyType
  id: KeyType
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: KeyType
  nameWithType: ShardKey.KeyType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.KeyType
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: KeyType
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 497
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the type of the shard key.\n"
  example: []
  syntax:
    content: public ShardKeyType KeyType { get; }
    content.vb: Public ReadOnly Property KeyType As ShardKeyType
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.KeyType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DataType
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DataType
  id: DataType
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: ShardKey.DataType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DataType
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DataType
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 508
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the type of the value present in the object.\n"
  example: []
  syntax:
    content: public Type DataType { get; }
    content.vb: Public ReadOnly Property DataType As Type
    parameters: []
    return:
      type: System.Type
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DataType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.FromRawValue(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType,System.Byte[])
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.FromRawValue(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType,System.Byte[])
  id: FromRawValue(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType,System.Byte[])
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: FromRawValue(ShardKeyType, Byte[])
  nameWithType: ShardKey.FromRawValue(ShardKeyType, Byte[])
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.FromRawValue(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType, System.Byte[])
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: FromRawValue
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 522
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nInstantiates a new shard key using the specified type and binary representation.\n"
  example: []
  syntax:
    content: public static ShardKey FromRawValue(ShardKeyType keyType, byte[] rawValue)
    content.vb: Public Shared Function FromRawValue(keyType As ShardKeyType, rawValue As Byte()) As ShardKey
    parameters:
    - id: keyType
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
      description: Type of the shard key (Int32, Int64, Guid, byte[] etc.).
    - id: rawValue
      type: System.Byte[]
      description: Binary representation of the key.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: A new shard key instance.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.FromRawValue*
  nameWithType.vb: ShardKey.FromRawValue(ShardKeyType, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.FromRawValue(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType, System.Byte())
  name.vb: FromRawValue(ShardKeyType, Byte())
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetValue``1
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetValue``1
  id: GetValue``1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: GetValue<T>()
  nameWithType: ShardKey.GetValue<T>()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetValue<T>()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetValue
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 532
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the strongly typed value of the shard key.\n"
  example: []
  syntax:
    content: public T GetValue<T>()
    content.vb: Public Function GetValue(Of T) As T
    typeParameters:
    - id: T
      description: Type of the key.
    return:
      type: '{T}'
      description: Value of the key.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetValue*
  nameWithType.vb: ShardKey.GetValue(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetValue(Of T)()
  name.vb: GetValue(Of T)()
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ToString
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ToString
  id: ToString
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ShardKey.ToString()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ToString()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ToString
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 555
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nConverts the object to its string representation.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: String representation of the object.
  overridden: System.Object.ToString
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetHashCode
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetHashCode
  id: GetHashCode
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ShardKey.GetHashCode()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetHashCode()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetHashCode
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 586
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCalculates the hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: Hash code for the object.
  overridden: System.Object.GetHashCode
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals(System.Object)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ShardKey.Equals(Object)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 596
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nDetermines whether the specified object is equal to the current object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: True if the specified object is equal to the current object; otherwise, false.
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: Equals(ShardKey)
  nameWithType: ShardKey.Equals(ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 606
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nPerforms equality comparison with another given ShardKey.\n"
  example: []
  syntax:
    content: public bool Equals(ShardKey other)
    content.vb: Public Function Equals(other As ShardKey) As Boolean
    parameters:
    - id: other
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: ShardKey to compare with.
    return:
      type: System.Boolean
      description: True if same shard key, false otherwise.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals*
  implements:
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: CompareTo(ShardKey)
  nameWithType: ShardKey.CompareTo(ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CompareTo
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 630
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCompares between two <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey\" data-throw-if-not-resolved=\"false\"></xref> values.\n"
  example: []
  syntax:
    content: public int CompareTo(ShardKey other)
    content.vb: Public Function CompareTo(other As ShardKey) As Integer
    parameters:
    - id: other
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: The <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey" data-throw-if-not-resolved="false"></xref> compared with this object.
    return:
      type: System.Int32
      description: 0 for equality, &lt; -1 if this key is less than <span class="paramref">other</span>, &gt; 1 otherwise.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.CompareTo*
  implements:
  - System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: op_LessThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: LessThan(ShardKey, ShardKey)
  nameWithType: ShardKey.LessThan(ShardKey, ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.LessThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_LessThan
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 722
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCompares two <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey\" data-throw-if-not-resolved=\"false\"></xref> using lexicographic order (less than).\n"
  example: []
  syntax:
    content: public static bool operator <(ShardKey left, ShardKey right)
    content.vb: Public Shared Operator <(left As ShardKey, right As ShardKey) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Left hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey" data-throw-if-not-resolved="false"></xref> of the operator.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Right hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey" data-throw-if-not-resolved="false"></xref> of the operator.
    return:
      type: System.Boolean
      description: True if lhs &lt; rhs
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: op_GreaterThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: GreaterThan(ShardKey, ShardKey)
  nameWithType: ShardKey.GreaterThan(ShardKey, ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GreaterThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_GreaterThan
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 740
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCompares two <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey\" data-throw-if-not-resolved=\"false\"></xref> using lexicographic order (greater than).\n"
  example: []
  syntax:
    content: public static bool operator>(ShardKey left, ShardKey right)
    content.vb: Public Shared Operator>(left As ShardKey, right As ShardKey) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Left hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey" data-throw-if-not-resolved="false"></xref> of the operator.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Right hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey" data-throw-if-not-resolved="false"></xref> of the operator.
    return:
      type: System.Boolean
      description: True if lhs &gt; rhs
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: op_LessThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(ShardKey, ShardKey)
  nameWithType: ShardKey.LessThanOrEqual(ShardKey, ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.LessThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_LessThanOrEqual
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 751
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCompares two <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey\" data-throw-if-not-resolved=\"false\"></xref> using lexicographic order (less or equal). \n"
  example: []
  syntax:
    content: public static bool operator <=(ShardKey left, ShardKey right)
    content.vb: Public Shared Operator <=(left As ShardKey, right As ShardKey) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Left hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey" data-throw-if-not-resolved="false"></xref> of the operator.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Right hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey" data-throw-if-not-resolved="false"></xref> of the operator.
    return:
      type: System.Boolean
      description: True if lhs &lt;= rhs
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: op_GreaterThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(ShardKey, ShardKey)
  nameWithType: ShardKey.GreaterThanOrEqual(ShardKey, ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GreaterThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_GreaterThanOrEqual
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 762
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCompares two <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey\" data-throw-if-not-resolved=\"false\"></xref> using lexicographic order (greater or equal). \n"
  example: []
  syntax:
    content: public static bool operator >=(ShardKey left, ShardKey right)
    content.vb: Public Shared Operator >=(left As ShardKey, right As ShardKey) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Left hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey" data-throw-if-not-resolved="false"></xref> of the operator.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Right hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey" data-throw-if-not-resolved="false"></xref> of the operator.
    return:
      type: System.Boolean
      description: True if lhs &gt;= rhs
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: Equality(ShardKey, ShardKey)
  nameWithType: ShardKey.Equality(ShardKey, ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_Equality
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 773
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nEquality operator.\n"
  example: []
  syntax:
    content: public static bool operator ==(ShardKey left, ShardKey right)
    content.vb: Public Shared Operator =(left As ShardKey, right As ShardKey) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Left hand side
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Right hand side
    return:
      type: System.Boolean
      description: True if the two objects are equal, false in all other cases
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: Inequality(ShardKey, ShardKey)
  nameWithType: ShardKey.Inequality(ShardKey, ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_Inequality
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 784
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nInequality operator.\n"
  example: []
  syntax:
    content: public static bool operator !=(ShardKey left, ShardKey right)
    content.vb: Public Shared Operator <>(left As ShardKey, right As ShardKey) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Left hand side
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Right hand side
    return:
      type: System.Boolean
      description: True if the two objects are not equal, false in all other cases
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Min(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Min(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: Min(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: Min(ShardKey, ShardKey)
  nameWithType: ShardKey.Min(ShardKey, ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Min(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Min
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 795
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the minimum of two shard keys.\n"
  example: []
  syntax:
    content: public static ShardKey Min(ShardKey left, ShardKey right)
    content.vb: Public Shared Function Min(left As ShardKey, right As ShardKey) As ShardKey
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Left hand side.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Right hand side.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Minimum of two shard keys.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Max(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Max(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: Max(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: Max(ShardKey, ShardKey)
  nameWithType: ShardKey.Max(ShardKey, ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Max(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Max
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 809
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the maximum of two shard keys.\n"
  example: []
  syntax:
    content: public static ShardKey Max(ShardKey left, ShardKey right)
    content.vb: Public Shared Function Max(left As ShardKey, right As ShardKey) As ShardKey
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Left hand side.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Right hand side.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Maximum of two shard keys.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DetectShardKeyType(System.Object)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DetectShardKeyType(System.Object)
  id: DetectShardKeyType(System.Object)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: DetectShardKeyType(Object)
  nameWithType: ShardKey.DetectShardKeyType(Object)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DetectShardKeyType(System.Object)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DetectShardKeyType
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 824
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGiven an object detect its ShardKeyType.\n"
  example: []
  syntax:
    content: public static ShardKeyType DetectShardKeyType(object value)
    content.vb: Public Shared Function DetectShardKeyType(value As Object) As ShardKeyType
    parameters:
    - id: value
      type: System.Object
      description: Given value. Must be non-null.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
      description: Corresponding ShardKeyType.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DetectShardKeyType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsSupportedType(System.Type)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: IsSupportedType(Type)
  nameWithType: ShardKey.IsSupportedType(Type)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsSupportedType(System.Type)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: IsSupportedType
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 848
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nChecks whether the specified type is supported as ShardKey type.\n"
  example: []
  syntax:
    content: public static bool IsSupportedType(Type type)
    content.vb: Public Shared Function IsSupportedType(type As Type) As Boolean
    parameters:
    - id: type
      type: System.Type
      description: Input type.
    return:
      type: System.Boolean
      description: True if supported, false otherwise.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsSupportedType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.TypeFromShardKeyType(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.TypeFromShardKeyType(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType)
  id: TypeFromShardKeyType(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: TypeFromShardKeyType(ShardKeyType)
  nameWithType: ShardKey.TypeFromShardKeyType(ShardKeyType)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.TypeFromShardKeyType(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: TypeFromShardKeyType
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 858
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the CLR type corresponding to the specified ShardKeyType.\n"
  example: []
  syntax:
    content: public static Type TypeFromShardKeyType(ShardKeyType keyType)
    content.vb: Public Shared Function TypeFromShardKeyType(keyType As ShardKeyType) As Type
    parameters:
    - id: keyType
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
      description: Input ShardKeyType.
    return:
      type: System.Type
      description: CLR type.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.TypeFromShardKeyType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKeyTypeFromType(System.Type)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKeyTypeFromType(System.Type)
  id: ShardKeyTypeFromType(System.Type)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  langs:
  - csharp
  - vb
  name: ShardKeyTypeFromType(Type)
  nameWithType: ShardKey.ShardKeyTypeFromType(Type)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKeyTypeFromType(System.Type)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardKeyTypeFromType
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/ShardKey.cs
    startLine: 876
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the ShardKeyType corresponding to CLR type.\n"
  example: []
  syntax:
    content: public static ShardKeyType ShardKeyTypeFromType(Type type)
    content.vb: Public Shared Function ShardKeyTypeFromType(type As Type) As ShardKeyType
    parameters:
    - id: type
      type: System.Type
      description: CLR type.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
      description: ShardKey type.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKeyTypeFromType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}
  commentId: T:System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ShardKey>
  nameWithType: IComparable<ShardKey>
  fullName: System.IComparable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey>
  nameWithType.vb: IComparable(Of ShardKey)
  fullname.vb: System.IComparable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  name.vb: IComparable(Of ShardKey)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
    name: ShardKey
    nameWithType: ShardKey
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
    name: ShardKey
    nameWithType: ShardKey
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}
  commentId: T:System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ShardKey>
  nameWithType: IEquatable<ShardKey>
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey>
  nameWithType.vb: IEquatable(Of ShardKey)
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  name.vb: IEquatable(Of ShardKey)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
    name: ShardKey
    nameWithType: ShardKey
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
    name: ShardKey
    nameWithType: ShardKey
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt32*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt32
  isExternal: false
  name: MinInt32
  nameWithType: ShardKey.MinInt32
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt32
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardKey
  nameWithType: ShardKey
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt32*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt32
  isExternal: false
  name: MaxInt32
  nameWithType: ShardKey.MaxInt32
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt32
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt64*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt64
  isExternal: false
  name: MinInt64
  nameWithType: ShardKey.MinInt64
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinInt64
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt64*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt64
  isExternal: false
  name: MaxInt64
  nameWithType: ShardKey.MaxInt64
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxInt64
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinGuid*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinGuid
  isExternal: false
  name: MinGuid
  nameWithType: ShardKey.MinGuid
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinGuid
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxGuid*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxGuid
  isExternal: false
  name: MaxGuid
  nameWithType: ShardKey.MaxGuid
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxGuid
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinBinary*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinBinary
  isExternal: false
  name: MinBinary
  nameWithType: ShardKey.MinBinary
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinBinary
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxBinary*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxBinary
  isExternal: false
  name: MaxBinary
  nameWithType: ShardKey.MaxBinary
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxBinary
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTime*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTime
  isExternal: false
  name: MinDateTime
  nameWithType: ShardKey.MinDateTime
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTime
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTime*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTime
  isExternal: false
  name: MaxDateTime
  nameWithType: ShardKey.MaxDateTime
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTime
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinTimeSpan*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinTimeSpan
  isExternal: false
  name: MinTimeSpan
  nameWithType: ShardKey.MinTimeSpan
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinTimeSpan
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxTimeSpan*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxTimeSpan
  isExternal: false
  name: MaxTimeSpan
  nameWithType: ShardKey.MaxTimeSpan
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxTimeSpan
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTimeOffset*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTimeOffset
  isExternal: false
  name: MinDateTimeOffset
  nameWithType: ShardKey.MinDateTimeOffset
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MinDateTimeOffset
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTimeOffset*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTimeOffset
  isExternal: false
  name: MaxDateTimeOffset
  nameWithType: ShardKey.MaxDateTimeOffset
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.MaxDateTimeOffset
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.#ctor
  isExternal: false
  name: ShardKey
  nameWithType: ShardKey.ShardKey
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKey
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardKeyType
  nameWithType: ShardKeyType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.HasValue*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.HasValue
  isExternal: false
  name: HasValue
  nameWithType: ShardKey.HasValue
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.HasValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMin*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMin
  isExternal: false
  name: IsMin
  nameWithType: ShardKey.IsMin
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMin
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMax*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMax
  isExternal: false
  name: IsMax
  nameWithType: ShardKey.IsMax
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsMax
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.RawValue*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.RawValue
  isExternal: false
  name: RawValue
  nameWithType: ShardKey.RawValue
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.RawValue
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Value*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Value
  isExternal: false
  name: Value
  nameWithType: ShardKey.Value
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Value
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.KeyType*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.KeyType
  isExternal: false
  name: KeyType
  nameWithType: ShardKey.KeyType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.KeyType
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DataType*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DataType
  isExternal: false
  name: DataType
  nameWithType: ShardKey.DataType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DataType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.FromRawValue*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.FromRawValue
  isExternal: false
  name: FromRawValue
  nameWithType: ShardKey.FromRawValue
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.FromRawValue
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetValue*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetValue
  isExternal: false
  name: GetValue<T>
  nameWithType: ShardKey.GetValue<T>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetValue<T>
  nameWithType.vb: ShardKey.GetValue(Of T)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetValue(Of T)
  name.vb: GetValue(Of T)
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ToString*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ToString
  isExternal: false
  name: ToString
  nameWithType: ShardKey.ToString
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetHashCode*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: ShardKey.GetHashCode
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GetHashCode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals
  isExternal: false
  name: Equals
  nameWithType: ShardKey.Equals
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equals
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ShardKey)
  nameWithType: IEquatable<ShardKey>.Equals(ShardKey)
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey>.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  nameWithType.vb: IEquatable(Of ShardKey).Equals(ShardKey)
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey).Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ShardKey>.Equals
    fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
    name: ShardKey
    nameWithType: ShardKey
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ShardKey).Equals
    fullName: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
    name: ShardKey
    nameWithType: ShardKey
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.CompareTo*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: ShardKey.CompareTo
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.CompareTo
- uid: System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(ShardKey)
  nameWithType: IComparable<ShardKey>.CompareTo(ShardKey)
  fullName: System.IComparable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey>.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  nameWithType.vb: IComparable(Of ShardKey).CompareTo(ShardKey)
  fullname.vb: System.IComparable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey).CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<ShardKey>.CompareTo
    fullName: System.IComparable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
    name: ShardKey
    nameWithType: ShardKey
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of ShardKey).CompareTo
    fullName: System.IComparable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
    name: ShardKey
    nameWithType: ShardKey
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThan*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThan
  isExternal: false
  name: LessThan
  nameWithType: ShardKey.LessThan
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.LessThan
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThan*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThan
  isExternal: false
  name: GreaterThan
  nameWithType: ShardKey.GreaterThan
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GreaterThan
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThanOrEqual*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_LessThanOrEqual
  isExternal: false
  name: LessThanOrEqual
  nameWithType: ShardKey.LessThanOrEqual
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.LessThanOrEqual
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThanOrEqual*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_GreaterThanOrEqual
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: ShardKey.GreaterThanOrEqual
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.GreaterThanOrEqual
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Equality*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Equality
  isExternal: false
  name: Equality
  nameWithType: ShardKey.Equality
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Equality
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Inequality*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: ShardKey.Inequality
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Inequality
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Min*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Min
  isExternal: false
  name: Min
  nameWithType: ShardKey.Min
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Min
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Max*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Max
  isExternal: false
  name: Max
  nameWithType: ShardKey.Max
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.Max
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DetectShardKeyType*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DetectShardKeyType
  isExternal: false
  name: DetectShardKeyType
  nameWithType: ShardKey.DetectShardKeyType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.DetectShardKeyType
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsSupportedType*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsSupportedType
  isExternal: false
  name: IsSupportedType
  nameWithType: ShardKey.IsSupportedType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.IsSupportedType
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.TypeFromShardKeyType*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.TypeFromShardKeyType
  isExternal: false
  name: TypeFromShardKeyType
  nameWithType: ShardKey.TypeFromShardKeyType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.TypeFromShardKeyType
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKeyTypeFromType*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKeyTypeFromType
  isExternal: false
  name: ShardKeyTypeFromType
  nameWithType: ShardKey.ShardKeyTypeFromType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey.ShardKeyTypeFromType
