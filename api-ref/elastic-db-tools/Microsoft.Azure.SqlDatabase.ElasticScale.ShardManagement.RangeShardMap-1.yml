### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  id: RangeShardMap`1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.Clone
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CloneCore
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingForKey(`0)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.TryGetMappingForKey(`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0}@)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  langs:
  - csharp
  - vb
  name: RangeShardMap<TKey>
  nameWithType: RangeShardMap<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: RangeShardMap
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nRepresents a shard map of ranges.\n"
  example: []
  syntax:
    content: 'public sealed class RangeShardMap<TKey> : ShardMap, ICloneable<ShardMap>, ICloneable<RangeShardMap<TKey>>'
    content.vb: >-
      Public NotInheritable Class RangeShardMap(Of TKey)
          Inherits ShardMap
          Implements ICloneable(Of ShardMap), ICloneable(Of RangeShardMap(Of TKey))
    typeParameters:
    - id: TKey
      description: Key type.
  inheritance:
  - System.Object
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  inheritedMembers:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.Name
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.MapType
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.KeyType
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1({TKey},System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1({TKey},System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1({TKey},System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1({TKey},System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard@)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap``1
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap``1
  nameWithType.vb: RangeShardMap(Of TKey)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey)
  name.vb: RangeShardMap(Of TKey)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String)
  id: OpenConnectionForKey(`0,System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: OpenConnectionForKey(TKey, String)
  nameWithType: RangeShardMap<TKey>.OpenConnectionForKey(TKey, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.OpenConnectionForKey(TKey, System.String)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: OpenConnectionForKey
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nOpens a regular <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> to the shard \nto which the specified key value is mapped, with <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions.Validate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nNote that the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> object returned by this call is not protected against transient faults. \nCallers should follow best practices to protect the connection against transient faults \nin their application code, e.g., by using the transient fault handling \nfunctionality in the Enterprise Library from Microsoft Patterns and Practices team.\n"
  example: []
  syntax:
    content: public SqlConnection OpenConnectionForKey(TKey key, string connectionString)
    content.vb: Public Function OpenConnectionForKey(key As TKey, connectionString As String) As SqlConnection
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    - id: connectionString
      type: System.String
      description: "\nConnection string with credential information such as SQL Server credentials or Integrated Security settings. \nThe hostname of the server and the database name for the shard are obtained from the lookup operation for key.\n"
    return:
      type: System.Data.SqlClient.SqlConnection
      description: An opened SqlConnection.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey*
  nameWithType.vb: RangeShardMap(Of TKey).OpenConnectionForKey(TKey, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).OpenConnectionForKey(TKey, System.String)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  id: OpenConnectionForKey(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: OpenConnectionForKey(TKey, String, ConnectionOptions)
  nameWithType: RangeShardMap<TKey>.OpenConnectionForKey(TKey, String, ConnectionOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.OpenConnectionForKey(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: OpenConnectionForKey
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nOpens a regular <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> to the shard \nto which the specified key value is mapped.\n"
  remarks: "\nNote that the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> object returned by this call is not protected against transient faults. \nCallers should follow best practices to protect the connection against transient faults \nin their application code, e.g., by using the transient fault handling \nfunctionality in the Enterprise Library from Microsoft Patterns and Practices team.\n"
  example: []
  syntax:
    content: public SqlConnection OpenConnectionForKey(TKey key, string connectionString, ConnectionOptions options)
    content.vb: Public Function OpenConnectionForKey(key As TKey, connectionString As String, options As ConnectionOptions) As SqlConnection
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    - id: connectionString
      type: System.String
      description: "\nConnection string with credential information such as SQL Server credentials or Integrated Security settings. \nThe hostname of the server and the database name for the shard are obtained from the lookup operation for key.\n"
    - id: options
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
      description: Options for validation operations to perform on opened connection.
    return:
      type: System.Data.SqlClient.SqlConnection
      description: An opened SqlConnection.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey*
  nameWithType.vb: RangeShardMap(Of TKey).OpenConnectionForKey(TKey, String, ConnectionOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).OpenConnectionForKey(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String)
  id: OpenConnectionForKeyAsync(`0,System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: OpenConnectionForKeyAsync(TKey, String)
  nameWithType: RangeShardMap<TKey>.OpenConnectionForKeyAsync(TKey, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.OpenConnectionForKeyAsync(TKey, System.String)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: OpenConnectionForKeyAsync
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nAsynchronously opens a regular <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> to the shard \nto which the specified key value is mapped, with <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions.Validate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nNote that the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> object returned by this call is not protected against transient faults. \nCallers should follow best practices to protect the connection against transient faults \nin their application code, e.g., by using the transient fault handling \nfunctionality in the Enterprise Library from Microsoft Patterns and Practices team.\nAll non-usage errors will be propagated via the returned Task.\n"
  example: []
  syntax:
    content: public Task<SqlConnection> OpenConnectionForKeyAsync(TKey key, string connectionString)
    content.vb: Public Function OpenConnectionForKeyAsync(key As TKey, connectionString As String) As Task(Of SqlConnection)
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    - id: connectionString
      type: System.String
      description: "\nConnection string with credential information such as SQL Server credentials or Integrated Security settings. \nThe hostname of the server and the database name for the shard are obtained from the lookup operation for key.\n"
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlConnection}
      description: A Task encapsulating an opened SqlConnection.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync*
  nameWithType.vb: RangeShardMap(Of TKey).OpenConnectionForKeyAsync(TKey, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).OpenConnectionForKeyAsync(TKey, System.String)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  id: OpenConnectionForKeyAsync(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: OpenConnectionForKeyAsync(TKey, String, ConnectionOptions)
  nameWithType: RangeShardMap<TKey>.OpenConnectionForKeyAsync(TKey, String, ConnectionOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.OpenConnectionForKeyAsync(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: OpenConnectionForKeyAsync
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nAsynchronously opens a regular <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> to the shard \nto which the specified key value is mapped.\n"
  remarks: "\nNote that the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> object returned by this call is not protected against transient faults. \nCallers should follow best practices to protect the connection against transient faults \nin their application code, e.g., by using the transient fault handling \nfunctionality in the Enterprise Library from Microsoft Patterns and Practices team.\nAll non-usage errors will be propagated via the returned Task.\n"
  example: []
  syntax:
    content: public Task<SqlConnection> OpenConnectionForKeyAsync(TKey key, string connectionString, ConnectionOptions options)
    content.vb: Public Function OpenConnectionForKeyAsync(key As TKey, connectionString As String, options As ConnectionOptions) As Task(Of SqlConnection)
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    - id: connectionString
      type: System.String
      description: "\nConnection string with credential information such as SQL Server credentials or Integrated Security settings. \nThe hostname of the server and the database name for the shard are obtained from the lookup operation for key.\n"
    - id: options
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
      description: Options for validation operations to perform on opened connection.
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlConnection}
      description: A Task encapsulating an opened SqlConnection.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync*
  nameWithType.vb: RangeShardMap(Of TKey).OpenConnectionForKeyAsync(TKey, String, ConnectionOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).OpenConnectionForKeyAsync(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{`0})
  id: CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: CreateRangeMapping(RangeMappingCreationInfo<TKey>)
  nameWithType: RangeShardMap<TKey>.CreateRangeMapping(RangeMappingCreationInfo<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateRangeMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 150
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCreates and adds a range mapping to ShardMap.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> CreateRangeMapping(RangeMappingCreationInfo<TKey> creationInfo)
    content.vb: Public Function CreateRangeMapping(creationInfo As RangeMappingCreationInfo(Of TKey)) As RangeMapping(Of TKey)
    parameters:
    - id: creationInfo
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{{TKey}}
      description: Information about mapping to be added.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Newly created mapping.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping*
  nameWithType.vb: RangeShardMap(Of TKey).CreateRangeMapping(RangeMappingCreationInfo(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo(Of TKey))
  name.vb: CreateRangeMapping(RangeMappingCreationInfo(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  id: CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: CreateRangeMapping(Range<TKey>, Shard)
  nameWithType: RangeShardMap<TKey>.CreateRangeMapping(Range<TKey>, Shard)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateRangeMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 181
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCreates and adds a range mapping to ShardMap.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> CreateRangeMapping(Range<TKey> range, Shard shard)
    content.vb: Public Function CreateRangeMapping(range As Range(Of TKey), shard As Shard) As RangeMapping(Of TKey)
    parameters:
    - id: range
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{{TKey}}
      description: Range for which to create the mapping.
    - id: shard
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
      description: Shard associated with the range mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Newly created mapping.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping*
  nameWithType.vb: RangeShardMap(Of TKey).CreateRangeMapping(Range(Of TKey), Shard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  name.vb: CreateRangeMapping(Range(Of TKey), Shard)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  id: DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: DeleteMapping(RangeMapping<TKey>)
  nameWithType: RangeShardMap<TKey>.DeleteMapping(RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DeleteMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 210
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nRemoves a range mapping.\n"
  example: []
  syntax:
    content: public void DeleteMapping(RangeMapping<TKey> mapping)
    content.vb: Public Sub DeleteMapping(mapping As RangeMapping(Of TKey))
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping being removed.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping*
  nameWithType.vb: RangeShardMap(Of TKey).DeleteMapping(RangeMapping(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: DeleteMapping(RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: DeleteMapping(RangeMapping<TKey>, MappingLockToken)
  nameWithType: RangeShardMap<TKey>.DeleteMapping(RangeMapping<TKey>, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DeleteMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 222
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nRemoves a range mapping.\n"
  example: []
  syntax:
    content: public void DeleteMapping(RangeMapping<TKey> mapping, MappingLockToken mappingLockToken)
    content.vb: Public Sub DeleteMapping(mapping As RangeMapping(Of TKey), mappingLockToken As MappingLockToken)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping being removed.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping*
  nameWithType.vb: RangeShardMap(Of TKey).DeleteMapping(RangeMapping(Of TKey), MappingLockToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: DeleteMapping(RangeMapping(Of TKey), MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingForKey(`0)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingForKey(`0)
  id: GetMappingForKey(`0)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappingForKey(TKey)
  nameWithType: RangeShardMap<TKey>.GetMappingForKey(TKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappingForKey(TKey)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappingForKey
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 252
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nLooks up the key value and returns the corresponding mapping.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> GetMappingForKey(TKey key)
    content.vb: Public Function GetMappingForKey(key As TKey) As RangeMapping(Of TKey)
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping that contains the key value.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingForKey*
  nameWithType.vb: RangeShardMap(Of TKey).GetMappingForKey(TKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappingForKey(TKey)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.TryGetMappingForKey(`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0}@)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.TryGetMappingForKey(`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0}@)
  id: TryGetMappingForKey(`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0}@)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: TryGetMappingForKey(TKey, out RangeMapping<TKey>)
  nameWithType: RangeShardMap<TKey>.TryGetMappingForKey(TKey, out RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.TryGetMappingForKey(TKey, out Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: TryGetMappingForKey
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 279
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nTries to looks up the key value and place the corresponding mapping in <span class=\"paramref\">rangeMapping</span>.\n"
  example: []
  syntax:
    content: public bool TryGetMappingForKey(TKey key, out RangeMapping<TKey> rangeMapping)
    content.vb: Public Function TryGetMappingForKey(key As TKey, ByRef rangeMapping As RangeMapping(Of TKey)) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    - id: rangeMapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping that contains the key value.
    return:
      type: System.Boolean
      description: <code>true</code> if mapping is found, <code>false</code> otherwise.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.TryGetMappingForKey*
  nameWithType.vb: RangeShardMap(Of TKey).TryGetMappingForKey(TKey, ByRef RangeMapping(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).TryGetMappingForKey(TKey, ByRef Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: TryGetMappingForKey(TKey, ByRef RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings
  id: GetMappings
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappings()
  nameWithType: RangeShardMap<TKey>.GetMappings()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappings()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappings
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 305
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets all the range mappings for the shard map.\n"
  example: []
  syntax:
    content: public IReadOnlyList<RangeMapping<TKey>> GetMappings()
    content.vb: Public Function GetMappings As IReadOnlyList(Of RangeMapping(Of TKey))
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of all range mappings on the shard map.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings*
  nameWithType.vb: RangeShardMap(Of TKey).GetMappings()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappings()
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0})
  id: GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappings(Range<TKey>)
  nameWithType: RangeShardMap<TKey>.GetMappings(Range<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappings
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 335
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets all the range mappings that exist within given range.\n"
  example: []
  syntax:
    content: public IReadOnlyList<RangeMapping<TKey>> GetMappings(Range<TKey> range)
    content.vb: Public Function GetMappings(range As Range(Of TKey)) As IReadOnlyList(Of RangeMapping(Of TKey))
    parameters:
    - id: range
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{{TKey}}
      description: Range value, any mapping overlapping with the range will be returned.
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of mappings that satisfy the given range constraint.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings*
  nameWithType.vb: RangeShardMap(Of TKey).GetMappings(Range(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range(Of TKey))
  name.vb: GetMappings(Range(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  id: GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappings(Shard)
  nameWithType: RangeShardMap<TKey>.GetMappings(Shard)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappings
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 369
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets all the range mappings that exist for the given shard.\n"
  example: []
  syntax:
    content: public IReadOnlyList<RangeMapping<TKey>> GetMappings(Shard shard)
    content.vb: Public Function GetMappings(shard As Shard) As IReadOnlyList(Of RangeMapping(Of TKey))
    parameters:
    - id: shard
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
      description: Shard for which the mappings will be returned.
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of mappings that satisfy the given shard constraint.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings*
  nameWithType.vb: RangeShardMap(Of TKey).GetMappings(Shard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  id: GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappings(Range<TKey>, Shard)
  nameWithType: RangeShardMap<TKey>.GetMappings(Range<TKey>, Shard)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappings
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 404
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets all the range mappings that exist within given range and given shard.\n"
  example: []
  syntax:
    content: public IReadOnlyList<RangeMapping<TKey>> GetMappings(Range<TKey> range, Shard shard)
    content.vb: Public Function GetMappings(range As Range(Of TKey), shard As Shard) As IReadOnlyList(Of RangeMapping(Of TKey))
    parameters:
    - id: range
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{{TKey}}
      description: Range value, any mapping overlapping with the range will be returned.
    - id: shard
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
      description: Shard for which the mappings will be returned.
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of mappings that satisfy the given range and shard constraints.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings*
  nameWithType.vb: RangeShardMap(Of TKey).GetMappings(Range(Of TKey), Shard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  name.vb: GetMappings(Range(Of TKey), Shard)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  id: MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MarkMappingOffline(RangeMapping<TKey>)
  nameWithType: RangeShardMap<TKey>.MarkMappingOffline(RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MarkMappingOffline
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 439
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMarks the specified mapping offline.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> MarkMappingOffline(RangeMapping<TKey> mapping)
    content.vb: Public Function MarkMappingOffline(mapping As RangeMapping(Of TKey)) As RangeMapping(Of TKey)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: An offline mapping.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline*
  nameWithType.vb: RangeShardMap(Of TKey).MarkMappingOffline(RangeMapping(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: MarkMappingOffline(RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MarkMappingOffline(RangeMapping<TKey>, MappingLockToken)
  nameWithType: RangeShardMap<TKey>.MarkMappingOffline(RangeMapping<TKey>, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MarkMappingOffline
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 450
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMarks the specified mapping offline.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> MarkMappingOffline(RangeMapping<TKey> mapping, MappingLockToken mappingLockToken)
    content.vb: Public Function MarkMappingOffline(mapping As RangeMapping(Of TKey), mappingLockToken As MappingLockToken) As RangeMapping(Of TKey)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: An offline mapping.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline*
  nameWithType.vb: RangeShardMap(Of TKey).MarkMappingOffline(RangeMapping(Of TKey), MappingLockToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: MarkMappingOffline(RangeMapping(Of TKey), MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  id: MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MarkMappingOnline(RangeMapping<TKey>)
  nameWithType: RangeShardMap<TKey>.MarkMappingOnline(RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MarkMappingOnline
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 482
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMarks the specified mapping online.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> MarkMappingOnline(RangeMapping<TKey> mapping)
    content.vb: Public Function MarkMappingOnline(mapping As RangeMapping(Of TKey)) As RangeMapping(Of TKey)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: An online mapping.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline*
  nameWithType.vb: RangeShardMap(Of TKey).MarkMappingOnline(RangeMapping(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: MarkMappingOnline(RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MarkMappingOnline(RangeMapping<TKey>, MappingLockToken)
  nameWithType: RangeShardMap<TKey>.MarkMappingOnline(RangeMapping<TKey>, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MarkMappingOnline
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 493
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMarks the specified mapping online.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> MarkMappingOnline(RangeMapping<TKey> mapping, MappingLockToken mappingLockToken)
    content.vb: Public Function MarkMappingOnline(mapping As RangeMapping(Of TKey), mappingLockToken As MappingLockToken) As RangeMapping(Of TKey)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: An online mapping.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline*
  nameWithType.vb: RangeShardMap(Of TKey).MarkMappingOnline(RangeMapping(Of TKey), MappingLockToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: MarkMappingOnline(RangeMapping(Of TKey), MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  id: GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappingLockOwner(RangeMapping<TKey>)
  nameWithType: RangeShardMap<TKey>.GetMappingLockOwner(RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappingLockOwner
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 525
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the lock owner id of the specified mapping.\n"
  example: []
  syntax:
    content: public MappingLockToken GetMappingLockOwner(RangeMapping<TKey> mapping)
    content.vb: Public Function GetMappingLockOwner(mapping As RangeMapping(Of TKey)) As MappingLockToken
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingLockOwner*
  nameWithType.vb: RangeShardMap(Of TKey).GetMappingLockOwner(RangeMapping(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: GetMappingLockOwner(RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: LockMapping(RangeMapping<TKey>, MappingLockToken)
  nameWithType: RangeShardMap<TKey>.LockMapping(RangeMapping<TKey>, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: LockMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 556
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nLocks the mapping for the specified owner\nThe state of a locked mapping can only be modified by the lock owner.\n"
  example: []
  syntax:
    content: public void LockMapping(RangeMapping<TKey> mapping, MappingLockToken mappingLockToken)
    content.vb: Public Sub LockMapping(mapping As RangeMapping(Of TKey), mappingLockToken As MappingLockToken)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.LockMapping*
  nameWithType.vb: RangeShardMap(Of TKey).LockMapping(RangeMapping(Of TKey), MappingLockToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: LockMapping(RangeMapping(Of TKey), MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: UnlockMapping(RangeMapping<TKey>, MappingLockToken)
  nameWithType: RangeShardMap<TKey>.UnlockMapping(RangeMapping<TKey>, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: UnlockMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 589
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nUnlocks the specified mapping\n"
  example: []
  syntax:
    content: public void UnlockMapping(RangeMapping<TKey> mapping, MappingLockToken mappingLockToken)
    content.vb: Public Sub UnlockMapping(mapping As RangeMapping(Of TKey), mappingLockToken As MappingLockToken)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping*
  nameWithType.vb: RangeShardMap(Of TKey).UnlockMapping(RangeMapping(Of TKey), MappingLockToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: UnlockMapping(RangeMapping(Of TKey), MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: UnlockMapping(MappingLockToken)
  nameWithType: RangeShardMap<TKey>.UnlockMapping(MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: UnlockMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 619
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nUnlocks all mappings in this map that belong to the given <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void UnlockMapping(MappingLockToken mappingLockToken)
    content.vb: Public Sub UnlockMapping(mappingLockToken As MappingLockToken)
    parameters:
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping*
  nameWithType.vb: RangeShardMap(Of TKey).UnlockMapping(MappingLockToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  id: UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: UpdateMapping(RangeMapping<TKey>, RangeMappingUpdate)
  nameWithType: RangeShardMap<TKey>.UpdateMapping(RangeMapping<TKey>, RangeMappingUpdate)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: UpdateMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 651
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nUpdates a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping%601\" data-throw-if-not-resolved=\"false\"></xref> with the updates provided in \nthe <span class=\"paramref\">update</span> parameter.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> UpdateMapping(RangeMapping<TKey> currentMapping, RangeMappingUpdate update)
    content.vb: Public Function UpdateMapping(currentMapping As RangeMapping(Of TKey), update As RangeMappingUpdate) As RangeMapping(Of TKey)
    parameters:
    - id: currentMapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping being updated.
    - id: update
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate
      description: Updated properties of the mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: New instance of mapping with updated information.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping*
  nameWithType.vb: RangeShardMap(Of TKey).UpdateMapping(RangeMapping(Of TKey), RangeMappingUpdate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  name.vb: UpdateMapping(RangeMapping(Of TKey), RangeMappingUpdate)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: UpdateMapping(RangeMapping<TKey>, RangeMappingUpdate, MappingLockToken)
  nameWithType: RangeShardMap<TKey>.UpdateMapping(RangeMapping<TKey>, RangeMappingUpdate, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: UpdateMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 666
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nUpdates a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping%601\" data-throw-if-not-resolved=\"false\"></xref> with the updates provided in \nthe <span class=\"paramref\">update</span> parameter.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> UpdateMapping(RangeMapping<TKey> currentMapping, RangeMappingUpdate update, MappingLockToken mappingLockToken)
    content.vb: Public Function UpdateMapping(currentMapping As RangeMapping(Of TKey), update As RangeMappingUpdate, mappingLockToken As MappingLockToken) As RangeMapping(Of TKey)
    parameters:
    - id: currentMapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping being updated.
    - id: update
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate
      description: Updated properties of the mapping.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: New instance of mapping with updated information.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping*
  nameWithType.vb: RangeShardMap(Of TKey).UpdateMapping(RangeMapping(Of TKey), RangeMappingUpdate, MappingLockToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: UpdateMapping(RangeMapping(Of TKey), RangeMappingUpdate, MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0)
  id: SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: SplitMapping(RangeMapping<TKey>, TKey)
  nameWithType: RangeShardMap<TKey>.SplitMapping(RangeMapping<TKey>, TKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, TKey)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: SplitMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 702
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nSplits the specified mapping into two new mappings using the specified key as boundary. \nThe new mappings point to the same shard as the existing mapping.\n"
  example: []
  syntax:
    content: public IReadOnlyList<RangeMapping<TKey>> SplitMapping(RangeMapping<TKey> existingMapping, TKey splitAt)
    content.vb: Public Function SplitMapping(existingMapping As RangeMapping(Of TKey), splitAt As TKey) As IReadOnlyList(Of RangeMapping(Of TKey))
    parameters:
    - id: existingMapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Existing mapping.
    - id: splitAt
      type: '{TKey}'
      description: Split point.
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of two new mappings that were created.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping*
  nameWithType.vb: RangeShardMap(Of TKey).SplitMapping(RangeMapping(Of TKey), TKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), TKey)
  name.vb: SplitMapping(RangeMapping(Of TKey), TKey)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: SplitMapping(RangeMapping<TKey>, TKey, MappingLockToken)
  nameWithType: RangeShardMap<TKey>.SplitMapping(RangeMapping<TKey>, TKey, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, TKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: SplitMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 718
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nSplits the specified mapping into two new mappings using the specified key as boundary. \nThe new mappings point to the same shard as the existing mapping.\n"
  example: []
  syntax:
    content: public IReadOnlyList<RangeMapping<TKey>> SplitMapping(RangeMapping<TKey> existingMapping, TKey splitAt, MappingLockToken mappingLockToken)
    content.vb: Public Function SplitMapping(existingMapping As RangeMapping(Of TKey), splitAt As TKey, mappingLockToken As MappingLockToken) As IReadOnlyList(Of RangeMapping(Of TKey))
    parameters:
    - id: existingMapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Existing mapping.
    - id: splitAt
      type: '{TKey}'
      description: Split point.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of two new mappings that were created.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping*
  nameWithType.vb: RangeShardMap(Of TKey).SplitMapping(RangeMapping(Of TKey), TKey, MappingLockToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), TKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: SplitMapping(RangeMapping(Of TKey), TKey, MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  id: MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MergeMappings(RangeMapping<TKey>, RangeMapping<TKey>)
  nameWithType: RangeShardMap<TKey>.MergeMappings(RangeMapping<TKey>, RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MergeMappings
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 753
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMerges 2 contiguous mappings into a single mapping. Both left and right mappings should point\nto the same location and must be contiguous.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> MergeMappings(RangeMapping<TKey> left, RangeMapping<TKey> right)
    content.vb: Public Function MergeMappings(left As RangeMapping(Of TKey), right As RangeMapping(Of TKey)) As RangeMapping(Of TKey)
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Left mapping.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Right mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping that results from the merge operation.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings*
  nameWithType.vb: RangeShardMap(Of TKey).MergeMappings(RangeMapping(Of TKey), RangeMapping(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: MergeMappings(RangeMapping(Of TKey), RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MergeMappings(RangeMapping<TKey>, RangeMapping<TKey>, MappingLockToken, MappingLockToken)
  nameWithType: RangeShardMap<TKey>.MergeMappings(RangeMapping<TKey>, RangeMapping<TKey>, MappingLockToken, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MergeMappings
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 771
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMerges 2 contiguous mappings into a single mapping. Both left and right mappings should point\nto the same location and must be contiguous.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> MergeMappings(RangeMapping<TKey> left, RangeMapping<TKey> right, MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
    content.vb: Public Function MergeMappings(left As RangeMapping(Of TKey), right As RangeMapping(Of TKey), leftMappingLockToken As MappingLockToken, rightMappingLockToken As MappingLockToken) As RangeMapping(Of TKey)
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Left mapping.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Right mapping.
    - id: leftMappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref> for the left mapping
    - id: rightMappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref> for the right mapping
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping that results from the merge operation.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings*
  nameWithType.vb: RangeShardMap(Of TKey).MergeMappings(RangeMapping(Of TKey), RangeMapping(Of TKey), MappingLockToken, MappingLockToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: MergeMappings(RangeMapping(Of TKey), RangeMapping(Of TKey), MappingLockToken, MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.Clone
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.Clone
  id: Clone
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: RangeShardMap<TKey>.Clone()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.Clone()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Clone
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 816
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nClones the given range shard map.\n"
  example: []
  syntax:
    content: public RangeShardMap<TKey> Clone()
    content.vb: Public Function Clone As RangeShardMap(Of TKey)
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
      description: A cloned instance of the range shard map.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.Clone*
  nameWithType.vb: RangeShardMap(Of TKey).Clone()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).Clone()
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CloneCore
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CloneCore
  id: CloneCore
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: CloneCore()
  nameWithType: RangeShardMap<TKey>.CloneCore()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.CloneCore()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CloneCore
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 836
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nClones the current shard map instance.\n"
  example: []
  syntax:
    content: protected override ShardMap CloneCore()
    content.vb: Protected Overrides Function CloneCore As ShardMap
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
      description: Cloned shard map instance.
  overridden: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CloneCore*
  nameWithType.vb: RangeShardMap(Of TKey).CloneCore()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).CloneCore()
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardMap
  nameWithType: ShardMap
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.Name
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.Name
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: Name
  nameWithType: ShardMap.Name
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.Name
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.MapType
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.MapType
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: MapType
  nameWithType: ShardMap.MapType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.MapType
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.KeyType
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.KeyType
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: KeyType
  nameWithType: ShardMap.KeyType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.KeyType
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: ToString()
  nameWithType: ShardMap.ToString()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString()
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
    name: ToString
    nameWithType: ShardMap.ToString
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
    name: ToString
    nameWithType: ShardMap.ToString
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1({TKey},System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String)
  name: OpenConnectionForKey<TKey>(TKey, String)
  nameWithType: ShardMap.OpenConnectionForKey<TKey>(TKey, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>(TKey, System.String)
  nameWithType.vb: ShardMap.OpenConnectionForKey(Of TKey)(TKey, String)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)(TKey, System.String)
  name.vb: OpenConnectionForKey(Of TKey)(TKey, String)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String)
    name: OpenConnectionForKey<TKey>
    nameWithType: ShardMap.OpenConnectionForKey<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String)
    name: OpenConnectionForKey(Of TKey)
    nameWithType: ShardMap.OpenConnectionForKey(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1({TKey},System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  name: OpenConnectionForKey<TKey>(TKey, String, ConnectionOptions)
  nameWithType: ShardMap.OpenConnectionForKey<TKey>(TKey, String, ConnectionOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  nameWithType.vb: ShardMap.OpenConnectionForKey(Of TKey)(TKey, String, ConnectionOptions)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  name.vb: OpenConnectionForKey(Of TKey)(TKey, String, ConnectionOptions)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKey<TKey>
    nameWithType: ShardMap.OpenConnectionForKey<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    nameWithType: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKey(Of TKey)
    nameWithType: ShardMap.OpenConnectionForKey(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    nameWithType: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1({TKey},System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String)
  name: OpenConnectionForKeyAsync<TKey>(TKey, String)
  nameWithType: ShardMap.OpenConnectionForKeyAsync<TKey>(TKey, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>(TKey, System.String)
  nameWithType.vb: ShardMap.OpenConnectionForKeyAsync(Of TKey)(TKey, String)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)(TKey, System.String)
  name.vb: OpenConnectionForKeyAsync(Of TKey)(TKey, String)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String)
    name: OpenConnectionForKeyAsync<TKey>
    nameWithType: ShardMap.OpenConnectionForKeyAsync<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String)
    name: OpenConnectionForKeyAsync(Of TKey)
    nameWithType: ShardMap.OpenConnectionForKeyAsync(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1({TKey},System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  name: OpenConnectionForKeyAsync<TKey>(TKey, String, ConnectionOptions)
  nameWithType: ShardMap.OpenConnectionForKeyAsync<TKey>(TKey, String, ConnectionOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  nameWithType.vb: ShardMap.OpenConnectionForKeyAsync(Of TKey)(TKey, String, ConnectionOptions)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  name.vb: OpenConnectionForKeyAsync(Of TKey)(TKey, String, ConnectionOptions)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKeyAsync<TKey>
    nameWithType: ShardMap.OpenConnectionForKeyAsync<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    nameWithType: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKeyAsync(Of TKey)
    nameWithType: ShardMap.OpenConnectionForKeyAsync(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    nameWithType: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: GetShards()
  nameWithType: ShardMap.GetShards()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards()
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
    name: GetShards
    nameWithType: ShardMap.GetShards
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
    name: GetShards
    nameWithType: ShardMap.GetShards
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: GetShard(ShardLocation)
  nameWithType: ShardMap.GetShard(ShardLocation)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
    name: GetShard
    nameWithType: ShardMap.GetShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    nameWithType: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
    name: GetShard
    nameWithType: ShardMap.GetShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    nameWithType: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard@)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard@)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: TryGetShard(ShardLocation, Shard)
  nameWithType: ShardMap.TryGetShard(ShardLocation, Shard)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard@)
    name: TryGetShard
    nameWithType: ShardMap.TryGetShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    nameWithType: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
    name: Shard
    nameWithType: Shard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard@)
    name: TryGetShard
    nameWithType: ShardMap.TryGetShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    nameWithType: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
    name: Shard
    nameWithType: Shard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: CreateShard(ShardCreationInfo)
  nameWithType: ShardMap.CreateShard(ShardCreationInfo)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo)
    name: CreateShard
    nameWithType: ShardMap.CreateShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo
    name: ShardCreationInfo
    nameWithType: ShardCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo)
    name: CreateShard
    nameWithType: ShardMap.CreateShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo
    name: ShardCreationInfo
    nameWithType: ShardCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: CreateShard(ShardLocation)
  nameWithType: ShardMap.CreateShard(ShardLocation)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
    name: CreateShard
    nameWithType: ShardMap.CreateShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    nameWithType: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
    name: CreateShard
    nameWithType: ShardMap.CreateShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    nameWithType: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: DeleteShard(Shard)
  nameWithType: ShardMap.DeleteShard(Shard)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
    name: DeleteShard
    nameWithType: ShardMap.DeleteShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
    name: Shard
    nameWithType: Shard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
    name: DeleteShard
    nameWithType: ShardMap.DeleteShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
    name: Shard
    nameWithType: Shard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap``1
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  name: AsListShardMap<TKey>()
  nameWithType: ShardMapExtensions.AsListShardMap<TKey>()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap<TKey>()
  nameWithType.vb: ShardMapExtensions.AsListShardMap(Of TKey)()
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap(Of TKey)()
  name.vb: AsListShardMap(Of TKey)()
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap``1
    name: AsListShardMap<TKey>
    nameWithType: ShardMapExtensions.AsListShardMap<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap``1
    name: AsListShardMap(Of TKey)
    nameWithType: ShardMapExtensions.AsListShardMap(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap``1
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  name: AsRangeShardMap<TKey>()
  nameWithType: ShardMapExtensions.AsRangeShardMap<TKey>()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap<TKey>()
  nameWithType.vb: ShardMapExtensions.AsRangeShardMap(Of TKey)()
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap(Of TKey)()
  name.vb: AsRangeShardMap(Of TKey)()
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap``1
    name: AsRangeShardMap<TKey>
    nameWithType: ShardMapExtensions.AsRangeShardMap<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap``1
    name: AsRangeShardMap(Of TKey)
    nameWithType: ShardMapExtensions.AsRangeShardMap(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String)
  isExternal: true
  name: OpenConnectionForKey<TKey>(TKey, String)
  nameWithType: ShardMap.OpenConnectionForKey<TKey>(TKey, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>(TKey, System.String)
  nameWithType.vb: ShardMap.OpenConnectionForKey(Of TKey)(TKey, String)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)(TKey, System.String)
  name.vb: OpenConnectionForKey(Of TKey)(TKey, String)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String)
    name: OpenConnectionForKey<TKey>
    nameWithType: ShardMap.OpenConnectionForKey<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String)
    name: OpenConnectionForKey(Of TKey)
    nameWithType: ShardMap.OpenConnectionForKey(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  isExternal: true
  name: OpenConnectionForKey<TKey>(TKey, String, ConnectionOptions)
  nameWithType: ShardMap.OpenConnectionForKey<TKey>(TKey, String, ConnectionOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  nameWithType.vb: ShardMap.OpenConnectionForKey(Of TKey)(TKey, String, ConnectionOptions)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  name.vb: OpenConnectionForKey(Of TKey)(TKey, String, ConnectionOptions)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKey<TKey>
    nameWithType: ShardMap.OpenConnectionForKey<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    nameWithType: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKey(Of TKey)
    nameWithType: ShardMap.OpenConnectionForKey(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    nameWithType: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String)
  isExternal: true
  name: OpenConnectionForKeyAsync<TKey>(TKey, String)
  nameWithType: ShardMap.OpenConnectionForKeyAsync<TKey>(TKey, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>(TKey, System.String)
  nameWithType.vb: ShardMap.OpenConnectionForKeyAsync(Of TKey)(TKey, String)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)(TKey, System.String)
  name.vb: OpenConnectionForKeyAsync(Of TKey)(TKey, String)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String)
    name: OpenConnectionForKeyAsync<TKey>
    nameWithType: ShardMap.OpenConnectionForKeyAsync<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String)
    name: OpenConnectionForKeyAsync(Of TKey)
    nameWithType: ShardMap.OpenConnectionForKeyAsync(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  isExternal: true
  name: OpenConnectionForKeyAsync<TKey>(TKey, String, ConnectionOptions)
  nameWithType: ShardMap.OpenConnectionForKeyAsync<TKey>(TKey, String, ConnectionOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  nameWithType.vb: ShardMap.OpenConnectionForKeyAsync(Of TKey)(TKey, String, ConnectionOptions)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  name.vb: OpenConnectionForKeyAsync(Of TKey)(TKey, String, ConnectionOptions)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKeyAsync<TKey>
    nameWithType: ShardMap.OpenConnectionForKeyAsync<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    nameWithType: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKeyAsync(Of TKey)
    nameWithType: ShardMap.OpenConnectionForKeyAsync(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    nameWithType: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  isExternal: false
  name: AsListShardMap<TKey>(ShardMap)
  nameWithType: ShardMapExtensions.AsListShardMap<TKey>(ShardMap)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap<TKey>(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  nameWithType.vb: ShardMapExtensions.AsListShardMap(Of TKey)(ShardMap)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap(Of TKey)(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  name.vb: AsListShardMap(Of TKey)(ShardMap)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
    name: AsListShardMap<TKey>
    nameWithType: ShardMapExtensions.AsListShardMap<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
    name: ShardMap
    nameWithType: ShardMap
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
    name: AsListShardMap(Of TKey)
    nameWithType: ShardMapExtensions.AsListShardMap(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsListShardMap(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
    name: ShardMap
    nameWithType: ShardMap
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardMapExtensions
  nameWithType: ShardMapExtensions
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  isExternal: false
  name: AsRangeShardMap<TKey>(ShardMap)
  nameWithType: ShardMapExtensions.AsRangeShardMap<TKey>(ShardMap)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap<TKey>(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  nameWithType.vb: ShardMapExtensions.AsRangeShardMap(Of TKey)(ShardMap)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap(Of TKey)(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
  name.vb: AsRangeShardMap(Of TKey)(ShardMap)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
    name: AsRangeShardMap<TKey>
    nameWithType: ShardMapExtensions.AsRangeShardMap<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
    name: ShardMap
    nameWithType: ShardMap
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap``1(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap)
    name: AsRangeShardMap(Of TKey)
    nameWithType: ShardMapExtensions.AsRangeShardMap(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapExtensions.AsRangeShardMap(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
    name: ShardMap
    nameWithType: ShardMap
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.SqlClient.SqlConnection
  commentId: T:System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: true
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions.Validate
  commentId: F:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions.Validate
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey
  isExternal: false
  name: OpenConnectionForKey
  nameWithType: RangeShardMap.OpenConnectionForKey
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.OpenConnectionForKey
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient
  commentId: N:System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  nameWithType: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: TKey
  isExternal: false
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ConnectionOptions
  nameWithType: ConnectionOptions
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync
  isExternal: false
  name: OpenConnectionForKeyAsync
  nameWithType: RangeShardMap.OpenConnectionForKeyAsync
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.OpenConnectionForKeyAsync
- uid: System.Threading.Tasks.Task{System.Data.SqlClient.SqlConnection}
  commentId: T:System.Threading.Tasks.Task{System.Data.SqlClient.SqlConnection}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SqlConnection>
  nameWithType: Task<SqlConnection>
  fullName: System.Threading.Tasks.Task<System.Data.SqlClient.SqlConnection>
  nameWithType.vb: Task(Of SqlConnection)
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.SqlClient.SqlConnection)
  name.vb: Task(Of SqlConnection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    nameWithType: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    nameWithType: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping
  isExternal: false
  name: CreateRangeMapping
  nameWithType: RangeShardMap.CreateRangeMapping
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.CreateRangeMapping
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{{TKey}}
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{`0}
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
  name: RangeMappingCreationInfo<TKey>
  nameWithType: RangeMappingCreationInfo<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo<TKey>
  nameWithType.vb: RangeMappingCreationInfo(Of TKey)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo(Of TKey)
  name.vb: RangeMappingCreationInfo(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
    name: RangeMappingCreationInfo
    nameWithType: RangeMappingCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
    name: RangeMappingCreationInfo
    nameWithType: RangeMappingCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0}
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
  name: RangeMapping<TKey>
  nameWithType: RangeMapping<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>
  nameWithType.vb: RangeMapping(Of TKey)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey)
  name.vb: RangeMapping(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    nameWithType: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    nameWithType: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
  isExternal: false
  name: RangeMappingCreationInfo<TKey>
  nameWithType: RangeMappingCreationInfo<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo<TKey>
  nameWithType.vb: RangeMappingCreationInfo(Of TKey)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo(Of TKey)
  name.vb: RangeMappingCreationInfo(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
    name: RangeMappingCreationInfo
    nameWithType: RangeMappingCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
    name: RangeMappingCreationInfo
    nameWithType: RangeMappingCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: RangeMapping<TKey>
  nameWithType: RangeMapping<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>
  nameWithType.vb: RangeMapping(Of TKey)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey)
  name.vb: RangeMapping(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    nameWithType: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    nameWithType: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{{TKey}}
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0}
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
  name: Range<TKey>
  nameWithType: Range<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range<TKey>
  nameWithType.vb: Range(Of TKey)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range(Of TKey)
  name.vb: Range(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
    name: Range
    nameWithType: Range
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
    name: Range
    nameWithType: Range
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Shard
  nameWithType: Shard
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Range<TKey>
  nameWithType: Range<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range<TKey>
  nameWithType.vb: Range(Of TKey)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range(Of TKey)
  name.vb: Range(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
    name: Range
    nameWithType: Range
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
    name: Range
    nameWithType: Range
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping
  isExternal: false
  name: DeleteMapping
  nameWithType: RangeShardMap.DeleteMapping
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.DeleteMapping
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: MappingLockToken
  nameWithType: MappingLockToken
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingForKey*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingForKey
  isExternal: false
  name: GetMappingForKey
  nameWithType: RangeShardMap.GetMappingForKey
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.GetMappingForKey
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.TryGetMappingForKey*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.TryGetMappingForKey
  isExternal: false
  name: TryGetMappingForKey
  nameWithType: RangeShardMap.TryGetMappingForKey
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.TryGetMappingForKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings
  isExternal: false
  name: GetMappings
  nameWithType: RangeShardMap.GetMappings
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.GetMappings
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<RangeMapping<TKey>>
  nameWithType: IReadOnlyList<RangeMapping<TKey>>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>>
  nameWithType.vb: IReadOnlyList(Of RangeMapping(Of TKey))
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: IReadOnlyList(Of RangeMapping(Of TKey))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    nameWithType: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    nameWithType: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline
  isExternal: false
  name: MarkMappingOffline
  nameWithType: RangeShardMap.MarkMappingOffline
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.MarkMappingOffline
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline
  isExternal: false
  name: MarkMappingOnline
  nameWithType: RangeShardMap.MarkMappingOnline
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.MarkMappingOnline
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingLockOwner*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingLockOwner
  isExternal: false
  name: GetMappingLockOwner
  nameWithType: RangeShardMap.GetMappingLockOwner
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.GetMappingLockOwner
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.LockMapping*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.LockMapping
  isExternal: false
  name: LockMapping
  nameWithType: RangeShardMap.LockMapping
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.LockMapping
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping
  isExternal: false
  name: UnlockMapping
  nameWithType: RangeShardMap.UnlockMapping
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.UnlockMapping
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping
  isExternal: false
  name: UpdateMapping
  nameWithType: RangeShardMap.UpdateMapping
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.UpdateMapping
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: RangeMappingUpdate
  nameWithType: RangeMappingUpdate
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping
  isExternal: false
  name: SplitMapping
  nameWithType: RangeShardMap.SplitMapping
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.SplitMapping
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings
  isExternal: false
  name: MergeMappings
  nameWithType: RangeShardMap.MergeMappings
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.MergeMappings
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.Clone*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.Clone
  isExternal: false
  name: Clone
  nameWithType: RangeShardMap.Clone
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.Clone
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: RangeShardMap<TKey>
  nameWithType: RangeShardMap<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>
  nameWithType.vb: RangeShardMap(Of TKey)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey)
  name.vb: RangeShardMap(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
    name: RangeShardMap
    nameWithType: RangeShardMap
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
    name: RangeShardMap
    nameWithType: RangeShardMap
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: CloneCore()
  nameWithType: ShardMap.CloneCore()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore()
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
    name: CloneCore
    nameWithType: ShardMap.CloneCore
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
    name: CloneCore
    nameWithType: ShardMap.CloneCore
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CloneCore*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CloneCore
  isExternal: false
  name: CloneCore
  nameWithType: RangeShardMap.CloneCore
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap.CloneCore
