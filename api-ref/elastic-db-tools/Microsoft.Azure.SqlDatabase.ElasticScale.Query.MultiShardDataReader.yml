### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  id: MultiShardDataReader
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Close
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Connection
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.CreateObjRef(System.Type)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Depth
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Dispose(System.Boolean)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Equals(System.Object)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ExecutionPolicy
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.FieldCount
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBoolean(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetByte(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChar(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDataTypeName(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTime(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTimeOffset(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDbDataReader(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDecimal(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDouble(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetEnumerator
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldType(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValue``1(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFloat(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetGuid(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetHashCode
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt16(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt32(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt64(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetName(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetOrdinal(System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificFieldType(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValue(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValues(System.Object[])
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSchemaTable
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBinary(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBoolean(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlByte(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBytes(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlChars(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDateTime(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDecimal(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDouble(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlGuid(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt16(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt32(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt64(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlMoney(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlSingle(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlString(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValue(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValues(System.Object[])
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlXml(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetStream(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetString(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTextReader(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTimeSpan(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValue(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValues(System.Object[])
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetXmlReader(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.HasRows
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.InitializeLifetimeService
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsClosed
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNull(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item(System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item(System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.MultiShardExceptions
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResult
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResultAsync(System.Threading.CancellationToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Read
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ReadAsync(System.Threading.CancellationToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.RecordsAffected
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ToString
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.VisibleFieldCount
  langs:
  - csharp
  - vb
  name: MultiShardDataReader
  nameWithType: MultiShardDataReader
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MultiShardDataReader
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nProvides a way of reading a forward-only stream of rows that is retrieved from a shard set. \n"
  example: []
  syntax:
    content: 'public sealed class MultiShardDataReader : DbDataReader, IEnumerable, IDataReader, IDisposable, IDataRecord'
    content.vb: >-
      Public NotInheritable Class MultiShardDataReader
          Inherits DbDataReader
          Implements IEnumerable, IDataReader, IDisposable, IDataRecord
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements:
  - System.Collections.IEnumerable
  - System.Data.IDataReader
  - System.IDisposable
  - System.Data.IDataRecord
  inheritedMembers:
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Connection
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Connection
  id: Connection
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: MultiShardDataReader.Connection
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Connection
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Connection
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection\" data-throw-if-not-resolved=\"false\"></xref> associated with the MultiShardDataReader.\n"
  example: []
  syntax:
    content: public MultiShardConnection Connection { get; }
    content.vb: Public ReadOnly Property Connection As MultiShardConnection
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Connection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.MultiShardExceptions
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.MultiShardExceptions
  id: MultiShardExceptions
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: MultiShardExceptions
  nameWithType: MultiShardDataReader.MultiShardExceptions
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.MultiShardExceptions
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MultiShardExceptions
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 164
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the collection of exceptions encountered when processing the command across the shards.\nThe collection is populated when <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy.PartialResults\" data-throw-if-not-resolved=\"false\"></xref> is chosen\nas the execution policy for the command.\n"
  example: []
  syntax:
    content: public IReadOnlyCollection<MultiShardException> MultiShardExceptions { get; }
    content.vb: Public ReadOnly Property MultiShardExceptions As IReadOnlyCollection(Of MultiShardException)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardException}
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.MultiShardExceptions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ExecutionPolicy
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ExecutionPolicy
  id: ExecutionPolicy
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: ExecutionPolicy
  nameWithType: MultiShardDataReader.ExecutionPolicy
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ExecutionPolicy
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecutionPolicy
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 176
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the execution policy that will be used to execute commands.\n"
  example: []
  syntax:
    content: public MultiShardExecutionPolicy ExecutionPolicy { get; }
    content.vb: Public ReadOnly Property ExecutionPolicy As MultiShardExecutionPolicy
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ExecutionPolicy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Close
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Close
  id: Close
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: MultiShardDataReader.Close()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Close()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Close
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 192
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nCloses the MultiShardDataReader object.\n"
  remarks: "\nSimilar to DbDataReader, close is idempotent.\n"
  example: []
  syntax:
    content: public override void Close()
    content.vb: Public Overrides Sub Close
  overridden: System.Data.Common.DbDataReader.Close
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Close*
  implements:
  - System.Data.IDataReader.Close
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.CreateObjRef(System.Type)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.CreateObjRef(System.Type)
  id: CreateObjRef(System.Type)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: CreateObjRef(Type)
  nameWithType: MultiShardDataReader.CreateObjRef(Type)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.CreateObjRef(System.Type)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateObjRef
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 246
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThis method is currently not supported. Invoking the method will result in an exception.\n"
  example: []
  syntax:
    content: public override ObjRef CreateObjRef(Type requestedType)
    content.vb: Public Overrides Function CreateObjRef(requestedType As Type) As ObjRef
    parameters:
    - id: requestedType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the object that the new <xref href="System.Runtime.Remoting.ObjRef" data-throw-if-not-resolved="false"></xref> will reference.
    return:
      type: System.Runtime.Remoting.ObjRef
  overridden: System.MarshalByRefObject.CreateObjRef(System.Type)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.CreateObjRef*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Equals(System.Object)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: MultiShardDataReader.Equals(Object)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 256
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nDetermines whether the specified object is equal to the current object. (Inherited from <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.)\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: the object to compare with the current object.
    return:
      type: System.Boolean
      description: True if the specified object is equal to the current object; otherwise, false.
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBoolean(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetBoolean(Int32)
  nameWithType: MultiShardDataReader.GetBoolean(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBoolean(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetBoolean
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 269
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a Boolean.\n"
  example: []
  syntax:
    content: public override bool GetBoolean(int ordinal)
    content.vb: Public Overrides Function GetBoolean(ordinal As Integer) As Boolean
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Boolean
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBoolean*
  implements:
  - System.Data.IDataRecord.GetBoolean(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetByte(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetByte(Int32)
  nameWithType: MultiShardDataReader.GetByte(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetByte(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetByte
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 279
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a byte.\n"
  example: []
  syntax:
    content: public override byte GetByte(int ordinal)
    content.vb: Public Overrides Function GetByte(ordinal As Integer) As Byte
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Byte
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetByte(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetByte*
  implements:
  - System.Data.IDataRecord.GetByte(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)
  nameWithType: MultiShardDataReader.GetBytes(Int32, Int64, Byte[], Int32, Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetBytes
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 294
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nReads a stream of bytes from the specified column, starting at location indicated by dataOffset, into the \nbuffer, starting at the location indicated by bufferOffset.\n"
  example: []
  syntax:
    content: public override long GetBytes(int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length)
    content.vb: Public Overrides Function GetBytes(ordinal As Integer, dataOffset As Long, buffer As Byte(), bufferOffset As Integer, length As Integer) As Long
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    - id: dataOffset
      type: System.Int64
      description: The index within the row from which to begin the read operation.
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the data.
    - id: bufferOffset
      type: System.Int32
      description: The index with the buffer to which the data will be copied.
    - id: length
      type: System.Int32
      description: The maximum number of characters to read.
    return:
      type: System.Int64
      description: The actual number of bytes read.
  overridden: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBytes*
  implements:
  - System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: MultiShardDataReader.GetBytes(Int32, Int64, Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChar(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetChar(Int32)
  nameWithType: MultiShardDataReader.GetChar(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChar(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetChar
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 307
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a single character.\n"
  remarks: Per MSDN, this is not supported for SqlDataReader.
  example: []
  syntax:
    content: public override char GetChar(int ordinal)
    content.vb: Public Overrides Function GetChar(ordinal As Integer) As Char
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Char
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetChar(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChar*
  implements:
  - System.Data.IDataRecord.GetChar(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetChars(Int32, Int64, Char[], Int32, Int32)
  nameWithType: MultiShardDataReader.GetChars(Int32, Int64, Char[], Int32, Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetChars
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 328
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nReads a stream of characters from the specified column, starting at location indicated by dataOffset, into \nthe buffer, starting at the location indicated by bufferOffset.\n"
  example: []
  syntax:
    content: public override long GetChars(int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length)
    content.vb: Public Overrides Function GetChars(ordinal As Integer, dataOffset As Long, buffer As Char(), bufferOffset As Integer, length As Integer) As Long
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    - id: dataOffset
      type: System.Int64
      description: The index within the row from which to begin the read operation.
    - id: buffer
      type: System.Char[]
      description: The buffer into which to copy the data.
    - id: bufferOffset
      type: System.Int32
      description: The index with the buffer to which the data will be copied.
    - id: length
      type: System.Int32
      description: The maximum number of characters to read.
    return:
      type: System.Int64
      description: The actual number of characters read.
  overridden: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChars*
  implements:
  - System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  nameWithType.vb: MultiShardDataReader.GetChars(Int32, Int64, Char(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDataTypeName(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetDataTypeName(Int32)
  nameWithType: MultiShardDataReader.GetDataTypeName(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDataTypeName(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetDataTypeName
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 377
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets name of the data type of the specified column.\n"
  example: []
  syntax:
    content: public override string GetDataTypeName(int ordinal)
    content.vb: Public Overrides Function GetDataTypeName(ordinal As Integer) As String
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.String
      description: A string representing the name of the data type.
  overridden: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDataTypeName*
  implements:
  - System.Data.IDataRecord.GetDataTypeName(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTime(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetDateTime(Int32)
  nameWithType: MultiShardDataReader.GetDateTime(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTime(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetDateTime
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 397
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a DateTime object.\n"
  example: []
  syntax:
    content: public override DateTime GetDateTime(int ordinal)
    content.vb: Public Overrides Function GetDateTime(ordinal As Integer) As Date
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.DateTime
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTime*
  implements:
  - System.Data.IDataRecord.GetDateTime(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTimeOffset(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTimeOffset(System.Int32)
  id: GetDateTimeOffset(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetDateTimeOffset(Int32)
  nameWithType: MultiShardDataReader.GetDateTimeOffset(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTimeOffset(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetDateTimeOffset
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 407
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a DateTimeOffset object.\n"
  example: []
  syntax:
    content: public DateTimeOffset GetDateTimeOffset(int ordinal)
    content.vb: Public Function GetDateTimeOffset(ordinal As Integer) As DateTimeOffset
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.DateTimeOffset
      description: The value of the specified column.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTimeOffset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDbDataReader(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDbDataReader(System.Int32)
  id: GetDbDataReader(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetDbDataReader(Int32)
  nameWithType: MultiShardDataReader.GetDbDataReader(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDbDataReader(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetDbDataReader
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 420
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nReturns a DbDataReader object for the requested column ordinal that can be overridden with a \nprovider-specific implementation.\n"
  remarks: "\n"
  example: []
  syntax:
    content: protected override DbDataReader GetDbDataReader(int ordinal)
    content.vb: Protected Overrides Function GetDbDataReader(ordinal As Integer) As DbDataReader
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.Common.DbDataReader
      description: A DbDataReader object.
  overridden: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDbDataReader*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDecimal(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetDecimal(Int32)
  nameWithType: MultiShardDataReader.GetDecimal(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDecimal(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetDecimal
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 430
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a decimal object.\n"
  example: []
  syntax:
    content: public override decimal GetDecimal(int ordinal)
    content.vb: Public Overrides Function GetDecimal(ordinal As Integer) As Decimal
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Decimal
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDecimal*
  implements:
  - System.Data.IDataRecord.GetDecimal(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDouble(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetDouble(Int32)
  nameWithType: MultiShardDataReader.GetDouble(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDouble(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetDouble
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 440
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a double object.\n"
  example: []
  syntax:
    content: public override double GetDouble(int ordinal)
    content.vb: Public Overrides Function GetDouble(ordinal As Integer) As Double
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Double
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDouble*
  implements:
  - System.Data.IDataRecord.GetDouble(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetEnumerator
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: MultiShardDataReader.GetEnumerator()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetEnumerator()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetEnumerator
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 450
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThis method is currently not supported. Invoking the method will result in an exception.\n"
  example: []
  syntax:
    content: public override IEnumerator GetEnumerator()
    content.vb: Public Overrides Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
  overridden: System.Data.Common.DbDataReader.GetEnumerator
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetEnumerator*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldType(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetFieldType(Int32)
  nameWithType: MultiShardDataReader.GetFieldType(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldType(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetFieldType
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 460
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the data type of the specified column.\n"
  example: []
  syntax:
    content: public override Type GetFieldType(int ordinal)
    content.vb: Public Overrides Function GetFieldType(ordinal As Integer) As Type
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Type
      description: The data type of the specified column.
  overridden: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldType*
  implements:
  - System.Data.IDataRecord.GetFieldType(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValue``1(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValue``1(System.Int32)
  id: GetFieldValue``1(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetFieldValue<T>(Int32)
  nameWithType: MultiShardDataReader.GetFieldValue<T>(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValue<T>(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetFieldValue
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 471
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nSynchronously gets the value of the specified column as a type.\n"
  example: []
  syntax:
    content: public override T GetFieldValue<T>(int ordinal)
    content.vb: Public Overrides Function GetFieldValue(Of T)(ordinal As Integer) As T
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    typeParameters:
    - id: T
      description: The Type to get the value of the column as.
    return:
      type: '{T}'
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValue*
  nameWithType.vb: MultiShardDataReader.GetFieldValue(Of T)(Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValue(Of T)(System.Int32)
  name.vb: GetFieldValue(Of T)(Int32)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  id: GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetFieldValueAsync<T>(Int32, CancellationToken)
  nameWithType: MultiShardDataReader.GetFieldValueAsync<T>(Int32, CancellationToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValueAsync<T>(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetFieldValueAsync
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 507
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nAsynchronously gets the value of the specified column as a type.\n"
  example: []
  syntax:
    content: public override Task<T> GetFieldValueAsync<T>(int ordinal, CancellationToken cancellationToken)
    content.vb: Public Overrides Function GetFieldValueAsync(Of T)(ordinal As Integer, cancellationToken As CancellationToken) As Task(Of T)
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation instruction, which propagates a notification that operations should be canceled. This does \nnot guarantee the cancellation. A setting of CancellationToken.None makes this method equivalent to \nGetFieldValueAsync. The returned task must be marked as cancelled.\n"
    typeParameters:
    - id: T
      description: The type of the value to be returned.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValueAsync*
  nameWithType.vb: MultiShardDataReader.GetFieldValueAsync(Of T)(Int32, CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValueAsync(Of T)(System.Int32, System.Threading.CancellationToken)
  name.vb: GetFieldValueAsync(Of T)(Int32, CancellationToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFloat(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetFloat(Int32)
  nameWithType: MultiShardDataReader.GetFloat(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFloat(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetFloat
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 524
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a single-precision floating point number.\n"
  example: []
  syntax:
    content: public override float GetFloat(int ordinal)
    content.vb: Public Overrides Function GetFloat(ordinal As Integer) As Single
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Single
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFloat*
  implements:
  - System.Data.IDataRecord.GetFloat(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetGuid(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetGuid(Int32)
  nameWithType: MultiShardDataReader.GetGuid(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetGuid(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetGuid
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 534
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a globally-unique identifier (GUID).\n"
  example: []
  syntax:
    content: public override Guid GetGuid(int ordinal)
    content.vb: Public Overrides Function GetGuid(ordinal As Integer) As Guid
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Guid
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetGuid*
  implements:
  - System.Data.IDataRecord.GetGuid(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetHashCode
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetHashCode
  id: GetHashCode
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MultiShardDataReader.GetHashCode()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetHashCode()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetHashCode
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 543
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nServes as the default hash function that is useful for quick checks on equality.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A hash code for the current object.
  overridden: System.Object.GetHashCode
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt16(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetInt16(Int32)
  nameWithType: MultiShardDataReader.GetInt16(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt16(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetInt16
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 553
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a 16-bit signed integer.\n"
  example: []
  syntax:
    content: public override short GetInt16(int ordinal)
    content.vb: Public Overrides Function GetInt16(ordinal As Integer) As Short
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Int16
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt16*
  implements:
  - System.Data.IDataRecord.GetInt16(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt32(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetInt32(Int32)
  nameWithType: MultiShardDataReader.GetInt32(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt32(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetInt32
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 563
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a 32-bit signed integer.\n"
  example: []
  syntax:
    content: public override int GetInt32(int ordinal)
    content.vb: Public Overrides Function GetInt32(ordinal As Integer) As Integer
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Int32
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt32*
  implements:
  - System.Data.IDataRecord.GetInt32(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt64(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetInt64(Int32)
  nameWithType: MultiShardDataReader.GetInt64(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt64(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetInt64
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 573
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a 64-bit signed integer.\n"
  example: []
  syntax:
    content: public override long GetInt64(int ordinal)
    content.vb: Public Overrides Function GetInt64(ordinal As Integer) As Long
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Int64
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt64*
  implements:
  - System.Data.IDataRecord.GetInt64(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetName(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetName(Int32)
  nameWithType: MultiShardDataReader.GetName(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetName(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetName
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 586
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the name of the column, given the zero-based column ordinal.\n"
  example: []
  syntax:
    content: public override string GetName(int ordinal)
    content.vb: Public Overrides Function GetName(ordinal As Integer) As String
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.String
      description: The name of the specified column.
  overridden: System.Data.Common.DbDataReader.GetName(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetName*
  implements:
  - System.Data.IDataRecord.GetName(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetOrdinal(System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetOrdinal(String)
  nameWithType: MultiShardDataReader.GetOrdinal(String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetOrdinal(System.String)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetOrdinal
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 596
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the column ordinal given the name of the column.\n"
  example: []
  syntax:
    content: public override int GetOrdinal(string name)
    content.vb: Public Overrides Function GetOrdinal(name As String) As Integer
    parameters:
    - id: name
      type: System.String
      description: The name of the column.
    return:
      type: System.Int32
      description: The zero-based column ordinal.
  overridden: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetOrdinal*
  implements:
  - System.Data.IDataRecord.GetOrdinal(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificFieldType(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: MultiShardDataReader.GetProviderSpecificFieldType(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificFieldType(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetProviderSpecificFieldType
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 618
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nReturns the provider-specific field type of the specified column.\n"
  example: []
  syntax:
    content: public override Type GetProviderSpecificFieldType(int ordinal)
    content.vb: Public Overrides Function GetProviderSpecificFieldType(ordinal As Integer) As Type
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Type
      description: The Type object that describes the data type of the specified column.
  overridden: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificFieldType*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValue(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetProviderSpecificValue(Int32)
  nameWithType: MultiShardDataReader.GetProviderSpecificValue(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValue(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetProviderSpecificValue
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 628
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as an instance of Object.\n"
  example: []
  syntax:
    content: public override object GetProviderSpecificValue(int ordinal)
    content.vb: Public Overrides Function GetProviderSpecificValue(ordinal As Integer) As Object
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Object
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValue*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValues(System.Object[])
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetProviderSpecificValues(Object[])
  nameWithType: MultiShardDataReader.GetProviderSpecificValues(Object[])
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValues(System.Object[])
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetProviderSpecificValues
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 638
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets all provider-specific attribute columns in the collection for the current row.\n"
  example: []
  syntax:
    content: public override int GetProviderSpecificValues(object[] values)
    content.vb: Public Overrides Function GetProviderSpecificValues(values As Object()) As Integer
    parameters:
    - id: values
      type: System.Object[]
      description: An array of Object into which to copy the attribute columns.
    return:
      type: System.Int32
      description: The number of instances of Object in the array.
  overridden: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValues*
  nameWithType.vb: MultiShardDataReader.GetProviderSpecificValues(Object())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValues(System.Object())
  name.vb: GetProviderSpecificValues(Object())
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSchemaTable
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSchemaTable()
  nameWithType: MultiShardDataReader.GetSchemaTable()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSchemaTable()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSchemaTable
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 647
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nReturns a <xref href=\"System.Data.DataTable\" data-throw-if-not-resolved=\"false\"></xref> that describes the column metadata of the MultiShardDataReader.\n"
  example: []
  syntax:
    content: public override DataTable GetSchemaTable()
    content.vb: Public Overrides Function GetSchemaTable As DataTable
    return:
      type: System.Data.DataTable
      description: A <xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref> that describes the column metadata.
  overridden: System.Data.Common.DbDataReader.GetSchemaTable
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSchemaTable*
  implements:
  - System.Data.IDataReader.GetSchemaTable
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBinary(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBinary(System.Int32)
  id: GetSqlBinary(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlBinary(Int32)
  nameWithType: MultiShardDataReader.GetSqlBinary(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBinary(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlBinary
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 657
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlBinary.\n"
  example: []
  syntax:
    content: public SqlBinary GetSqlBinary(int ordinal)
    content.vb: Public Function GetSqlBinary(ordinal As Integer) As SqlBinary
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: The value of the column expressed as a SqlBinary.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBinary*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBoolean(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBoolean(System.Int32)
  id: GetSqlBoolean(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlBoolean(Int32)
  nameWithType: MultiShardDataReader.GetSqlBoolean(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBoolean(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlBoolean
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 667
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlBoolean.\n"
  example: []
  syntax:
    content: public SqlBoolean GetSqlBoolean(int ordinal)
    content.vb: Public Function GetSqlBoolean(ordinal As Integer) As SqlBoolean
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: The value of the column expressed as a SqlBoolean.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBoolean*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlByte(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlByte(System.Int32)
  id: GetSqlByte(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlByte(Int32)
  nameWithType: MultiShardDataReader.GetSqlByte(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlByte(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlByte
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 677
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlByte.\n"
  example: []
  syntax:
    content: public SqlByte GetSqlByte(int ordinal)
    content.vb: Public Function GetSqlByte(ordinal As Integer) As SqlByte
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlByte
      description: The value of the column expressed as a SqlByte.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlByte*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBytes(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBytes(System.Int32)
  id: GetSqlBytes(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlBytes(Int32)
  nameWithType: MultiShardDataReader.GetSqlBytes(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBytes(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlBytes
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 687
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlBytes.\n"
  example: []
  syntax:
    content: public SqlBytes GetSqlBytes(int ordinal)
    content.vb: Public Function GetSqlBytes(ordinal As Integer) As SqlBytes
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlBytes
      description: The value of the column expressed as a SqlBytes.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlChars(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlChars(System.Int32)
  id: GetSqlChars(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlChars(Int32)
  nameWithType: MultiShardDataReader.GetSqlChars(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlChars(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlChars
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 697
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlChars.\n"
  example: []
  syntax:
    content: public SqlChars GetSqlChars(int ordinal)
    content.vb: Public Function GetSqlChars(ordinal As Integer) As SqlChars
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlChars
      description: The value of the column expressed as a SqlChars.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlChars*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDateTime(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDateTime(System.Int32)
  id: GetSqlDateTime(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlDateTime(Int32)
  nameWithType: MultiShardDataReader.GetSqlDateTime(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDateTime(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlDateTime
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 707
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlDateTime.\n"
  example: []
  syntax:
    content: public SqlDateTime GetSqlDateTime(int ordinal)
    content.vb: Public Function GetSqlDateTime(ordinal As Integer) As SqlDateTime
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlDateTime
      description: The value of the column expressed as a SqlDateTime.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDateTime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDecimal(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDecimal(System.Int32)
  id: GetSqlDecimal(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlDecimal(Int32)
  nameWithType: MultiShardDataReader.GetSqlDecimal(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDecimal(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlDecimal
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 717
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlDecimal.\n"
  example: []
  syntax:
    content: public SqlDecimal GetSqlDecimal(int ordinal)
    content.vb: Public Function GetSqlDecimal(ordinal As Integer) As SqlDecimal
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: The value of the column expressed as a SqlDecimal.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDecimal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDouble(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDouble(System.Int32)
  id: GetSqlDouble(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlDouble(Int32)
  nameWithType: MultiShardDataReader.GetSqlDouble(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDouble(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlDouble
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 727
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlDouble.\n"
  example: []
  syntax:
    content: public SqlDouble GetSqlDouble(int ordinal)
    content.vb: Public Function GetSqlDouble(ordinal As Integer) As SqlDouble
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: The value of the column expressed as a SqlDouble.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDouble*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlGuid(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlGuid(System.Int32)
  id: GetSqlGuid(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlGuid(Int32)
  nameWithType: MultiShardDataReader.GetSqlGuid(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlGuid(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlGuid
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 737
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlGuid.\n"
  example: []
  syntax:
    content: public SqlGuid GetSqlGuid(int ordinal)
    content.vb: Public Function GetSqlGuid(ordinal As Integer) As SqlGuid
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: The value of the column expressed as a SqlGuid.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlGuid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt16(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt16(System.Int32)
  id: GetSqlInt16(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlInt16(Int32)
  nameWithType: MultiShardDataReader.GetSqlInt16(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt16(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlInt16
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 747
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlInt16.\n"
  example: []
  syntax:
    content: public SqlInt16 GetSqlInt16(int ordinal)
    content.vb: Public Function GetSqlInt16(ordinal As Integer) As SqlInt16
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: The value of the column expressed as a SqlInt16.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt16*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt32(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt32(System.Int32)
  id: GetSqlInt32(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlInt32(Int32)
  nameWithType: MultiShardDataReader.GetSqlInt32(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt32(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlInt32
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 757
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlInt32.\n"
  example: []
  syntax:
    content: public SqlInt32 GetSqlInt32(int ordinal)
    content.vb: Public Function GetSqlInt32(ordinal As Integer) As SqlInt32
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: The value of the column expressed as a SqlInt32.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt64(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt64(System.Int32)
  id: GetSqlInt64(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlInt64(Int32)
  nameWithType: MultiShardDataReader.GetSqlInt64(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt64(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlInt64
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 767
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlInt64.\n"
  example: []
  syntax:
    content: public SqlInt64 GetSqlInt64(int ordinal)
    content.vb: Public Function GetSqlInt64(ordinal As Integer) As SqlInt64
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: The value of the column expressed as a SqlInt64.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt64*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlMoney(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlMoney(System.Int32)
  id: GetSqlMoney(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlMoney(Int32)
  nameWithType: MultiShardDataReader.GetSqlMoney(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlMoney(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlMoney
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 777
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlMoney.\n"
  example: []
  syntax:
    content: public SqlMoney GetSqlMoney(int ordinal)
    content.vb: Public Function GetSqlMoney(ordinal As Integer) As SqlMoney
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: The value of the column expressed as a SqlMoney.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlMoney*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlSingle(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlSingle(System.Int32)
  id: GetSqlSingle(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlSingle(Int32)
  nameWithType: MultiShardDataReader.GetSqlSingle(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlSingle(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlSingle
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 787
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlSingle.\n"
  example: []
  syntax:
    content: public SqlSingle GetSqlSingle(int ordinal)
    content.vb: Public Function GetSqlSingle(ordinal As Integer) As SqlSingle
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: The value of the column expressed as a SqlSingle.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlSingle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlString(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlString(System.Int32)
  id: GetSqlString(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlString(Int32)
  nameWithType: MultiShardDataReader.GetSqlString(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlString(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlString
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 797
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as a SqlString.\n"
  example: []
  syntax:
    content: public SqlString GetSqlString(int ordinal)
    content.vb: Public Function GetSqlString(ordinal As Integer) As SqlString
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlString
      description: The value of the column expressed as a SqlString.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValue(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValue(System.Int32)
  id: GetSqlValue(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlValue(Int32)
  nameWithType: MultiShardDataReader.GetSqlValue(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValue(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlValue
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 807
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nReturns the data value in the specified column as a native SQL Server type. \n"
  example: []
  syntax:
    content: public object GetSqlValue(int ordinal)
    content.vb: Public Function GetSqlValue(ordinal As Integer) As Object
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Object
      description: The value of the column expressed as a SqlDbType.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValues(System.Object[])
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValues(System.Object[])
  id: GetSqlValues(System.Object[])
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlValues(Object[])
  nameWithType: MultiShardDataReader.GetSqlValues(Object[])
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValues(System.Object[])
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlValues
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 820
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nFills an array of Object that contains the values for all the columns in the record, \nexpressed as native SQL Server types.\n"
  example: []
  syntax:
    content: public int GetSqlValues(object[] values)
    content.vb: Public Function GetSqlValues(values As Object()) As Integer
    parameters:
    - id: values
      type: System.Object[]
      description: "\nAn array of Object into which to copy the values. The column values are expressed as SQL Server types.\n"
    return:
      type: System.Int32
      description: An integer indicating the number of columns copied.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValues*
  nameWithType.vb: MultiShardDataReader.GetSqlValues(Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValues(System.Object())
  name.vb: GetSqlValues(Object())
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlXml(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlXml(System.Int32)
  id: GetSqlXml(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetSqlXml(Int32)
  nameWithType: MultiShardDataReader.GetSqlXml(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlXml(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlXml
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 830
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as an XML value.\n"
  example: []
  syntax:
    content: public SqlXml GetSqlXml(int ordinal)
    content.vb: Public Function GetSqlXml(ordinal As Integer) As SqlXml
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlXml
      description: A SqlXml value that contains the XML stored within the corresponding field.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetStream(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetStream(System.Int32)
  id: GetStream(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetStream(Int32)
  nameWithType: MultiShardDataReader.GetStream(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetStream(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetStream
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 841
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nRetrieves data as a Stream.\n"
  example: []
  syntax:
    content: public override Stream GetStream(int ordinal)
    content.vb: Public Overrides Function GetStream(ordinal As Integer) As Stream
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.IO.Stream
      description: The returned object.
  overridden: System.Data.Common.DbDataReader.GetStream(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetStream*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetString(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetString(Int32)
  nameWithType: MultiShardDataReader.GetString(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetString(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetString
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 851
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as an instance of String.\n"
  example: []
  syntax:
    content: public override string GetString(int ordinal)
    content.vb: Public Overrides Function GetString(ordinal As Integer) As String
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.String
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetString(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetString*
  implements:
  - System.Data.IDataRecord.GetString(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTextReader(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTextReader(System.Int32)
  id: GetTextReader(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetTextReader(Int32)
  nameWithType: MultiShardDataReader.GetTextReader(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTextReader(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetTextReader
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 864
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nRetrieves data as a TextReader.\n"
  example: []
  syntax:
    content: public override TextReader GetTextReader(int ordinal)
    content.vb: Public Overrides Function GetTextReader(ordinal As Integer) As TextReader
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.IO.TextReader
      description: The returned object.
  overridden: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTextReader*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTimeSpan(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetTimeSpan(Int32)
  nameWithType: MultiShardDataReader.GetTimeSpan(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTimeSpan(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetTimeSpan
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 875
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nRetrieves the value of the specified column as a TimeSpan object.\n"
  example: []
  syntax:
    content: public TimeSpan GetTimeSpan(int ordinal)
    content.vb: Public Function GetTimeSpan(ordinal As Integer) As TimeSpan
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.TimeSpan
      description: The value of the specified column.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTimeSpan*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValue(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetValue(Int32)
  nameWithType: MultiShardDataReader.GetValue(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValue(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetValue
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 888
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column as an instance of Object.\n"
  example: []
  syntax:
    content: public override object GetValue(int ordinal)
    content.vb: Public Overrides Function GetValue(ordinal As Integer) As Object
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Object
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.GetValue(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValue*
  implements:
  - System.Data.IDataRecord.GetValue(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValues(System.Object[])
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetValues(Object[])
  nameWithType: MultiShardDataReader.GetValues(Object[])
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValues(System.Object[])
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetValues
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 898
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nPopulates an array of objects with the column values of the current row.\n"
  example: []
  syntax:
    content: public override int GetValues(object[] values)
    content.vb: Public Overrides Function GetValues(values As Object()) As Integer
    parameters:
    - id: values
      type: System.Object[]
      description: An array of Object into which to copy the attribute columns.
    return:
      type: System.Int32
      description: The number of instances of Object in the array.
  overridden: System.Data.Common.DbDataReader.GetValues(System.Object[])
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValues*
  implements:
  - System.Data.IDataRecord.GetValues(System.Object[])
  nameWithType.vb: MultiShardDataReader.GetValues(Object())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValues(System.Object())
  name.vb: GetValues(Object())
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetXmlReader(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetXmlReader(System.Int32)
  id: GetXmlReader(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: GetXmlReader(Int32)
  nameWithType: MultiShardDataReader.GetXmlReader(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetXmlReader(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetXmlReader
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 908
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nRetrieves data of type XML as an XmlReader.\n"
  example: []
  syntax:
    content: public XmlReader GetXmlReader(int ordinal)
    content.vb: Public Function GetXmlReader(ordinal As Integer) As XmlReader
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Xml.XmlReader
      description: The data as an XmlReader.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetXmlReader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.InitializeLifetimeService
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: InitializeLifetimeService()
  nameWithType: MultiShardDataReader.InitializeLifetimeService()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.InitializeLifetimeService()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: InitializeLifetimeService
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 916
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThis method is currently not supported. Invoking the method will result in an exception.\n"
  example: []
  syntax:
    content: public override object InitializeLifetimeService()
    content.vb: Public Overrides Function InitializeLifetimeService As Object
    return:
      type: System.Object
  overridden: System.MarshalByRefObject.InitializeLifetimeService
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.InitializeLifetimeService*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNull(System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: IsDBNull(Int32)
  nameWithType: MultiShardDataReader.IsDBNull(Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNull(System.Int32)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: IsDBNull
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 926
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets a value that indicates whether the column contains nonexistent or missing values (NULL values).\n"
  example: []
  syntax:
    content: public override bool IsDBNull(int ordinal)
    content.vb: Public Overrides Function IsDBNull(ordinal As Integer) As Boolean
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Boolean
      description: True if the specified column is equivalent to DBNull; otherwise false.
  overridden: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNull*
  implements:
  - System.Data.IDataRecord.IsDBNull(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: IsDBNullAsync(Int32, CancellationToken)
  nameWithType: MultiShardDataReader.IsDBNullAsync(Int32, CancellationToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNullAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: IsDBNullAsync
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 947
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nAn asynchronous version of IsDBNull, which gets a value that indicates whether the column contains \nnonexistent or missing values (NULL values).\n"
  remarks: "\n"
  example: []
  syntax:
    content: public override Task<bool> IsDBNullAsync(int ordinal, CancellationToken cancellationToken)
    content.vb: Public Overrides Function IsDBNullAsync(ordinal As Integer, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column to be retrieved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation instruction, which propagates a notification that operations should be canceled. This does\nnot guarantee the cancellation. A setting of CancellationToken.None makes this method equivalent to \nIsDBNullAsync. The returned task must be marked as cancelled.\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the specified column value is equivalent to DBNull otherwise false.
  overridden: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNullAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResult
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResult
  id: NextResult
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: NextResult()
  nameWithType: MultiShardDataReader.NextResult()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResult()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: NextResult
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 973
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThis method is currently not supported. Invoking the method will result in an exception.\n"
  example: []
  syntax:
    content: public override bool NextResult()
    content.vb: Public Overrides Function NextResult As Boolean
    return:
      type: System.Boolean
  overridden: System.Data.Common.DbDataReader.NextResult
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResult*
  implements:
  - System.Data.IDataReader.NextResult
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResultAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: NextResultAsync(CancellationToken)
  nameWithType: MultiShardDataReader.NextResultAsync(CancellationToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResultAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: NextResultAsync
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 982
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThis method is currently not supported. Invoking the method will result in an exception.\n"
  example: []
  syntax:
    content: public override Task<bool> NextResultAsync(CancellationToken cancellationToken)
    content.vb: Public Overrides Function NextResultAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  overridden: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResultAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Read
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Read
  id: Read
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: MultiShardDataReader.Read()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Read()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Read
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1009
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nAdvances the reader to the next record in a result set.\n"
  example: []
  syntax:
    content: public override bool Read()
    content.vb: Public Overrides Function Read As Boolean
    return:
      type: System.Boolean
      description: True if there are more rows; otherwise false.
  overridden: System.Data.Common.DbDataReader.Read
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Read*
  implements:
  - System.Data.IDataReader.Read
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ReadAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: ReadAsync(CancellationToken)
  nameWithType: MultiShardDataReader.ReadAsync(CancellationToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ReadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ReadAsync
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1033
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nAn asynchronous version of Read, which advances the MultiShardDataReader to the next record.\n\nThe cancellation token can be used to request that the operation be abandoned before the command timeout elapses. \nExceptions will be reported via the returned Task object.\n"
  example: []
  syntax:
    content: public override Task<bool> ReadAsync(CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReadAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task representing the asynchronous operation.
  overridden: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ReadAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ToString
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ToString
  id: ToString
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MultiShardDataReader.ToString()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ToString()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ToString
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1111
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nReturns a string that represents the current object.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string that represents the current object.
  overridden: System.Object.ToString
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Depth
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Depth
  id: Depth
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: MultiShardDataReader.Depth
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Depth
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Depth
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1123
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets a value indicating the depth of nesting for the current row.\n"
  example: []
  syntax:
    content: public override int Depth { get; }
    content.vb: Public Overrides ReadOnly Property Depth As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: System.Data.Common.DbDataReader.Depth
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Depth*
  implements:
  - System.Data.IDataReader.Depth
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.FieldCount
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.FieldCount
  id: FieldCount
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: FieldCount
  nameWithType: MultiShardDataReader.FieldCount
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.FieldCount
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: FieldCount
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1134
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the number of columns in the current row. \n"
  example: []
  syntax:
    content: public override int FieldCount { get; }
    content.vb: Public Overrides ReadOnly Property FieldCount As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: System.Data.Common.DbDataReader.FieldCount
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.FieldCount*
  implements:
  - System.Data.IDataRecord.FieldCount
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.HasRows
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.HasRows
  id: HasRows
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: HasRows
  nameWithType: MultiShardDataReader.HasRows
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.HasRows
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: HasRows
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1145
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets a value that indicates whether this MultiShardDataReader contains one or more rows. \n"
  example: []
  syntax:
    content: public override bool HasRows { get; }
    content.vb: Public Overrides ReadOnly Property HasRows As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.Data.Common.DbDataReader.HasRows
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.HasRows*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsClosed
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsClosed
  id: IsClosed
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: IsClosed
  nameWithType: MultiShardDataReader.IsClosed
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsClosed
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: IsClosed
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1156
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets a value indicating whether the specified MultiShardDataReader is closed.\n"
  example: []
  syntax:
    content: public override bool IsClosed { get; }
    content.vb: Public Overrides ReadOnly Property IsClosed As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.Data.Common.DbDataReader.IsClosed
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsClosed*
  implements:
  - System.Data.IDataReader.IsClosed
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item(System.Int32)
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: MultiShardDataReader.Item[Int32]
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: this[]
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1169
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column in its native format as an instance of Object.\n"
  example: []
  syntax:
    content: public override object this[int ordinal] { get; }
    content.vb: Public Overrides ReadOnly Property Item(ordinal As Integer) As Object
    parameters:
    - id: ordinal
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Object
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.Item(System.Int32)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item*
  implements:
  - System.Data.IDataRecord.Item(System.Int32)
  nameWithType.vb: MultiShardDataReader.Item(Int32)
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item(System.String)
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: MultiShardDataReader.Item[String]
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item[System.String]
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: this[]
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1182
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the value of the specified column in its native format as an instance of Object.\n"
  example: []
  syntax:
    content: public override object this[string name] { get; }
    content.vb: Public Overrides ReadOnly Property Item(name As String) As Object
    parameters:
    - id: name
      type: System.String
      description: The name of the column.
    return:
      type: System.Object
      description: The value of the specified column.
  overridden: System.Data.Common.DbDataReader.Item(System.String)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item*
  implements:
  - System.Data.IDataRecord.Item(System.String)
  nameWithType.vb: MultiShardDataReader.Item(String)
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.RecordsAffected
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.RecordsAffected
  id: RecordsAffected
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: RecordsAffected
  nameWithType: MultiShardDataReader.RecordsAffected
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.RecordsAffected
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: RecordsAffected
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1195
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThis property is currently not supported. Accessing the property will result in an exception.\n"
  example: []
  syntax:
    content: public override int RecordsAffected { get; }
    content.vb: Public Overrides ReadOnly Property RecordsAffected As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: System.Data.Common.DbDataReader.RecordsAffected
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.RecordsAffected*
  implements:
  - System.Data.IDataReader.RecordsAffected
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.VisibleFieldCount
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: VisibleFieldCount
  nameWithType: MultiShardDataReader.VisibleFieldCount
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.VisibleFieldCount
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: VisibleFieldCount
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1200
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the number of fields in the MultiShardDataReader that are not hidden.\n"
  example: []
  syntax:
    content: public override int VisibleFieldCount { get; }
    content.vb: Public Overrides ReadOnly Property VisibleFieldCount As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: System.Data.Common.DbDataReader.VisibleFieldCount
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.VisibleFieldCount*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Dispose(System.Boolean)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: MultiShardDataReader.Dispose(Boolean)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardDataReader.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Dispose
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardDataReader.cs
    startLine: 1243
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nReleases the managed resources used by the DbDataReader and optionally releases the unmanaged resources.\n"
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\ntrue to release managed and unmanaged resources; false to release only unmanaged resources.\n"
  overridden: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Data.Common.DbDataReader
  commentId: T:System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: true
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.IDataReader
  commentId: T:System.Data.IDataReader
  parent: System.Data
  isExternal: true
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Data.IDataRecord
  commentId: T:System.Data.IDataRecord
  parent: System.Data
  isExternal: true
  name: IDataRecord
  nameWithType: IDataRecord
  fullName: System.Data.IDataRecord
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: IDataRecord.GetData(Int32)
  nameWithType: DbDataReader.IDataRecord.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(System.Int32)
  nameWithType.vb: DbDataReader.System.Data.IDataRecord.GetData(Int32)
  name.vb: System.Data.IDataRecord.GetData(Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
    name: IDataRecord.GetData
    nameWithType: DbDataReader.IDataRecord.GetData
    fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
    name: System.Data.IDataRecord.GetData
    nameWithType: DbDataReader.System.Data.IDataRecord.GetData
    fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetFieldValueAsync<T>(Int32)
  nameWithType: DbDataReader.GetFieldValueAsync<T>(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync<T>(System.Int32)
  nameWithType.vb: DbDataReader.GetFieldValueAsync(Of T)(Int32)
  fullname.vb: System.Data.Common.DbDataReader.GetFieldValueAsync(Of T)(System.Int32)
  name.vb: GetFieldValueAsync(Of T)(Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
    name: GetFieldValueAsync<T>
    nameWithType: DbDataReader.GetFieldValueAsync<T>
    fullName: System.Data.Common.DbDataReader.GetFieldValueAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
    name: GetFieldValueAsync(Of T)
    nameWithType: DbDataReader.GetFieldValueAsync(Of T)
    fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: IsDBNullAsync(Int32)
  nameWithType: DbDataReader.IsDBNullAsync(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
    name: IsDBNullAsync
    nameWithType: DbDataReader.IsDBNullAsync
    fullName: System.Data.Common.DbDataReader.IsDBNullAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
    name: IsDBNullAsync
    nameWithType: DbDataReader.IsDBNullAsync
    fullName: System.Data.Common.DbDataReader.IsDBNullAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.ReadAsync
  commentId: M:System.Data.Common.DbDataReader.ReadAsync
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: ReadAsync()
  nameWithType: DbDataReader.ReadAsync()
  fullName: System.Data.Common.DbDataReader.ReadAsync()
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.ReadAsync
    name: ReadAsync
    nameWithType: DbDataReader.ReadAsync
    fullName: System.Data.Common.DbDataReader.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.ReadAsync
    name: ReadAsync
    nameWithType: DbDataReader.ReadAsync
    fullName: System.Data.Common.DbDataReader.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.NextResultAsync
  commentId: M:System.Data.Common.DbDataReader.NextResultAsync
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: NextResultAsync()
  nameWithType: DbDataReader.NextResultAsync()
  fullName: System.Data.Common.DbDataReader.NextResultAsync()
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.NextResultAsync
    name: NextResultAsync
    nameWithType: DbDataReader.NextResultAsync
    fullName: System.Data.Common.DbDataReader.NextResultAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.NextResultAsync
    name: NextResultAsync
    nameWithType: DbDataReader.NextResultAsync
    fullName: System.Data.Common.DbDataReader.NextResultAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Data
  commentId: N:System.Data
  isExternal: false
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: MultiShardConnection
  nameWithType: MultiShardConnection
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Connection*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Connection
  isExternal: false
  name: Connection
  nameWithType: MultiShardDataReader.Connection
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Connection
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy.PartialResults
  commentId: F:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy.PartialResults
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.MultiShardExceptions*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.MultiShardExceptions
  isExternal: false
  name: MultiShardExceptions
  nameWithType: MultiShardDataReader.MultiShardExceptions
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.MultiShardExceptions
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardException}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardException}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<MultiShardException>
  nameWithType: IReadOnlyCollection<MultiShardException>
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardException>
  nameWithType.vb: IReadOnlyCollection(Of MultiShardException)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardException)
  name.vb: IReadOnlyCollection(Of MultiShardException)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardException
    name: MultiShardException
    nameWithType: MultiShardException
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardException
    name: MultiShardException
    nameWithType: MultiShardException
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardException
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ExecutionPolicy*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ExecutionPolicy
  isExternal: false
  name: ExecutionPolicy
  nameWithType: MultiShardDataReader.ExecutionPolicy
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ExecutionPolicy
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: MultiShardExecutionPolicy
  nameWithType: MultiShardExecutionPolicy
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
- uid: System.Data.Common.DbDataReader.Close
  commentId: M:System.Data.Common.DbDataReader.Close
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: Close()
  nameWithType: DbDataReader.Close()
  fullName: System.Data.Common.DbDataReader.Close()
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.Close
    name: Close
    nameWithType: DbDataReader.Close
    fullName: System.Data.Common.DbDataReader.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.Close
    name: Close
    nameWithType: DbDataReader.Close
    fullName: System.Data.Common.DbDataReader.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Close*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Close
  isExternal: false
  name: Close
  nameWithType: MultiShardDataReader.Close
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Close
- uid: System.Data.IDataReader.Close
  commentId: M:System.Data.IDataReader.Close
  parent: System.Data.IDataReader
  isExternal: true
  name: Close()
  nameWithType: IDataReader.Close()
  fullName: System.Data.IDataReader.Close()
  spec.csharp:
  - uid: System.Data.IDataReader.Close
    name: Close
    nameWithType: IDataReader.Close
    fullName: System.Data.IDataReader.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataReader.Close
    name: Close
    nameWithType: IDataReader.Close
    fullName: System.Data.IDataReader.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.ObjRef
  commentId: T:System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: true
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: MarshalByRefObject.CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: MarshalByRefObject.CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.CreateObjRef*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.CreateObjRef
  isExternal: false
  name: CreateObjRef
  nameWithType: MultiShardDataReader.CreateObjRef
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.CreateObjRef
- uid: System.Runtime.Remoting
  commentId: N:System.Runtime.Remoting
  isExternal: false
  name: System.Runtime.Remoting
  nameWithType: System.Runtime.Remoting
  fullName: System.Runtime.Remoting
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Equals*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Equals
  isExternal: false
  name: Equals
  nameWithType: MultiShardDataReader.Equals
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetBoolean(Int32)
  nameWithType: DbDataReader.GetBoolean(Int32)
  fullName: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
    name: GetBoolean
    nameWithType: DbDataReader.GetBoolean
    fullName: System.Data.Common.DbDataReader.GetBoolean
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
    name: GetBoolean
    nameWithType: DbDataReader.GetBoolean
    fullName: System.Data.Common.DbDataReader.GetBoolean
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBoolean*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBoolean
  isExternal: false
  name: GetBoolean
  nameWithType: MultiShardDataReader.GetBoolean
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBoolean
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  commentId: M:System.Data.IDataRecord.GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetBoolean(Int32)
  nameWithType: IDataRecord.GetBoolean(Int32)
  fullName: System.Data.IDataRecord.GetBoolean(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)
    name: GetBoolean
    nameWithType: IDataRecord.GetBoolean
    fullName: System.Data.IDataRecord.GetBoolean
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)
    name: GetBoolean
    nameWithType: IDataRecord.GetBoolean
    fullName: System.Data.IDataRecord.GetBoolean
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetByte(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetByte(Int32)
  nameWithType: DbDataReader.GetByte(Int32)
  fullName: System.Data.Common.DbDataReader.GetByte(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
    name: GetByte
    nameWithType: DbDataReader.GetByte
    fullName: System.Data.Common.DbDataReader.GetByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
    name: GetByte
    nameWithType: DbDataReader.GetByte
    fullName: System.Data.Common.DbDataReader.GetByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetByte*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetByte
  isExternal: false
  name: GetByte
  nameWithType: MultiShardDataReader.GetByte
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetByte
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  commentId: M:System.Data.IDataRecord.GetByte(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetByte(Int32)
  nameWithType: IDataRecord.GetByte(Int32)
  fullName: System.Data.IDataRecord.GetByte(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetByte(System.Int32)
    name: GetByte
    nameWithType: IDataRecord.GetByte
    fullName: System.Data.IDataRecord.GetByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetByte(System.Int32)
    name: GetByte
    nameWithType: IDataRecord.GetByte
    fullName: System.Data.IDataRecord.GetByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)
  nameWithType: DbDataReader.GetBytes(Int32, Int64, Byte[], Int32, Int32)
  fullName: System.Data.Common.DbDataReader.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: DbDataReader.GetBytes(Int32, Int64, Byte(), Int32, Int32)
  fullname.vb: System.Data.Common.DbDataReader.GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: GetBytes
    nameWithType: DbDataReader.GetBytes
    fullName: System.Data.Common.DbDataReader.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: GetBytes
    nameWithType: DbDataReader.GetBytes
    fullName: System.Data.Common.DbDataReader.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBytes*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBytes
  isExternal: false
  name: GetBytes
  nameWithType: MultiShardDataReader.GetBytes
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetBytes
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)
  nameWithType: IDataRecord.GetBytes(Int32, Int64, Byte[], Int32, Int32)
  fullName: System.Data.IDataRecord.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: IDataRecord.GetBytes(Int32, Int64, Byte(), Int32, Int32)
  fullname.vb: System.Data.IDataRecord.GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: GetBytes
    nameWithType: IDataRecord.GetBytes
    fullName: System.Data.IDataRecord.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: GetBytes
    nameWithType: IDataRecord.GetBytes
    fullName: System.Data.IDataRecord.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetChar(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetChar(Int32)
  nameWithType: DbDataReader.GetChar(Int32)
  fullName: System.Data.Common.DbDataReader.GetChar(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
    name: GetChar
    nameWithType: DbDataReader.GetChar
    fullName: System.Data.Common.DbDataReader.GetChar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
    name: GetChar
    nameWithType: DbDataReader.GetChar
    fullName: System.Data.Common.DbDataReader.GetChar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChar*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChar
  isExternal: false
  name: GetChar
  nameWithType: MultiShardDataReader.GetChar
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChar
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  commentId: M:System.Data.IDataRecord.GetChar(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetChar(Int32)
  nameWithType: IDataRecord.GetChar(Int32)
  fullName: System.Data.IDataRecord.GetChar(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetChar(System.Int32)
    name: GetChar
    nameWithType: IDataRecord.GetChar
    fullName: System.Data.IDataRecord.GetChar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetChar(System.Int32)
    name: GetChar
    nameWithType: IDataRecord.GetChar
    fullName: System.Data.IDataRecord.GetChar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetChars(Int32, Int64, Char[], Int32, Int32)
  nameWithType: DbDataReader.GetChars(Int32, Int64, Char[], Int32, Int32)
  fullName: System.Data.Common.DbDataReader.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  nameWithType.vb: DbDataReader.GetChars(Int32, Int64, Char(), Int32, Int32)
  fullname.vb: System.Data.Common.DbDataReader.GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: GetChars
    nameWithType: DbDataReader.GetChars
    fullName: System.Data.Common.DbDataReader.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: GetChars
    nameWithType: DbDataReader.GetChars
    fullName: System.Data.Common.DbDataReader.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChars*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChars
  isExternal: false
  name: GetChars
  nameWithType: MultiShardDataReader.GetChars
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetChars
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  commentId: M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetChars(Int32, Int64, Char[], Int32, Int32)
  nameWithType: IDataRecord.GetChars(Int32, Int64, Char[], Int32, Int32)
  fullName: System.Data.IDataRecord.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  nameWithType.vb: IDataRecord.GetChars(Int32, Int64, Char(), Int32, Int32)
  fullname.vb: System.Data.IDataRecord.GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: GetChars
    nameWithType: IDataRecord.GetChars
    fullName: System.Data.IDataRecord.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: GetChars
    nameWithType: IDataRecord.GetChars
    fullName: System.Data.IDataRecord.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Char[]
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetDataTypeName(Int32)
  nameWithType: DbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
    name: GetDataTypeName
    nameWithType: DbDataReader.GetDataTypeName
    fullName: System.Data.Common.DbDataReader.GetDataTypeName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
    name: GetDataTypeName
    nameWithType: DbDataReader.GetDataTypeName
    fullName: System.Data.Common.DbDataReader.GetDataTypeName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDataTypeName*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDataTypeName
  isExternal: false
  name: GetDataTypeName
  nameWithType: MultiShardDataReader.GetDataTypeName
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDataTypeName
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDataTypeName(Int32)
  nameWithType: IDataRecord.GetDataTypeName(Int32)
  fullName: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
    name: GetDataTypeName
    nameWithType: IDataRecord.GetDataTypeName
    fullName: System.Data.IDataRecord.GetDataTypeName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
    name: GetDataTypeName
    nameWithType: IDataRecord.GetDataTypeName
    fullName: System.Data.IDataRecord.GetDataTypeName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetDateTime(Int32)
  nameWithType: DbDataReader.GetDateTime(Int32)
  fullName: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
    name: GetDateTime
    nameWithType: DbDataReader.GetDateTime
    fullName: System.Data.Common.DbDataReader.GetDateTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
    name: GetDateTime
    nameWithType: DbDataReader.GetDateTime
    fullName: System.Data.Common.DbDataReader.GetDateTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTime*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTime
  isExternal: false
  name: GetDateTime
  nameWithType: MultiShardDataReader.GetDateTime
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTime
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDateTime(Int32)
  nameWithType: IDataRecord.GetDateTime(Int32)
  fullName: System.Data.IDataRecord.GetDateTime(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)
    name: GetDateTime
    nameWithType: IDataRecord.GetDateTime
    fullName: System.Data.IDataRecord.GetDateTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)
    name: GetDateTime
    nameWithType: IDataRecord.GetDateTime
    fullName: System.Data.IDataRecord.GetDateTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTimeOffset*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTimeOffset
  isExternal: false
  name: GetDateTimeOffset
  nameWithType: MultiShardDataReader.GetDateTimeOffset
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDateTimeOffset
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetDbDataReader(Int32)
  nameWithType: DbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
    name: GetDbDataReader
    nameWithType: DbDataReader.GetDbDataReader
    fullName: System.Data.Common.DbDataReader.GetDbDataReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
    name: GetDbDataReader
    nameWithType: DbDataReader.GetDbDataReader
    fullName: System.Data.Common.DbDataReader.GetDbDataReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDbDataReader*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDbDataReader
  isExternal: false
  name: GetDbDataReader
  nameWithType: MultiShardDataReader.GetDbDataReader
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDbDataReader
- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetDecimal(Int32)
  nameWithType: DbDataReader.GetDecimal(Int32)
  fullName: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
    name: GetDecimal
    nameWithType: DbDataReader.GetDecimal
    fullName: System.Data.Common.DbDataReader.GetDecimal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
    name: GetDecimal
    nameWithType: DbDataReader.GetDecimal
    fullName: System.Data.Common.DbDataReader.GetDecimal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDecimal*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDecimal
  isExternal: false
  name: GetDecimal
  nameWithType: MultiShardDataReader.GetDecimal
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDecimal
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDecimal(Int32)
  nameWithType: IDataRecord.GetDecimal(Int32)
  fullName: System.Data.IDataRecord.GetDecimal(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)
    name: GetDecimal
    nameWithType: IDataRecord.GetDecimal
    fullName: System.Data.IDataRecord.GetDecimal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)
    name: GetDecimal
    nameWithType: IDataRecord.GetDecimal
    fullName: System.Data.IDataRecord.GetDecimal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetDouble(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetDouble(Int32)
  nameWithType: DbDataReader.GetDouble(Int32)
  fullName: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
    name: GetDouble
    nameWithType: DbDataReader.GetDouble
    fullName: System.Data.Common.DbDataReader.GetDouble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
    name: GetDouble
    nameWithType: DbDataReader.GetDouble
    fullName: System.Data.Common.DbDataReader.GetDouble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDouble*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDouble
  isExternal: false
  name: GetDouble
  nameWithType: MultiShardDataReader.GetDouble
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetDouble
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDouble(Int32)
  nameWithType: IDataRecord.GetDouble(Int32)
  fullName: System.Data.IDataRecord.GetDouble(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDouble(System.Int32)
    name: GetDouble
    nameWithType: IDataRecord.GetDouble
    fullName: System.Data.IDataRecord.GetDouble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDouble(System.Int32)
    name: GetDouble
    nameWithType: IDataRecord.GetDouble
    fullName: System.Data.IDataRecord.GetDouble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.Common.DbDataReader.GetEnumerator
  commentId: M:System.Data.Common.DbDataReader.GetEnumerator
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetEnumerator()
  nameWithType: DbDataReader.GetEnumerator()
  fullName: System.Data.Common.DbDataReader.GetEnumerator()
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetEnumerator
    name: GetEnumerator
    nameWithType: DbDataReader.GetEnumerator
    fullName: System.Data.Common.DbDataReader.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetEnumerator
    name: GetEnumerator
    nameWithType: DbDataReader.GetEnumerator
    fullName: System.Data.Common.DbDataReader.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetEnumerator*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: MultiShardDataReader.GetEnumerator
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetEnumerator
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetFieldType(Int32)
  nameWithType: DbDataReader.GetFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
    name: GetFieldType
    nameWithType: DbDataReader.GetFieldType
    fullName: System.Data.Common.DbDataReader.GetFieldType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
    name: GetFieldType
    nameWithType: DbDataReader.GetFieldType
    fullName: System.Data.Common.DbDataReader.GetFieldType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldType*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldType
  isExternal: false
  name: GetFieldType
  nameWithType: MultiShardDataReader.GetFieldType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldType
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  commentId: M:System.Data.IDataRecord.GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetFieldType(Int32)
  nameWithType: IDataRecord.GetFieldType(Int32)
  fullName: System.Data.IDataRecord.GetFieldType(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)
    name: GetFieldType
    nameWithType: IDataRecord.GetFieldType
    fullName: System.Data.IDataRecord.GetFieldType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)
    name: GetFieldType
    nameWithType: IDataRecord.GetFieldType
    fullName: System.Data.IDataRecord.GetFieldType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetFieldValue<T>(Int32)
  nameWithType: DbDataReader.GetFieldValue<T>(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValue<T>(System.Int32)
  nameWithType.vb: DbDataReader.GetFieldValue(Of T)(Int32)
  fullname.vb: System.Data.Common.DbDataReader.GetFieldValue(Of T)(System.Int32)
  name.vb: GetFieldValue(Of T)(Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
    name: GetFieldValue<T>
    nameWithType: DbDataReader.GetFieldValue<T>
    fullName: System.Data.Common.DbDataReader.GetFieldValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
    name: GetFieldValue(Of T)
    nameWithType: DbDataReader.GetFieldValue(Of T)
    fullName: System.Data.Common.DbDataReader.GetFieldValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValue*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValue
  isExternal: false
  name: GetFieldValue<T>
  nameWithType: MultiShardDataReader.GetFieldValue<T>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValue<T>
  nameWithType.vb: MultiShardDataReader.GetFieldValue(Of T)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValue(Of T)
  name.vb: GetFieldValue(Of T)
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  commentId: M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetFieldValueAsync<T>(Int32, CancellationToken)
  nameWithType: DbDataReader.GetFieldValueAsync<T>(Int32, CancellationToken)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync<T>(System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: DbDataReader.GetFieldValueAsync(Of T)(Int32, CancellationToken)
  fullname.vb: System.Data.Common.DbDataReader.GetFieldValueAsync(Of T)(System.Int32, System.Threading.CancellationToken)
  name.vb: GetFieldValueAsync(Of T)(Int32, CancellationToken)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
    name: GetFieldValueAsync<T>
    nameWithType: DbDataReader.GetFieldValueAsync<T>
    fullName: System.Data.Common.DbDataReader.GetFieldValueAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
    name: GetFieldValueAsync(Of T)
    nameWithType: DbDataReader.GetFieldValueAsync(Of T)
    fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValueAsync*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValueAsync
  isExternal: false
  name: GetFieldValueAsync<T>
  nameWithType: MultiShardDataReader.GetFieldValueAsync<T>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValueAsync<T>
  nameWithType.vb: MultiShardDataReader.GetFieldValueAsync(Of T)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFieldValueAsync(Of T)
  name.vb: GetFieldValueAsync(Of T)
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullname.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetFloat(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetFloat(Int32)
  nameWithType: DbDataReader.GetFloat(Int32)
  fullName: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
    name: GetFloat
    nameWithType: DbDataReader.GetFloat
    fullName: System.Data.Common.DbDataReader.GetFloat
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
    name: GetFloat
    nameWithType: DbDataReader.GetFloat
    fullName: System.Data.Common.DbDataReader.GetFloat
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFloat*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFloat
  isExternal: false
  name: GetFloat
  nameWithType: MultiShardDataReader.GetFloat
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetFloat
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  commentId: M:System.Data.IDataRecord.GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetFloat(Int32)
  nameWithType: IDataRecord.GetFloat(Int32)
  fullName: System.Data.IDataRecord.GetFloat(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetFloat(System.Int32)
    name: GetFloat
    nameWithType: IDataRecord.GetFloat
    fullName: System.Data.IDataRecord.GetFloat
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetFloat(System.Int32)
    name: GetFloat
    nameWithType: IDataRecord.GetFloat
    fullName: System.Data.IDataRecord.GetFloat
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetGuid(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetGuid(Int32)
  nameWithType: DbDataReader.GetGuid(Int32)
  fullName: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
    name: GetGuid
    nameWithType: DbDataReader.GetGuid
    fullName: System.Data.Common.DbDataReader.GetGuid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
    name: GetGuid
    nameWithType: DbDataReader.GetGuid
    fullName: System.Data.Common.DbDataReader.GetGuid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetGuid*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetGuid
  isExternal: false
  name: GetGuid
  nameWithType: MultiShardDataReader.GetGuid
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetGuid
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  commentId: M:System.Data.IDataRecord.GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetGuid(Int32)
  nameWithType: IDataRecord.GetGuid(Int32)
  fullName: System.Data.IDataRecord.GetGuid(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetGuid(System.Int32)
    name: GetGuid
    nameWithType: IDataRecord.GetGuid
    fullName: System.Data.IDataRecord.GetGuid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetGuid(System.Int32)
    name: GetGuid
    nameWithType: IDataRecord.GetGuid
    fullName: System.Data.IDataRecord.GetGuid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetHashCode*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: MultiShardDataReader.GetHashCode
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetHashCode
- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetInt16(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetInt16(Int32)
  nameWithType: DbDataReader.GetInt16(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
    name: GetInt16
    nameWithType: DbDataReader.GetInt16
    fullName: System.Data.Common.DbDataReader.GetInt16
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
    name: GetInt16
    nameWithType: DbDataReader.GetInt16
    fullName: System.Data.Common.DbDataReader.GetInt16
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt16*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt16
  isExternal: false
  name: GetInt16
  nameWithType: MultiShardDataReader.GetInt16
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt16
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  commentId: M:System.Data.IDataRecord.GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetInt16(Int32)
  nameWithType: IDataRecord.GetInt16(Int32)
  fullName: System.Data.IDataRecord.GetInt16(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt16(System.Int32)
    name: GetInt16
    nameWithType: IDataRecord.GetInt16
    fullName: System.Data.IDataRecord.GetInt16
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt16(System.Int32)
    name: GetInt16
    nameWithType: IDataRecord.GetInt16
    fullName: System.Data.IDataRecord.GetInt16
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetInt32(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetInt32(Int32)
  nameWithType: DbDataReader.GetInt32(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
    name: GetInt32
    nameWithType: DbDataReader.GetInt32
    fullName: System.Data.Common.DbDataReader.GetInt32
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
    name: GetInt32
    nameWithType: DbDataReader.GetInt32
    fullName: System.Data.Common.DbDataReader.GetInt32
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt32*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt32
  isExternal: false
  name: GetInt32
  nameWithType: MultiShardDataReader.GetInt32
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt32
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  commentId: M:System.Data.IDataRecord.GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetInt32(Int32)
  nameWithType: IDataRecord.GetInt32(Int32)
  fullName: System.Data.IDataRecord.GetInt32(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt32(System.Int32)
    name: GetInt32
    nameWithType: IDataRecord.GetInt32
    fullName: System.Data.IDataRecord.GetInt32
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt32(System.Int32)
    name: GetInt32
    nameWithType: IDataRecord.GetInt32
    fullName: System.Data.IDataRecord.GetInt32
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetInt64(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetInt64(Int32)
  nameWithType: DbDataReader.GetInt64(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
    name: GetInt64
    nameWithType: DbDataReader.GetInt64
    fullName: System.Data.Common.DbDataReader.GetInt64
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
    name: GetInt64
    nameWithType: DbDataReader.GetInt64
    fullName: System.Data.Common.DbDataReader.GetInt64
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt64*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt64
  isExternal: false
  name: GetInt64
  nameWithType: MultiShardDataReader.GetInt64
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetInt64
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  commentId: M:System.Data.IDataRecord.GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetInt64(Int32)
  nameWithType: IDataRecord.GetInt64(Int32)
  fullName: System.Data.IDataRecord.GetInt64(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt64(System.Int32)
    name: GetInt64
    nameWithType: IDataRecord.GetInt64
    fullName: System.Data.IDataRecord.GetInt64
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt64(System.Int32)
    name: GetInt64
    nameWithType: IDataRecord.GetInt64
    fullName: System.Data.IDataRecord.GetInt64
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.GetName(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetName(Int32)
  nameWithType: DbDataReader.GetName(Int32)
  fullName: System.Data.Common.DbDataReader.GetName(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetName(System.Int32)
    name: GetName
    nameWithType: DbDataReader.GetName
    fullName: System.Data.Common.DbDataReader.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetName(System.Int32)
    name: GetName
    nameWithType: DbDataReader.GetName
    fullName: System.Data.Common.DbDataReader.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetName*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetName
  isExternal: false
  name: GetName
  nameWithType: MultiShardDataReader.GetName
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetName
- uid: System.Data.IDataRecord.GetName(System.Int32)
  commentId: M:System.Data.IDataRecord.GetName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetName(Int32)
  nameWithType: IDataRecord.GetName(Int32)
  fullName: System.Data.IDataRecord.GetName(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetName(System.Int32)
    name: GetName
    nameWithType: IDataRecord.GetName
    fullName: System.Data.IDataRecord.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetName(System.Int32)
    name: GetName
    nameWithType: IDataRecord.GetName
    fullName: System.Data.IDataRecord.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  commentId: M:System.Data.Common.DbDataReader.GetOrdinal(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetOrdinal(String)
  nameWithType: DbDataReader.GetOrdinal(String)
  fullName: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
    name: GetOrdinal
    nameWithType: DbDataReader.GetOrdinal
    fullName: System.Data.Common.DbDataReader.GetOrdinal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
    name: GetOrdinal
    nameWithType: DbDataReader.GetOrdinal
    fullName: System.Data.Common.DbDataReader.GetOrdinal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetOrdinal*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetOrdinal
  isExternal: false
  name: GetOrdinal
  nameWithType: MultiShardDataReader.GetOrdinal
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetOrdinal
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  commentId: M:System.Data.IDataRecord.GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetOrdinal(String)
  nameWithType: IDataRecord.GetOrdinal(String)
  fullName: System.Data.IDataRecord.GetOrdinal(System.String)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetOrdinal(System.String)
    name: GetOrdinal
    nameWithType: IDataRecord.GetOrdinal
    fullName: System.Data.IDataRecord.GetOrdinal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetOrdinal(System.String)
    name: GetOrdinal
    nameWithType: IDataRecord.GetOrdinal
    fullName: System.Data.IDataRecord.GetOrdinal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
    name: GetProviderSpecificFieldType
    nameWithType: DbDataReader.GetProviderSpecificFieldType
    fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
    name: GetProviderSpecificFieldType
    nameWithType: DbDataReader.GetProviderSpecificFieldType
    fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificFieldType*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificFieldType
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: MultiShardDataReader.GetProviderSpecificFieldType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificFieldType
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetProviderSpecificValue(Int32)
  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
    name: GetProviderSpecificValue
    nameWithType: DbDataReader.GetProviderSpecificValue
    fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
    name: GetProviderSpecificValue
    nameWithType: DbDataReader.GetProviderSpecificValue
    fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValue*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValue
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: MultiShardDataReader.GetProviderSpecificValue
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValue
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  commentId: M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetProviderSpecificValues(Object[])
  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  nameWithType.vb: DbDataReader.GetProviderSpecificValues(Object())
  fullname.vb: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object())
  name.vb: GetProviderSpecificValues(Object())
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
    name: GetProviderSpecificValues
    nameWithType: DbDataReader.GetProviderSpecificValues
    fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
    name: GetProviderSpecificValues
    nameWithType: DbDataReader.GetProviderSpecificValues
    fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValues*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValues
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: MultiShardDataReader.GetProviderSpecificValues
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetProviderSpecificValues
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbDataReader.GetSchemaTable
  commentId: M:System.Data.Common.DbDataReader.GetSchemaTable
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetSchemaTable()
  nameWithType: DbDataReader.GetSchemaTable()
  fullName: System.Data.Common.DbDataReader.GetSchemaTable()
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetSchemaTable
    name: GetSchemaTable
    nameWithType: DbDataReader.GetSchemaTable
    fullName: System.Data.Common.DbDataReader.GetSchemaTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetSchemaTable
    name: GetSchemaTable
    nameWithType: DbDataReader.GetSchemaTable
    fullName: System.Data.Common.DbDataReader.GetSchemaTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSchemaTable*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSchemaTable
  isExternal: false
  name: GetSchemaTable
  nameWithType: MultiShardDataReader.GetSchemaTable
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSchemaTable
- uid: System.Data.IDataReader.GetSchemaTable
  commentId: M:System.Data.IDataReader.GetSchemaTable
  parent: System.Data.IDataReader
  isExternal: true
  name: GetSchemaTable()
  nameWithType: IDataReader.GetSchemaTable()
  fullName: System.Data.IDataReader.GetSchemaTable()
  spec.csharp:
  - uid: System.Data.IDataReader.GetSchemaTable
    name: GetSchemaTable
    nameWithType: IDataReader.GetSchemaTable
    fullName: System.Data.IDataReader.GetSchemaTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataReader.GetSchemaTable
    name: GetSchemaTable
    nameWithType: IDataReader.GetSchemaTable
    fullName: System.Data.IDataReader.GetSchemaTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBinary*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBinary
  isExternal: false
  name: GetSqlBinary
  nameWithType: MultiShardDataReader.GetSqlBinary
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBinary
- uid: System.Data.SqlTypes.SqlBinary
  commentId: T:System.Data.SqlTypes.SqlBinary
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlBinary
  nameWithType: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
- uid: System.Data.SqlTypes
  commentId: N:System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  nameWithType: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBoolean*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBoolean
  isExternal: false
  name: GetSqlBoolean
  nameWithType: MultiShardDataReader.GetSqlBoolean
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBoolean
- uid: System.Data.SqlTypes.SqlBoolean
  commentId: T:System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlByte*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlByte
  isExternal: false
  name: GetSqlByte
  nameWithType: MultiShardDataReader.GetSqlByte
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlByte
- uid: System.Data.SqlTypes.SqlByte
  commentId: T:System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBytes*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBytes
  isExternal: false
  name: GetSqlBytes
  nameWithType: MultiShardDataReader.GetSqlBytes
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlBytes
- uid: System.Data.SqlTypes.SqlBytes
  commentId: T:System.Data.SqlTypes.SqlBytes
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlBytes
  nameWithType: SqlBytes
  fullName: System.Data.SqlTypes.SqlBytes
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlChars*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlChars
  isExternal: false
  name: GetSqlChars
  nameWithType: MultiShardDataReader.GetSqlChars
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlChars
- uid: System.Data.SqlTypes.SqlChars
  commentId: T:System.Data.SqlTypes.SqlChars
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlChars
  nameWithType: SqlChars
  fullName: System.Data.SqlTypes.SqlChars
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDateTime*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDateTime
  isExternal: false
  name: GetSqlDateTime
  nameWithType: MultiShardDataReader.GetSqlDateTime
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDateTime
- uid: System.Data.SqlTypes.SqlDateTime
  commentId: T:System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlDateTime
  nameWithType: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDecimal*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDecimal
  isExternal: false
  name: GetSqlDecimal
  nameWithType: MultiShardDataReader.GetSqlDecimal
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDecimal
- uid: System.Data.SqlTypes.SqlDecimal
  commentId: T:System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDouble*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDouble
  isExternal: false
  name: GetSqlDouble
  nameWithType: MultiShardDataReader.GetSqlDouble
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlDouble
- uid: System.Data.SqlTypes.SqlDouble
  commentId: T:System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlGuid*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlGuid
  isExternal: false
  name: GetSqlGuid
  nameWithType: MultiShardDataReader.GetSqlGuid
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlGuid
- uid: System.Data.SqlTypes.SqlGuid
  commentId: T:System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlGuid
  nameWithType: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt16*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt16
  isExternal: false
  name: GetSqlInt16
  nameWithType: MultiShardDataReader.GetSqlInt16
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt16
- uid: System.Data.SqlTypes.SqlInt16
  commentId: T:System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt32*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt32
  isExternal: false
  name: GetSqlInt32
  nameWithType: MultiShardDataReader.GetSqlInt32
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt32
- uid: System.Data.SqlTypes.SqlInt32
  commentId: T:System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt64*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt64
  isExternal: false
  name: GetSqlInt64
  nameWithType: MultiShardDataReader.GetSqlInt64
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlInt64
- uid: System.Data.SqlTypes.SqlInt64
  commentId: T:System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlMoney*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlMoney
  isExternal: false
  name: GetSqlMoney
  nameWithType: MultiShardDataReader.GetSqlMoney
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlMoney
- uid: System.Data.SqlTypes.SqlMoney
  commentId: T:System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlSingle*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlSingle
  isExternal: false
  name: GetSqlSingle
  nameWithType: MultiShardDataReader.GetSqlSingle
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlSingle
- uid: System.Data.SqlTypes.SqlSingle
  commentId: T:System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlString*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlString
  isExternal: false
  name: GetSqlString
  nameWithType: MultiShardDataReader.GetSqlString
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlString
- uid: System.Data.SqlTypes.SqlString
  commentId: T:System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValue*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValue
  isExternal: false
  name: GetSqlValue
  nameWithType: MultiShardDataReader.GetSqlValue
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValue
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValues*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValues
  isExternal: false
  name: GetSqlValues
  nameWithType: MultiShardDataReader.GetSqlValues
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlValues
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlXml*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlXml
  isExternal: false
  name: GetSqlXml
  nameWithType: MultiShardDataReader.GetSqlXml
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetSqlXml
- uid: System.Data.SqlTypes.SqlXml
  commentId: T:System.Data.SqlTypes.SqlXml
  parent: System.Data.SqlTypes
  isExternal: true
  name: SqlXml
  nameWithType: SqlXml
  fullName: System.Data.SqlTypes.SqlXml
- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetStream(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetStream(Int32)
  nameWithType: DbDataReader.GetStream(Int32)
  fullName: System.Data.Common.DbDataReader.GetStream(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
    name: GetStream
    nameWithType: DbDataReader.GetStream
    fullName: System.Data.Common.DbDataReader.GetStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
    name: GetStream
    nameWithType: DbDataReader.GetStream
    fullName: System.Data.Common.DbDataReader.GetStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetStream*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetStream
  isExternal: false
  name: GetStream
  nameWithType: MultiShardDataReader.GetStream
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Data.Common.DbDataReader.GetString(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetString(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetString(Int32)
  nameWithType: DbDataReader.GetString(Int32)
  fullName: System.Data.Common.DbDataReader.GetString(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetString(System.Int32)
    name: GetString
    nameWithType: DbDataReader.GetString
    fullName: System.Data.Common.DbDataReader.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetString(System.Int32)
    name: GetString
    nameWithType: DbDataReader.GetString
    fullName: System.Data.Common.DbDataReader.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetString*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetString
  isExternal: false
  name: GetString
  nameWithType: MultiShardDataReader.GetString
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetString
- uid: System.Data.IDataRecord.GetString(System.Int32)
  commentId: M:System.Data.IDataRecord.GetString(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetString(Int32)
  nameWithType: IDataRecord.GetString(Int32)
  fullName: System.Data.IDataRecord.GetString(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetString(System.Int32)
    name: GetString
    nameWithType: IDataRecord.GetString
    fullName: System.Data.IDataRecord.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetString(System.Int32)
    name: GetString
    nameWithType: IDataRecord.GetString
    fullName: System.Data.IDataRecord.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetTextReader(Int32)
  nameWithType: DbDataReader.GetTextReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
    name: GetTextReader
    nameWithType: DbDataReader.GetTextReader
    fullName: System.Data.Common.DbDataReader.GetTextReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
    name: GetTextReader
    nameWithType: DbDataReader.GetTextReader
    fullName: System.Data.Common.DbDataReader.GetTextReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTextReader*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTextReader
  isExternal: false
  name: GetTextReader
  nameWithType: MultiShardDataReader.GetTextReader
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTextReader
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTimeSpan*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTimeSpan
  isExternal: false
  name: GetTimeSpan
  nameWithType: MultiShardDataReader.GetTimeSpan
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetTimeSpan
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.GetValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetValue(Int32)
  nameWithType: DbDataReader.GetValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetValue(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
    name: GetValue
    nameWithType: DbDataReader.GetValue
    fullName: System.Data.Common.DbDataReader.GetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
    name: GetValue
    nameWithType: DbDataReader.GetValue
    fullName: System.Data.Common.DbDataReader.GetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValue*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValue
  isExternal: false
  name: GetValue
  nameWithType: MultiShardDataReader.GetValue
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValue
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  commentId: M:System.Data.IDataRecord.GetValue(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetValue(Int32)
  nameWithType: IDataRecord.GetValue(Int32)
  fullName: System.Data.IDataRecord.GetValue(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetValue(System.Int32)
    name: GetValue
    nameWithType: IDataRecord.GetValue
    fullName: System.Data.IDataRecord.GetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetValue(System.Int32)
    name: GetValue
    nameWithType: IDataRecord.GetValue
    fullName: System.Data.IDataRecord.GetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
  commentId: M:System.Data.Common.DbDataReader.GetValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: GetValues(Object[])
  nameWithType: DbDataReader.GetValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetValues(System.Object[])
  nameWithType.vb: DbDataReader.GetValues(Object())
  fullname.vb: System.Data.Common.DbDataReader.GetValues(System.Object())
  name.vb: GetValues(Object())
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
    name: GetValues
    nameWithType: DbDataReader.GetValues
    fullName: System.Data.Common.DbDataReader.GetValues
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
    name: GetValues
    nameWithType: DbDataReader.GetValues
    fullName: System.Data.Common.DbDataReader.GetValues
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValues*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValues
  isExternal: false
  name: GetValues
  nameWithType: MultiShardDataReader.GetValues
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetValues
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  commentId: M:System.Data.IDataRecord.GetValues(System.Object[])
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetValues(Object[])
  nameWithType: IDataRecord.GetValues(Object[])
  fullName: System.Data.IDataRecord.GetValues(System.Object[])
  nameWithType.vb: IDataRecord.GetValues(Object())
  fullname.vb: System.Data.IDataRecord.GetValues(System.Object())
  name.vb: GetValues(Object())
  spec.csharp:
  - uid: System.Data.IDataRecord.GetValues(System.Object[])
    name: GetValues
    nameWithType: IDataRecord.GetValues
    fullName: System.Data.IDataRecord.GetValues
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetValues(System.Object[])
    name: GetValues
    nameWithType: IDataRecord.GetValues
    fullName: System.Data.IDataRecord.GetValues
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetXmlReader*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetXmlReader
  isExternal: false
  name: GetXmlReader
  nameWithType: MultiShardDataReader.GetXmlReader
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.GetXmlReader
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.InitializeLifetimeService*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.InitializeLifetimeService
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: MultiShardDataReader.InitializeLifetimeService
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.InitializeLifetimeService
- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  commentId: M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: IsDBNull(Int32)
  nameWithType: DbDataReader.IsDBNull(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
    name: IsDBNull
    nameWithType: DbDataReader.IsDBNull
    fullName: System.Data.Common.DbDataReader.IsDBNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
    name: IsDBNull
    nameWithType: DbDataReader.IsDBNull
    fullName: System.Data.Common.DbDataReader.IsDBNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNull*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNull
  isExternal: false
  name: IsDBNull
  nameWithType: MultiShardDataReader.IsDBNull
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNull
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  commentId: M:System.Data.IDataRecord.IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: IsDBNull(Int32)
  nameWithType: IDataRecord.IsDBNull(Int32)
  fullName: System.Data.IDataRecord.IsDBNull(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)
    name: IsDBNull
    nameWithType: IDataRecord.IsDBNull
    fullName: System.Data.IDataRecord.IsDBNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)
    name: IsDBNull
    nameWithType: IDataRecord.IsDBNull
    fullName: System.Data.IDataRecord.IsDBNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: IsDBNullAsync(Int32, CancellationToken)
  nameWithType: DbDataReader.IsDBNullAsync(Int32, CancellationToken)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
    name: IsDBNullAsync
    nameWithType: DbDataReader.IsDBNullAsync
    fullName: System.Data.Common.DbDataReader.IsDBNullAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
    name: IsDBNullAsync
    nameWithType: DbDataReader.IsDBNullAsync
    fullName: System.Data.Common.DbDataReader.IsDBNullAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNullAsync*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNullAsync
  isExternal: false
  name: IsDBNullAsync
  nameWithType: MultiShardDataReader.IsDBNullAsync
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsDBNullAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.NextResult
  commentId: M:System.Data.Common.DbDataReader.NextResult
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: NextResult()
  nameWithType: DbDataReader.NextResult()
  fullName: System.Data.Common.DbDataReader.NextResult()
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.NextResult
    name: NextResult
    nameWithType: DbDataReader.NextResult
    fullName: System.Data.Common.DbDataReader.NextResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.NextResult
    name: NextResult
    nameWithType: DbDataReader.NextResult
    fullName: System.Data.Common.DbDataReader.NextResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResult*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResult
  isExternal: false
  name: NextResult
  nameWithType: MultiShardDataReader.NextResult
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResult
- uid: System.Data.IDataReader.NextResult
  commentId: M:System.Data.IDataReader.NextResult
  parent: System.Data.IDataReader
  isExternal: true
  name: NextResult()
  nameWithType: IDataReader.NextResult()
  fullName: System.Data.IDataReader.NextResult()
  spec.csharp:
  - uid: System.Data.IDataReader.NextResult
    name: NextResult
    nameWithType: IDataReader.NextResult
    fullName: System.Data.IDataReader.NextResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataReader.NextResult
    name: NextResult
    nameWithType: IDataReader.NextResult
    fullName: System.Data.IDataReader.NextResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: NextResultAsync(CancellationToken)
  nameWithType: DbDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
    name: NextResultAsync
    nameWithType: DbDataReader.NextResultAsync
    fullName: System.Data.Common.DbDataReader.NextResultAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
    name: NextResultAsync
    nameWithType: DbDataReader.NextResultAsync
    fullName: System.Data.Common.DbDataReader.NextResultAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResultAsync*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResultAsync
  isExternal: false
  name: NextResultAsync
  nameWithType: MultiShardDataReader.NextResultAsync
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.NextResultAsync
- uid: System.Data.Common.DbDataReader.Read
  commentId: M:System.Data.Common.DbDataReader.Read
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: Read()
  nameWithType: DbDataReader.Read()
  fullName: System.Data.Common.DbDataReader.Read()
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.Read
    name: Read
    nameWithType: DbDataReader.Read
    fullName: System.Data.Common.DbDataReader.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.Read
    name: Read
    nameWithType: DbDataReader.Read
    fullName: System.Data.Common.DbDataReader.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Read*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Read
  isExternal: false
  name: Read
  nameWithType: MultiShardDataReader.Read
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Read
- uid: System.Data.IDataReader.Read
  commentId: M:System.Data.IDataReader.Read
  parent: System.Data.IDataReader
  isExternal: true
  name: Read()
  nameWithType: IDataReader.Read()
  fullName: System.Data.IDataReader.Read()
  spec.csharp:
  - uid: System.Data.IDataReader.Read
    name: Read
    nameWithType: IDataReader.Read
    fullName: System.Data.IDataReader.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataReader.Read
    name: Read
    nameWithType: IDataReader.Read
    fullName: System.Data.IDataReader.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: ReadAsync(CancellationToken)
  nameWithType: DbDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: DbDataReader.ReadAsync
    fullName: System.Data.Common.DbDataReader.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: DbDataReader.ReadAsync
    fullName: System.Data.Common.DbDataReader.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ReadAsync*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ReadAsync
  isExternal: false
  name: ReadAsync
  nameWithType: MultiShardDataReader.ReadAsync
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ReadAsync
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ToString*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ToString
  isExternal: false
  name: ToString
  nameWithType: MultiShardDataReader.ToString
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.ToString
- uid: System.Data.Common.DbDataReader.Depth
  commentId: P:System.Data.Common.DbDataReader.Depth
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: Depth
  nameWithType: DbDataReader.Depth
  fullName: System.Data.Common.DbDataReader.Depth
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Depth*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Depth
  isExternal: false
  name: Depth
  nameWithType: MultiShardDataReader.Depth
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Depth
- uid: System.Data.IDataReader.Depth
  commentId: P:System.Data.IDataReader.Depth
  parent: System.Data.IDataReader
  isExternal: true
  name: Depth
  nameWithType: IDataReader.Depth
  fullName: System.Data.IDataReader.Depth
- uid: System.Data.Common.DbDataReader.FieldCount
  commentId: P:System.Data.Common.DbDataReader.FieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
  fullName: System.Data.Common.DbDataReader.FieldCount
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.FieldCount*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.FieldCount
  isExternal: false
  name: FieldCount
  nameWithType: MultiShardDataReader.FieldCount
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.FieldCount
- uid: System.Data.IDataRecord.FieldCount
  commentId: P:System.Data.IDataRecord.FieldCount
  parent: System.Data.IDataRecord
  isExternal: true
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
  fullName: System.Data.IDataRecord.FieldCount
- uid: System.Data.Common.DbDataReader.HasRows
  commentId: P:System.Data.Common.DbDataReader.HasRows
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: HasRows
  nameWithType: DbDataReader.HasRows
  fullName: System.Data.Common.DbDataReader.HasRows
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.HasRows*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.HasRows
  isExternal: false
  name: HasRows
  nameWithType: MultiShardDataReader.HasRows
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.HasRows
- uid: System.Data.Common.DbDataReader.IsClosed
  commentId: P:System.Data.Common.DbDataReader.IsClosed
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
  fullName: System.Data.Common.DbDataReader.IsClosed
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsClosed*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsClosed
  isExternal: false
  name: IsClosed
  nameWithType: MultiShardDataReader.IsClosed
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.IsClosed
- uid: System.Data.IDataReader.IsClosed
  commentId: P:System.Data.IDataReader.IsClosed
  parent: System.Data.IDataReader
  isExternal: true
  name: IsClosed
  nameWithType: IDataReader.IsClosed
  fullName: System.Data.IDataReader.IsClosed
- uid: System.Data.Common.DbDataReader.Item(System.Int32)
  commentId: P:System.Data.Common.DbDataReader.Item(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: Item[Int32]
  nameWithType: DbDataReader.Item[Int32]
  fullName: System.Data.Common.DbDataReader.Item[System.Int32]
  nameWithType.vb: DbDataReader.Item(Int32)
  fullname.vb: System.Data.Common.DbDataReader.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.Item(System.Int32)
    name: Item
    nameWithType: DbDataReader.Item
    fullName: System.Data.Common.DbDataReader.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Data.Common.DbDataReader.Item(System.Int32)
    name: Item
    nameWithType: DbDataReader.Item
    fullName: System.Data.Common.DbDataReader.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item
  isExternal: false
  name: Item
  nameWithType: MultiShardDataReader.Item
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Item
- uid: System.Data.IDataRecord.Item(System.Int32)
  commentId: P:System.Data.IDataRecord.Item(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: Item[Int32]
  nameWithType: IDataRecord.Item[Int32]
  fullName: System.Data.IDataRecord.Item[System.Int32]
  nameWithType.vb: IDataRecord.Item(Int32)
  fullname.vb: System.Data.IDataRecord.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.Item(System.Int32)
    name: Item
    nameWithType: IDataRecord.Item
    fullName: System.Data.IDataRecord.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Data.IDataRecord.Item(System.Int32)
    name: Item
    nameWithType: IDataRecord.Item
    fullName: System.Data.IDataRecord.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.Item(System.String)
  commentId: P:System.Data.Common.DbDataReader.Item(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: Item[String]
  nameWithType: DbDataReader.Item[String]
  fullName: System.Data.Common.DbDataReader.Item[System.String]
  nameWithType.vb: DbDataReader.Item(String)
  fullname.vb: System.Data.Common.DbDataReader.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.Item(System.String)
    name: Item
    nameWithType: DbDataReader.Item
    fullName: System.Data.Common.DbDataReader.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Data.Common.DbDataReader.Item(System.String)
    name: Item
    nameWithType: DbDataReader.Item
    fullName: System.Data.Common.DbDataReader.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.Item(System.String)
  commentId: P:System.Data.IDataRecord.Item(System.String)
  parent: System.Data.IDataRecord
  isExternal: true
  name: Item[String]
  nameWithType: IDataRecord.Item[String]
  fullName: System.Data.IDataRecord.Item[System.String]
  nameWithType.vb: IDataRecord.Item(String)
  fullname.vb: System.Data.IDataRecord.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Data.IDataRecord.Item(System.String)
    name: Item
    nameWithType: IDataRecord.Item
    fullName: System.Data.IDataRecord.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Data.IDataRecord.Item(System.String)
    name: Item
    nameWithType: IDataRecord.Item
    fullName: System.Data.IDataRecord.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbDataReader.RecordsAffected
  commentId: P:System.Data.Common.DbDataReader.RecordsAffected
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
  fullName: System.Data.Common.DbDataReader.RecordsAffected
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.RecordsAffected*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.RecordsAffected
  isExternal: false
  name: RecordsAffected
  nameWithType: MultiShardDataReader.RecordsAffected
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.RecordsAffected
- uid: System.Data.IDataReader.RecordsAffected
  commentId: P:System.Data.IDataReader.RecordsAffected
  parent: System.Data.IDataReader
  isExternal: true
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
  fullName: System.Data.IDataReader.RecordsAffected
- uid: System.Data.Common.DbDataReader.VisibleFieldCount
  commentId: P:System.Data.Common.DbDataReader.VisibleFieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
  fullName: System.Data.Common.DbDataReader.VisibleFieldCount
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.VisibleFieldCount*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.VisibleFieldCount
  isExternal: false
  name: VisibleFieldCount
  nameWithType: MultiShardDataReader.VisibleFieldCount
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.VisibleFieldCount
- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  commentId: M:System.Data.Common.DbDataReader.Dispose(System.Boolean)
  parent: System.Data.Common.DbDataReader
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DbDataReader.Dispose(Boolean)
  fullName: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DbDataReader.Dispose
    fullName: System.Data.Common.DbDataReader.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DbDataReader.Dispose
    fullName: System.Data.Common.DbDataReader.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Dispose*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Dispose
  isExternal: false
  name: Dispose
  nameWithType: MultiShardDataReader.Dispose
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader.Dispose
