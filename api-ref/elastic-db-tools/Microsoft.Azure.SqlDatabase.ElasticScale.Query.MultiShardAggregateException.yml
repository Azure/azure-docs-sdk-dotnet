### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  id: MultiShardAggregateException
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.Exception)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.String,System.Exception)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.InnerExceptions
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.ToString
  langs:
  - csharp
  - vb
  name: MultiShardAggregateException
  nameWithType: MultiShardAggregateException
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MultiShardAggregateException
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nRepresents one or more <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> errors that occured\nwhen executing a query across a shard set. The InnerExceptions field collects \nthese exceptions and one can iterate through the InnerExceptions \nfor further inspection or processing.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class MultiShardAggregateException : Exception, ISerializable, _Exception
    content.vb: >-
      <Serializable>

      Public Class MultiShardAggregateException
          Inherits Exception
          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  langs:
  - csharp
  - vb
  name: MultiShardAggregateException()
  nameWithType: MultiShardAggregateException.MultiShardAggregateException()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.MultiShardAggregateException()
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public MultiShardAggregateException()
    content.vb: Public Sub New
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  langs:
  - csharp
  - vb
  name: MultiShardAggregateException(String)
  nameWithType: MultiShardAggregateException.MultiShardAggregateException(String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.MultiShardAggregateException(System.String)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public MultiShardAggregateException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.Exception)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  langs:
  - csharp
  - vb
  name: MultiShardAggregateException(Exception)
  nameWithType: MultiShardAggregateException.MultiShardAggregateException(Exception)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.MultiShardAggregateException(System.Exception)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public MultiShardAggregateException(Exception innerException)
    content.vb: Public Sub New(innerException As Exception)
    parameters:
    - id: innerException
      type: System.Exception
      description: The <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> that caused the current exception
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  langs:
  - csharp
  - vb
  name: MultiShardAggregateException(SerializationInfo, StreamingContext)
  nameWithType: MultiShardAggregateException.MultiShardAggregateException(SerializationInfo, StreamingContext)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.MultiShardAggregateException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nInitializes a new instance of the MultiShardAggregateException class with serialized data.\n"
  example: []
  syntax:
    content: protected MultiShardAggregateException(SerializationInfo info, StreamingContext context)
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.String,System.Exception)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  langs:
  - csharp
  - vb
  name: MultiShardAggregateException(String, Exception)
  nameWithType: MultiShardAggregateException.MultiShardAggregateException(String, Exception)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.MultiShardAggregateException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\n\n"
  example: []
  syntax:
    content: public MultiShardAggregateException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: ''
    - id: innerException
      type: System.Exception
      description: ''
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Exception})'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  langs:
  - csharp
  - vb
  name: MultiShardAggregateException(IEnumerable<Exception>)
  nameWithType: MultiShardAggregateException.MultiShardAggregateException(IEnumerable<Exception>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.MultiShardAggregateException(System.Collections.Generic.IEnumerable<System.Exception>)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public MultiShardAggregateException(IEnumerable<Exception> innerExceptions)
    content.vb: Public Sub New(innerExceptions As IEnumerable(Of Exception))
    parameters:
    - id: innerExceptions
      type: System.Collections.Generic.IEnumerable{System.Exception}
      description: A list of <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> that caused the current exception
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor*
  nameWithType.vb: MultiShardAggregateException.MultiShardAggregateException(IEnumerable(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.MultiShardAggregateException(System.Collections.Generic.IEnumerable(Of System.Exception))
  name.vb: MultiShardAggregateException(IEnumerable(Of Exception))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  langs:
  - csharp
  - vb
  name: MultiShardAggregateException(String, IEnumerable<Exception>)
  nameWithType: MultiShardAggregateException.MultiShardAggregateException(String, IEnumerable<Exception>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.MultiShardAggregateException(System.String, System.Collections.Generic.IEnumerable<System.Exception>)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public MultiShardAggregateException(string message, IEnumerable<Exception> innerExceptions)
    content.vb: Public Sub New(message As String, innerExceptions As IEnumerable(Of Exception))
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception
    - id: innerExceptions
      type: System.Collections.Generic.IEnumerable{System.Exception}
      description: A list of <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> that caused the current exception
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <span class="paramref">innerExceptions</span> is null '
  nameWithType.vb: MultiShardAggregateException.MultiShardAggregateException(String, IEnumerable(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.MultiShardAggregateException(System.String, System.Collections.Generic.IEnumerable(Of System.Exception))
  name.vb: MultiShardAggregateException(String, IEnumerable(Of Exception))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: MultiShardAggregateException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetObjectData
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nPopulates a SerializationInfo with the data needed to serialize the target object.\n"
  example: []
  syntax:
    content: public override void GetObjectData(SerializationInfo info, StreamingContext context)
    content.vb: Public Overrides Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The SerializationInfo to populate with data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination (see StreamingContext) for this serialization.
  overridden: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.GetObjectData*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.InnerExceptions
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.InnerExceptions
  id: InnerExceptions
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  langs:
  - csharp
  - vb
  name: InnerExceptions
  nameWithType: MultiShardAggregateException.InnerExceptions
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.InnerExceptions
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: InnerExceptions
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
    startLine: 136
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets a read-only collection of the <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> instances \nthat caused the current exception.\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<Exception> InnerExceptions { get; }
    content.vb: Public ReadOnly Property InnerExceptions As ReadOnlyCollection(Of Exception)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.InnerExceptions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.ToString
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.ToString
  id: ToString
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MultiShardAggregateException.ToString()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.ToString()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ToString
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/Exceptions/MultiShardAggregateException.cs
    startLine: 149
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nProvides a string representation of this exception\nincluding its inner exceptions.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: ''
  overridden: System.Exception.ToString
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  nameWithType: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  isExternal: false
  name: MultiShardAggregateException
  nameWithType: MultiShardAggregateException
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.#ctor
  isExternal: false
  name: MultiShardAggregateException
  nameWithType: MultiShardAggregateException.MultiShardAggregateException
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.MultiShardAggregateException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Generic.IEnumerable{System.Exception}
  commentId: T:System.Collections.Generic.IEnumerable{System.Exception}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Exception>
  nameWithType: IEnumerable<Exception>
  fullName: System.Collections.Generic.IEnumerable<System.Exception>
  nameWithType.vb: IEnumerable(Of Exception)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Exception)
  name.vb: IEnumerable(Of Exception)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.GetObjectData*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.GetObjectData
  isExternal: false
  name: GetObjectData
  nameWithType: MultiShardAggregateException.GetObjectData
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.GetObjectData
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.InnerExceptions*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.InnerExceptions
  isExternal: false
  name: InnerExceptions
  nameWithType: MultiShardAggregateException.InnerExceptions
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.InnerExceptions
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<Exception>
  nameWithType: ReadOnlyCollection<Exception>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Exception>
  nameWithType.vb: ReadOnlyCollection(Of Exception)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Exception)
  name.vb: ReadOnlyCollection(Of Exception)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.ToString*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.ToString
  isExternal: false
  name: ToString
  nameWithType: MultiShardAggregateException.ToString
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException.ToString
