### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs
  id: ShardExecutionEventArgs
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.Exception
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.ShardLocation
  langs:
  - csharp
  - vb
  name: ShardExecutionEventArgs
  nameWithType: ShardExecutionEventArgs
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/Query/ShardExecutionEventArgs.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardExecutionEventArgs
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/ShardExecutionEventArgs.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nInput to be passed to per-shard event handlers.\n"
  example: []
  syntax:
    content: 'public class ShardExecutionEventArgs : EventArgs'
    content.vb: >-
      Public Class ShardExecutionEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.Exception
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.Exception
  id: Exception
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: ShardExecutionEventArgs.Exception
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.Exception
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/ShardExecutionEventArgs.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Exception
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/ShardExecutionEventArgs.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe exception to process, if applicable. Null if no exception was thrown.\n"
  example: []
  syntax:
    content: public Exception Exception { get; }
    content.vb: Public ReadOnly Property Exception As Exception
    parameters: []
    return:
      type: System.Exception
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.ShardLocation
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.ShardLocation
  id: ShardLocation
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs
  langs:
  - csharp
  - vb
  name: ShardLocation
  nameWithType: ShardExecutionEventArgs.ShardLocation
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.ShardLocation
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/ShardExecutionEventArgs.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardLocation
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/ShardExecutionEventArgs.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe location of the shard on which the MultiShardCommand is currently executing.\n"
  example: []
  syntax:
    content: public ShardLocation ShardLocation { get; }
    content.vb: Public ReadOnly Property ShardLocation As ShardLocation
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.ShardLocation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.Exception*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.Exception
  isExternal: false
  name: Exception
  nameWithType: ShardExecutionEventArgs.Exception
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.Exception
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.ShardLocation*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.ShardLocation
  isExternal: false
  name: ShardLocation
  nameWithType: ShardExecutionEventArgs.ShardLocation
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs.ShardLocation
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardLocation
  nameWithType: ShardLocation
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
