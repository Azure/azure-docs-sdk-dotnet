### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  id: ReferenceTableInfo
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.#ctor(System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.#ctor(System.String,System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals(System.Object)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.GetHashCode
  langs:
  - csharp
  - vb
  name: ReferenceTableInfo
  nameWithType: ReferenceTableInfo
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ReferenceTableInfo
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nRepresents information about a single reference table.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      [DataContract(Name = "ReferenceTableInfo", Namespace = "")]

      public class ReferenceTableInfo : TableInfo, IEquatable<ReferenceTableInfo>
    content.vb: >-
      <Serializable>

      <DataContract(Name:="ReferenceTableInfo", Namespace:="")>

      Public Class ReferenceTableInfo
          Inherits TableInfo
          Implements IEquatable(Of ReferenceTableInfo)
  inheritance:
  - System.Object
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo
  implements:
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo}
  inheritedMembers:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.SchemaName
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.TableName
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ReferenceTableInfo
    - name: Namespace
      type: System.String
      value: ''
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.#ctor(System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  langs:
  - csharp
  - vb
  name: ReferenceTableInfo(String)
  nameWithType: ReferenceTableInfo.ReferenceTableInfo(String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.ReferenceTableInfo(System.String)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ReferenceTableInfo(string tableName)
    content.vb: Public Sub New(tableName As String)
    parameters:
    - id: tableName
      type: System.String
      description: Reference table name.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  langs:
  - csharp
  - vb
  name: ReferenceTableInfo(String, String)
  nameWithType: ReferenceTableInfo.ReferenceTableInfo(String, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.ReferenceTableInfo(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ReferenceTableInfo(string schemaName, string tableName)
    content.vb: Public Sub New(schemaName As String, tableName As String)
    parameters:
    - id: schemaName
      type: System.String
      description: Schema name of the reference table.
    - id: tableName
      type: System.String
      description: Reference table name.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo)
  id: Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  langs:
  - csharp
  - vb
  name: Equals(ReferenceTableInfo)
  nameWithType: ReferenceTableInfo.Equals(ReferenceTableInfo)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nDetermines whether the specified ReferenceTableInfo object is equal to the current object.\n"
  example: []
  syntax:
    content: public bool Equals(ReferenceTableInfo other)
    content.vb: Public Function Equals(other As ReferenceTableInfo) As Boolean
    parameters:
    - id: other
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
      description: The ReferenceTableInfo object to compare with the current object.
    return:
      type: System.Boolean
      description: true if the specified ReferenceTableInfo object is equal to the current object; otherwise, false.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals*
  implements:
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals(System.Object)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ReferenceTableInfo.Equals(Object)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nOverrides the Equals() method of Object class. Determines whether the specified object \nis equal to the current object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current ReferenceTableInfo object.
    return:
      type: System.Boolean
      description: true if the specified object is equal to the current ReferenceTableInfo object; otherwise, false.
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.GetHashCode
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.GetHashCode
  id: GetHashCode
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ReferenceTableInfo.GetHashCode()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.GetHashCode()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetHashCode
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/SchemaInformation/ReferenceTableInfo.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nCalculates the hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: Hash code for the object.
  overridden: System.Object.GetHashCode
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  isExternal: false
  name: TableInfo
  nameWithType: TableInfo
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo}
  commentId: T:System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ReferenceTableInfo>
  nameWithType: IEquatable<ReferenceTableInfo>
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo>
  nameWithType.vb: IEquatable(Of ReferenceTableInfo)
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo)
  name.vb: IEquatable(Of ReferenceTableInfo)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
    name: ReferenceTableInfo
    nameWithType: ReferenceTableInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
    name: ReferenceTableInfo
    nameWithType: ReferenceTableInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.SchemaName
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.SchemaName
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo
  isExternal: false
  name: SchemaName
  nameWithType: TableInfo.SchemaName
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.SchemaName
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.TableName
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.TableName
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo
  isExternal: false
  name: TableName
  nameWithType: TableInfo.TableName
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.TableName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  isExternal: false
  name: ReferenceTableInfo
  nameWithType: ReferenceTableInfo
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.#ctor*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.#ctor
  isExternal: false
  name: ReferenceTableInfo
  nameWithType: ReferenceTableInfo.ReferenceTableInfo
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.ReferenceTableInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals
  isExternal: false
  name: Equals
  nameWithType: ReferenceTableInfo.Equals
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.Equals
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo)
  commentId: M:System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo)
  parent: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ReferenceTableInfo)
  nameWithType: IEquatable<ReferenceTableInfo>.Equals(ReferenceTableInfo)
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo>.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo)
  nameWithType.vb: IEquatable(Of ReferenceTableInfo).Equals(ReferenceTableInfo)
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo).Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ReferenceTableInfo>.Equals
    fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
    name: ReferenceTableInfo
    nameWithType: ReferenceTableInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ReferenceTableInfo).Equals
    fullName: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
    name: ReferenceTableInfo
    nameWithType: ReferenceTableInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.GetHashCode*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: ReferenceTableInfo.GetHashCode
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.ReferenceTableInfo.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
