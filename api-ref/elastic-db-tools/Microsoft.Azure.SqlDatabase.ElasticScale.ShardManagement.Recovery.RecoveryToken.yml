### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  id: RecoveryToken
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals(System.Object)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.GetHashCode
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.ToString
  langs:
  - csharp
  - vb
  name: RecoveryToken
  nameWithType: RecoveryToken
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Recovery/RecoveryToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: RecoveryToken
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Recovery/RecoveryToken.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  summary: "\nRecovery token generated and used by methods of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryManager\" data-throw-if-not-resolved=\"false\"></xref> \nto perform conflict detection and resolution for shard maps.\n"
  example: []
  syntax:
    content: 'public sealed class RecoveryToken : IEquatable<RecoveryToken>'
    content.vb: >-
      Public NotInheritable Class RecoveryToken
          Implements IEquatable(Of RecoveryToken)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.ToString
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.ToString
  id: ToString
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RecoveryToken.ToString()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.ToString()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Recovery/RecoveryToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ToString
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Recovery/RecoveryToken.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  summary: "\nConverts the object to its string representation.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: String representation of the object.
  overridden: System.Object.ToString
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.GetHashCode
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.GetHashCode
  id: GetHashCode
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RecoveryToken.GetHashCode()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.GetHashCode()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Recovery/RecoveryToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetHashCode
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Recovery/RecoveryToken.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  summary: "\nCalculates the hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: Hash code for the object.
  overridden: System.Object.GetHashCode
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals(System.Object)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: RecoveryToken.Equals(Object)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Recovery/RecoveryToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Recovery/RecoveryToken.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  summary: "\nDetermines whether the specified Object is equal to the current Object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: True if the specified object is equal to the current object; otherwise, false.
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken)
  id: Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  langs:
  - csharp
  - vb
  name: Equals(RecoveryToken)
  nameWithType: RecoveryToken.Equals(RecoveryToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Recovery/RecoveryToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Recovery/RecoveryToken.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  summary: "\nPerforms equality comparison with another given RecoveryToken.\n"
  example: []
  syntax:
    content: public bool Equals(RecoveryToken other)
    content.vb: Public Function Equals(other As RecoveryToken) As Boolean
    parameters:
    - id: other
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
      description: RecoveryToken to compare with.
    return:
      type: System.Boolean
      description: True if same locations, false otherwise.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals*
  implements:
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryManager
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryManager
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  isExternal: false
  name: RecoveryManager
  nameWithType: RecoveryManager
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryManager
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken}
  commentId: T:System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<RecoveryToken>
  nameWithType: IEquatable<RecoveryToken>
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken>
  nameWithType.vb: IEquatable(Of RecoveryToken)
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken)
  name.vb: IEquatable(Of RecoveryToken)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
    name: RecoveryToken
    nameWithType: RecoveryToken
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
    name: RecoveryToken
    nameWithType: RecoveryToken
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.ToString*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.ToString
  isExternal: false
  name: ToString
  nameWithType: RecoveryToken.ToString
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.GetHashCode*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: RecoveryToken.GetHashCode
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals
  isExternal: false
  name: Equals
  nameWithType: RecoveryToken.Equals
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken)
  commentId: M:System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken)
  parent: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(RecoveryToken)
  nameWithType: IEquatable<RecoveryToken>.Equals(RecoveryToken)
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken>.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken)
  nameWithType.vb: IEquatable(Of RecoveryToken).Equals(RecoveryToken)
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken).Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<RecoveryToken>.Equals
    fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
    name: RecoveryToken
    nameWithType: RecoveryToken
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of RecoveryToken).Equals
    fullName: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
    name: RecoveryToken
    nameWithType: RecoveryToken
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery
  isExternal: false
  name: RecoveryToken
  nameWithType: RecoveryToken
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Recovery.RecoveryToken
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
