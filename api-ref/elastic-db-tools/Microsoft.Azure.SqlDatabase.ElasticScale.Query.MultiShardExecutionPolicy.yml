### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  id: MultiShardExecutionPolicy
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy.CompleteResults
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy.PartialResults
  langs:
  - csharp
  - vb
  name: MultiShardExecutionPolicy
  nameWithType: MultiShardExecutionPolicy
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  type: Enum
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardExecutionPolicy.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MultiShardExecutionPolicy
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardExecutionPolicy.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nDefines the possible query execution policies\n"
  example: []
  syntax:
    content: public enum MultiShardExecutionPolicy
    content.vb: Public Enum MultiShardExecutionPolicy
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy.CompleteResults
  commentId: F:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy.CompleteResults
  id: CompleteResults
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  langs:
  - csharp
  - vb
  name: CompleteResults
  nameWithType: MultiShardExecutionPolicy.CompleteResults
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy.CompleteResults
  type: Field
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardExecutionPolicy.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CompleteResults
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardExecutionPolicy.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nWith the complete results execution policy an unsuccessful \nexecution against any shard leads to all results being discarded\nand an exception being thrown either by the ExecuteReader method\non the command or the Read method on the reader. \n"
  example: []
  syntax:
    content: CompleteResults = 0
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy.PartialResults
  commentId: F:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy.PartialResults
  id: PartialResults
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  langs:
  - csharp
  - vb
  name: PartialResults
  nameWithType: MultiShardExecutionPolicy.PartialResults
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy.PartialResults
  type: Field
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardExecutionPolicy.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: PartialResults
    path: src/elastic-db-tools/Src/ElasticScale.Client/Query/MultiShardExecutionPolicy.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nA best-effort execution policy that, unlike CompleteResults, tolerates unsuccessful command execution \non some (but not all) shards and returns the results of the successful commands.  \nAny errors encountered are returned to the user along with the partial results.\nThe caller can inspect exceptions encountered during execution through \nthe <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException\" data-throw-if-not-resolved=\"false\"></xref> property of <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  example: []
  syntax:
    content: PartialResults = 1
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: MultiShardExecutionPolicy
  nameWithType: MultiShardExecutionPolicy
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
  isExternal: false
  name: MultiShardAggregateException
  nameWithType: MultiShardAggregateException
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardAggregateException
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: MultiShardDataReader
  nameWithType: MultiShardDataReader
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
