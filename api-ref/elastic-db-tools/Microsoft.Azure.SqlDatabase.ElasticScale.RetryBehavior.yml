### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
  id: RetryBehavior
  parent: Microsoft.Azure.SqlDatabase.ElasticScale
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.#ctor(System.Func{System.Exception,System.Boolean})
  - Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior
  langs:
  - csharp
  - vb
  name: RetryBehavior
  nameWithType: RetryBehavior
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ElasticScale.Common/TransientFaultHandling/RetryBehavior.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: RetryBehavior
    path: src/elastic-db-tools/Src/ElasticScale.Client/ElasticScale.Common/TransientFaultHandling/RetryBehavior.cs
    startLine: 10
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale
  summary: "\nDefines the retry behavior to use for detecting transient errors.\n"
  example: []
  syntax:
    content: public sealed class RetryBehavior
    content.vb: Public NotInheritable Class RetryBehavior
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.#ctor(System.Func{System.Exception,System.Boolean})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.#ctor(System.Func{System.Exception,System.Boolean})
  id: '#ctor(System.Func{System.Exception,System.Boolean})'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
  langs:
  - csharp
  - vb
  name: RetryBehavior(Func<Exception, Boolean>)
  nameWithType: RetryBehavior.RetryBehavior(Func<Exception, Boolean>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.RetryBehavior(System.Func<System.Exception, System.Boolean>)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ElasticScale.Common/TransientFaultHandling/RetryBehavior.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: src/elastic-db-tools/Src/ElasticScale.Client/ElasticScale.Common/TransientFaultHandling/RetryBehavior.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale
  summary: "\nInitializes an instance of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public RetryBehavior(Func<Exception, bool> transientErrorDetector)
    content.vb: Public Sub New(transientErrorDetector As Func(Of Exception, Boolean))
    parameters:
    - id: transientErrorDetector
      type: System.Func{System.Exception,System.Boolean}
      description: >
        Function that detects transient errors given an exception.
         The function needs to return true for an exception that should be treated as transient.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.#ctor*
  nameWithType.vb: RetryBehavior.RetryBehavior(Func(Of Exception, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.RetryBehavior(System.Func(Of System.Exception, System.Boolean))
  name.vb: RetryBehavior(Func(Of Exception, Boolean))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior
  id: DefaultRetryBehavior
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
  langs:
  - csharp
  - vb
  name: DefaultRetryBehavior
  nameWithType: RetryBehavior.DefaultRetryBehavior
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ElasticScale.Common/TransientFaultHandling/RetryBehavior.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DefaultRetryBehavior
    path: src/elastic-db-tools/Src/ElasticScale.Client/ElasticScale.Common/TransientFaultHandling/RetryBehavior.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale
  summary: "\nGets the default retry behavior.\n"
  remarks: "\nThe default retry behavior has a built-in set of exceptions that are considered transient. \nYou may create and use a custom <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior\" data-throw-if-not-resolved=\"false\"></xref> object in order \nto treat additional exceptions as transient.\n"
  example: []
  syntax:
    content: public static RetryBehavior DefaultRetryBehavior { get; }
    content.vb: Public Shared ReadOnly Property DefaultRetryBehavior As RetryBehavior
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
  parent: Microsoft.Azure.SqlDatabase.ElasticScale
  isExternal: false
  name: RetryBehavior
  nameWithType: RetryBehavior
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.#ctor*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.#ctor
  isExternal: false
  name: RetryBehavior
  nameWithType: RetryBehavior.RetryBehavior
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.RetryBehavior
- uid: System.Func{System.Exception,System.Boolean}
  commentId: T:System.Func{System.Exception,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<Exception, Boolean>
  nameWithType: Func<Exception, Boolean>
  fullName: System.Func<System.Exception, System.Boolean>
  nameWithType.vb: Func(Of Exception, Boolean)
  fullname.vb: System.Func(Of System.Exception, System.Boolean)
  name.vb: Func(Of Exception, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior
  isExternal: false
  name: DefaultRetryBehavior
  nameWithType: RetryBehavior.DefaultRetryBehavior
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior
