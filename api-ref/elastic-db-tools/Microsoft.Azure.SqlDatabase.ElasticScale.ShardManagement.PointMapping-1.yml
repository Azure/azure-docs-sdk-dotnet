### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
  id: PointMapping`1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Clone
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Equals(System.Object)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.GetHashCode
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Shard
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Status
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.ToString
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Value
  langs:
  - csharp
  - vb
  name: PointMapping<TKey>
  nameWithType: PointMapping<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: PointMapping
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nRepresents a mapping between the singleton key value of a shardlet (a point) and a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping%601.Shard\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public sealed class PointMapping<TKey> : IShardProvider<TKey>, IShardProvider, ICloneable<PointMapping<TKey>>, IMappingInfoProvider'
    content.vb: >-
      Public NotInheritable Class PointMapping(Of TKey)
          Implements IShardProvider(Of TKey), IShardProvider, ICloneable(Of PointMapping(Of TKey)), IMappingInfoProvider
    typeParameters:
    - id: TKey
      description: Type of the key (point).
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: PointMapping(Of TKey)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey)
  name.vb: PointMapping(Of TKey)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Status
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Status
  id: Status
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: PointMapping<TKey>.Status
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>.Status
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Status
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets Status of the mapping.\n"
  example: []
  syntax:
    content: public MappingStatus Status { get; }
    content.vb: Public ReadOnly Property Status As MappingStatus
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingStatus
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Status*
  nameWithType.vb: PointMapping(Of TKey).Status
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey).Status
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Shard
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Shard
  id: Shard
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
  langs:
  - csharp
  - vb
  name: Shard
  nameWithType: PointMapping<TKey>.Shard
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>.Shard
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Shard
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
    startLine: 146
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets Shard that contains the key value.\n"
  example: []
  syntax:
    content: public Shard Shard { get; }
    content.vb: Public ReadOnly Property Shard As Shard
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Shard*
  nameWithType.vb: PointMapping(Of TKey).Shard
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey).Shard
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Value
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Value
  id: Value
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: PointMapping<TKey>.Value
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>.Value
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Value
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
    startLine: 157
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets key value. \n"
  example: []
  syntax:
    content: public TKey Value { get; }
    content.vb: Public ReadOnly Property Value As TKey
    parameters: []
    return:
      type: '{TKey}'
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Value*
  nameWithType.vb: PointMapping(Of TKey).Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey).Value
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.ToString
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.ToString
  id: ToString
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PointMapping<TKey>.ToString()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>.ToString()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ToString
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
    startLine: 227
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nConverts the object to its string representation.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: String representation of the object.
  overridden: System.Object.ToString
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.ToString*
  nameWithType.vb: PointMapping(Of TKey).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey).ToString()
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Equals(System.Object)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: PointMapping<TKey>.Equals(Object)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
    startLine: 237
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nDetermines whether the specified object is equal to the current object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: True if the specified object is equal to the current object; otherwise, false.
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Equals*
  nameWithType.vb: PointMapping(Of TKey).Equals(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey).Equals(System.Object)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.GetHashCode
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.GetHashCode
  id: GetHashCode
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PointMapping<TKey>.GetHashCode()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>.GetHashCode()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetHashCode
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
    startLine: 259
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCalculates the hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: Hash code for the object.
  overridden: System.Object.GetHashCode
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.GetHashCode*
  nameWithType.vb: PointMapping(Of TKey).GetHashCode()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey).GetHashCode()
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Clone
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Clone
  id: Clone
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: PointMapping<TKey>.Clone()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>.Clone()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Clone
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/Shard/PointMapping.cs
    startLine: 347
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nClones the instance.\n"
  example: []
  syntax:
    content: public PointMapping<TKey> Clone()
    content.vb: Public Function Clone As PointMapping(Of TKey)
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
      description: Clone of the instance.
  overload: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Clone*
  nameWithType.vb: PointMapping(Of TKey).Clone()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey).Clone()
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Shard
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Shard
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Status*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Status
  isExternal: false
  name: Status
  nameWithType: PointMapping<TKey>.Status
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>.Status
  nameWithType.vb: PointMapping(Of TKey).Status
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey).Status
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingStatus
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingStatus
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: MappingStatus
  nameWithType: MappingStatus
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingStatus
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Shard*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Shard
  isExternal: false
  name: Shard
  nameWithType: PointMapping<TKey>.Shard
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>.Shard
  nameWithType.vb: PointMapping(Of TKey).Shard
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey).Shard
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Shard
  nameWithType: Shard
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Value*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Value
  isExternal: false
  name: Value
  nameWithType: PointMapping<TKey>.Value
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>.Value
  nameWithType.vb: PointMapping(Of TKey).Value
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey).Value
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TKey
  isExternal: false
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.ToString*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.ToString
  isExternal: false
  name: ToString
  nameWithType: PointMapping.ToString
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Equals*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Equals
  isExternal: false
  name: Equals
  nameWithType: PointMapping.Equals
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.GetHashCode*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: PointMapping.GetHashCode
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Clone*
  commentId: Overload:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1.Clone
  isExternal: false
  name: Clone
  nameWithType: PointMapping.Clone
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping.Clone
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: PointMapping<TKey>
  nameWithType: PointMapping<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping<TKey>
  nameWithType.vb: PointMapping(Of TKey)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping(Of TKey)
  name.vb: PointMapping(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
    name: PointMapping
    nameWithType: PointMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping`1
    name: PointMapping
    nameWithType: PointMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.PointMapping
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
