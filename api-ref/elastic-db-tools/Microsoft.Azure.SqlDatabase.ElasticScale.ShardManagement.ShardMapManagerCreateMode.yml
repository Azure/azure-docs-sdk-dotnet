### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
  id: ShardMapManagerCreateMode
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode.KeepExisting
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode.ReplaceExisting
  langs:
  - csharp
  - vb
  name: ShardMapManagerCreateMode
  nameWithType: ShardMapManagerCreateMode
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
  type: Enum
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardMapManagerCreateMode
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nDescribes the creation options for shard map manager storage representation.\n"
  example: []
  syntax:
    content: public enum ShardMapManagerCreateMode
    content.vb: Public Enum ShardMapManagerCreateMode
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode.KeepExisting
  commentId: F:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode.KeepExisting
  id: KeepExisting
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
  langs:
  - csharp
  - vb
  name: KeepExisting
  nameWithType: ShardMapManagerCreateMode.KeepExisting
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode.KeepExisting
  type: Field
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: KeepExisting
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nIf the shard map manager data structures are already present\nin the store, then this method will raise exception.\n"
  example: []
  syntax:
    content: KeepExisting = 0
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode.ReplaceExisting
  commentId: F:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode.ReplaceExisting
  id: ReplaceExisting
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
  langs:
  - csharp
  - vb
  name: ReplaceExisting
  nameWithType: ShardMapManagerCreateMode.ReplaceExisting
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode.ReplaceExisting
  type: Field
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ReplaceExisting
    path: src/elastic-db-tools/Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nIf the shard map manager data structures are already present\nin the store, then this method will overwrite them.\n"
  example: []
  syntax:
    content: ReplaceExisting = 1
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  commentId: N:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  nameWithType: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardMapManagerCreateMode
  nameWithType: ShardMapManagerCreateMode
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
