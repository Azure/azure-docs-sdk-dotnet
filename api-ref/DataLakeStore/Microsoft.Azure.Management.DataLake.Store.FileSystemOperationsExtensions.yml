### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  commentId: T:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  id: FileSystemOperationsExtensions
  parent: Microsoft.Azure.Management.DataLake.Store
  children:
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: FileSystemOperationsExtensions
  nameWithType: FileSystemOperationsExtensions
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: FileSystemOperationsExtensions
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nExtension methods for FileSystemOperations.\n"
  example: []
  syntax:
    content: public static class FileSystemOperationsExtensions
    content.vb: Public Module FileSystemOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: PathExists(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.PathExists(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/FileSystemOperationsExtensions.Customizations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: PathExists
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/FileSystemOperationsExtensions.Customizations.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nTest the existence of a file or directory object specified by the file path.\n"
  example: []
  syntax:
    content: public static bool PathExists(this IFileSystemOperations operations, string accountName, string getFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PathExists(operations As IFileSystemOperations, accountName As String, getFilePath As String) As Boolean
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to test the existence of.\n"
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: PathExistsAsync(IFileSystemOperations, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.PathExistsAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/FileSystemOperationsExtensions.Customizations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: PathExistsAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/FileSystemOperationsExtensions.Customizations.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nTest the existence of a file or directory object specified by the file path.\n"
  example: []
  syntax:
    content: public static Task<bool> PathExistsAsync(this IFileSystemOperations operations, string accountName, string getFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PathExistsAsync(operations As IFileSystemOperations, accountName As String, getFilePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to test the existence of.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  id: ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ConcurrentAppend(IFileSystemOperations, String, String, Stream, Nullable<AppendModeType>, Nullable<SyncFlag>)
  nameWithType: FileSystemOperationsExtensions.ConcurrentAppend(IFileSystemOperations, String, String, Stream, Nullable<AppendModeType>, Nullable<SyncFlag>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType>, System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ConcurrentAppend
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nAppends to the specified file. This method supports multiple concurrent\nappends to the file. NOTE: ConcurrentAppend and normal (serial) Append\nCANNOT be used interchangeably; once a file has been appended to using\neither of these append options, it can only be appended to using that\nappend option. ConcurrentAppend DOES NOT guarantee order and can result in\nduplicated data landing in the target file.\n"
  example: []
  syntax:
    content: public static void ConcurrentAppend(this IFileSystemOperations operations, string accountName, string filePath, Stream streamContents, AppendModeType? appendMode = null, SyncFlag? syncFlag = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ConcurrentAppend(operations As IFileSystemOperations, accountName As String, filePath As String, streamContents As Stream, appendMode As AppendModeType? = Nothing, syncFlag As SyncFlag? = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to which to append\nusing concurrent append.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when appending to the file.\n"
    - id: appendMode
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType}
      description: "\nIndicates the concurrent append call should create the file if it doesn't\nexist or just open the existing file for append. Possible values include:\n'autocreate'\n"
    - id: syncFlag
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag}
      description: "\nOptionally indicates what to do after completion of the concurrent append.\nDATA indicates more data is coming so no sync takes place, METADATA\nindicates a sync should be done to refresh metadata of the file only. CLOSE\nindicates that both the stream and metadata should be refreshed upon append\ncompletion. Possible values include: 'DATA', 'METADATA', 'CLOSE'\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend*
  nameWithType.vb: FileSystemOperationsExtensions.ConcurrentAppend(IFileSystemOperations, String, String, Stream, Nullable(Of AppendModeType), Nullable(Of SyncFlag))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType), System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag))
  name.vb: ConcurrentAppend(IFileSystemOperations, String, String, Stream, Nullable(Of AppendModeType), Nullable(Of SyncFlag))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  id: ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ConcurrentAppendAsync(IFileSystemOperations, String, String, Stream, Nullable<AppendModeType>, Nullable<SyncFlag>, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.ConcurrentAppendAsync(IFileSystemOperations, String, String, Stream, Nullable<AppendModeType>, Nullable<SyncFlag>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType>, System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ConcurrentAppendAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nAppends to the specified file. This method supports multiple concurrent\nappends to the file. NOTE: ConcurrentAppend and normal (serial) Append\nCANNOT be used interchangeably; once a file has been appended to using\neither of these append options, it can only be appended to using that\nappend option. ConcurrentAppend DOES NOT guarantee order and can result in\nduplicated data landing in the target file.\n"
  example: []
  syntax:
    content: public static Task ConcurrentAppendAsync(this IFileSystemOperations operations, string accountName, string filePath, Stream streamContents, AppendModeType? appendMode = null, SyncFlag? syncFlag = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConcurrentAppendAsync(operations As IFileSystemOperations, accountName As String, filePath As String, streamContents As Stream, appendMode As AppendModeType? = Nothing, syncFlag As SyncFlag? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to which to append\nusing concurrent append.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when appending to the file.\n"
    - id: appendMode
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType}
      description: "\nIndicates the concurrent append call should create the file if it doesn't\nexist or just open the existing file for append. Possible values include:\n'autocreate'\n"
    - id: syncFlag
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag}
      description: "\nOptionally indicates what to do after completion of the concurrent append.\nDATA indicates more data is coming so no sync takes place, METADATA\nindicates a sync should be done to refresh metadata of the file only. CLOSE\nindicates that both the stream and metadata should be refreshed upon append\ncompletion. Possible values include: 'DATA', 'METADATA', 'CLOSE'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync*
  nameWithType.vb: FileSystemOperationsExtensions.ConcurrentAppendAsync(IFileSystemOperations, String, String, Stream, Nullable(Of AppendModeType), Nullable(Of SyncFlag), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType), System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag), System.Threading.CancellationToken)
  name.vb: ConcurrentAppendAsync(IFileSystemOperations, String, String, Stream, Nullable(Of AppendModeType), Nullable(Of SyncFlag), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64})
  id: SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetFileExpiry(IFileSystemOperations, String, String, ExpiryOptionType, Nullable<Int64>)
  nameWithType: FileSystemOperationsExtensions.SetFileExpiry(IFileSystemOperations, String, String, ExpiryOptionType, Nullable<Int64>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SetFileExpiry
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets or removes the expiration time on the specified file. This operation\ncan only be executed against files. Folders are not supported.\n"
  example: []
  syntax:
    content: public static void SetFileExpiry(this IFileSystemOperations operations, string accountName, string filePath, ExpiryOptionType expiryOption, long ? expireTime = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetFileExpiry(operations As IFileSystemOperations, accountName As String, filePath As String, expiryOption As ExpiryOptionType, expireTime As Long? = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file on which to set or\nremove the expiration time.\n"
    - id: expiryOption
      type: Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
      description: "\nIndicates the type of expiration to use for the file: 1. NeverExpire:\nExpireTime is ignored. 2. RelativeToNow: ExpireTime is an integer in\nmilliseconds representing the expiration date relative to when file\nexpiration is updated. 3. RelativeToCreationDate: ExpireTime is an integer\nin milliseconds representing the expiration date relative to file creation.\n4. Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp\nrelative to 1/1/1970 00:00:00. Possible values include: 'NeverExpire',\n'RelativeToNow', 'RelativeToCreationDate', 'Absolute'\n"
    - id: expireTime
      type: System.Nullable{System.Int64}
      description: "\nThe time that the file will expire, corresponding to the ExpiryOption that\nwas set.\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry*
  nameWithType.vb: FileSystemOperationsExtensions.SetFileExpiry(IFileSystemOperations, String, String, ExpiryOptionType, Nullable(Of Int64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType, System.Nullable(Of System.Int64))
  name.vb: SetFileExpiry(IFileSystemOperations, String, String, ExpiryOptionType, Nullable(Of Int64))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Threading.CancellationToken)
  id: SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetFileExpiryAsync(IFileSystemOperations, String, String, ExpiryOptionType, Nullable<Int64>, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.SetFileExpiryAsync(IFileSystemOperations, String, String, ExpiryOptionType, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SetFileExpiryAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 170
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets or removes the expiration time on the specified file. This operation\ncan only be executed against files. Folders are not supported.\n"
  example: []
  syntax:
    content: public static Task SetFileExpiryAsync(this IFileSystemOperations operations, string accountName, string filePath, ExpiryOptionType expiryOption, long ? expireTime = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetFileExpiryAsync(operations As IFileSystemOperations, accountName As String, filePath As String, expiryOption As ExpiryOptionType, expireTime As Long? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file on which to set or\nremove the expiration time.\n"
    - id: expiryOption
      type: Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
      description: "\nIndicates the type of expiration to use for the file: 1. NeverExpire:\nExpireTime is ignored. 2. RelativeToNow: ExpireTime is an integer in\nmilliseconds representing the expiration date relative to when file\nexpiration is updated. 3. RelativeToCreationDate: ExpireTime is an integer\nin milliseconds representing the expiration date relative to file creation.\n4. Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp\nrelative to 1/1/1970 00:00:00. Possible values include: 'NeverExpire',\n'RelativeToNow', 'RelativeToCreationDate', 'Absolute'\n"
    - id: expireTime
      type: System.Nullable{System.Int64}
      description: "\nThe time that the file will expire, corresponding to the ExpiryOption that\nwas set.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync*
  nameWithType.vb: FileSystemOperationsExtensions.SetFileExpiryAsync(IFileSystemOperations, String, String, ExpiryOptionType, Nullable(Of Int64), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType, System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: SetFileExpiryAsync(IFileSystemOperations, String, String, ExpiryOptionType, Nullable(Of Int64), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckAccess(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.CheckAccess(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: CheckAccess
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 192
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nChecks if the specified access is available at the given path.\n"
  example: []
  syntax:
    content: public static void CheckAccess(this IFileSystemOperations operations, string accountName, string path, string fsaction = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub CheckAccess(operations As IFileSystemOperations, accountName As String, path As String, fsaction As String = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: path
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to check access.\n"
    - id: fsaction
      type: System.String
      description: "\nFile system operation read/write/execute in string form, matching regex\npattern '[rwx-]{3}'\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckAccessAsync(IFileSystemOperations, String, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.CheckAccessAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: CheckAccessAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 217
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nChecks if the specified access is available at the given path.\n"
  example: []
  syntax:
    content: public static Task CheckAccessAsync(this IFileSystemOperations operations, string accountName, string path, string fsaction = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckAccessAsync(operations As IFileSystemOperations, accountName As String, path As String, fsaction As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: path
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to check access.\n"
    - id: fsaction
      type: System.String
      description: "\nFile system operation read/write/execute in string form, matching regex\npattern '[rwx-]{3}'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Mkdirs(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.Mkdirs(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Mkdirs
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 234
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a directory.\n"
  example: []
  syntax:
    content: public static FileOperationResult Mkdirs(this IFileSystemOperations operations, string accountName, string path)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Mkdirs(operations As IFileSystemOperations, accountName As String, path As String) As FileOperationResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: path
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory to create.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: MkdirsAsync(IFileSystemOperations, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.MkdirsAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: MkdirsAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 254
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a directory.\n"
  example: []
  syntax:
    content: public static Task<FileOperationResult> MkdirsAsync(this IFileSystemOperations operations, string accountName, string path, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MkdirsAsync(operations As IFileSystemOperations, accountName As String, path As String, cancellationToken As CancellationToken = Nothing) As Task(Of FileOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: path
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory to create.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String})
  id: Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Concat(IFileSystemOperations, String, String, IList<String>)
  nameWithType: FileSystemOperationsExtensions.Concat(IFileSystemOperations, String, String, IList<String>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Collections.Generic.IList<System.String>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Concat
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 280
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nConcatenates the list of source files into the destination file, removing\nall source files upon success.\n"
  example: []
  syntax:
    content: public static void Concat(this IFileSystemOperations operations, string accountName, string destinationPath, IList<string> sources)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Concat(operations As IFileSystemOperations, accountName As String, destinationPath As String, sources As IList(Of String))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: destinationPath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the destination file\nresulting from the concatenation.\n"
    - id: sources
      type: System.Collections.Generic.IList{System.String}
      description: "\nA list of comma seperated Data Lake Store paths (starting with '/') of the\nfiles to concatenate, in the order in which they should be concatenated.\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat*
  nameWithType.vb: FileSystemOperationsExtensions.Concat(IFileSystemOperations, String, String, IList(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Collections.Generic.IList(Of System.String))
  name.vb: Concat(IFileSystemOperations, String, String, IList(Of String))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)
  id: ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ConcatAsync(IFileSystemOperations, String, String, IList<String>, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.ConcatAsync(IFileSystemOperations, String, String, IList<String>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Collections.Generic.IList<System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ConcatAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 306
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nConcatenates the list of source files into the destination file, removing\nall source files upon success.\n"
  example: []
  syntax:
    content: public static Task ConcatAsync(this IFileSystemOperations operations, string accountName, string destinationPath, IList<string> sources, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConcatAsync(operations As IFileSystemOperations, accountName As String, destinationPath As String, sources As IList(Of String), cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: destinationPath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the destination file\nresulting from the concatenation.\n"
    - id: sources
      type: System.Collections.Generic.IList{System.String}
      description: "\nA list of comma seperated Data Lake Store paths (starting with '/') of the\nfiles to concatenate, in the order in which they should be concatenated.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync*
  nameWithType.vb: FileSystemOperationsExtensions.ConcatAsync(IFileSystemOperations, String, String, IList(Of String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Collections.Generic.IList(Of System.String), System.Threading.CancellationToken)
  name.vb: ConcatAsync(IFileSystemOperations, String, String, IList(Of String), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  id: MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: MsConcat(IFileSystemOperations, String, String, Stream, Nullable<Boolean>)
  nameWithType: FileSystemOperationsExtensions.MsConcat(IFileSystemOperations, String, String, Stream, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: MsConcat
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 340
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nConcatenates the list of source files into the destination file, deleting\nall source files upon success. This method accepts more source file paths\nthan the Concat method. This method and the parameters it accepts are\nsubject to change for usability in an upcoming version.\n"
  example: []
  syntax:
    content: public static void MsConcat(this IFileSystemOperations operations, string accountName, string msConcatDestinationPath, Stream streamContents, bool ? deleteSourceDirectory = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub MsConcat(operations As IFileSystemOperations, accountName As String, msConcatDestinationPath As String, streamContents As Stream, deleteSourceDirectory As Boolean? = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: msConcatDestinationPath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the destination file\nresulting from the concatenation.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nA list of Data Lake Store paths (starting with '/') of the source files.\nMust be in the format: sources=&lt;comma separated list&gt;\n"
    - id: deleteSourceDirectory
      type: System.Nullable{System.Boolean}
      description: "\nIndicates that as an optimization instead of deleting each individual\nsource stream, delete the source stream folder if all streams are in the\nsame folder instead. This results in a substantial performance improvement\nwhen the only streams in the folder are part of the concatenation\noperation. WARNING: This includes the deletion of any other files that are\nnot source files. Only set this to true when source files are the only\nfiles in the source directory.\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat*
  nameWithType.vb: FileSystemOperationsExtensions.MsConcat(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Boolean))
  name.vb: MsConcat(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: MsConcatAsync(IFileSystemOperations, String, String, Stream, Nullable<Boolean>, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.MsConcatAsync(IFileSystemOperations, String, String, Stream, Nullable<Boolean>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: MsConcatAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 377
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nConcatenates the list of source files into the destination file, deleting\nall source files upon success. This method accepts more source file paths\nthan the Concat method. This method and the parameters it accepts are\nsubject to change for usability in an upcoming version.\n"
  example: []
  syntax:
    content: public static Task MsConcatAsync(this IFileSystemOperations operations, string accountName, string msConcatDestinationPath, Stream streamContents, bool ? deleteSourceDirectory = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MsConcatAsync(operations As IFileSystemOperations, accountName As String, msConcatDestinationPath As String, streamContents As Stream, deleteSourceDirectory As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: msConcatDestinationPath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the destination file\nresulting from the concatenation.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nA list of Data Lake Store paths (starting with '/') of the source files.\nMust be in the format: sources=&lt;comma separated list&gt;\n"
    - id: deleteSourceDirectory
      type: System.Nullable{System.Boolean}
      description: "\nIndicates that as an optimization instead of deleting each individual\nsource stream, delete the source stream folder if all streams are in the\nsame folder instead. This results in a substantial performance improvement\nwhen the only streams in the folder are part of the concatenation\noperation. WARNING: This includes the deletion of any other files that are\nnot source files. Only set this to true when source files are the only\nfiles in the source directory.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync*
  nameWithType.vb: FileSystemOperationsExtensions.MsConcatAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: MsConcatAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  id: ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFileStatus(IFileSystemOperations, String, String, Nullable<Int32>, String, String)
  nameWithType: FileSystemOperationsExtensions.ListFileStatus(IFileSystemOperations, String, String, Nullable<Int32>, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int32>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ListFileStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 409
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGet the list of file status objects specified by the file path, with\noptional pagination parameters\n"
  example: []
  syntax:
    content: public static FileStatusesResult ListFileStatus(this IFileSystemOperations operations, string accountName, string listFilePath, int ? listSize = null, string listAfter = null, string listBefore = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFileStatus(operations As IFileSystemOperations, accountName As String, listFilePath As String, listSize As Integer? = Nothing, listAfter As String = Nothing, listBefore As String = Nothing) As FileStatusesResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: listFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory to list.\n"
    - id: listSize
      type: System.Nullable{System.Int32}
      description: "\nGets or sets the number of items to return. Optional.\n"
    - id: listAfter
      type: System.String
      description: "\nGets or sets the item or lexographical index after which to begin returning\nresults. For example, a file list of 'a','b','d' and listAfter='b' will\nreturn 'd', and a listAfter='c' will also return 'd'. Optional.\n"
    - id: listBefore
      type: System.String
      description: "\nGets or sets the item or lexographical index before which to begin\nreturning results. For example, a file list of 'a','b','d' and\nlistBefore='d' will return 'a','b', and a listBefore='c' will also return\n'a','b'. Optional.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus*
  nameWithType.vb: FileSystemOperationsExtensions.ListFileStatus(IFileSystemOperations, String, String, Nullable(Of Int32), String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String)
  name.vb: ListFileStatus(IFileSystemOperations, String, String, Nullable(Of Int32), String, String)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)
  id: ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFileStatusAsync(IFileSystemOperations, String, String, Nullable<Int32>, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.ListFileStatusAsync(IFileSystemOperations, String, String, Nullable<Int32>, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ListFileStatusAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 444
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGet the list of file status objects specified by the file path, with\noptional pagination parameters\n"
  example: []
  syntax:
    content: public static Task<FileStatusesResult> ListFileStatusAsync(this IFileSystemOperations operations, string accountName, string listFilePath, int ? listSize = null, string listAfter = null, string listBefore = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFileStatusAsync(operations As IFileSystemOperations, accountName As String, listFilePath As String, listSize As Integer? = Nothing, listAfter As String = Nothing, listBefore As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of FileStatusesResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: listFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory to list.\n"
    - id: listSize
      type: System.Nullable{System.Int32}
      description: "\nGets or sets the number of items to return. Optional.\n"
    - id: listAfter
      type: System.String
      description: "\nGets or sets the item or lexographical index after which to begin returning\nresults. For example, a file list of 'a','b','d' and listAfter='b' will\nreturn 'd', and a listAfter='c' will also return 'd'. Optional.\n"
    - id: listBefore
      type: System.String
      description: "\nGets or sets the item or lexographical index before which to begin\nreturning results. For example, a file list of 'a','b','d' and\nlistBefore='d' will return 'a','b', and a listBefore='c' will also return\n'a','b'. Optional.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult}
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync*
  nameWithType.vb: FileSystemOperationsExtensions.ListFileStatusAsync(IFileSystemOperations, String, String, Nullable(Of Int32), String, String, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String, System.Threading.CancellationToken)
  name.vb: ListFileStatusAsync(IFileSystemOperations, String, String, Nullable(Of Int32), String, String, CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetContentSummary(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.GetContentSummary(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: GetContentSummary
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 465
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGets the file content summary object specified by the file path.\n"
  example: []
  syntax:
    content: public static ContentSummaryResult GetContentSummary(this IFileSystemOperations operations, string accountName, string getContentSummaryFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetContentSummary(operations As IFileSystemOperations, accountName As String, getContentSummaryFilePath As String) As ContentSummaryResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getContentSummaryFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file for which to\nretrieve the summary.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetContentSummaryAsync(IFileSystemOperations, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.GetContentSummaryAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: GetContentSummaryAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 486
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGets the file content summary object specified by the file path.\n"
  example: []
  syntax:
    content: public static Task<ContentSummaryResult> GetContentSummaryAsync(this IFileSystemOperations operations, string accountName, string getContentSummaryFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetContentSummaryAsync(operations As IFileSystemOperations, accountName As String, getContentSummaryFilePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of ContentSummaryResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getContentSummaryFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file for which to\nretrieve the summary.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult}
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetFileStatus(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.GetFileStatus(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: GetFileStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 507
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGet the file status object specified by the file path.\n"
  example: []
  syntax:
    content: public static FileStatusResult GetFileStatus(this IFileSystemOperations operations, string accountName, string getFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileStatus(operations As IFileSystemOperations, accountName As String, getFilePath As String) As FileStatusResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to retrieve the status.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetFileStatusAsync(IFileSystemOperations, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.GetFileStatusAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: GetFileStatusAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 528
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGet the file status object specified by the file path.\n"
  example: []
  syntax:
    content: public static Task<FileStatusResult> GetFileStatusAsync(this IFileSystemOperations operations, string accountName, string getFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileStatusAsync(operations As IFileSystemOperations, accountName As String, getFilePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of FileStatusResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to retrieve the status.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult}
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  id: Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Append(IFileSystemOperations, String, String, Stream, Nullable<Int64>, Nullable<SyncFlag>)
  nameWithType: FileSystemOperationsExtensions.Append(IFileSystemOperations, String, String, Stream, Nullable<Int64>, Nullable<SyncFlag>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Append
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 568
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nAppends to the specified file. This method does not support multiple\nconcurrent appends to the file. NOTE: Concurrent append and normal (serial)\nappend CANNOT be used interchangeably. Once a file has been appended to\nusing either append option, it can only be appended to using that append\noption. Use the ConcurrentAppend option if you would like support for\nconcurrent appends.\n"
  example: []
  syntax:
    content: public static void Append(this IFileSystemOperations operations, string accountName, string directFilePath, Stream streamContents, long ? offset = null, SyncFlag? syncFlag = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Append(operations As IFileSystemOperations, accountName As String, directFilePath As String, streamContents As Stream, offset As Long? = Nothing, syncFlag As SyncFlag? = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to which to\nappend.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when appending to the file.\n"
    - id: offset
      type: System.Nullable{System.Int64}
      description: "\nThe optional offset in the stream to begin the append operation. Default is\nto append at the end of the stream.\n"
    - id: syncFlag
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag}
      description: "\nOptionally indicates what to do after completion of the append. DATA\nindicates more data is coming so no sync takes place, METADATA indicates a\nsync should be done to refresh metadata of the file only. CLOSE indicates\nthat both the stream and metadata should be refreshed upon append\ncompletion. Possible values include: 'DATA', 'METADATA', 'CLOSE'\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append*
  nameWithType.vb: FileSystemOperationsExtensions.Append(IFileSystemOperations, String, String, Stream, Nullable(Of Int64), Nullable(Of SyncFlag))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag))
  name.vb: Append(IFileSystemOperations, String, String, Stream, Nullable(Of Int64), Nullable(Of SyncFlag))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  id: AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: AppendAsync(IFileSystemOperations, String, String, Stream, Nullable<Int64>, Nullable<SyncFlag>, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.AppendAsync(IFileSystemOperations, String, String, Stream, Nullable<Int64>, Nullable<SyncFlag>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: AppendAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 608
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nAppends to the specified file. This method does not support multiple\nconcurrent appends to the file. NOTE: Concurrent append and normal (serial)\nappend CANNOT be used interchangeably. Once a file has been appended to\nusing either append option, it can only be appended to using that append\noption. Use the ConcurrentAppend option if you would like support for\nconcurrent appends.\n"
  example: []
  syntax:
    content: public static Task AppendAsync(this IFileSystemOperations operations, string accountName, string directFilePath, Stream streamContents, long ? offset = null, SyncFlag? syncFlag = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendAsync(operations As IFileSystemOperations, accountName As String, directFilePath As String, streamContents As Stream, offset As Long? = Nothing, syncFlag As SyncFlag? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to which to\nappend.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when appending to the file.\n"
    - id: offset
      type: System.Nullable{System.Int64}
      description: "\nThe optional offset in the stream to begin the append operation. Default is\nto append at the end of the stream.\n"
    - id: syncFlag
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag}
      description: "\nOptionally indicates what to do after completion of the append. DATA\nindicates more data is coming so no sync takes place, METADATA indicates a\nsync should be done to refresh metadata of the file only. CLOSE indicates\nthat both the stream and metadata should be refreshed upon append\ncompletion. Possible values include: 'DATA', 'METADATA', 'CLOSE'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync*
  nameWithType.vb: FileSystemOperationsExtensions.AppendAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Int64), Nullable(Of SyncFlag), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag), System.Threading.CancellationToken)
  name.vb: AppendAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Int64), Nullable(Of SyncFlag), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  id: Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(IFileSystemOperations, String, String, Stream, Nullable<Boolean>, Nullable<SyncFlag>)
  nameWithType: FileSystemOperationsExtensions.Create(IFileSystemOperations, String, String, Stream, Nullable<Boolean>, Nullable<SyncFlag>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Boolean>, System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Create
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 639
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a file with optionally specified content.\n"
  example: []
  syntax:
    content: public static void Create(this IFileSystemOperations operations, string accountName, string directFilePath, Stream streamContents = null, bool ? overwrite = null, SyncFlag? syncFlag = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Create(operations As IFileSystemOperations, accountName As String, directFilePath As String, streamContents As Stream = Nothing, overwrite As Boolean? = Nothing, syncFlag As SyncFlag? = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to create.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when creating the file. This parameter is\noptional, resulting in an empty file if not specified.\n"
    - id: overwrite
      type: System.Nullable{System.Boolean}
      description: "\nThe indication of if the file should be overwritten.\n"
    - id: syncFlag
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag}
      description: "\nOptionally indicates what to do after completion of the append. DATA\nindicates more data is coming so no sync takes place, METADATA indicates a\nsync should be done to refresh metadata of the file only. CLOSE indicates\nthat both the stream and metadata should be refreshed upon append\ncompletion. Possible values include: 'DATA', 'METADATA', 'CLOSE'\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create*
  nameWithType.vb: FileSystemOperationsExtensions.Create(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean), Nullable(Of SyncFlag))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Boolean), System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag))
  name.vb: Create(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean), Nullable(Of SyncFlag))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  id: CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(IFileSystemOperations, String, String, Stream, Nullable<Boolean>, Nullable<SyncFlag>, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.CreateAsync(IFileSystemOperations, String, String, Stream, Nullable<Boolean>, Nullable<SyncFlag>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Boolean>, System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: CreateAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 673
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a file with optionally specified content.\n"
  example: []
  syntax:
    content: public static Task CreateAsync(this IFileSystemOperations operations, string accountName, string directFilePath, Stream streamContents = null, bool ? overwrite = null, SyncFlag? syncFlag = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As IFileSystemOperations, accountName As String, directFilePath As String, streamContents As Stream = Nothing, overwrite As Boolean? = Nothing, syncFlag As SyncFlag? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to create.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when creating the file. This parameter is\noptional, resulting in an empty file if not specified.\n"
    - id: overwrite
      type: System.Nullable{System.Boolean}
      description: "\nThe indication of if the file should be overwritten.\n"
    - id: syncFlag
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag}
      description: "\nOptionally indicates what to do after completion of the append. DATA\nindicates more data is coming so no sync takes place, METADATA indicates a\nsync should be done to refresh metadata of the file only. CLOSE indicates\nthat both the stream and metadata should be refreshed upon append\ncompletion. Possible values include: 'DATA', 'METADATA', 'CLOSE'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync*
  nameWithType.vb: FileSystemOperationsExtensions.CreateAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean), Nullable(Of SyncFlag), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Boolean), System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag), System.Threading.CancellationToken)
  name.vb: CreateAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean), Nullable(Of SyncFlag), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Open(IFileSystemOperations, String, String, Nullable<Int64>, Nullable<Int64>)
  nameWithType: FileSystemOperationsExtensions.Open(IFileSystemOperations, String, String, Nullable<Int64>, Nullable<Int64>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Open
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 697
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nOpens and reads from the specified file.\n"
  example: []
  syntax:
    content: public static Stream Open(this IFileSystemOperations operations, string accountName, string directFilePath, long ? length = null, long ? offset = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Open(operations As IFileSystemOperations, accountName As String, directFilePath As String, length As Long? = Nothing, offset As Long? = Nothing) As Stream
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to open.\n"
    - id: length
      type: System.Nullable{System.Int64}
      description: "\nThe number of bytes that the server will attempt to retrieve. It will\nretrieve &lt;= length bytes.\n"
    - id: offset
      type: System.Nullable{System.Int64}
      description: "\nThe byte offset to start reading data from.\n"
    return:
      type: System.IO.Stream
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open*
  nameWithType.vb: FileSystemOperationsExtensions.Open(IFileSystemOperations, String, String, Nullable(Of Int64), Nullable(Of Int64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: Open(IFileSystemOperations, String, String, Nullable(Of Int64), Nullable(Of Int64))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  id: OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: OpenAsync(IFileSystemOperations, String, String, Nullable<Int64>, Nullable<Int64>, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.OpenAsync(IFileSystemOperations, String, String, Nullable<Int64>, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: OpenAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 724
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nOpens and reads from the specified file.\n"
  example: []
  syntax:
    content: public static Task<Stream> OpenAsync(this IFileSystemOperations operations, string accountName, string directFilePath, long ? length = null, long ? offset = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OpenAsync(operations As IFileSystemOperations, accountName As String, directFilePath As String, length As Long? = Nothing, offset As Long? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to open.\n"
    - id: length
      type: System.Nullable{System.Int64}
      description: "\nThe number of bytes that the server will attempt to retrieve. It will\nretrieve &lt;= length bytes.\n"
    - id: offset
      type: System.Nullable{System.Int64}
      description: "\nThe byte offset to start reading data from.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync*
  nameWithType.vb: FileSystemOperationsExtensions.OpenAsync(IFileSystemOperations, String, String, Nullable(Of Int64), Nullable(Of Int64), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: OpenAsync(IFileSystemOperations, String, String, Nullable(Of Int64), Nullable(Of Int64), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetAcl(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.SetAcl(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SetAcl
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 748
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the Access Control List (ACL) for a file or folder.\n"
  example: []
  syntax:
    content: public static void SetAcl(this IFileSystemOperations operations, string accountName, string setAclFilePath, string aclspec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetAcl(operations As IFileSystemOperations, accountName As String, setAclFilePath As String, aclspec As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory on\nwhich to set the ACL.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL spec included in ACL creation operations in the format\n'[default:]user|group|other::r|-w|-x|-'\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetAclAsync(IFileSystemOperations, String, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.SetAclAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SetAclAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 773
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the Access Control List (ACL) for a file or folder.\n"
  example: []
  syntax:
    content: public static Task SetAclAsync(this IFileSystemOperations operations, string accountName, string setAclFilePath, string aclspec, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetAclAsync(operations As IFileSystemOperations, accountName As String, setAclFilePath As String, aclspec As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory on\nwhich to set the ACL.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL spec included in ACL creation operations in the format\n'[default:]user|group|other::r|-w|-x|-'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ModifyAclEntries(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.ModifyAclEntries(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ModifyAclEntries
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 795
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nModifies existing Access Control List (ACL) entries on a file or folder.\n"
  example: []
  syntax:
    content: public static void ModifyAclEntries(this IFileSystemOperations operations, string accountName, string modifyAclFilePath, string aclspec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ModifyAclEntries(operations As IFileSystemOperations, accountName As String, modifyAclFilePath As String, aclspec As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: modifyAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being modified.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL specification included in ACL modification operations in the format\n'[default:]user|group|other::r|-w|-x|-'\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ModifyAclEntriesAsync(IFileSystemOperations, String, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.ModifyAclEntriesAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ModifyAclEntriesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 820
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nModifies existing Access Control List (ACL) entries on a file or folder.\n"
  example: []
  syntax:
    content: public static Task ModifyAclEntriesAsync(this IFileSystemOperations operations, string accountName, string modifyAclFilePath, string aclspec, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ModifyAclEntriesAsync(operations As IFileSystemOperations, accountName As String, modifyAclFilePath As String, aclspec As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: modifyAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being modified.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL specification included in ACL modification operations in the format\n'[default:]user|group|other::r|-w|-x|-'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAclEntries(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.RemoveAclEntries(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: RemoveAclEntries
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 842
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves existing Access Control List (ACL) entries for a file or folder.\n"
  example: []
  syntax:
    content: public static void RemoveAclEntries(this IFileSystemOperations operations, string accountName, string removeAclFilePath, string aclspec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveAclEntries(operations As IFileSystemOperations, accountName As String, removeAclFilePath As String, aclspec As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: removeAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being removed.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL spec included in ACL removal operations in the format\n'[default:]user|group|other'\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAclEntriesAsync(IFileSystemOperations, String, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.RemoveAclEntriesAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: RemoveAclEntriesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 867
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves existing Access Control List (ACL) entries for a file or folder.\n"
  example: []
  syntax:
    content: public static Task RemoveAclEntriesAsync(this IFileSystemOperations operations, string accountName, string removeAclFilePath, string aclspec, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveAclEntriesAsync(operations As IFileSystemOperations, accountName As String, removeAclFilePath As String, aclspec As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: removeAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being removed.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL spec included in ACL removal operations in the format\n'[default:]user|group|other'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveDefaultAcl(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.RemoveDefaultAcl(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: RemoveDefaultAcl
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 886
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves the existing Default Access Control List (ACL) of the specified\ndirectory.\n"
  example: []
  syntax:
    content: public static void RemoveDefaultAcl(this IFileSystemOperations operations, string accountName, string defaultAclFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveDefaultAcl(operations As IFileSystemOperations, accountName As String, defaultAclFilePath As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: defaultAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory with the\ndefault ACL being removed.\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveDefaultAclAsync(IFileSystemOperations, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.RemoveDefaultAclAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: RemoveDefaultAclAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 908
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves the existing Default Access Control List (ACL) of the specified\ndirectory.\n"
  example: []
  syntax:
    content: public static Task RemoveDefaultAclAsync(this IFileSystemOperations operations, string accountName, string defaultAclFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveDefaultAclAsync(operations As IFileSystemOperations, accountName As String, defaultAclFilePath As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: defaultAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory with the\ndefault ACL being removed.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAcl(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.RemoveAcl(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: RemoveAcl
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 927
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves the existing Access Control List (ACL) of the specified file or\ndirectory.\n"
  example: []
  syntax:
    content: public static void RemoveAcl(this IFileSystemOperations operations, string accountName, string aclFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveAcl(operations As IFileSystemOperations, accountName As String, aclFilePath As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: aclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being removed.\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAclAsync(IFileSystemOperations, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.RemoveAclAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: RemoveAclAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 949
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves the existing Access Control List (ACL) of the specified file or\ndirectory.\n"
  example: []
  syntax:
    content: public static Task RemoveAclAsync(this IFileSystemOperations operations, string accountName, string aclFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveAclAsync(operations As IFileSystemOperations, accountName As String, aclFilePath As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: aclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being removed.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAclStatus(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.GetAclStatus(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: GetAclStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 967
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGets Access Control List (ACL) entries for the specified file or directory.\n"
  example: []
  syntax:
    content: public static AclStatusResult GetAclStatus(this IFileSystemOperations operations, string accountName, string aclFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAclStatus(operations As IFileSystemOperations, accountName As String, aclFilePath As String) As AclStatusResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: aclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to get the ACL.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAclStatusAsync(IFileSystemOperations, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.GetAclStatusAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: GetAclStatusAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 988
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGets Access Control List (ACL) entries for the specified file or directory.\n"
  example: []
  syntax:
    content: public static Task<AclStatusResult> GetAclStatusAsync(this IFileSystemOperations operations, string accountName, string aclFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAclStatusAsync(operations As IFileSystemOperations, accountName As String, aclFilePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of AclStatusResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: aclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to get the ACL.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult}
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})
  id: Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IFileSystemOperations, String, String, Nullable<Boolean>)
  nameWithType: FileSystemOperationsExtensions.Delete(IFileSystemOperations, String, String, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Delete
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1012
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nDeletes the requested file or directory, optionally recursively.\n"
  example: []
  syntax:
    content: public static FileOperationResult Delete(this IFileSystemOperations operations, string accountName, string filePath, bool ? recursive = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As IFileSystemOperations, accountName As String, filePath As String, recursive As Boolean? = Nothing) As FileOperationResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory to\ndelete.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nThe optional switch indicating if the delete should be recursive\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete*
  nameWithType.vb: FileSystemOperationsExtensions.Delete(IFileSystemOperations, String, String, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Boolean))
  name.vb: Delete(IFileSystemOperations, String, String, Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IFileSystemOperations, String, String, Nullable<Boolean>, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.DeleteAsync(IFileSystemOperations, String, String, Nullable<Boolean>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1036
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nDeletes the requested file or directory, optionally recursively.\n"
  example: []
  syntax:
    content: public static Task<FileOperationResult> DeleteAsync(this IFileSystemOperations operations, string accountName, string filePath, bool ? recursive = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IFileSystemOperations, accountName As String, filePath As String, recursive As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of FileOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory to\ndelete.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nThe optional switch indicating if the delete should be recursive\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync*
  nameWithType.vb: FileSystemOperationsExtensions.DeleteAsync(IFileSystemOperations, String, String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeleteAsync(IFileSystemOperations, String, String, Nullable(Of Boolean), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Rename(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.Rename(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Rename
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1060
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRename a file or directory.\n"
  example: []
  syntax:
    content: public static FileOperationResult Rename(this IFileSystemOperations operations, string accountName, string renameFilePath, string destination)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Rename(operations As IFileSystemOperations, accountName As String, renameFilePath As String, destination As String) As FileOperationResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: renameFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory to\nmove/rename.\n"
    - id: destination
      type: System.String
      description: "\nThe path to move/rename the file or folder to\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RenameAsync(IFileSystemOperations, String, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.RenameAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: RenameAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1084
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRename a file or directory.\n"
  example: []
  syntax:
    content: public static Task<FileOperationResult> RenameAsync(this IFileSystemOperations operations, string accountName, string renameFilePath, string destination, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RenameAsync(operations As IFileSystemOperations, accountName As String, renameFilePath As String, destination As String, cancellationToken As CancellationToken = Nothing) As Task(Of FileOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: renameFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory to\nmove/rename.\n"
    - id: destination
      type: System.String
      description: "\nThe path to move/rename the file or folder to\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String)
  id: SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetOwner(IFileSystemOperations, String, String, String, String)
  nameWithType: FileSystemOperationsExtensions.SetOwner(IFileSystemOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SetOwner
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1113
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the owner of a file or directory.\n"
  example: []
  syntax:
    content: public static void SetOwner(this IFileSystemOperations operations, string accountName, string setOwnerFilePath, string owner = null, string group = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetOwner(operations As IFileSystemOperations, accountName As String, setOwnerFilePath As String, owner As String = Nothing, group As String = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setOwnerFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to set the owner.\n"
    - id: owner
      type: System.String
      description: "\nThe AAD Object ID of the user owner of the file or directory. If empty, the\nproperty will remain unchanged.\n"
    - id: group
      type: System.String
      description: "\nThe AAD Object ID of the group owner of the file or directory. If empty,\nthe property will remain unchanged.\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetOwnerAsync(IFileSystemOperations, String, String, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.SetOwnerAsync(IFileSystemOperations, String, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SetOwnerAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1142
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the owner of a file or directory.\n"
  example: []
  syntax:
    content: public static Task SetOwnerAsync(this IFileSystemOperations operations, string accountName, string setOwnerFilePath, string owner = null, string group = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetOwnerAsync(operations As IFileSystemOperations, accountName As String, setOwnerFilePath As String, owner As String = Nothing, group As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setOwnerFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to set the owner.\n"
    - id: owner
      type: System.String
      description: "\nThe AAD Object ID of the user owner of the file or directory. If empty, the\nproperty will remain unchanged.\n"
    - id: group
      type: System.String
      description: "\nThe AAD Object ID of the group owner of the file or directory. If empty,\nthe property will remain unchanged.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetPermission(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.SetPermission(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SetPermission
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1164
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the permission of the file or folder.\n"
  example: []
  syntax:
    content: public static void SetPermission(this IFileSystemOperations operations, string accountName, string setPermissionFilePath, string permission = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetPermission(operations As IFileSystemOperations, accountName As String, setPermissionFilePath As String, permission As String = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setPermissionFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to set the permission.\n"
    - id: permission
      type: System.String
      description: "\nA string representation of the permission (i.e 'rwx'). If empty, this\nproperty remains unchanged.\n"
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetPermissionAsync(IFileSystemOperations, String, String, String, CancellationToken)
  nameWithType: FileSystemOperationsExtensions.SetPermissionAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SetPermissionAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1189
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the permission of the file or folder.\n"
  example: []
  syntax:
    content: public static Task SetPermissionAsync(this IFileSystemOperations operations, string accountName, string setPermissionFilePath, string permission = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPermissionAsync(operations As IFileSystemOperations, accountName As String, setPermissionFilePath As String, permission As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setPermissionFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to set the permission.\n"
    - id: permission
      type: System.String
      description: "\nA string representation of the permission (i.e 'rwx'). If empty, this\nproperty remains unchanged.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.DataLake.Store
  commentId: N:Microsoft.Azure.Management.DataLake.Store
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store
  nameWithType: Microsoft.Azure.Management.DataLake.Store
  fullName: Microsoft.Azure.Management.DataLake.Store
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists
  isExternal: false
  name: PathExists
  nameWithType: FileSystemOperationsExtensions.PathExists
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  commentId: T:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  parent: Microsoft.Azure.Management.DataLake.Store
  isExternal: false
  name: IFileSystemOperations
  nameWithType: IFileSystemOperations
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync
  isExternal: false
  name: PathExistsAsync
  nameWithType: FileSystemOperationsExtensions.PathExistsAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend
  isExternal: false
  name: ConcurrentAppend
  nameWithType: FileSystemOperationsExtensions.ConcurrentAppend
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType}
  commentId: T:System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AppendModeType>
  nameWithType: Nullable<AppendModeType>
  fullName: System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType>
  nameWithType.vb: Nullable(Of AppendModeType)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType)
  name.vb: Nullable(Of AppendModeType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
    name: AppendModeType
    nameWithType: AppendModeType
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
    name: AppendModeType
    nameWithType: AppendModeType
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag}
  commentId: T:System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SyncFlag>
  nameWithType: Nullable<SyncFlag>
  fullName: System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag>
  nameWithType.vb: Nullable(Of SyncFlag)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag)
  name.vb: Nullable(Of SyncFlag)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag
    name: SyncFlag
    nameWithType: SyncFlag
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag
    name: SyncFlag
    nameWithType: SyncFlag
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync
  isExternal: false
  name: ConcurrentAppendAsync
  nameWithType: FileSystemOperationsExtensions.ConcurrentAppendAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry
  isExternal: false
  name: SetFileExpiry
  nameWithType: FileSystemOperationsExtensions.SetFileExpiry
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry
- uid: Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
  commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: ExpiryOptionType
  nameWithType: ExpiryOptionType
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models
  commentId: N:Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store.Models
  nameWithType: Microsoft.Azure.Management.DataLake.Store.Models
  fullName: Microsoft.Azure.Management.DataLake.Store.Models
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync
  isExternal: false
  name: SetFileExpiryAsync
  nameWithType: FileSystemOperationsExtensions.SetFileExpiryAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess
  isExternal: false
  name: CheckAccess
  nameWithType: FileSystemOperationsExtensions.CheckAccess
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync
  isExternal: false
  name: CheckAccessAsync
  nameWithType: FileSystemOperationsExtensions.CheckAccessAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs
  isExternal: false
  name: Mkdirs
  nameWithType: FileSystemOperationsExtensions.Mkdirs
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs
- uid: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: FileOperationResult
  nameWithType: FileOperationResult
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync
  isExternal: false
  name: MkdirsAsync
  nameWithType: FileSystemOperationsExtensions.MkdirsAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileOperationResult>
  nameWithType: Task<FileOperationResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult>
  nameWithType.vb: Task(Of FileOperationResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult)
  name.vb: Task(Of FileOperationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
    name: FileOperationResult
    nameWithType: FileOperationResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
    name: FileOperationResult
    nameWithType: FileOperationResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat
  isExternal: false
  name: Concat
  nameWithType: FileSystemOperationsExtensions.Concat
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync
  isExternal: false
  name: ConcatAsync
  nameWithType: FileSystemOperationsExtensions.ConcatAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat
  isExternal: false
  name: MsConcat
  nameWithType: FileSystemOperationsExtensions.MsConcat
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync
  isExternal: false
  name: MsConcatAsync
  nameWithType: FileSystemOperationsExtensions.MsConcatAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus
  isExternal: false
  name: ListFileStatus
  nameWithType: FileSystemOperationsExtensions.ListFileStatus
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
  commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: FileStatusesResult
  nameWithType: FileStatusesResult
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync
  isExternal: false
  name: ListFileStatusAsync
  nameWithType: FileSystemOperationsExtensions.ListFileStatusAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileStatusesResult>
  nameWithType: Task<FileStatusesResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult>
  nameWithType.vb: Task(Of FileStatusesResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult)
  name.vb: Task(Of FileStatusesResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
    name: FileStatusesResult
    nameWithType: FileStatusesResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
    name: FileStatusesResult
    nameWithType: FileStatusesResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary
  isExternal: false
  name: GetContentSummary
  nameWithType: FileSystemOperationsExtensions.GetContentSummary
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary
- uid: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
  commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: ContentSummaryResult
  nameWithType: ContentSummaryResult
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync
  isExternal: false
  name: GetContentSummaryAsync
  nameWithType: FileSystemOperationsExtensions.GetContentSummaryAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ContentSummaryResult>
  nameWithType: Task<ContentSummaryResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult>
  nameWithType.vb: Task(Of ContentSummaryResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult)
  name.vb: Task(Of ContentSummaryResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
    name: ContentSummaryResult
    nameWithType: ContentSummaryResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
    name: ContentSummaryResult
    nameWithType: ContentSummaryResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus
  isExternal: false
  name: GetFileStatus
  nameWithType: FileSystemOperationsExtensions.GetFileStatus
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus
- uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
  commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: FileStatusResult
  nameWithType: FileStatusResult
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync
  isExternal: false
  name: GetFileStatusAsync
  nameWithType: FileSystemOperationsExtensions.GetFileStatusAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileStatusResult>
  nameWithType: Task<FileStatusResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult>
  nameWithType.vb: Task(Of FileStatusResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult)
  name.vb: Task(Of FileStatusResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
    name: FileStatusResult
    nameWithType: FileStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
    name: FileStatusResult
    nameWithType: FileStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append
  isExternal: false
  name: Append
  nameWithType: FileSystemOperationsExtensions.Append
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync
  isExternal: false
  name: AppendAsync
  nameWithType: FileSystemOperationsExtensions.AppendAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create
  isExternal: false
  name: Create
  nameWithType: FileSystemOperationsExtensions.Create
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: FileSystemOperationsExtensions.CreateAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open
  isExternal: false
  name: Open
  nameWithType: FileSystemOperationsExtensions.Open
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync
  isExternal: false
  name: OpenAsync
  nameWithType: FileSystemOperationsExtensions.OpenAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl
  isExternal: false
  name: SetAcl
  nameWithType: FileSystemOperationsExtensions.SetAcl
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync
  isExternal: false
  name: SetAclAsync
  nameWithType: FileSystemOperationsExtensions.SetAclAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries
  isExternal: false
  name: ModifyAclEntries
  nameWithType: FileSystemOperationsExtensions.ModifyAclEntries
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync
  isExternal: false
  name: ModifyAclEntriesAsync
  nameWithType: FileSystemOperationsExtensions.ModifyAclEntriesAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries
  isExternal: false
  name: RemoveAclEntries
  nameWithType: FileSystemOperationsExtensions.RemoveAclEntries
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync
  isExternal: false
  name: RemoveAclEntriesAsync
  nameWithType: FileSystemOperationsExtensions.RemoveAclEntriesAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl
  isExternal: false
  name: RemoveDefaultAcl
  nameWithType: FileSystemOperationsExtensions.RemoveDefaultAcl
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync
  isExternal: false
  name: RemoveDefaultAclAsync
  nameWithType: FileSystemOperationsExtensions.RemoveDefaultAclAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl
  isExternal: false
  name: RemoveAcl
  nameWithType: FileSystemOperationsExtensions.RemoveAcl
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync
  isExternal: false
  name: RemoveAclAsync
  nameWithType: FileSystemOperationsExtensions.RemoveAclAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus
  isExternal: false
  name: GetAclStatus
  nameWithType: FileSystemOperationsExtensions.GetAclStatus
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
  commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: AclStatusResult
  nameWithType: AclStatusResult
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync
  isExternal: false
  name: GetAclStatusAsync
  nameWithType: FileSystemOperationsExtensions.GetAclStatusAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AclStatusResult>
  nameWithType: Task<AclStatusResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult>
  nameWithType.vb: Task(Of AclStatusResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult)
  name.vb: Task(Of AclStatusResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
    name: AclStatusResult
    nameWithType: AclStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
    name: AclStatusResult
    nameWithType: AclStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: FileSystemOperationsExtensions.Delete
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: FileSystemOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename
  isExternal: false
  name: Rename
  nameWithType: FileSystemOperationsExtensions.Rename
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync
  isExternal: false
  name: RenameAsync
  nameWithType: FileSystemOperationsExtensions.RenameAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner
  isExternal: false
  name: SetOwner
  nameWithType: FileSystemOperationsExtensions.SetOwner
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync
  isExternal: false
  name: SetOwnerAsync
  nameWithType: FileSystemOperationsExtensions.SetOwnerAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission
  isExternal: false
  name: SetPermission
  nameWithType: FileSystemOperationsExtensions.SetPermission
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync
  isExternal: false
  name: SetPermissionAsync
  nameWithType: FileSystemOperationsExtensions.SetPermissionAsync
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync
