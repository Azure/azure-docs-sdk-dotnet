### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity
  commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity
  id: EncryptionIdentity
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  children:
  - Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor
  - Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid})
  - Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.PrincipalId
  - Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.TenantId
  - Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.Type
  langs:
  - csharp
  - vb
  name: EncryptionIdentity
  nameWithType: EncryptionIdentity
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptionIdentity
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nThe encryption identity properties.\n"
  example: []
  syntax:
    content: public class EncryptionIdentity
    content.vb: Public Class EncryptionIdentity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor
  commentId: M:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity
  langs:
  - csharp
  - vb
  name: EncryptionIdentity()
  nameWithType: EncryptionIdentity.EncryptionIdentity()
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.EncryptionIdentity()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nInitializes a new instance of the EncryptionIdentity class.\n"
  example: []
  syntax:
    content: public EncryptionIdentity()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid})
  id: '#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid})'
  parent: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity
  langs:
  - csharp
  - vb
  name: EncryptionIdentity(Nullable<Guid>, Nullable<Guid>)
  nameWithType: EncryptionIdentity.EncryptionIdentity(Nullable<Guid>, Nullable<Guid>)
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.EncryptionIdentity(System.Nullable<System.Guid>, System.Nullable<System.Guid>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nInitializes a new instance of the EncryptionIdentity class.\n"
  example: []
  syntax:
    content: public EncryptionIdentity(Guid? principalId = null, Guid? tenantId = null)
    content.vb: Public Sub New(principalId As Guid? = Nothing, tenantId As Guid? = Nothing)
    parameters:
    - id: principalId
      type: System.Nullable{System.Guid}
      description: >-
        The principal identifier associated with

        the encryption.
    - id: tenantId
      type: System.Nullable{System.Guid}
      description: >-
        The tenant identifier associated with the

        encryption.
  overload: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor*
  nameWithType.vb: EncryptionIdentity.EncryptionIdentity(Nullable(Of Guid), Nullable(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.EncryptionIdentity(System.Nullable(Of System.Guid), System.Nullable(Of System.Guid))
  name.vb: EncryptionIdentity(Nullable(Of Guid), Nullable(Of Guid))
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.PrincipalId
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.PrincipalId
  id: PrincipalId
  parent: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity
  langs:
  - csharp
  - vb
  name: PrincipalId
  nameWithType: EncryptionIdentity.PrincipalId
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.PrincipalId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrincipalId
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets the principal identifier associated with the encryption.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "principalId")]

      public Guid? PrincipalId { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="principalId")>

      Public Property PrincipalId As Guid?
    parameters: []
    return:
      type: System.Nullable{System.Guid}
  overload: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.PrincipalId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: principalId
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.TenantId
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.TenantId
  id: TenantId
  parent: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity
  langs:
  - csharp
  - vb
  name: TenantId
  nameWithType: EncryptionIdentity.TenantId
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.TenantId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TenantId
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets the tenant identifier associated with the encryption.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tenantId")]

      public Guid? TenantId { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tenantId")>

      Public Property TenantId As Guid?
    parameters: []
    return:
      type: System.Nullable{System.Guid}
  overload: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.TenantId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tenantId
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.Type
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.Type
  id: Type
  parent: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: EncryptionIdentity.Type
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.Type
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Type
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionIdentity.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nThe type of encryption being used. Currently the only supported\ntype is 'SystemAssigned'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "type")]

      public static string Type { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="type")>

      Public Shared ReadOnly Property Type As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: type
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.DataLake.Store.Models
  commentId: N:Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store.Models
  nameWithType: Microsoft.Azure.Management.DataLake.Store.Models
  fullName: Microsoft.Azure.Management.DataLake.Store.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor
  isExternal: false
  name: EncryptionIdentity
  nameWithType: EncryptionIdentity.EncryptionIdentity
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.EncryptionIdentity
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullname.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.PrincipalId*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.PrincipalId
  isExternal: false
  name: PrincipalId
  nameWithType: EncryptionIdentity.PrincipalId
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.PrincipalId
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.TenantId*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.TenantId
  isExternal: false
  name: TenantId
  nameWithType: EncryptionIdentity.TenantId
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.TenantId
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.Type*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.Type
  isExternal: false
  name: Type
  nameWithType: EncryptionIdentity.Type
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
