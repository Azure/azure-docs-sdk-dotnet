### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus
  commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus
  id: AclStatus
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  children:
  - Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor
  - Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor(System.Collections.Generic.IList{System.String},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Entries
  - Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Group
  - Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Owner
  - Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Permission
  - Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.StickyBit
  langs:
  - csharp
  - vb
  name: AclStatus
  nameWithType: AclStatus
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AclStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nData Lake Store file or directory Access Control List information.\n"
  example: []
  syntax:
    content: public class AclStatus
    content.vb: Public Class AclStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor
  commentId: M:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus
  langs:
  - csharp
  - vb
  name: AclStatus()
  nameWithType: AclStatus.AclStatus()
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.AclStatus()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nInitializes a new instance of the AclStatus class.\n"
  example: []
  syntax:
    content: public AclStatus()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor(System.Collections.Generic.IList{System.String},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor(System.Collections.Generic.IList{System.String},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})
  id: '#ctor(System.Collections.Generic.IList{System.String},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})'
  parent: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus
  langs:
  - csharp
  - vb
  name: AclStatus(IList<String>, String, String, Nullable<Int32>, Nullable<Boolean>)
  nameWithType: AclStatus.AclStatus(IList<String>, String, String, Nullable<Int32>, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.AclStatus(System.Collections.Generic.IList<System.String>, System.String, System.String, System.Nullable<System.Int32>, System.Nullable<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nInitializes a new instance of the AclStatus class.\n"
  example: []
  syntax:
    content: public AclStatus(IList<string> entries = null, string group = null, string owner = null, int ? permission = null, bool ? stickyBit = null)
    content.vb: Public Sub New(entries As IList(Of String) = Nothing, group As String = Nothing, owner As String = Nothing, permission As Integer? = Nothing, stickyBit As Boolean? = Nothing)
    parameters:
    - id: entries
      type: System.Collections.Generic.IList{System.String}
      description: >-
        the list of ACLSpec entries on a file or

        directory.
    - id: group
      type: System.String
      description: the group owner, an AAD Object ID.
    - id: owner
      type: System.String
      description: the user owner, an AAD Object ID.
    - id: permission
      type: System.Nullable{System.Int32}
      description: >-
        The octal representation of the unnamed

        user, mask and other permissions.
    - id: stickyBit
      type: System.Nullable{System.Boolean}
      description: >-
        the indicator of whether the sticky bit is

        on or off.
  overload: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor*
  nameWithType.vb: AclStatus.AclStatus(IList(Of String), String, String, Nullable(Of Int32), Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.AclStatus(System.Collections.Generic.IList(Of System.String), System.String, System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Boolean))
  name.vb: AclStatus(IList(Of String), String, String, Nullable(Of Int32), Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Entries
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Entries
  id: Entries
  parent: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus
  langs:
  - csharp
  - vb
  name: Entries
  nameWithType: AclStatus.Entries
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Entries
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Entries
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets or sets the list of ACLSpec entries on a file or directory.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "entries")]

      public IList<string> Entries { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="entries")>

      Public Property Entries As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Entries*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: entries
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Group
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Group
  id: Group
  parent: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: AclStatus.Group
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Group
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Group
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets or sets the group owner, an AAD Object ID.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "group")]

      public string Group { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="group")>

      Public Property Group As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Group*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: group
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Owner
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Owner
  id: Owner
  parent: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: AclStatus.Owner
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Owner
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Owner
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets or sets the user owner, an AAD Object ID.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "owner")]

      public string Owner { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="owner")>

      Public Property Owner As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Owner*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: owner
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Permission
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Permission
  id: Permission
  parent: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus
  langs:
  - csharp
  - vb
  name: Permission
  nameWithType: AclStatus.Permission
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Permission
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Permission
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets or sets the octal representation of the unnamed user, mask and\nother permissions.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "permission")]

      public int ? Permission { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="permission")>

      Public Property Permission As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Permission*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: permission
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.StickyBit
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.StickyBit
  id: StickyBit
  parent: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus
  langs:
  - csharp
  - vb
  name: StickyBit
  nameWithType: AclStatus.StickyBit
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.StickyBit
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StickyBit
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/AclStatus.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets the indicator of whether the sticky bit is on or off.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "stickyBit")]

      public bool ? StickyBit { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="stickyBit")>

      Public Property StickyBit As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.StickyBit*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: stickyBit
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Microsoft.Azure.Management.DataLake.Store.Models
  commentId: N:Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store.Models
  nameWithType: Microsoft.Azure.Management.DataLake.Store.Models
  fullName: Microsoft.Azure.Management.DataLake.Store.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor
  isExternal: false
  name: AclStatus
  nameWithType: AclStatus.AclStatus
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.AclStatus
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Entries*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Entries
  isExternal: false
  name: Entries
  nameWithType: AclStatus.Entries
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Entries
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Group*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Group
  isExternal: false
  name: Group
  nameWithType: AclStatus.Group
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Group
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Owner*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Owner
  isExternal: false
  name: Owner
  nameWithType: AclStatus.Owner
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Owner
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Permission*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Permission
  isExternal: false
  name: Permission
  nameWithType: AclStatus.Permission
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Permission
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.StickyBit*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.StickyBit
  isExternal: false
  name: StickyBit
  nameWithType: AclStatus.StickyBit
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.StickyBit
