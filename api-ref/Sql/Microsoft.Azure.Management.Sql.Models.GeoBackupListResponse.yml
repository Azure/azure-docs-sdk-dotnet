### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse
  commentId: T:Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse
  id: GeoBackupListResponse
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.#ctor
  - Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GeoBackups
  - Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GetEnumerator
  langs:
  - csharp
  - vb
  name: GeoBackupListResponse
  nameWithType: GeoBackupListResponse
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GeoBackupListResponse
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupListResponse.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nRepresents the response to a List Azure Sql Database geo backups\nrequest.\n"
  example: []
  syntax:
    content: 'public class GeoBackupListResponse : AzureOperationResponse, IEnumerable<GeoBackup>'
    content.vb: >-
      Public Class GeoBackupListResponse
          Inherits AzureOperationResponse
          Implements IEnumerable(Of GeoBackup)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GeoBackups
  commentId: P:Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GeoBackups
  id: GeoBackups
  parent: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse
  langs:
  - csharp
  - vb
  name: GeoBackups
  nameWithType: GeoBackupListResponse.GeoBackups
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GeoBackups
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GeoBackups
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupListResponse.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nOptional. Gets or sets the list of a given Azure Sql Database geo\nbackups.\n"
  example: []
  syntax:
    content: public IList<GeoBackup> GeoBackups { get; set; }
    content.vb: Public Property GeoBackups As IList(Of GeoBackup)
    parameters: []
    return:
      type: IList{Microsoft.Azure.Management.Sql.Models.GeoBackup}
  overload: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GeoBackups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse
  langs:
  - csharp
  - vb
  name: GeoBackupListResponse()
  nameWithType: GeoBackupListResponse.GeoBackupListResponse()
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GeoBackupListResponse()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupListResponse.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nInitializes a new instance of the GeoBackupListResponse class.\n"
  example: []
  syntax:
    content: public GeoBackupListResponse()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GetEnumerator
  commentId: M:Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: GeoBackupListResponse.GetEnumerator()
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetEnumerator
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupListResponse.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nGets the sequence of GeoBackups.\n"
  example: []
  syntax:
    content: public IEnumerator<GeoBackup> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of GeoBackup)
    return:
      type: IEnumerator{Microsoft.Azure.Management.Sql.Models.GeoBackup}
  overload: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  commentId: N:Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  nameWithType: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GeoBackups*
  commentId: Overload:Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GeoBackups
  isExternal: false
  name: GeoBackups
  nameWithType: GeoBackupListResponse.GeoBackups
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GeoBackups
- uid: IList{Microsoft.Azure.Management.Sql.Models.GeoBackup}
  commentId: '!:IList{Microsoft.Azure.Management.Sql.Models.GeoBackup}'
  definition: IList`1
  name: IList<GeoBackup>
  nameWithType: IList<GeoBackup>
  fullName: IList<Microsoft.Azure.Management.Sql.Models.GeoBackup>
  nameWithType.vb: IList(Of GeoBackup)
  fullname.vb: IList(Of Microsoft.Azure.Management.Sql.Models.GeoBackup)
  name.vb: IList(Of GeoBackup)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.GeoBackup
    name: GeoBackup
    nameWithType: GeoBackup
    fullName: Microsoft.Azure.Management.Sql.Models.GeoBackup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.GeoBackup
    name: GeoBackup
    nameWithType: GeoBackup
    fullName: Microsoft.Azure.Management.Sql.Models.GeoBackup
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullname.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.#ctor
  isExternal: false
  name: GeoBackupListResponse
  nameWithType: GeoBackupListResponse.GeoBackupListResponse
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GeoBackupListResponse
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GetEnumerator*
  commentId: Overload:Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: GeoBackupListResponse.GetEnumerator
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupListResponse.GetEnumerator
- uid: IEnumerator{Microsoft.Azure.Management.Sql.Models.GeoBackup}
  commentId: '!:IEnumerator{Microsoft.Azure.Management.Sql.Models.GeoBackup}'
  definition: IEnumerator`1
  name: IEnumerator<GeoBackup>
  nameWithType: IEnumerator<GeoBackup>
  fullName: IEnumerator<Microsoft.Azure.Management.Sql.Models.GeoBackup>
  nameWithType.vb: IEnumerator(Of GeoBackup)
  fullname.vb: IEnumerator(Of Microsoft.Azure.Management.Sql.Models.GeoBackup)
  name.vb: IEnumerator(Of GeoBackup)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.GeoBackup
    name: GeoBackup
    nameWithType: GeoBackup
    fullName: Microsoft.Azure.Management.Sql.Models.GeoBackup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.GeoBackup
    name: GeoBackup
    nameWithType: GeoBackup
    fullName: Microsoft.Azure.Management.Sql.Models.GeoBackup
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullname.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
