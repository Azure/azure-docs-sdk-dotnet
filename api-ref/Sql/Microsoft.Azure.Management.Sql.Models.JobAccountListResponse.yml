### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse
  commentId: T:Microsoft.Azure.Management.Sql.Models.JobAccountListResponse
  id: JobAccountListResponse
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.#ctor
  - Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.GetEnumerator
  - Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.JobAccounts
  langs:
  - csharp
  - vb
  name: JobAccountListResponse
  nameWithType: JobAccountListResponse
  fullName: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/JobAccountListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: JobAccountListResponse
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/JobAccountListResponse.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nRepresents the response to a List Azure Sql Job Accounts request.\n"
  example: []
  syntax:
    content: 'public class JobAccountListResponse : AzureOperationResponse, IEnumerable<JobAccount>'
    content.vb: >-
      Public Class JobAccountListResponse
          Inherits AzureOperationResponse
          Implements IEnumerable(Of JobAccount)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.JobAccounts
  commentId: P:Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.JobAccounts
  id: JobAccounts
  parent: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse
  langs:
  - csharp
  - vb
  name: JobAccounts
  nameWithType: JobAccountListResponse.JobAccounts
  fullName: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.JobAccounts
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/JobAccountListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: JobAccounts
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/JobAccountListResponse.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nOptional. The list of Azure Sql Job Accounts hosted in the server.\n"
  example: []
  syntax:
    content: public IList<JobAccount> JobAccounts { get; set; }
    content.vb: Public Property JobAccounts As IList(Of JobAccount)
    parameters: []
    return:
      type: IList{Microsoft.Azure.Management.Sql.Models.JobAccount}
  overload: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.JobAccounts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse
  langs:
  - csharp
  - vb
  name: JobAccountListResponse()
  nameWithType: JobAccountListResponse.JobAccountListResponse()
  fullName: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.JobAccountListResponse()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/JobAccountListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/JobAccountListResponse.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nInitializes a new instance of the JobAccountListResponse class.\n"
  example: []
  syntax:
    content: public JobAccountListResponse()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.GetEnumerator
  commentId: M:Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: JobAccountListResponse.GetEnumerator()
  fullName: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/JobAccountListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetEnumerator
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/JobAccountListResponse.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nGets the sequence of JobAccounts.\n"
  example: []
  syntax:
    content: public IEnumerator<JobAccount> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of JobAccount)
    return:
      type: IEnumerator{Microsoft.Azure.Management.Sql.Models.JobAccount}
  overload: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  commentId: N:Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  nameWithType: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.JobAccounts*
  commentId: Overload:Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.JobAccounts
  isExternal: false
  name: JobAccounts
  nameWithType: JobAccountListResponse.JobAccounts
  fullName: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.JobAccounts
- uid: IList{Microsoft.Azure.Management.Sql.Models.JobAccount}
  commentId: '!:IList{Microsoft.Azure.Management.Sql.Models.JobAccount}'
  definition: IList`1
  name: IList<JobAccount>
  nameWithType: IList<JobAccount>
  fullName: IList<Microsoft.Azure.Management.Sql.Models.JobAccount>
  nameWithType.vb: IList(Of JobAccount)
  fullname.vb: IList(Of Microsoft.Azure.Management.Sql.Models.JobAccount)
  name.vb: IList(Of JobAccount)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.JobAccount
    name: JobAccount
    nameWithType: JobAccount
    fullName: Microsoft.Azure.Management.Sql.Models.JobAccount
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.JobAccount
    name: JobAccount
    nameWithType: JobAccount
    fullName: Microsoft.Azure.Management.Sql.Models.JobAccount
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullname.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.#ctor
  isExternal: false
  name: JobAccountListResponse
  nameWithType: JobAccountListResponse.JobAccountListResponse
  fullName: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.JobAccountListResponse
- uid: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.GetEnumerator*
  commentId: Overload:Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: JobAccountListResponse.GetEnumerator
  fullName: Microsoft.Azure.Management.Sql.Models.JobAccountListResponse.GetEnumerator
- uid: IEnumerator{Microsoft.Azure.Management.Sql.Models.JobAccount}
  commentId: '!:IEnumerator{Microsoft.Azure.Management.Sql.Models.JobAccount}'
  definition: IEnumerator`1
  name: IEnumerator<JobAccount>
  nameWithType: IEnumerator<JobAccount>
  fullName: IEnumerator<Microsoft.Azure.Management.Sql.Models.JobAccount>
  nameWithType.vb: IEnumerator(Of JobAccount)
  fullname.vb: IEnumerator(Of Microsoft.Azure.Management.Sql.Models.JobAccount)
  name.vb: IEnumerator(Of JobAccount)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.JobAccount
    name: JobAccount
    nameWithType: JobAccount
    fullName: Microsoft.Azure.Management.Sql.Models.JobAccount
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.JobAccount
    name: JobAccount
    nameWithType: JobAccount
    fullName: Microsoft.Azure.Management.Sql.Models.JobAccount
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullname.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
