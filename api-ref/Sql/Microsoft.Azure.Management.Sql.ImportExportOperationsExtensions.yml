### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  id: ImportExportOperationsExtensions
  parent: Microsoft.Azure.Management.Sql
  children:
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  langs:
  - csharp
  - vb
  name: ImportExportOperationsExtensions
  nameWithType: ImportExportOperationsExtensions
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ImportExportOperationsExtensions
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\nThe Windows Azure SQL Database management API provides a RESTful set of\nweb services that interact with Windows Azure SQL Database services to\nmanage your databases. The API enables users to create, retrieve,\nupdate, and delete databases and servers.\n"
  example: []
  syntax:
    content: 'public static class ImportExportOperationsExtensions : object'
    content.vb: >-
      Public Module ImportExportOperationsExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  id: Export(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: Export(IImportExportOperations, String, String, String, ExportRequestParameters)
  nameWithType: ImportExportOperationsExtensions.Export(IImportExportOperations, String, String, String, ExportRequestParameters)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Export
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\nExports a Azure SQL Database to bacpac. To determine the status of\nthe operation call GetImportExportOperationStatus.\n"
  example: []
  syntax:
    content: public static ImportExportResponse Export(this IImportExportOperations operations, string resourceGroupName, string serverName, string databaseName, ExportRequestParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Export(operations As IImportExportOperations, resourceGroupName As String, serverName As String, databaseName As String, parameters As ExportRequestParameters) As ImportExportResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the Resource Group to which the Azure SQL\nServer belongs.\n"
    - id: serverName
      type: System.String
      description: "\nRequired. The name of the Azure SQL Server on which the database is\nhosted.\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the Azure SQL Database to export.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
      description: "\nRequired. The required parameters for exporting a database.\n"
    return:
      type: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
      description: "\nResponse Azure Sql Import/Export operations.\n"
  overload: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  id: ExportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExportAsync(IImportExportOperations, String, String, String, ExportRequestParameters)
  nameWithType: ImportExportOperationsExtensions.ExportAsync(IImportExportOperations, String, String, String, ExportRequestParameters)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ExportAsync
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\nExports a Azure SQL Database to bacpac. To determine the status of\nthe operation call GetImportExportOperationStatus.\n"
  example: []
  syntax:
    content: public static Task<ImportExportResponse> ExportAsync(this IImportExportOperations operations, string resourceGroupName, string serverName, string databaseName, ExportRequestParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExportAsync(operations As IImportExportOperations, resourceGroupName As String, serverName As String, databaseName As String, parameters As ExportRequestParameters) As Task(Of ImportExportResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the Resource Group to which the Azure SQL\nServer belongs.\n"
    - id: serverName
      type: System.String
      description: "\nRequired. The name of the Azure SQL Server on which the database is\nhosted.\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the Azure SQL Database to export.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
      description: "\nRequired. The required parameters for exporting a database.\n"
    return:
      type: Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
      description: "\nResponse Azure Sql Import/Export operations.\n"
  overload: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  id: GetImportExportOperationStatus(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetImportExportOperationStatus(IImportExportOperations, String)
  nameWithType: ImportExportOperationsExtensions.GetImportExportOperationStatus(IImportExportOperations, String)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetImportExportOperationStatus
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\nGets the status of an Azure Sql Database import/export operation.\n"
  example: []
  syntax:
    content: public static ImportExportOperationStatusResponse GetImportExportOperationStatus(this IImportExportOperations operations, string operationStatusLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetImportExportOperationStatus(operations As IImportExportOperations, operationStatusLink As String) As ImportExportOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\n"
    - id: operationStatusLink
      type: System.String
      description: "\nRequired. Location value returned by the Begin operation\n"
    return:
      type: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
      description: "\nResponse for Azure Sql Import/Export Status operation.\n"
  overload: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  id: GetImportExportOperationStatusAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetImportExportOperationStatusAsync(IImportExportOperations, String)
  nameWithType: ImportExportOperationsExtensions.GetImportExportOperationStatusAsync(IImportExportOperations, String)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetImportExportOperationStatusAsync
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 137
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\nGets the status of an Azure Sql Database import/export operation.\n"
  example: []
  syntax:
    content: public static Task<ImportExportOperationStatusResponse> GetImportExportOperationStatusAsync(this IImportExportOperations operations, string operationStatusLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetImportExportOperationStatusAsync(operations As IImportExportOperations, operationStatusLink As String) As Task(Of ImportExportOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\n"
    - id: operationStatusLink
      type: System.String
      description: "\nRequired. Location value returned by the Begin operation\n"
    return:
      type: Task{Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse}
      description: "\nResponse for Azure Sql Import/Export Status operation.\n"
  overload: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  id: Import(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: Import(IImportExportOperations, String, String, ImportRequestParameters)
  nameWithType: ImportExportOperationsExtensions.Import(IImportExportOperations, String, String, ImportRequestParameters)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Import
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 164
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\nImports a bacpac to Azure SQL Database. To determine the status of\nthe operation call GetImportExportOperationStatus.\n"
  example: []
  syntax:
    content: public static ImportExportResponse Import(this IImportExportOperations operations, string resourceGroupName, string serverName, ImportRequestParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Import(operations As IImportExportOperations, resourceGroupName As String, serverName As String, parameters As ImportRequestParameters) As ImportExportResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the Resource Group to which the Azure SQL\nServer belongs.\n"
    - id: serverName
      type: System.String
      description: "\nRequired. The name of the Azure SQL Server on which the database is\nhosted.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
      description: "\nRequired. The required parameters for importing to a database.\n"
    return:
      type: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
      description: "\nResponse Azure Sql Import/Export operations.\n"
  overload: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  id: ImportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: ImportAsync(IImportExportOperations, String, String, ImportRequestParameters)
  nameWithType: ImportExportOperationsExtensions.ImportAsync(IImportExportOperations, String, String, ImportRequestParameters)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ImportAsync
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 195
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\nImports a bacpac to Azure SQL Database. To determine the status of\nthe operation call GetImportExportOperationStatus.\n"
  example: []
  syntax:
    content: public static Task<ImportExportResponse> ImportAsync(this IImportExportOperations operations, string resourceGroupName, string serverName, ImportRequestParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImportAsync(operations As IImportExportOperations, resourceGroupName As String, serverName As String, parameters As ImportRequestParameters) As Task(Of ImportExportResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the Resource Group to which the Azure SQL\nServer belongs.\n"
    - id: serverName
      type: System.String
      description: "\nRequired. The name of the Azure SQL Server on which the database is\nhosted.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
      description: "\nRequired. The required parameters for importing to a database.\n"
    return:
      type: Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
      description: "\nResponse Azure Sql Import/Export operations.\n"
  overload: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  id: ImportToExistingDatabase(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: ImportToExistingDatabase(IImportExportOperations, String, String, String, ImportExtensionRequestParameteres)
  nameWithType: ImportExportOperationsExtensions.ImportToExistingDatabase(IImportExportOperations, String, String, String, ImportExtensionRequestParameteres)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ImportToExistingDatabase
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 225
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\nImports a bacpac to an empty Azure SQL Database. To determine the\nstatus of the operation call GetImportExportOperationStatus.\n"
  example: []
  syntax:
    content: public static ImportExportResponse ImportToExistingDatabase(this IImportExportOperations operations, string resourceGroupName, string serverName, string databaseName, ImportExtensionRequestParameteres parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImportToExistingDatabase(operations As IImportExportOperations, resourceGroupName As String, serverName As String, databaseName As String, parameters As ImportExtensionRequestParameteres) As ImportExportResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the Resource Group to which the Azure SQL\nServer belongs.\n"
    - id: serverName
      type: System.String
      description: "\nRequired. The name of the Azure SQL Server on which the database is\nhosted.\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the Azure SQL Database to import to.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
      description: "\nRequired. The required parameters for importing to a database.\n"
    return:
      type: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
      description: "\nResponse Azure Sql Import/Export operations.\n"
  overload: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  id: ImportToExistingDatabaseAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: ImportToExistingDatabaseAsync(IImportExportOperations, String, String, String, ImportExtensionRequestParameteres)
  nameWithType: ImportExportOperationsExtensions.ImportToExistingDatabaseAsync(IImportExportOperations, String, String, String, ImportExtensionRequestParameteres)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ImportToExistingDatabaseAsync
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 259
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\nImports a bacpac to an empty Azure SQL Database. To determine the\nstatus of the operation call GetImportExportOperationStatus.\n"
  example: []
  syntax:
    content: public static Task<ImportExportResponse> ImportToExistingDatabaseAsync(this IImportExportOperations operations, string resourceGroupName, string serverName, string databaseName, ImportExtensionRequestParameteres parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImportToExistingDatabaseAsync(operations As IImportExportOperations, resourceGroupName As String, serverName As String, databaseName As String, parameters As ImportExtensionRequestParameteres) As Task(Of ImportExportResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the Resource Group to which the Azure SQL\nServer belongs.\n"
    - id: serverName
      type: System.String
      description: "\nRequired. The name of the Azure SQL Server on which the database is\nhosted.\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the Azure SQL Database to import to.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
      description: "\nRequired. The required parameters for importing to a database.\n"
    return:
      type: Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
      description: "\nResponse Azure Sql Import/Export operations.\n"
  overload: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Sql
  commentId: N:Microsoft.Azure.Management.Sql
  isExternal: false
  name: Microsoft.Azure.Management.Sql
  nameWithType: Microsoft.Azure.Management.Sql
  fullName: Microsoft.Azure.Management.Sql
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export*
  commentId: Overload:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export
  isExternal: false
  name: Export
  nameWithType: ImportExportOperationsExtensions.Export
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export
- uid: Microsoft.Azure.Management.Sql.IImportExportOperations
  commentId: T:Microsoft.Azure.Management.Sql.IImportExportOperations
  parent: Microsoft.Azure.Management.Sql
  isExternal: false
  name: IImportExportOperations
  nameWithType: IImportExportOperations
  fullName: Microsoft.Azure.Management.Sql.IImportExportOperations
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  commentId: T:Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ExportRequestParameters
  nameWithType: ExportRequestParameters
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
- uid: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
  commentId: T:Microsoft.Azure.Management.Sql.Models.ImportExportResponse
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ImportExportResponse
  nameWithType: ImportExportResponse
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
- uid: Microsoft.Azure.Management.Sql.Models
  commentId: N:Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  nameWithType: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync*
  commentId: Overload:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync
  isExternal: false
  name: ExportAsync
  nameWithType: ImportExportOperationsExtensions.ExportAsync
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync
- uid: Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
  commentId: '!:Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}'
  definition: Task`1
  name: Task<ImportExportResponse>
  nameWithType: Task<ImportExportResponse>
  fullName: Task<Microsoft.Azure.Management.Sql.Models.ImportExportResponse>
  nameWithType.vb: Task(Of ImportExportResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.Sql.Models.ImportExportResponse)
  name.vb: Task(Of ImportExportResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
    name: ImportExportResponse
    nameWithType: ImportExportResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
    name: ImportExportResponse
    nameWithType: ImportExportResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus*
  commentId: Overload:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus
  isExternal: false
  name: GetImportExportOperationStatus
  nameWithType: ImportExportOperationsExtensions.GetImportExportOperationStatus
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus
- uid: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
  commentId: T:Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ImportExportOperationStatusResponse
  nameWithType: ImportExportOperationStatusResponse
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync*
  commentId: Overload:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync
  isExternal: false
  name: GetImportExportOperationStatusAsync
  nameWithType: ImportExportOperationsExtensions.GetImportExportOperationStatusAsync
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync
- uid: Task{Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse}
  commentId: '!:Task{Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse}'
  definition: Task`1
  name: Task<ImportExportOperationStatusResponse>
  nameWithType: Task<ImportExportOperationStatusResponse>
  fullName: Task<Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse>
  nameWithType.vb: Task(Of ImportExportOperationStatusResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse)
  name.vb: Task(Of ImportExportOperationStatusResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
    name: ImportExportOperationStatusResponse
    nameWithType: ImportExportOperationStatusResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
    name: ImportExportOperationStatusResponse
    nameWithType: ImportExportOperationStatusResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import*
  commentId: Overload:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import
  isExternal: false
  name: Import
  nameWithType: ImportExportOperationsExtensions.Import
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import
- uid: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  commentId: T:Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ImportRequestParameters
  nameWithType: ImportRequestParameters
  fullName: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync*
  commentId: Overload:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync
  isExternal: false
  name: ImportAsync
  nameWithType: ImportExportOperationsExtensions.ImportAsync
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase*
  commentId: Overload:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase
  isExternal: false
  name: ImportToExistingDatabase
  nameWithType: ImportExportOperationsExtensions.ImportToExistingDatabase
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase
- uid: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  commentId: T:Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ImportExtensionRequestParameteres
  nameWithType: ImportExtensionRequestParameteres
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync*
  commentId: Overload:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync
  isExternal: false
  name: ImportToExistingDatabaseAsync
  nameWithType: ImportExportOperationsExtensions.ImportToExistingDatabaseAsync
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync
