### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  commentId: T:Microsoft.ApplicationInsights.Channel.InMemoryChannel
  id: InMemoryChannel
  parent: Microsoft.ApplicationInsights.Channel
  children:
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.#ctor
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush(System.TimeSpan)
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval
  langs:
  - csharp
  - vb
  name: InMemoryChannel
  nameWithType: InMemoryChannel
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: InMemoryChannel
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 9
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nRepresents a communication channel for sending telemetry to Application Insights via HTTPS. There will be a buffer that will not be persisted, to enforce the \nqueued telemetry items to be sent, <xref href=\"Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush\" data-throw-if-not-resolved=\"false\"></xref> should be called.    \n"
  example: []
  syntax:
    content: 'public class InMemoryChannel : ITelemetryChannel, IDisposable'
    content.vb: >-
      Public Class InMemoryChannel
          Implements ITelemetryChannel, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.#ctor
  commentId: M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.#ctor
  id: '#ctor'
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: InMemoryChannel()
  nameWithType: InMemoryChannel.InMemoryChannel()
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.InMemoryChannel()
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 19
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.Channel.InMemoryChannel\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public InMemoryChannel()
    content.vb: Public Sub New
  overload: Microsoft.ApplicationInsights.Channel.InMemoryChannel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode
  commentId: P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode
  id: DeveloperMode
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: DeveloperMode
  nameWithType: InMemoryChannel.DeveloperMode
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: DeveloperMode
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 39
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nGets or sets a value indicating whether developer mode of telemetry transmission is enabled.\n"
  example: []
  syntax:
    content: public bool ? DeveloperMode { get; set; }
    content.vb: Public Property DeveloperMode As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetryChannel.DeveloperMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval
  commentId: P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval
  id: SendingInterval
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: SendingInterval
  nameWithType: InMemoryChannel.SendingInterval
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: SendingInterval
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 69
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nGets or sets the sending interval. Once the interval expires, <xref href=\"Microsoft.ApplicationInsights.Channel.InMemoryChannel\" data-throw-if-not-resolved=\"false\"></xref> \nserializes the accumulated telemetry items for transmission and sends it over the wire.\n"
  example: []
  syntax:
    content: public TimeSpan SendingInterval { get; set; }
    content.vb: Public Property SendingInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  overload: Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress
  commentId: P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress
  id: EndpointAddress
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: EndpointAddress
  nameWithType: InMemoryChannel.EndpointAddress
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: EndpointAddress
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 85
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nGets or sets the HTTP address where the telemetry is sent.\n"
  example: []
  syntax:
    content: public string EndpointAddress { get; set; }
    content.vb: Public Property EndpointAddress As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetryChannel.EndpointAddress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity
  commentId: P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity
  id: MaxTelemetryBufferCapacity
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: MaxTelemetryBufferCapacity
  nameWithType: InMemoryChannel.MaxTelemetryBufferCapacity
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: MaxTelemetryBufferCapacity
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 95
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nGets or sets the maximum number of telemetry items will accumulate in a memory before \nthe <xref href=\"Microsoft.ApplicationInsights.Channel.InMemoryChannel\" data-throw-if-not-resolved=\"false\"></xref> serializing them for transmission to Application Insights.\n"
  example: []
  syntax:
    content: public int MaxTelemetryBufferCapacity { get; set; }
    content.vb: Public Property MaxTelemetryBufferCapacity As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  commentId: M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  id: Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: Send(ITelemetry)
  nameWithType: InMemoryChannel.Send(ITelemetry)
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Send
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 104
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nSends an instance of ITelemetry through the channel.\n"
  example: []
  syntax:
    content: public void Send(ITelemetry item)
    content.vb: Public Sub Send(item As ITelemetry)
    parameters:
    - id: item
      type: Microsoft.ApplicationInsights.Channel.ITelemetry
  overload: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush
  commentId: M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush
  id: Flush
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: InMemoryChannel.Flush()
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Flush
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 124
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nWill send all the telemetry items stored in the memory.\n"
  example: []
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  overload: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush(System.TimeSpan)
  commentId: M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush(System.TimeSpan)
  id: Flush(System.TimeSpan)
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: Flush(TimeSpan)
  nameWithType: InMemoryChannel.Flush(TimeSpan)
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Flush
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 133
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nWill send all the telemetry items stored in the memory.\n"
  example: []
  syntax:
    content: public void Flush(TimeSpan timeout)
    content.vb: Public Sub Flush(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: Timeout interval to abort sending.
  overload: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose
  commentId: M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose
  id: Dispose
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: InMemoryChannel.Dispose()
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Dispose
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 141
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nDisposing the channel.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
  commentId: M:Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
  parent: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  isExternal: false
  name: Flush()
  nameWithType: ITelemetryChannel.Flush()
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush()
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
    name: Flush
    nameWithType: ITelemetryChannel.Flush
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
    name: Flush
    nameWithType: ITelemetryChannel.Flush
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Channel
  commentId: N:Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  nameWithType: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  commentId: T:Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetryChannel
  nameWithType: ITelemetryChannel
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  commentId: T:Microsoft.ApplicationInsights.Channel.InMemoryChannel
  isExternal: false
  name: InMemoryChannel
  nameWithType: InMemoryChannel
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.#ctor*
  commentId: Overload:Microsoft.ApplicationInsights.Channel.InMemoryChannel.#ctor
  isExternal: false
  name: InMemoryChannel
  nameWithType: InMemoryChannel.InMemoryChannel
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.InMemoryChannel
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode*
  commentId: Overload:Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode
  isExternal: false
  name: DeveloperMode
  nameWithType: InMemoryChannel.DeveloperMode
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode
- uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.DeveloperMode
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetryChannel.DeveloperMode
  parent: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  isExternal: false
  name: DeveloperMode
  nameWithType: ITelemetryChannel.DeveloperMode
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.DeveloperMode
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval*
  commentId: Overload:Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval
  isExternal: false
  name: SendingInterval
  nameWithType: InMemoryChannel.SendingInterval
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress*
  commentId: Overload:Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress
  isExternal: false
  name: EndpointAddress
  nameWithType: InMemoryChannel.EndpointAddress
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress
- uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.EndpointAddress
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetryChannel.EndpointAddress
  parent: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  isExternal: false
  name: EndpointAddress
  nameWithType: ITelemetryChannel.EndpointAddress
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.EndpointAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity*
  commentId: Overload:Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity
  isExternal: false
  name: MaxTelemetryBufferCapacity
  nameWithType: InMemoryChannel.MaxTelemetryBufferCapacity
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send*
  commentId: Overload:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send
  isExternal: false
  name: Send
  nameWithType: InMemoryChannel.Send
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send
- uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  commentId: M:Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  parent: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  isExternal: false
  name: Send(ITelemetry)
  nameWithType: ITelemetryChannel.Send(ITelemetry)
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
    name: Send
    nameWithType: ITelemetryChannel.Send
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry
    name: ITelemetry
    nameWithType: ITelemetry
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
    name: Send
    nameWithType: ITelemetryChannel.Send
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry
    name: ITelemetry
    nameWithType: ITelemetry
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  commentId: T:Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  nameWithType: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush*
  commentId: Overload:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush
  isExternal: false
  name: Flush
  nameWithType: InMemoryChannel.Flush
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose*
  commentId: Overload:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose
  isExternal: false
  name: Dispose
  nameWithType: InMemoryChannel.Dispose
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
