### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  commentId: T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  id: TelemetryContext
  parent: Microsoft.ApplicationInsights.DataContracts
  children:
  - Microsoft.ApplicationInsights.DataContracts.TelemetryContext.#ctor
  - Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Cloud
  - Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Component
  - Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Device
  - Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey
  - Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Location
  - Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Operation
  - Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Properties
  - Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Session
  - Microsoft.ApplicationInsights.DataContracts.TelemetryContext.User
  langs:
  - csharp
  - vb
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TelemetryContext
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
    startLine: 13
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nRepresents a context for sending telemetry to the Application Insights service.\n"
  example: []
  syntax:
    content: public sealed class TelemetryContext
    content.vb: Public NotInheritable Class TelemetryContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.#ctor
  commentId: M:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.#ctor
  id: '#ctor'
  parent: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  langs:
  - csharp
  - vb
  name: TelemetryContext()
  nameWithType: TelemetryContext.TelemetryContext()
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.TelemetryContext()
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
    startLine: 32
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TelemetryContext()
    content.vb: Public Sub New
  overload: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey
  commentId: P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey
  id: InstrumentationKey
  parent: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  langs:
  - csharp
  - vb
  name: InstrumentationKey
  nameWithType: TelemetryContext.InstrumentationKey
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: InstrumentationKey
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
    startLine: 53
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the default instrumentation key for all <xref href=\"Microsoft.ApplicationInsights.Channel.ITelemetry\" data-throw-if-not-resolved=\"false\"></xref> objects logged in this <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nBy default, this property is initialized with the <xref href=\"Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey\" data-throw-if-not-resolved=\"false\"></xref> value\nof the <xref href=\"Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active\" data-throw-if-not-resolved=\"false\"></xref> instance of <xref href=\"Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration\" data-throw-if-not-resolved=\"false\"></xref>. You can specify it \nfor all telemetry tracked via a particular <xref href=\"Microsoft.ApplicationInsights.TelemetryClient\" data-throw-if-not-resolved=\"false\"></xref> or for a specific <xref href=\"Microsoft.ApplicationInsights.Channel.ITelemetry\" data-throw-if-not-resolved=\"false\"></xref> \ninstance.\n"
  example: []
  syntax:
    content: public string InstrumentationKey { get; set; }
    content.vb: Public Property InstrumentationKey As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Component
  commentId: P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Component
  id: Component
  parent: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  langs:
  - csharp
  - vb
  name: Component
  nameWithType: TelemetryContext.Component
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Component
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Component
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
    startLine: 62
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the object describing the component tracked by this <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ComponentContext Component { get; }
    content.vb: Public ReadOnly Property Component As ComponentContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.Extensibility.Implementation.ComponentContext
  overload: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Component*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Device
  commentId: P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Device
  id: Device
  parent: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  langs:
  - csharp
  - vb
  name: Device
  nameWithType: TelemetryContext.Device
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Device
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Device
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
    startLine: 70
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the object describing the device tracked by this <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DeviceContext Device { get; }
    content.vb: Public ReadOnly Property Device As DeviceContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  overload: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Device*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Cloud
  commentId: P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Cloud
  id: Cloud
  parent: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  langs:
  - csharp
  - vb
  name: Cloud
  nameWithType: TelemetryContext.Cloud
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Cloud
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Cloud
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
    startLine: 78
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the object describing the cloud tracked by this <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CloudContext Cloud { get; }
    content.vb: Public ReadOnly Property Cloud As CloudContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.Extensibility.Implementation.CloudContext
  overload: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Cloud*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Session
  commentId: P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Session
  id: Session
  parent: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: TelemetryContext.Session
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Session
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Session
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
    startLine: 86
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the object describing a user session tracked by this <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public SessionContext Session { get; }
    content.vb: Public ReadOnly Property Session As SessionContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.Extensibility.Implementation.SessionContext
  overload: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Session*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.User
  commentId: P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.User
  id: User
  parent: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  langs:
  - csharp
  - vb
  name: User
  nameWithType: TelemetryContext.User
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.User
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: User
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
    startLine: 94
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the object describing a user tracked by this <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public UserContext User { get; }
    content.vb: Public ReadOnly Property User As UserContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.Extensibility.Implementation.UserContext
  overload: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.User*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Operation
  commentId: P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Operation
  id: Operation
  parent: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  langs:
  - csharp
  - vb
  name: Operation
  nameWithType: TelemetryContext.Operation
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Operation
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Operation
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
    startLine: 102
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the object describing a operation tracked by this <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public OperationContext Operation { get; }
    content.vb: Public ReadOnly Property Operation As OperationContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContext
  overload: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Operation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Location
  commentId: P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Location
  id: Location
  parent: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: TelemetryContext.Location
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Location
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Location
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
    startLine: 110
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the object describing a location tracked by this <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public LocationContext Location { get; }
    content.vb: Public ReadOnly Property Location As LocationContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext
  overload: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Location*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Properties
  commentId: P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Properties
  id: Properties
  parent: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: TelemetryContext.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Properties
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Properties
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/TelemetryContext.cs
    startLine: 118
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets a dictionary of application-defined property values.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Properties { get; }
    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ApplicationInsights.DataContracts
  commentId: N:Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  nameWithType: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  commentId: T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.#ctor*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.#ctor
  isExternal: false
  name: TelemetryContext
  nameWithType: TelemetryContext.TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.TelemetryContext
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  commentId: T:Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  nameWithType: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey
  commentId: P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active
  commentId: P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  commentId: T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  parent: Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: TelemetryConfiguration
  nameWithType: TelemetryConfiguration
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
- uid: Microsoft.ApplicationInsights.TelemetryClient
  commentId: T:Microsoft.ApplicationInsights.TelemetryClient
  parent: Microsoft.ApplicationInsights
  isExternal: false
  name: TelemetryClient
  nameWithType: TelemetryClient
  fullName: Microsoft.ApplicationInsights.TelemetryClient
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey
  isExternal: false
  name: InstrumentationKey
  nameWithType: TelemetryContext.InstrumentationKey
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ApplicationInsights.Channel
  commentId: N:Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  nameWithType: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: Microsoft.ApplicationInsights.Extensibility
  commentId: N:Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility
  nameWithType: Microsoft.ApplicationInsights.Extensibility
  fullName: Microsoft.ApplicationInsights.Extensibility
- uid: Microsoft.ApplicationInsights
  commentId: N:Microsoft.ApplicationInsights
  isExternal: false
  name: Microsoft.ApplicationInsights
  nameWithType: Microsoft.ApplicationInsights
  fullName: Microsoft.ApplicationInsights
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Component*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Component
  isExternal: false
  name: Component
  nameWithType: TelemetryContext.Component
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Component
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.ComponentContext
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.ComponentContext
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: ComponentContext
  nameWithType: ComponentContext
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.ComponentContext
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation
  commentId: N:Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility.Implementation
  nameWithType: Microsoft.ApplicationInsights.Extensibility.Implementation
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Device*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Device
  isExternal: false
  name: Device
  nameWithType: TelemetryContext.Device
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Device
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: DeviceContext
  nameWithType: DeviceContext
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Cloud*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Cloud
  isExternal: false
  name: Cloud
  nameWithType: TelemetryContext.Cloud
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Cloud
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.CloudContext
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.CloudContext
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: CloudContext
  nameWithType: CloudContext
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.CloudContext
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Session*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Session
  isExternal: false
  name: Session
  nameWithType: TelemetryContext.Session
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Session
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.SessionContext
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.SessionContext
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: SessionContext
  nameWithType: SessionContext
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.SessionContext
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.User*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.User
  isExternal: false
  name: User
  nameWithType: TelemetryContext.User
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.User
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.UserContext
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.UserContext
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: UserContext
  nameWithType: UserContext
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.UserContext
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Operation*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Operation
  isExternal: false
  name: Operation
  nameWithType: TelemetryContext.Operation
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Operation
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContext
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContext
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContext
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Location*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Location
  isExternal: false
  name: Location
  nameWithType: TelemetryContext.Location
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Location
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: LocationContext
  nameWithType: LocationContext
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Properties*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Properties
  isExternal: false
  name: Properties
  nameWithType: TelemetryContext.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
