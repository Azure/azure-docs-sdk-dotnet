### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  commentId: T:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  id: PerformanceCounterTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  children:
  - Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor
  - Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor(System.String,System.String,System.String,System.Double)
  - Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CategoryName
  - Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Context
  - Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CounterName
  - Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.InstanceName
  - Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  - Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Properties
  - Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Sequence
  - Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Timestamp
  - Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Value
  langs:
  - csharp
  - vb
  name: PerformanceCounterTelemetry
  nameWithType: PerformanceCounterTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: PerformanceCounterTelemetry
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 10
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nThe class that represents information about performance counters.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use MetricTelemetry instead.")]

      public sealed class PerformanceCounterTelemetry : ITelemetry, ISupportProperties
    content.vb: >-
      <Obsolete("Use MetricTelemetry instead.")>

      Public NotInheritable Class PerformanceCounterTelemetry
          Implements ITelemetry, ISupportProperties
  inheritance:
  - System.Object
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use MetricTelemetry instead.
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor
  commentId: M:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor
  id: '#ctor'
  parent: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  langs:
  - csharp
  - vb
  name: PerformanceCounterTelemetry()
  nameWithType: PerformanceCounterTelemetry.PerformanceCounterTelemetry()
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.PerformanceCounterTelemetry()
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 21
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PerformanceCounterTelemetry()
    content.vb: Public Sub New
  overload: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor(System.String,System.String,System.String,System.Double)
  commentId: M:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor(System.String,System.String,System.String,System.Double)
  id: '#ctor(System.String,System.String,System.String,System.Double)'
  parent: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  langs:
  - csharp
  - vb
  name: PerformanceCounterTelemetry(String, String, String, Double)
  nameWithType: PerformanceCounterTelemetry.PerformanceCounterTelemetry(String, String, String, Double)
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.PerformanceCounterTelemetry(System.String, System.String, System.String, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 33
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PerformanceCounterTelemetry(string categoryName, string counterName, string instanceName, double value)
    content.vb: Public Sub New(categoryName As String, counterName As String, instanceName As String, value As Double)
    parameters:
    - id: categoryName
      type: System.String
      description: Category name.
    - id: counterName
      type: System.String
      description: Performance counter name.
    - id: instanceName
      type: System.String
      description: Instance name.
    - id: value
      type: System.Double
      description: Performance counter value.
  overload: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Timestamp
  id: Timestamp
  parent: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: PerformanceCounterTelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Timestamp
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Timestamp
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 45
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets date and time when telemetry was recorded.\n"
  example: []
  syntax:
    content: public DateTimeOffset Timestamp { get; set; }
    content.vb: Public Property Timestamp As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  overload: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Timestamp*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Sequence
  id: Sequence
  parent: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  langs:
  - csharp
  - vb
  name: Sequence
  nameWithType: PerformanceCounterTelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Sequence
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Sequence
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 61
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the value that defines absolute order of the telemetry item.\n"
  example: []
  syntax:
    content: public string Sequence { get; set; }
    content.vb: Public Property Sequence As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Sequence*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Context
  id: Context
  parent: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: PerformanceCounterTelemetry.Context
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Context
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Context
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 77
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the context associated with the current telemetry item.\n"
  example: []
  syntax:
    content: public TelemetryContext Context { get; }
    content.vb: Public ReadOnly Property Context As TelemetryContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  overload: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Context*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Value
  commentId: P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Value
  id: Value
  parent: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: PerformanceCounterTelemetry.Value
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Value
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Value
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 88
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the counter value.\n"
  example: []
  syntax:
    content: public double Value { get; set; }
    content.vb: Public Property Value As Double
    parameters: []
    return:
      type: System.Double
  overload: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CategoryName
  commentId: P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CategoryName
  id: CategoryName
  parent: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  langs:
  - csharp
  - vb
  name: CategoryName
  nameWithType: PerformanceCounterTelemetry.CategoryName
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CategoryName
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: CategoryName
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 104
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the category name.\n"
  example: []
  syntax:
    content: public string CategoryName { get; set; }
    content.vb: Public Property CategoryName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CategoryName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CounterName
  commentId: P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CounterName
  id: CounterName
  parent: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  langs:
  - csharp
  - vb
  name: CounterName
  nameWithType: PerformanceCounterTelemetry.CounterName
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CounterName
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: CounterName
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 121
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the counter name.\n"
  example: []
  syntax:
    content: public string CounterName { get; set; }
    content.vb: Public Property CounterName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CounterName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.InstanceName
  commentId: P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.InstanceName
  id: InstanceName
  parent: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  langs:
  - csharp
  - vb
  name: InstanceName
  nameWithType: PerformanceCounterTelemetry.InstanceName
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.InstanceName
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: InstanceName
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 138
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the instance name.\n"
  example: []
  syntax:
    content: public string InstanceName { get; set; }
    content.vb: Public Property InstanceName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.InstanceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Properties
  commentId: P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Properties
  id: Properties
  parent: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: PerformanceCounterTelemetry.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Properties
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Properties
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 160
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets a dictionary of application-defined property names and values providing additional information about this exception.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Properties { get; }
    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Properties*
  implements:
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  commentId: M:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  id: Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isEii: true
  parent: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  langs:
  - csharp
  - vb
  name: ITelemetry.Sanitize()
  nameWithType: PerformanceCounterTelemetry.ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/PerformanceCounterTelemetry.cs
    startLine: 168
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nSanitizes the properties based on constraints.\n"
  example: []
  syntax:
    content: void ITelemetry.Sanitize()
    content.vb: Sub Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize Implements ITelemetry.Sanitize
  overload: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  nameWithType.vb: PerformanceCounterTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
references:
- uid: Microsoft.ApplicationInsights.DataContracts
  commentId: N:Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  nameWithType: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  commentId: T:Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  nameWithType: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  commentId: T:Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: ISupportProperties
  nameWithType: ISupportProperties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.Channel
  commentId: N:Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  nameWithType: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  commentId: T:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
  isExternal: false
  name: PerformanceCounterTelemetry
  nameWithType: PerformanceCounterTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor
  isExternal: false
  name: PerformanceCounterTelemetry
  nameWithType: PerformanceCounterTelemetry.PerformanceCounterTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.PerformanceCounterTelemetry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Timestamp*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Timestamp
  isExternal: false
  name: Timestamp
  nameWithType: PerformanceCounterTelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Timestamp
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Timestamp
  nameWithType: ITelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Sequence*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Sequence
  isExternal: false
  name: Sequence
  nameWithType: PerformanceCounterTelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Sequence
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sequence
  nameWithType: ITelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Context*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Context
  isExternal: false
  name: Context
  nameWithType: PerformanceCounterTelemetry.Context
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Context
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Context
  nameWithType: ITelemetry.Context
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  commentId: T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Value*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Value
  isExternal: false
  name: Value
  nameWithType: PerformanceCounterTelemetry.Value
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Value
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CategoryName*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CategoryName
  isExternal: false
  name: CategoryName
  nameWithType: PerformanceCounterTelemetry.CategoryName
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CategoryName
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CounterName*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CounterName
  isExternal: false
  name: CounterName
  nameWithType: PerformanceCounterTelemetry.CounterName
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CounterName
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.InstanceName*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.InstanceName
  isExternal: false
  name: InstanceName
  nameWithType: PerformanceCounterTelemetry.InstanceName
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.InstanceName
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Properties*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Properties
  isExternal: false
  name: Properties
  nameWithType: PerformanceCounterTelemetry.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Properties
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  parent: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  isExternal: false
  name: Properties
  nameWithType: ISupportProperties.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isExternal: false
  name: ITelemetry.Sanitize
  nameWithType: PerformanceCounterTelemetry.ITelemetry.Sanitize
  fullName: Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  nameWithType.vb: PerformanceCounterTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  commentId: M:Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sanitize()
  nameWithType: ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    nameWithType: ITelemetry.Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    nameWithType: ITelemetry.Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
