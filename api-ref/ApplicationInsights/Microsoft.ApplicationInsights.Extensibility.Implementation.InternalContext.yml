### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext
  id: InternalContext
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  children:
  - Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.AgentVersion
  - Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.NodeName
  - Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.SdkVersion
  langs:
  - csharp
  - vb
  name: InternalContext
  nameWithType: InternalContext
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/InternalContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: InternalContext
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/InternalContext.cs
    startLine: 12
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nEncapsulates Internal information.\n"
  example: []
  syntax:
    content: public sealed class InternalContext
    content.vb: Public NotInheritable Class InternalContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.SdkVersion
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.SdkVersion
  id: SdkVersion
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext
  langs:
  - csharp
  - vb
  name: SdkVersion
  nameWithType: InternalContext.SdkVersion
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.SdkVersion
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/InternalContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: SdkVersion
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/InternalContext.cs
    startLine: 24
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets application insights SDK version.\n"
  example: []
  syntax:
    content: public string SdkVersion { get; set; }
    content.vb: Public Property SdkVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.SdkVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.AgentVersion
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.AgentVersion
  id: AgentVersion
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext
  langs:
  - csharp
  - vb
  name: AgentVersion
  nameWithType: InternalContext.AgentVersion
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.AgentVersion
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/InternalContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: AgentVersion
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/InternalContext.cs
    startLine: 33
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets application insights agent version.\n"
  example: []
  syntax:
    content: public string AgentVersion { get; set; }
    content.vb: Public Property AgentVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.AgentVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.NodeName
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.NodeName
  id: NodeName
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext
  langs:
  - csharp
  - vb
  name: NodeName
  nameWithType: InternalContext.NodeName
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.NodeName
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/InternalContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: NodeName
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/InternalContext.cs
    startLine: 42
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets node name for the billing purposes. Use this filed to override the standard way node names got detected.\n"
  example: []
  syntax:
    content: public string NodeName { get; set; }
    content.vb: Public Property NodeName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.NodeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation
  commentId: N:Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility.Implementation
  nameWithType: Microsoft.ApplicationInsights.Extensibility.Implementation
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.SdkVersion*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.SdkVersion
  isExternal: false
  name: SdkVersion
  nameWithType: InternalContext.SdkVersion
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.SdkVersion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.AgentVersion*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.AgentVersion
  isExternal: false
  name: AgentVersion
  nameWithType: InternalContext.AgentVersion
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.AgentVersion
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.NodeName*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.NodeName
  isExternal: false
  name: NodeName
  nameWithType: InternalContext.NodeName
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.NodeName
