### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  id: OperationTelemetry
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  children:
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp
  langs:
  - csharp
  - vb
  name: OperationTelemetry
  nameWithType: OperationTelemetry
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: OperationTelemetry
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 10
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nBase class for telemetry types representing duration in time.\n"
  example: []
  syntax:
    content: 'public abstract class OperationTelemetry : ITelemetry, ISupportProperties'
    content.vb: >-
      Public MustInherit Class OperationTelemetry
          Implements ITelemetry, ISupportProperties
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry
  - Microsoft.ApplicationInsights.DataContracts.RequestTelemetry
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime
  id: StartTime
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: OperationTelemetry.StartTime
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: StartTime
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 15
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the start time of the operation.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Timestamp")]

      public DateTimeOffset StartTime { get; set; }
    content.vb: >-
      <Obsolete("Use Timestamp")>

      Public Property StartTime As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Timestamp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id
  id: Id
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: OperationTelemetry.Id
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Id
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 32
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets Operation ID.\n"
  example: []
  syntax:
    content: public abstract string Id { get; set; }
    content.vb: Public MustOverride Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name
  id: Name
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: OperationTelemetry.Name
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Name
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 37
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the name of the operation.\n"
  example: []
  syntax:
    content: public abstract string Name { get; set; }
    content.vb: Public MustOverride Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success
  id: Success
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: OperationTelemetry.Success
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Success
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 42
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets whether operation has finished successfully.\n"
  example: []
  syntax:
    content: public abstract bool ? Success { get; set; }
    content.vb: Public MustOverride Property Success As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration
  id: Duration
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: OperationTelemetry.Duration
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Duration
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 47
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the duration of the operation.\n"
  example: []
  syntax:
    content: public abstract TimeSpan Duration { get; set; }
    content.vb: Public MustOverride Property Duration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties
  id: Properties
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: OperationTelemetry.Properties
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Properties
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 52
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets the custom properties collection.\n"
  example: []
  syntax:
    content: public abstract IDictionary<string, string> Properties { get; }
    content.vb: Public MustOverride ReadOnly Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties*
  implements:
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp
  id: Timestamp
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: OperationTelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Timestamp
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 57
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the timestamp for the operation.\n"
  example: []
  syntax:
    content: public abstract DateTimeOffset Timestamp { get; set; }
    content.vb: Public MustOverride Property Timestamp As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context
  id: Context
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: OperationTelemetry.Context
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Context
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 62
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets the object that contains contextual information about the application at the time when it handled the request.\n"
  example: []
  syntax:
    content: public abstract TelemetryContext Context { get; }
    content.vb: Public MustOverride ReadOnly Property Context As TelemetryContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence
  id: Sequence
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Sequence
  nameWithType: OperationTelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Sequence
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 67
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the value that defines absolute order of the telemetry item.\n"
  example: []
  syntax:
    content: public abstract string Sequence { get; set; }
    content.vb: Public MustOverride Property Sequence As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  id: Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isEii: true
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: ITelemetry.Sanitize()
  nameWithType: OperationTelemetry.ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 78
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nSanitizes the properties based on constraints.\n"
  example: []
  syntax:
    content: void ITelemetry.Sanitize()
    content.vb: Sub Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize Implements ITelemetry.Sanitize
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  nameWithType.vb: OperationTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize
  id: Sanitize
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Sanitize()
  nameWithType: OperationTelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Sanitize
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 86
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nAllow to call OperationTelemetry.Sanitize method from child classes.\n"
  example: []
  syntax:
    content: protected void Sanitize()
    content.vb: Protected Sub Sanitize
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation
  commentId: N:Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility.Implementation
  nameWithType: Microsoft.ApplicationInsights.Extensibility.Implementation
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  commentId: T:Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  nameWithType: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  commentId: T:Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: ISupportProperties
  nameWithType: ISupportProperties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.Channel
  commentId: N:Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  nameWithType: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: Microsoft.ApplicationInsights.DataContracts
  commentId: N:Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  nameWithType: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime
  isExternal: false
  name: StartTime
  nameWithType: OperationTelemetry.StartTime
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id
  isExternal: false
  name: Id
  nameWithType: OperationTelemetry.Id
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name
  isExternal: false
  name: Name
  nameWithType: OperationTelemetry.Name
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success
  isExternal: false
  name: Success
  nameWithType: OperationTelemetry.Success
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration
  isExternal: false
  name: Duration
  nameWithType: OperationTelemetry.Duration
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties
  isExternal: false
  name: Properties
  nameWithType: OperationTelemetry.Properties
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  parent: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  isExternal: false
  name: Properties
  nameWithType: ISupportProperties.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp
  isExternal: false
  name: Timestamp
  nameWithType: OperationTelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Timestamp
  nameWithType: ITelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context
  isExternal: false
  name: Context
  nameWithType: OperationTelemetry.Context
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Context
  nameWithType: ITelemetry.Context
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  commentId: T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence
  isExternal: false
  name: Sequence
  nameWithType: OperationTelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sequence
  nameWithType: ITelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isExternal: false
  name: ITelemetry.Sanitize
  nameWithType: OperationTelemetry.ITelemetry.Sanitize
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  nameWithType.vb: OperationTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  commentId: M:Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sanitize()
  nameWithType: ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    nameWithType: ITelemetry.Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    nameWithType: ITelemetry.Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize
  isExternal: false
  name: Sanitize
  nameWithType: OperationTelemetry.Sanitize
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize
