### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  id: TelemetryProcessorChainBuilder
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  children:
  - Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  - Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build
  - Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use(System.Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor})
  langs:
  - csharp
  - vb
  name: TelemetryProcessorChainBuilder
  nameWithType: TelemetryProcessorChainBuilder
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TelemetryProcessorChainBuilder
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
    startLine: 9
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nRepresents an object used to Build a TelemetryProcessorChain.\n"
  example: []
  syntax:
    content: public sealed class TelemetryProcessorChainBuilder
    content.vb: Public NotInheritable Class TelemetryProcessorChainBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  id: '#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)'
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  langs:
  - csharp
  - vb
  name: TelemetryProcessorChainBuilder(TelemetryConfiguration)
  nameWithType: TelemetryProcessorChainBuilder.TelemetryProcessorChainBuilder(TelemetryConfiguration)
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.TelemetryProcessorChainBuilder(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
    startLine: 18
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TelemetryProcessorChainBuilder(TelemetryConfiguration configuration)
    content.vb: Public Sub New(configuration As TelemetryConfiguration)
    parameters:
    - id: configuration
      type: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
      description: 'The <xref href="Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration" data-throw-if-not-resolved="false"></xref> instance to which the constructed processing chain should be set to. '
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use(System.Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor})
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use(System.Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor})
  id: Use(System.Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor})
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  langs:
  - csharp
  - vb
  name: Use(Func<ITelemetryProcessor, ITelemetryProcessor>)
  nameWithType: TelemetryProcessorChainBuilder.Use(Func<ITelemetryProcessor, ITelemetryProcessor>)
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use(System.Func<Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor, Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor>)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Use
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
    startLine: 35
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nUses given factory to add TelemetryProcessor to the chain of processors. The processors\nin the chain will be invoked in the same order in which they are added.\n"
  example: []
  syntax:
    content: public TelemetryProcessorChainBuilder Use(Func<ITelemetryProcessor, ITelemetryProcessor> telemetryProcessorFactory)
    content.vb: Public Function Use(telemetryProcessorFactory As Func(Of ITelemetryProcessor, ITelemetryProcessor)) As TelemetryProcessorChainBuilder
    parameters:
    - id: telemetryProcessorFactory
      type: System.Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor}
      description: >-
        A delegate that returns a <xref href="Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor" data-throw-if-not-resolved="false"></xref>

        , given the next <xref href="Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor" data-throw-if-not-resolved="false"></xref> in the call chain.
    return:
      type: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use*
  nameWithType.vb: TelemetryProcessorChainBuilder.Use(Func(Of ITelemetryProcessor, ITelemetryProcessor))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use(System.Func(Of Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor, Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor))
  name.vb: Use(Func(Of ITelemetryProcessor, ITelemetryProcessor))
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build
  id: Build
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: TelemetryProcessorChainBuilder.Build()
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Build
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
    startLine: 46
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nBuilds the chain of linked <xref href=\"Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor\" data-throw-if-not-resolved=\"false\"></xref> instances and sets the same in configuration object passed.\nA special telemetry processor for handling Transmission is always appended as the last\nprocessor in the chain.\n"
  example: []
  syntax:
    content: public void Build()
    content.vb: Public Sub Build
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation
  commentId: N:Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility.Implementation
  nameWithType: Microsoft.ApplicationInsights.Extensibility.Implementation
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: TelemetryProcessorChainBuilder
  nameWithType: TelemetryProcessorChainBuilder
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  commentId: T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  parent: Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: TelemetryConfiguration
  nameWithType: TelemetryConfiguration
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.#ctor*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.#ctor
  isExternal: false
  name: TelemetryProcessorChainBuilder
  nameWithType: TelemetryProcessorChainBuilder.TelemetryProcessorChainBuilder
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.TelemetryProcessorChainBuilder
- uid: Microsoft.ApplicationInsights.Extensibility
  commentId: N:Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility
  nameWithType: Microsoft.ApplicationInsights.Extensibility
  fullName: Microsoft.ApplicationInsights.Extensibility
- uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  commentId: T:Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  isExternal: false
  name: ITelemetryProcessor
  nameWithType: ITelemetryProcessor
  fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use
  isExternal: false
  name: Use
  nameWithType: TelemetryProcessorChainBuilder.Use
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use
- uid: System.Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor}
  commentId: T:System.Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor}
  parent: System
  definition: System.Func`2
  name: Func<ITelemetryProcessor, ITelemetryProcessor>
  nameWithType: Func<ITelemetryProcessor, ITelemetryProcessor>
  fullName: System.Func<Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor, Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor>
  nameWithType.vb: Func(Of ITelemetryProcessor, ITelemetryProcessor)
  fullname.vb: System.Func(Of Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor, Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor)
  name.vb: Func(Of ITelemetryProcessor, ITelemetryProcessor)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
    name: ITelemetryProcessor
    nameWithType: ITelemetryProcessor
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
    name: ITelemetryProcessor
    nameWithType: ITelemetryProcessor
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
    name: ITelemetryProcessor
    nameWithType: ITelemetryProcessor
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
    name: ITelemetryProcessor
    nameWithType: ITelemetryProcessor
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build
  isExternal: false
  name: Build
  nameWithType: TelemetryProcessorChainBuilder.Build
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build
