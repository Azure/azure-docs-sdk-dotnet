### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  commentId: T:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  id: SessionStateTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  children:
  - Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor
  - Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.SessionState)
  - Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Context
  - Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  - Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Sequence
  - Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.State
  - Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Timestamp
  langs:
  - csharp
  - vb
  name: SessionStateTelemetry
  nameWithType: SessionStateTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: SessionStateTelemetry
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
    startLine: 8
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nTelemetry type used to track user sessions.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Session state events are no longer used. This telemetry item will be sent as EventTelemetry.")]

      public sealed class SessionStateTelemetry : ITelemetry
    content.vb: >-
      <Obsolete("Session state events are no longer used. This telemetry item will be sent as EventTelemetry.")>

      Public NotInheritable Class SessionStateTelemetry
          Implements ITelemetry
  inheritance:
  - System.Object
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Session state events are no longer used. This telemetry item will be sent as EventTelemetry.
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor
  commentId: M:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor
  id: '#ctor'
  parent: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  langs:
  - csharp
  - vb
  name: SessionStateTelemetry()
  nameWithType: SessionStateTelemetry.SessionStateTelemetry()
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.SessionStateTelemetry()
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
    startLine: 19
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public SessionStateTelemetry()
    content.vb: Public Sub New
  overload: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.SessionState)
  commentId: M:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.SessionState)
  id: '#ctor(Microsoft.ApplicationInsights.DataContracts.SessionState)'
  parent: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  langs:
  - csharp
  - vb
  name: SessionStateTelemetry(SessionState)
  nameWithType: SessionStateTelemetry.SessionStateTelemetry(SessionState)
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.SessionStateTelemetry(Microsoft.ApplicationInsights.DataContracts.SessionState)
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
    startLine: 30
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <span class=\"paramref\">state</span>.\n"
  example: []
  syntax:
    content: public SessionStateTelemetry(SessionState state)
    content.vb: Public Sub New(state As SessionState)
    parameters:
    - id: state
      type: Microsoft.ApplicationInsights.DataContracts.SessionState
      description: "\nA <xref href=\"Microsoft.ApplicationInsights.DataContracts.SessionState\" data-throw-if-not-resolved=\"false\"></xref> value indicating state of the user session.\n"
  overload: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Timestamp
  id: Timestamp
  parent: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: SessionStateTelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Timestamp
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Timestamp
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
    startLine: 39
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the date and time the session state was recorded.\n"
  example: []
  syntax:
    content: public DateTimeOffset Timestamp { get; set; }
    content.vb: Public Property Timestamp As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  overload: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Timestamp*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Context
  id: Context
  parent: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: SessionStateTelemetry.Context
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Context
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Context
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
    startLine: 55
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext\" data-throw-if-not-resolved=\"false\"></xref> of the application when the session state was recorded.\n"
  example: []
  syntax:
    content: public TelemetryContext Context { get; }
    content.vb: Public ReadOnly Property Context As TelemetryContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  overload: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Context*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Sequence
  id: Sequence
  parent: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  langs:
  - csharp
  - vb
  name: Sequence
  nameWithType: SessionStateTelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Sequence
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Sequence
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
    startLine: 63
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the value that defines absolute order of the telemetry item.\n"
  example: []
  syntax:
    content: public string Sequence { get; set; }
    content.vb: Public Property Sequence As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Sequence*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.State
  commentId: P:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.State
  id: State
  parent: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  langs:
  - csharp
  - vb
  name: State
  nameWithType: SessionStateTelemetry.State
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.State
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: State
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
    startLine: 79
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the value describing state of the user session.\n"
  example: []
  syntax:
    content: public SessionState State { get; set; }
    content.vb: Public Property State As SessionState
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.DataContracts.SessionState
  overload: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  commentId: M:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  id: Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isEii: true
  parent: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  langs:
  - csharp
  - vb
  name: ITelemetry.Sanitize()
  nameWithType: SessionStateTelemetry.ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/SessionStateTelemetry.cs
    startLine: 109
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nSanitizes this telemetry instance to ensure it can be accepted by the Application Insights.\n"
  example: []
  syntax:
    content: void ITelemetry.Sanitize()
    content.vb: Sub Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize Implements ITelemetry.Sanitize
  overload: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  nameWithType.vb: SessionStateTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
references:
- uid: Microsoft.ApplicationInsights.DataContracts
  commentId: N:Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  nameWithType: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  commentId: T:Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  nameWithType: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.Channel
  commentId: N:Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  nameWithType: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  commentId: T:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
  isExternal: false
  name: SessionStateTelemetry
  nameWithType: SessionStateTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor
  isExternal: false
  name: SessionStateTelemetry
  nameWithType: SessionStateTelemetry.SessionStateTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.SessionStateTelemetry
- uid: Microsoft.ApplicationInsights.DataContracts.SessionState
  commentId: T:Microsoft.ApplicationInsights.DataContracts.SessionState
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: SessionState
  nameWithType: SessionState
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionState
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Timestamp*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Timestamp
  isExternal: false
  name: Timestamp
  nameWithType: SessionStateTelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Timestamp
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Timestamp
  nameWithType: ITelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  commentId: T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Context*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Context
  isExternal: false
  name: Context
  nameWithType: SessionStateTelemetry.Context
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Context
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Context
  nameWithType: ITelemetry.Context
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Sequence*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Sequence
  isExternal: false
  name: Sequence
  nameWithType: SessionStateTelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Sequence
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sequence
  nameWithType: ITelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.State*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.State
  isExternal: false
  name: State
  nameWithType: SessionStateTelemetry.State
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.State
- uid: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isExternal: false
  name: ITelemetry.Sanitize
  nameWithType: SessionStateTelemetry.ITelemetry.Sanitize
  fullName: Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  nameWithType.vb: SessionStateTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  commentId: M:Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sanitize()
  nameWithType: ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    nameWithType: ITelemetry.Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    nameWithType: ITelemetry.Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
