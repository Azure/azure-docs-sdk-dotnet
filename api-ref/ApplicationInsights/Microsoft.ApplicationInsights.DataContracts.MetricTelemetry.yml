### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  commentId: T:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  id: MetricTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  children:
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor(System.String,System.Double)
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor(System.String,System.Int32,System.Double,System.Double,System.Double,System.Double)
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Context
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Count
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Max
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Min
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Name
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Properties
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sequence
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.StandardDeviation
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sum
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Timestamp
  - Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Value
  langs:
  - csharp
  - vb
  name: MetricTelemetry
  nameWithType: MetricTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: MetricTelemetry
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 12
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nTelemetry type used to track metrics.\n"
  example: []
  syntax:
    content: 'public sealed class MetricTelemetry : ITelemetry, ISupportProperties'
    content.vb: >-
      Public NotInheritable Class MetricTelemetry
          Implements ITelemetry, ISupportProperties
  inheritance:
  - System.Object
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor
  commentId: M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor
  id: '#ctor'
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: MetricTelemetry()
  nameWithType: MetricTelemetry.MetricTelemetry()
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.MetricTelemetry()
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 25
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.MetricTelemetry\" data-throw-if-not-resolved=\"false\"></xref> class with empty \nproperties.\n"
  example: []
  syntax:
    content: public MetricTelemetry()
    content.vb: Public Sub New
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor(System.String,System.Double)
  commentId: M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: MetricTelemetry(String, Double)
  nameWithType: MetricTelemetry.MetricTelemetry(String, Double)
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.MetricTelemetry(System.String, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 42
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.MetricTelemetry\" data-throw-if-not-resolved=\"false\"></xref> class with the \nspecified <span class=\"paramref\">metricName</span> and <span class=\"paramref\">metricValue</span>.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This constructor is obsolete. Use different constructor of this class to represent aggregated metric data or use EventTelemetry type to represent individual events.")]

      public MetricTelemetry(string metricName, double metricValue)
    content.vb: >-
      <Obsolete("This constructor is obsolete. Use different constructor of this class to represent aggregated metric data or use EventTelemetry type to represent individual events.")>

      Public Sub New(metricName As String, metricValue As Double)
    parameters:
    - id: metricName
      type: System.String
    - id: metricValue
      type: System.Double
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <span class="paramref">metricName</span> is null or empty string.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This constructor is obsolete. Use different constructor of this class to represent aggregated metric data or use EventTelemetry type to represent individual events.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor(System.String,System.Int32,System.Double,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor(System.String,System.Int32,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.String,System.Int32,System.Double,System.Double,System.Double,System.Double)'
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: MetricTelemetry(String, Int32, Double, Double, Double, Double)
  nameWithType: MetricTelemetry.MetricTelemetry(String, Int32, Double, Double, Double, Double)
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.MetricTelemetry(System.String, System.Int32, System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 61
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.MetricTelemetry\" data-throw-if-not-resolved=\"false\"></xref> class with properties provided.\n"
  remarks: "\nMetric statistics provided are assumed to be calculated over a period of time equaling 1 minute.\n"
  example: []
  syntax:
    content: public MetricTelemetry(string name, int count, double sum, double min, double max, double standardDeviation)
    content.vb: Public Sub New(name As String, count As Integer, sum As Double, min As Double, max As Double, standardDeviation As Double)
    parameters:
    - id: name
      type: System.String
      description: Metric name.
    - id: count
      type: System.Int32
      description: Count of values taken during aggregation interval.
    - id: sum
      type: System.Double
      description: Sum of values taken during aggregation interval.
    - id: min
      type: System.Double
      description: Minimum value taken during aggregation interval.
    - id: max
      type: System.Double
      description: Maximum of values taken during aggregation interval.
    - id: standardDeviation
      type: System.Double
      description: Standard deviation of values taken during aggregation interval.
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Timestamp
  id: Timestamp
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: MetricTelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Timestamp
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Timestamp
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 81
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets date and time when event was recorded.\n"
  example: []
  syntax:
    content: public DateTimeOffset Timestamp { get; set; }
    content.vb: Public Property Timestamp As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Timestamp*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sequence
  id: Sequence
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: Sequence
  nameWithType: MetricTelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sequence
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Sequence
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 86
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the value that defines absolute order of the telemetry item.\n"
  example: []
  syntax:
    content: public string Sequence { get; set; }
    content.vb: Public Property Sequence As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sequence*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Context
  id: Context
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: MetricTelemetry.Context
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Context
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Context
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 91
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the context associated with the current telemetry item.\n"
  example: []
  syntax:
    content: public TelemetryContext Context { get; }
    content.vb: Public ReadOnly Property Context As TelemetryContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Context*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Name
  commentId: P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Name
  id: Name
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MetricTelemetry.Name
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Name
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Name
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 96
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the name of the metric.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Value
  commentId: P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Value
  id: Value
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: MetricTelemetry.Value
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Value
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Value
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 105
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the value of this metric.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This property is obsolete. Use Sum property instead.")]

      public double Value { get; set; }
    content.vb: >-
      <Obsolete("This property is obsolete. Use Sum property instead.")>

      Public Property Value As Double
    parameters: []
    return:
      type: System.Double
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Value*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This property is obsolete. Use Sum property instead.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sum
  commentId: P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sum
  id: Sum
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: Sum
  nameWithType: MetricTelemetry.Sum
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sum
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Sum
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 115
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets sum of the values of the metric samples.\n"
  example: []
  syntax:
    content: public double Sum { get; set; }
    content.vb: Public Property Sum As Double
    parameters: []
    return:
      type: System.Double
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sum*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Count
  commentId: P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Count
  id: Count
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: MetricTelemetry.Count
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Count
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Count
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 124
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the number of samples for this metric.\n"
  example: []
  syntax:
    content: public int ? Count { get; set; }
    content.vb: Public Property Count As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Count*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Min
  commentId: P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Min
  id: Min
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: Min
  nameWithType: MetricTelemetry.Min
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Min
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Min
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 133
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the min value of this metric.\n"
  example: []
  syntax:
    content: public double ? Min { get; set; }
    content.vb: Public Property Min As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Min*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Max
  commentId: P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Max
  id: Max
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: MetricTelemetry.Max
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Max
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Max
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 142
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the max value of this metric.\n"
  example: []
  syntax:
    content: public double ? Max { get; set; }
    content.vb: Public Property Max As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Max*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.StandardDeviation
  commentId: P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.StandardDeviation
  id: StandardDeviation
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: StandardDeviation
  nameWithType: MetricTelemetry.StandardDeviation
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.StandardDeviation
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: StandardDeviation
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 151
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the standard deviation of this metric.\n"
  example: []
  syntax:
    content: public double ? StandardDeviation { get; set; }
    content.vb: Public Property StandardDeviation As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.StandardDeviation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Properties
  commentId: P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Properties
  id: Properties
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: MetricTelemetry.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Properties
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Properties
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 160
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets a dictionary of application-defined property names and values providing additional information about this metric.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Properties { get; }
    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Properties*
  implements:
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  commentId: M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  id: Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isEii: true
  parent: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  langs:
  - csharp
  - vb
  name: ITelemetry.Sanitize()
  nameWithType: MetricTelemetry.ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/MetricTelemetry.cs
    startLine: 168
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nSanitizes the properties based on constraints.\n"
  example: []
  syntax:
    content: void ITelemetry.Sanitize()
    content.vb: Sub Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize Implements ITelemetry.Sanitize
  overload: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  nameWithType.vb: MetricTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
references:
- uid: Microsoft.ApplicationInsights.DataContracts
  commentId: N:Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  nameWithType: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  commentId: T:Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  nameWithType: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  commentId: T:Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: ISupportProperties
  nameWithType: ISupportProperties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.Channel
  commentId: N:Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  nameWithType: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  commentId: T:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: MetricTelemetry
  nameWithType: MetricTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor
  isExternal: false
  name: MetricTelemetry
  nameWithType: MetricTelemetry.MetricTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.MetricTelemetry
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Timestamp*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Timestamp
  isExternal: false
  name: Timestamp
  nameWithType: MetricTelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Timestamp
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Timestamp
  nameWithType: ITelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sequence*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sequence
  isExternal: false
  name: Sequence
  nameWithType: MetricTelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sequence
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sequence
  nameWithType: ITelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Context*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Context
  isExternal: false
  name: Context
  nameWithType: MetricTelemetry.Context
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Context
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Context
  nameWithType: ITelemetry.Context
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  commentId: T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Name*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Name
  isExternal: false
  name: Name
  nameWithType: MetricTelemetry.Name
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Name
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Value*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Value
  isExternal: false
  name: Value
  nameWithType: MetricTelemetry.Value
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Value
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sum*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sum
  isExternal: false
  name: Sum
  nameWithType: MetricTelemetry.Sum
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sum
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Count*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Count
  isExternal: false
  name: Count
  nameWithType: MetricTelemetry.Count
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Count
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Min*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Min
  isExternal: false
  name: Min
  nameWithType: MetricTelemetry.Min
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Min
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Max*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Max
  isExternal: false
  name: Max
  nameWithType: MetricTelemetry.Max
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Max
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.StandardDeviation*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.StandardDeviation
  isExternal: false
  name: StandardDeviation
  nameWithType: MetricTelemetry.StandardDeviation
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.StandardDeviation
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Properties*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Properties
  isExternal: false
  name: Properties
  nameWithType: MetricTelemetry.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Properties
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  parent: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  isExternal: false
  name: Properties
  nameWithType: ISupportProperties.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isExternal: false
  name: ITelemetry.Sanitize
  nameWithType: MetricTelemetry.ITelemetry.Sanitize
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  nameWithType.vb: MetricTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  commentId: M:Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sanitize()
  nameWithType: ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    nameWithType: ITelemetry.Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    nameWithType: ITelemetry.Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
