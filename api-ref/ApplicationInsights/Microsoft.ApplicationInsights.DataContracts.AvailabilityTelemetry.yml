### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  commentId: T:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  id: AvailabilityTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  children:
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor(System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.String)
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Context
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Duration
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Id
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Message
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Metrics
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Name
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Properties
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.RunLocation
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Sequence
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Success
  - Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Timestamp
  langs:
  - csharp
  - vb
  name: AvailabilityTelemetry
  nameWithType: AvailabilityTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: AvailabilityTelemetry
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 13
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nTelemetry type used for availability test results.\nContains a time and message and optionally some additional metadata.\n"
  example: []
  syntax:
    content: 'public sealed class AvailabilityTelemetry : ITelemetry, ISupportProperties'
    content.vb: >-
      Public NotInheritable Class AvailabilityTelemetry
          Implements ITelemetry, ISupportProperties
  inheritance:
  - System.Object
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor
  commentId: M:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor
  id: '#ctor'
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: AvailabilityTelemetry()
  nameWithType: AvailabilityTelemetry.AvailabilityTelemetry()
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.AvailabilityTelemetry()
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 24
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry\" data-throw-if-not-resolved=\"false\"></xref> class with empty properties.\n"
  example: []
  syntax:
    content: public AvailabilityTelemetry()
    content.vb: Public Sub New
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor(System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.String)
  commentId: M:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor(System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.String)
  id: '#ctor(System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.String)'
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: AvailabilityTelemetry(String, DateTimeOffset, TimeSpan, String, Boolean, String)
  nameWithType: AvailabilityTelemetry.AvailabilityTelemetry(String, DateTimeOffset, TimeSpan, String, Boolean, String)
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.AvailabilityTelemetry(System.String, System.DateTimeOffset, System.TimeSpan, System.String, System.Boolean, System.String)
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 35
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry\" data-throw-if-not-resolved=\"false\"></xref> class with empty properties.\n"
  example: []
  syntax:
    content: public AvailabilityTelemetry(string name, DateTimeOffset timeStamp, TimeSpan duration, string runLocation, bool success, string message = null)
    content.vb: Public Sub New(name As String, timeStamp As DateTimeOffset, duration As TimeSpan, runLocation As String, success As Boolean, message As String = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: timeStamp
      type: System.DateTimeOffset
    - id: duration
      type: System.TimeSpan
    - id: runLocation
      type: System.String
    - id: success
      type: System.Boolean
    - id: message
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Id
  commentId: P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Id
  id: Id
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: AvailabilityTelemetry.Id
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Id
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Id
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 48
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the test run id.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Name
  commentId: P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Name
  id: Name
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AvailabilityTelemetry.Name
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Name
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Name
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 57
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the test name.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Duration
  commentId: P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Duration
  id: Duration
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: AvailabilityTelemetry.Duration
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Duration
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Duration
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 66
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets availability test duration.\n"
  example: []
  syntax:
    content: public TimeSpan Duration { get; set; }
    content.vb: Public Property Duration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Duration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Success
  commentId: P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Success
  id: Success
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: AvailabilityTelemetry.Success
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Success
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Success
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 82
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets a value indicating whether the availability test was successful or not.\n"
  example: []
  syntax:
    content: public bool Success { get; set; }
    content.vb: Public Property Success As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Success*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.RunLocation
  commentId: P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.RunLocation
  id: RunLocation
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: RunLocation
  nameWithType: AvailabilityTelemetry.RunLocation
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.RunLocation
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: RunLocation
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 91
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets location where availability test was run.\n"
  example: []
  syntax:
    content: public string RunLocation { get; set; }
    content.vb: Public Property RunLocation As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.RunLocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Message
  commentId: P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Message
  id: Message
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: AvailabilityTelemetry.Message
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Message
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Message
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 100
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the error message.\n"
  example: []
  syntax:
    content: public string Message { get; set; }
    content.vb: Public Property Message As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Sequence
  id: Sequence
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: Sequence
  nameWithType: AvailabilityTelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Sequence
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Sequence
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 109
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the value that defines absolute order of the telemetry item.\n"
  example: []
  syntax:
    content: public string Sequence { get; set; }
    content.vb: Public Property Sequence As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Sequence*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Context
  id: Context
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: AvailabilityTelemetry.Context
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Context
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Context
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 114
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the context associated with the current telemetry item.\n"
  example: []
  syntax:
    content: public TelemetryContext Context { get; }
    content.vb: Public ReadOnly Property Context As TelemetryContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Context*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Properties
  commentId: P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Properties
  id: Properties
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: AvailabilityTelemetry.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Properties
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Properties
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 122
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets a dictionary of application-defined property names and values providing additional information about this availability test run.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Properties { get; }
    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Properties*
  implements:
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Metrics
  commentId: P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Metrics
  id: Metrics
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: Metrics
  nameWithType: AvailabilityTelemetry.Metrics
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Metrics
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Metrics
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 130
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets a dictionary of application-defined event metrics.\n"
  example: []
  syntax:
    content: public IDictionary<string, double> Metrics { get; }
    content.vb: Public ReadOnly Property Metrics As IDictionary(Of String, Double)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Double}
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Metrics*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Timestamp
  id: Timestamp
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: AvailabilityTelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Timestamp
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Timestamp
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 138
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets date and time when telemetry was recorded.\n"
  example: []
  syntax:
    content: public DateTimeOffset Timestamp { get; set; }
    content.vb: Public Property Timestamp As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Timestamp*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  commentId: M:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  id: Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isEii: true
  parent: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  langs:
  - csharp
  - vb
  name: ITelemetry.Sanitize()
  nameWithType: AvailabilityTelemetry.ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/AvailabilityTelemetry.cs
    startLine: 146
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nSanitizes the properties based on constraints.\n"
  example: []
  syntax:
    content: void ITelemetry.Sanitize()
    content.vb: Sub Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize Implements ITelemetry.Sanitize
  overload: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize*
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  nameWithType.vb: AvailabilityTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
references:
- uid: Microsoft.ApplicationInsights.DataContracts
  commentId: N:Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  nameWithType: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  commentId: T:Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  nameWithType: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  commentId: T:Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: ISupportProperties
  nameWithType: ISupportProperties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.Channel
  commentId: N:Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  nameWithType: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  commentId: T:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: AvailabilityTelemetry
  nameWithType: AvailabilityTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor
  isExternal: false
  name: AvailabilityTelemetry
  nameWithType: AvailabilityTelemetry.AvailabilityTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.AvailabilityTelemetry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Id*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Id
  isExternal: false
  name: Id
  nameWithType: AvailabilityTelemetry.Id
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Id
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Name*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Name
  isExternal: false
  name: Name
  nameWithType: AvailabilityTelemetry.Name
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Name
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Duration*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Duration
  isExternal: false
  name: Duration
  nameWithType: AvailabilityTelemetry.Duration
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Duration
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Success*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Success
  isExternal: false
  name: Success
  nameWithType: AvailabilityTelemetry.Success
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Success
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.RunLocation*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.RunLocation
  isExternal: false
  name: RunLocation
  nameWithType: AvailabilityTelemetry.RunLocation
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.RunLocation
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Message*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Message
  isExternal: false
  name: Message
  nameWithType: AvailabilityTelemetry.Message
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Message
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Sequence*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Sequence
  isExternal: false
  name: Sequence
  nameWithType: AvailabilityTelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Sequence
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sequence
  nameWithType: ITelemetry.Sequence
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Context*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Context
  isExternal: false
  name: Context
  nameWithType: AvailabilityTelemetry.Context
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Context
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Context
  nameWithType: ITelemetry.Context
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  commentId: T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Properties*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Properties
  isExternal: false
  name: Properties
  nameWithType: AvailabilityTelemetry.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Properties
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  parent: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  isExternal: false
  name: Properties
  nameWithType: ISupportProperties.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Metrics*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Metrics
  isExternal: false
  name: Metrics
  nameWithType: AvailabilityTelemetry.Metrics
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Metrics
- uid: System.Collections.Generic.IDictionary{System.String,System.Double}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Double>
  nameWithType: IDictionary<String, Double>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Double>
  nameWithType.vb: IDictionary(Of String, Double)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Double)
  name.vb: IDictionary(Of String, Double)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Timestamp*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Timestamp
  isExternal: false
  name: Timestamp
  nameWithType: AvailabilityTelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Timestamp
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Timestamp
  nameWithType: ITelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isExternal: false
  name: ITelemetry.Sanitize
  nameWithType: AvailabilityTelemetry.ITelemetry.Sanitize
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  nameWithType.vb: AvailabilityTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  commentId: M:Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sanitize()
  nameWithType: ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    nameWithType: ITelemetry.Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    nameWithType: ITelemetry.Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
