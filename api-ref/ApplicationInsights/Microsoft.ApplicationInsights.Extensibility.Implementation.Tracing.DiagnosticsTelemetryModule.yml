### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
  id: DiagnosticsTelemetryModule
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  children:
  - Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.#ctor
  - Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.DiagnosticsInstrumentationKey
  - Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Dispose
  - Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Finalize
  - Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  - Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Severity
  langs:
  - csharp
  - vb
  name: DiagnosticsTelemetryModule
  nameWithType: DiagnosticsTelemetryModule
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: DiagnosticsTelemetryModule
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
    startLine: 17
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  summary: "\nUse diagnostics telemetry module to report SDK internal problems to the portal and VS debug output window.\n"
  example: []
  syntax:
    content: 'public sealed class DiagnosticsTelemetryModule : ITelemetryModule, IDisposable'
    content.vb: >-
      Public NotInheritable Class DiagnosticsTelemetryModule
          Implements ITelemetryModule, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.ApplicationInsights.Extensibility.ITelemetryModule
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.#ctor
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.#ctor
  id: '#ctor'
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
  langs:
  - csharp
  - vb
  name: DiagnosticsTelemetryModule()
  nameWithType: DiagnosticsTelemetryModule.DiagnosticsTelemetryModule()
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.DiagnosticsTelemetryModule()
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
    startLine: 34
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule\" data-throw-if-not-resolved=\"false\"></xref> class. \n"
  example: []
  syntax:
    content: public DiagnosticsTelemetryModule()
    content.vb: Public Sub New
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Finalize
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Finalize
  id: Finalize
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: DiagnosticsTelemetryModule.Finalize()
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Finalize()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Finalize
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
    startLine: 46
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  summary: "\nFinalizes an instance of the <xref href=\"Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Severity
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Severity
  id: Severity
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
  langs:
  - csharp
  - vb
  name: Severity
  nameWithType: DiagnosticsTelemetryModule.Severity
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Severity
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Severity
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
    startLine: 55
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  summary: "\nGets or sets diagnostics Telemetry Module LogLevel configuration setting. \nPossible values LogAlways, Critical, Error, Warning, Informational and Verbose.\n"
  example: []
  syntax:
    content: public string Severity { get; set; }
    content.vb: Public Property Severity As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Severity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.DiagnosticsInstrumentationKey
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.DiagnosticsInstrumentationKey
  id: DiagnosticsInstrumentationKey
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
  langs:
  - csharp
  - vb
  name: DiagnosticsInstrumentationKey
  nameWithType: DiagnosticsTelemetryModule.DiagnosticsInstrumentationKey
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.DiagnosticsInstrumentationKey
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: DiagnosticsInstrumentationKey
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
    startLine: 81
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  summary: "\nGets or sets instrumentation key for diagnostics. Use to redirect SDK \ninternal problems reporting to the separate instrumentation key.\n"
  example: []
  syntax:
    content: public string DiagnosticsInstrumentationKey { get; set; }
    content.vb: Public Property DiagnosticsInstrumentationKey As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.DiagnosticsInstrumentationKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  id: Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
  langs:
  - csharp
  - vb
  name: Initialize(TelemetryConfiguration)
  nameWithType: DiagnosticsTelemetryModule.Initialize(TelemetryConfiguration)
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Initialize
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
    startLine: 107
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  summary: "\nInitializes this telemetry module.\n"
  example: []
  syntax:
    content: public void Initialize(TelemetryConfiguration configuration)
    content.vb: Public Sub Initialize(configuration As TelemetryConfiguration)
    parameters:
    - id: configuration
      type: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
      description: Telemetry configuration to use for this telemetry module.
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Initialize*
  implements:
  - Microsoft.ApplicationInsights.Extensibility.ITelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Dispose
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Dispose
  id: Dispose
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DiagnosticsTelemetryModule.Dispose()
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Dispose()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Dispose
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/Extensibility/Implementation/Tracing/DiagnosticsTelemetryModule.cs
    startLine: 150
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  summary: "\nDisposes this object.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  commentId: N:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  nameWithType: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule
  commentId: T:Microsoft.ApplicationInsights.Extensibility.ITelemetryModule
  parent: Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: ITelemetryModule
  nameWithType: ITelemetryModule
  fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.Extensibility
  commentId: N:Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility
  nameWithType: Microsoft.ApplicationInsights.Extensibility
  fullName: Microsoft.ApplicationInsights.Extensibility
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
  isExternal: false
  name: DiagnosticsTelemetryModule
  nameWithType: DiagnosticsTelemetryModule
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.#ctor*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.#ctor
  isExternal: false
  name: DiagnosticsTelemetryModule
  nameWithType: DiagnosticsTelemetryModule.DiagnosticsTelemetryModule
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.DiagnosticsTelemetryModule
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Finalize*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Finalize
  isExternal: false
  name: Finalize
  nameWithType: DiagnosticsTelemetryModule.Finalize
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Finalize
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Severity*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Severity
  isExternal: false
  name: Severity
  nameWithType: DiagnosticsTelemetryModule.Severity
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Severity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.DiagnosticsInstrumentationKey*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.DiagnosticsInstrumentationKey
  isExternal: false
  name: DiagnosticsInstrumentationKey
  nameWithType: DiagnosticsTelemetryModule.DiagnosticsInstrumentationKey
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.DiagnosticsInstrumentationKey
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Initialize*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Initialize
  isExternal: false
  name: Initialize
  nameWithType: DiagnosticsTelemetryModule.Initialize
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Initialize
- uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  commentId: M:Microsoft.ApplicationInsights.Extensibility.ITelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  parent: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule
  isExternal: false
  name: Initialize(TelemetryConfiguration)
  nameWithType: ITelemetryModule.Initialize(TelemetryConfiguration)
  fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
    name: Initialize
    nameWithType: ITelemetryModule.Initialize
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
    name: TelemetryConfiguration
    nameWithType: TelemetryConfiguration
    fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
    name: Initialize
    nameWithType: ITelemetryModule.Initialize
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
    name: TelemetryConfiguration
    nameWithType: TelemetryConfiguration
    fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  commentId: T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  parent: Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: TelemetryConfiguration
  nameWithType: TelemetryConfiguration
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Dispose*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Dispose
  isExternal: false
  name: Dispose
  nameWithType: DiagnosticsTelemetryModule.Dispose
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
