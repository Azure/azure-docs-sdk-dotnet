### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth
  commentId: T:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth
  id: TunnelConnectionHealth
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.#ctor
  - Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)
  - Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.ConnectionStatus
  - Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.EgressBytesTransferred
  - Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.IngressBytesTransferred
  - Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.LastConnectionEstablishedUtcTime
  - Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.Tunnel
  langs:
  - csharp
  - vb
  name: TunnelConnectionHealth
  nameWithType: TunnelConnectionHealth
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TunnelConnectionHealth
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nVirtualNetworkGatewayConnection properties\n"
  example: []
  syntax:
    content: public class TunnelConnectionHealth
    content.vb: Public Class TunnelConnectionHealth
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth
  langs:
  - csharp
  - vb
  name: TunnelConnectionHealth()
  nameWithType: TunnelConnectionHealth.TunnelConnectionHealth()
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.TunnelConnectionHealth()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the TunnelConnectionHealth class.\n"
  example: []
  syntax:
    content: public TunnelConnectionHealth()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)
  id: '#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)'
  parent: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth
  langs:
  - csharp
  - vb
  name: TunnelConnectionHealth(String, String, Nullable<Int64>, Nullable<Int64>, String)
  nameWithType: TunnelConnectionHealth.TunnelConnectionHealth(String, String, Nullable<Int64>, Nullable<Int64>, String)
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.TunnelConnectionHealth(System.String, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the TunnelConnectionHealth class.\n"
  example: []
  syntax:
    content: public TunnelConnectionHealth(string tunnel = null, string connectionStatus = null, long ? ingressBytesTransferred = null, long ? egressBytesTransferred = null, string lastConnectionEstablishedUtcTime = null)
    content.vb: Public Sub New(tunnel As String = Nothing, connectionStatus As String = Nothing, ingressBytesTransferred As Long? = Nothing, egressBytesTransferred As Long? = Nothing, lastConnectionEstablishedUtcTime As String = Nothing)
    parameters:
    - id: tunnel
      type: System.String
      description: Tunnel name.
    - id: connectionStatus
      type: System.String
      description: >-
        Virtual network Gateway connection

        status. Possible values include: 'Unknown', 'Connecting',

        'Connected', 'NotConnected'
    - id: ingressBytesTransferred
      type: System.Nullable{System.Int64}
      description: >-
        The Ingress Bytes Transferred

        in this connection
    - id: egressBytesTransferred
      type: System.Nullable{System.Int64}
      description: >-
        The Egress Bytes Transferred

        in this connection
    - id: lastConnectionEstablishedUtcTime
      type: System.String
      description: >-
        The time at which

        connection was established in Utc format.
  overload: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.#ctor*
  nameWithType.vb: TunnelConnectionHealth.TunnelConnectionHealth(String, String, Nullable(Of Int64), Nullable(Of Int64), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.TunnelConnectionHealth(System.String, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.String)
  name.vb: TunnelConnectionHealth(String, String, Nullable(Of Int64), Nullable(Of Int64), String)
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.Tunnel
  commentId: P:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.Tunnel
  id: Tunnel
  parent: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth
  langs:
  - csharp
  - vb
  name: Tunnel
  nameWithType: TunnelConnectionHealth.Tunnel
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.Tunnel
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Tunnel
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets tunnel name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tunnel")]

      public string Tunnel { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tunnel")>

      Public Property Tunnel As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.Tunnel*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tunnel
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.ConnectionStatus
  commentId: P:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.ConnectionStatus
  id: ConnectionStatus
  parent: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth
  langs:
  - csharp
  - vb
  name: ConnectionStatus
  nameWithType: TunnelConnectionHealth.ConnectionStatus
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.ConnectionStatus
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ConnectionStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets virtual network Gateway connection status. Possible values\ninclude: 'Unknown', 'Connecting', 'Connected', 'NotConnected'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "connectionStatus")]

      public string ConnectionStatus { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="connectionStatus")>

      Public Property ConnectionStatus As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.ConnectionStatus*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: connectionStatus
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.IngressBytesTransferred
  commentId: P:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.IngressBytesTransferred
  id: IngressBytesTransferred
  parent: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth
  langs:
  - csharp
  - vb
  name: IngressBytesTransferred
  nameWithType: TunnelConnectionHealth.IngressBytesTransferred
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.IngressBytesTransferred
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IngressBytesTransferred
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the Ingress Bytes Transferred in this connection\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "ingressBytesTransferred")]

      public long ? IngressBytesTransferred { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="ingressBytesTransferred")>

      Public Property IngressBytesTransferred As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.IngressBytesTransferred*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: ingressBytesTransferred
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.EgressBytesTransferred
  commentId: P:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.EgressBytesTransferred
  id: EgressBytesTransferred
  parent: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth
  langs:
  - csharp
  - vb
  name: EgressBytesTransferred
  nameWithType: TunnelConnectionHealth.EgressBytesTransferred
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.EgressBytesTransferred
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EgressBytesTransferred
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the Egress Bytes Transferred in this connection\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "egressBytesTransferred")]

      public long ? EgressBytesTransferred { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="egressBytesTransferred")>

      Public Property EgressBytesTransferred As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.EgressBytesTransferred*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: egressBytesTransferred
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.LastConnectionEstablishedUtcTime
  commentId: P:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.LastConnectionEstablishedUtcTime
  id: LastConnectionEstablishedUtcTime
  parent: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth
  langs:
  - csharp
  - vb
  name: LastConnectionEstablishedUtcTime
  nameWithType: TunnelConnectionHealth.LastConnectionEstablishedUtcTime
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.LastConnectionEstablishedUtcTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastConnectionEstablishedUtcTime
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TunnelConnectionHealth.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the time at which connection was established in Utc format.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastConnectionEstablishedUtcTime")]

      public string LastConnectionEstablishedUtcTime { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="lastConnectionEstablishedUtcTime")>

      Public Property LastConnectionEstablishedUtcTime As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.LastConnectionEstablishedUtcTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastConnectionEstablishedUtcTime
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.#ctor
  isExternal: false
  name: TunnelConnectionHealth
  nameWithType: TunnelConnectionHealth.TunnelConnectionHealth
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.TunnelConnectionHealth
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.Tunnel*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.Tunnel
  isExternal: false
  name: Tunnel
  nameWithType: TunnelConnectionHealth.Tunnel
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.Tunnel
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.ConnectionStatus*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.ConnectionStatus
  isExternal: false
  name: ConnectionStatus
  nameWithType: TunnelConnectionHealth.ConnectionStatus
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.ConnectionStatus
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.IngressBytesTransferred*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.IngressBytesTransferred
  isExternal: false
  name: IngressBytesTransferred
  nameWithType: TunnelConnectionHealth.IngressBytesTransferred
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.IngressBytesTransferred
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.EgressBytesTransferred*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.EgressBytesTransferred
  isExternal: false
  name: EgressBytesTransferred
  nameWithType: TunnelConnectionHealth.EgressBytesTransferred
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.EgressBytesTransferred
- uid: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.LastConnectionEstablishedUtcTime*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.LastConnectionEstablishedUtcTime
  isExternal: false
  name: LastConnectionEstablishedUtcTime
  nameWithType: TunnelConnectionHealth.LastConnectionEstablishedUtcTime
  fullName: Microsoft.Azure.Management.Network.Models.TunnelConnectionHealth.LastConnectionEstablishedUtcTime
