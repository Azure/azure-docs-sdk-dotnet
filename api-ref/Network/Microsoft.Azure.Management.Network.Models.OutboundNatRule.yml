### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  commentId: T:Microsoft.Azure.Management.Network.Models.OutboundNatRule
  id: OutboundNatRule
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.OutboundNatRule.#ctor
  - Microsoft.Azure.Management.Network.Models.OutboundNatRule.#ctor(Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource},System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.OutboundNatRule.AllocatedOutboundPorts
  - Microsoft.Azure.Management.Network.Models.OutboundNatRule.BackendAddressPool
  - Microsoft.Azure.Management.Network.Models.OutboundNatRule.Etag
  - Microsoft.Azure.Management.Network.Models.OutboundNatRule.FrontendIPConfigurations
  - Microsoft.Azure.Management.Network.Models.OutboundNatRule.Name
  - Microsoft.Azure.Management.Network.Models.OutboundNatRule.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.OutboundNatRule.Validate
  langs:
  - csharp
  - vb
  name: OutboundNatRule
  nameWithType: OutboundNatRule
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OutboundNatRule
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nOutbound NAT pool of the load balancer.\n"
  example: []
  syntax:
    content: 'public class OutboundNatRule : SubResource, IResource'
    content.vb: >-
      Public Class OutboundNatRule
          Inherits SubResource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.SubResource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.SubResource.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.OutboundNatRule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  langs:
  - csharp
  - vb
  name: OutboundNatRule()
  nameWithType: OutboundNatRule.OutboundNatRule()
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.OutboundNatRule()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the OutboundNatRule class.\n"
  example: []
  syntax:
    content: public OutboundNatRule()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.OutboundNatRule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.#ctor(Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource},System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.OutboundNatRule.#ctor(Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource},System.String,System.String,System.String)
  id: '#ctor(Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource},System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  langs:
  - csharp
  - vb
  name: OutboundNatRule(SubResource, String, Nullable<Int32>, IList<SubResource>, String, String, String)
  nameWithType: OutboundNatRule.OutboundNatRule(SubResource, String, Nullable<Int32>, IList<SubResource>, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.OutboundNatRule(Microsoft.Azure.Management.Network.Models.SubResource, System.String, System.Nullable<System.Int32>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.SubResource>, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the OutboundNatRule class.\n"
  example: []
  syntax:
    content: public OutboundNatRule(SubResource backendAddressPool, string id = null, int ? allocatedOutboundPorts = null, IList<SubResource> frontendIPConfigurations = null, string provisioningState = null, string name = null, string etag = null)
    content.vb: Public Sub New(backendAddressPool As SubResource, id As String = Nothing, allocatedOutboundPorts As Integer? = Nothing, frontendIPConfigurations As IList(Of SubResource) = Nothing, provisioningState As String = Nothing, name As String = Nothing, etag As String = Nothing)
    parameters:
    - id: backendAddressPool
      type: Microsoft.Azure.Management.Network.Models.SubResource
      description: >-
        A reference to a pool of DIPs.

        Outbound traffic is randomly load balanced across IPs in the

        backend IPs.
    - id: id
      type: System.String
      description: Resource ID.
    - id: allocatedOutboundPorts
      type: System.Nullable{System.Int32}
      description: >-
        The number of outbound ports

        to be used for NAT.
    - id: frontendIPConfigurations
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource}
      description: >-
        The Frontend IP addresses of

        the load balancer.
    - id: provisioningState
      type: System.String
      description: >-
        Gets the provisioning state of the

        PublicIP resource. Possible values are: 'Updating', 'Deleting', and

        'Failed'.
    - id: name
      type: System.String
      description: >-
        The name of the resource that is unique within a

        resource group. This name can be used to access the

        resource.
    - id: etag
      type: System.String
      description: >-
        A unique read-only string that changes whenever

        the resource is updated.
  overload: Microsoft.Azure.Management.Network.Models.OutboundNatRule.#ctor*
  nameWithType.vb: OutboundNatRule.OutboundNatRule(SubResource, String, Nullable(Of Int32), IList(Of SubResource), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.OutboundNatRule.OutboundNatRule(Microsoft.Azure.Management.Network.Models.SubResource, System.String, System.Nullable(Of System.Int32), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.SubResource), System.String, System.String, System.String)
  name.vb: OutboundNatRule(SubResource, String, Nullable(Of Int32), IList(Of SubResource), String, String, String)
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.AllocatedOutboundPorts
  commentId: P:Microsoft.Azure.Management.Network.Models.OutboundNatRule.AllocatedOutboundPorts
  id: AllocatedOutboundPorts
  parent: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  langs:
  - csharp
  - vb
  name: AllocatedOutboundPorts
  nameWithType: OutboundNatRule.AllocatedOutboundPorts
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.AllocatedOutboundPorts
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllocatedOutboundPorts
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the number of outbound ports to be used for NAT.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.allocatedOutboundPorts")]

      public int ? AllocatedOutboundPorts { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.allocatedOutboundPorts")>

      Public Property AllocatedOutboundPorts As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Network.Models.OutboundNatRule.AllocatedOutboundPorts*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.allocatedOutboundPorts
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.FrontendIPConfigurations
  commentId: P:Microsoft.Azure.Management.Network.Models.OutboundNatRule.FrontendIPConfigurations
  id: FrontendIPConfigurations
  parent: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  langs:
  - csharp
  - vb
  name: FrontendIPConfigurations
  nameWithType: OutboundNatRule.FrontendIPConfigurations
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.FrontendIPConfigurations
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendIPConfigurations
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the Frontend IP addresses of the load balancer.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.frontendIPConfigurations")]

      public IList<SubResource> FrontendIPConfigurations { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.frontendIPConfigurations")>

      Public Property FrontendIPConfigurations As IList(Of SubResource)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource}
  overload: Microsoft.Azure.Management.Network.Models.OutboundNatRule.FrontendIPConfigurations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.frontendIPConfigurations
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.BackendAddressPool
  commentId: P:Microsoft.Azure.Management.Network.Models.OutboundNatRule.BackendAddressPool
  id: BackendAddressPool
  parent: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  langs:
  - csharp
  - vb
  name: BackendAddressPool
  nameWithType: OutboundNatRule.BackendAddressPool
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.BackendAddressPool
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendAddressPool
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a reference to a pool of DIPs. Outbound traffic is\nrandomly load balanced across IPs in the backend IPs.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.backendAddressPool")]

      public SubResource BackendAddressPool { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.backendAddressPool")>

      Public Property BackendAddressPool As SubResource
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.SubResource
  overload: Microsoft.Azure.Management.Network.Models.OutboundNatRule.BackendAddressPool*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.backendAddressPool
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.OutboundNatRule.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: OutboundNatRule.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the provisioning state of the PublicIP resource. Possible\nvalues are: 'Updating', 'Deleting', and 'Failed'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.OutboundNatRule.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.OutboundNatRule.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: OutboundNatRule.Name
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the name of the resource that is unique within a\nresource group. This name can be used to access the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.OutboundNatRule.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: OutboundNatRule.Etag
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a unique read-only string that changes whenever the\nresource is updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Validate
  commentId: M:Microsoft.Azure.Management.Network.Models.OutboundNatRule.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: OutboundNatRule.Validate()
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/OutboundNatRule.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.SubResource
  commentId: T:Microsoft.Azure.Management.Network.Models.SubResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: SubResource
  nameWithType: SubResource
  fullName: Microsoft.Azure.Management.Network.Models.SubResource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.SubResource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.SubResource.Id
  parent: Microsoft.Azure.Management.Network.Models.SubResource
  isExternal: false
  name: Id
  nameWithType: SubResource.Id
  fullName: Microsoft.Azure.Management.Network.Models.SubResource.Id
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.OutboundNatRule.#ctor
  isExternal: false
  name: OutboundNatRule
  nameWithType: OutboundNatRule.OutboundNatRule
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.OutboundNatRule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SubResource>
  nameWithType: IList<SubResource>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.SubResource>
  nameWithType.vb: IList(Of SubResource)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.SubResource)
  name.vb: IList(Of SubResource)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.SubResource
    name: SubResource
    nameWithType: SubResource
    fullName: Microsoft.Azure.Management.Network.Models.SubResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.SubResource
    name: SubResource
    nameWithType: SubResource
    fullName: Microsoft.Azure.Management.Network.Models.SubResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.AllocatedOutboundPorts*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.OutboundNatRule.AllocatedOutboundPorts
  isExternal: false
  name: AllocatedOutboundPorts
  nameWithType: OutboundNatRule.AllocatedOutboundPorts
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.AllocatedOutboundPorts
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.FrontendIPConfigurations*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.OutboundNatRule.FrontendIPConfigurations
  isExternal: false
  name: FrontendIPConfigurations
  nameWithType: OutboundNatRule.FrontendIPConfigurations
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.FrontendIPConfigurations
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.BackendAddressPool*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.OutboundNatRule.BackendAddressPool
  isExternal: false
  name: BackendAddressPool
  nameWithType: OutboundNatRule.BackendAddressPool
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.BackendAddressPool
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.OutboundNatRule.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: OutboundNatRule.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Name*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.OutboundNatRule.Name
  isExternal: false
  name: Name
  nameWithType: OutboundNatRule.Name
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Name
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.OutboundNatRule.Etag
  isExternal: false
  name: Etag
  nameWithType: OutboundNatRule.Etag
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Etag
- uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Validate*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.OutboundNatRule.Validate
  isExternal: false
  name: Validate
  nameWithType: OutboundNatRule.Validate
  fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
