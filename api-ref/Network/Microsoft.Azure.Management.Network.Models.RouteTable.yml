### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.RouteTable
  commentId: T:Microsoft.Azure.Management.Network.Models.RouteTable
  id: RouteTable
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.RouteTable.#ctor
  - Microsoft.Azure.Management.Network.Models.RouteTable.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Route},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet},System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.RouteTable.Etag
  - Microsoft.Azure.Management.Network.Models.RouteTable.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.RouteTable.Routes
  - Microsoft.Azure.Management.Network.Models.RouteTable.Subnets
  langs:
  - csharp
  - vb
  name: RouteTable
  nameWithType: RouteTable
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RouteTable
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nRoute table resource.\n"
  example: []
  syntax:
    content: 'public class RouteTable : Resource, IResource'
    content.vb: >-
      Public Class RouteTable
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.Resource.Id
  - Microsoft.Azure.Management.Network.Models.Resource.Name
  - Microsoft.Azure.Management.Network.Models.Resource.Type
  - Microsoft.Azure.Management.Network.Models.Resource.Location
  - Microsoft.Azure.Management.Network.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.RouteTable.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.RouteTable.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.RouteTable
  langs:
  - csharp
  - vb
  name: RouteTable()
  nameWithType: RouteTable.RouteTable()
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable.RouteTable()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the RouteTable class.\n"
  example: []
  syntax:
    content: public RouteTable()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.RouteTable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.RouteTable.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Route},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.RouteTable.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Route},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet},System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Route},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet},System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.RouteTable
  langs:
  - csharp
  - vb
  name: RouteTable(String, String, String, String, IDictionary<String, String>, IList<Route>, IList<Subnet>, String, String)
  nameWithType: RouteTable.RouteTable(String, String, String, String, IDictionary<String, String>, IList<Route>, IList<Subnet>, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable.RouteTable(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.Route>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.Subnet>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the RouteTable class.\n"
  example: []
  syntax:
    content: public RouteTable(string id = null, string name = null, string type = null, string location = null, IDictionary<string, string> tags = null, IList<Route> routes = null, IList<Subnet> subnets = null, string provisioningState = null, string etag = null)
    content.vb: Public Sub New(id As String = Nothing, name As String = Nothing, type As String = Nothing, location As String = Nothing, tags As IDictionary(Of String, String) = Nothing, routes As IList(Of Route) = Nothing, subnets As IList(Of Subnet) = Nothing, provisioningState As String = Nothing, etag As String = Nothing)
    parameters:
    - id: id
      type: System.String
      description: Resource ID.
    - id: name
      type: System.String
      description: Resource name.
    - id: type
      type: System.String
      description: Resource type.
    - id: location
      type: System.String
      description: Resource location.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Resource tags.
    - id: routes
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Route}
      description: >-
        Collection of routes contained within a route

        table.
    - id: subnets
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet}
      description: >-
        A collection of references to

        subnets.
    - id: provisioningState
      type: System.String
      description: >-
        The provisioning state of the

        resource. Possible values are: 'Updating', 'Deleting', and

        'Failed'.
    - id: etag
      type: System.String
      description: >-
        Gets a unique read-only string that changes

        whenever the resource is updated.
  overload: Microsoft.Azure.Management.Network.Models.RouteTable.#ctor*
  nameWithType.vb: RouteTable.RouteTable(String, String, String, String, IDictionary(Of String, String), IList(Of Route), IList(Of Subnet), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.RouteTable.RouteTable(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.Route), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.Subnet), System.String, System.String)
  name.vb: RouteTable(String, String, String, String, IDictionary(Of String, String), IList(Of Route), IList(Of Subnet), String, String)
- uid: Microsoft.Azure.Management.Network.Models.RouteTable.Routes
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteTable.Routes
  id: Routes
  parent: Microsoft.Azure.Management.Network.Models.RouteTable
  langs:
  - csharp
  - vb
  name: Routes
  nameWithType: RouteTable.Routes
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable.Routes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Routes
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets collection of routes contained within a route table.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.routes")]

      public IList<Route> Routes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.routes")>

      Public Property Routes As IList(Of Route)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Route}
  overload: Microsoft.Azure.Management.Network.Models.RouteTable.Routes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.routes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.RouteTable.Subnets
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteTable.Subnets
  id: Subnets
  parent: Microsoft.Azure.Management.Network.Models.RouteTable
  langs:
  - csharp
  - vb
  name: Subnets
  nameWithType: RouteTable.Subnets
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable.Subnets
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Subnets
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets a collection of references to subnets.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.subnets")]

      public IList<Subnet> Subnets { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.subnets")>

      Public Property Subnets As IList(Of Subnet)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet}
  overload: Microsoft.Azure.Management.Network.Models.RouteTable.Subnets*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.subnets
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.RouteTable.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteTable.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.RouteTable
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: RouteTable.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the provisioning state of the resource. Possible\nvalues are: 'Updating', 'Deleting', and 'Failed'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.RouteTable.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.RouteTable.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteTable.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.RouteTable
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: RouteTable.Etag
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteTable.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets a unique read-only string that changes whenever the resource\nis updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.RouteTable.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.Resource
  commentId: T:Microsoft.Azure.Management.Network.Models.Resource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.Network.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Id
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Id
- uid: Microsoft.Azure.Management.Network.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Name
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Name
- uid: Microsoft.Azure.Management.Network.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Type
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Type
- uid: Microsoft.Azure.Management.Network.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Location
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Location
- uid: Microsoft.Azure.Management.Network.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Tags
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Network.Models.RouteTable.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteTable.#ctor
  isExternal: false
  name: RouteTable
  nameWithType: RouteTable.RouteTable
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable.RouteTable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Route}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Route}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Route>
  nameWithType: IList<Route>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.Route>
  nameWithType.vb: IList(Of Route)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.Route)
  name.vb: IList(Of Route)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.Route
    name: Route
    nameWithType: Route
    fullName: Microsoft.Azure.Management.Network.Models.Route
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.Route
    name: Route
    nameWithType: Route
    fullName: Microsoft.Azure.Management.Network.Models.Route
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Subnet>
  nameWithType: IList<Subnet>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.Subnet>
  nameWithType.vb: IList(Of Subnet)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.Subnet)
  name.vb: IList(Of Subnet)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.Subnet
    name: Subnet
    nameWithType: Subnet
    fullName: Microsoft.Azure.Management.Network.Models.Subnet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.Subnet
    name: Subnet
    nameWithType: Subnet
    fullName: Microsoft.Azure.Management.Network.Models.Subnet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.RouteTable.Routes*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteTable.Routes
  isExternal: false
  name: Routes
  nameWithType: RouteTable.Routes
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable.Routes
- uid: Microsoft.Azure.Management.Network.Models.RouteTable.Subnets*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteTable.Subnets
  isExternal: false
  name: Subnets
  nameWithType: RouteTable.Subnets
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable.Subnets
- uid: Microsoft.Azure.Management.Network.Models.RouteTable.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteTable.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: RouteTable.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.RouteTable.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteTable.Etag
  isExternal: false
  name: Etag
  nameWithType: RouteTable.Etag
  fullName: Microsoft.Azure.Management.Network.Models.RouteTable.Etag
