### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  commentId: T:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  id: VirtualNetworkPeering
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.#ctor
  - Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowForwardedTraffic
  - Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowGatewayTransit
  - Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowVirtualNetworkAccess
  - Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Etag
  - Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Name
  - Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.PeeringState
  - Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.RemoteVirtualNetwork
  - Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.UseRemoteGateways
  langs:
  - csharp
  - vb
  name: VirtualNetworkPeering
  nameWithType: VirtualNetworkPeering
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualNetworkPeering
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nPeerings in a virtual network resource.\n"
  example: []
  syntax:
    content: 'public class VirtualNetworkPeering : SubResource, IResource'
    content.vb: >-
      Public Class VirtualNetworkPeering
          Inherits SubResource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.SubResource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.SubResource.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  langs:
  - csharp
  - vb
  name: VirtualNetworkPeering()
  nameWithType: VirtualNetworkPeering.VirtualNetworkPeering()
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.VirtualNetworkPeering()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the VirtualNetworkPeering class.\n"
  example: []
  syntax:
    content: public VirtualNetworkPeering()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  langs:
  - csharp
  - vb
  name: VirtualNetworkPeering(String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, SubResource, String, String, String, String)
  nameWithType: VirtualNetworkPeering.VirtualNetworkPeering(String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, SubResource, String, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.VirtualNetworkPeering(System.String, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, Microsoft.Azure.Management.Network.Models.SubResource, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the VirtualNetworkPeering class.\n"
  example: []
  syntax:
    content: public VirtualNetworkPeering(string id = null, bool ? allowVirtualNetworkAccess = null, bool ? allowForwardedTraffic = null, bool ? allowGatewayTransit = null, bool ? useRemoteGateways = null, SubResource remoteVirtualNetwork = null, string peeringState = null, string provisioningState = null, string name = null, string etag = null)
    content.vb: Public Sub New(id As String = Nothing, allowVirtualNetworkAccess As Boolean? = Nothing, allowForwardedTraffic As Boolean? = Nothing, allowGatewayTransit As Boolean? = Nothing, useRemoteGateways As Boolean? = Nothing, remoteVirtualNetwork As SubResource = Nothing, peeringState As String = Nothing, provisioningState As String = Nothing, name As String = Nothing, etag As String = Nothing)
    parameters:
    - id: id
      type: System.String
      description: Resource ID.
    - id: allowVirtualNetworkAccess
      type: System.Nullable{System.Boolean}
      description: >-
        Whether the VMs in the

        linked virtual network space would be able to access all the VMs in

        local Virtual network space.
    - id: allowForwardedTraffic
      type: System.Nullable{System.Boolean}
      description: >-
        Whether the forwarded traffic

        from the VMs in the remote virtual network will be

        allowed/disallowed.
    - id: allowGatewayTransit
      type: System.Nullable{System.Boolean}
      description: >-
        If gateway links can be used in

        remote virtual networking to link to this virtual network.
    - id: useRemoteGateways
      type: System.Nullable{System.Boolean}
      description: >-
        If remote gateways can be used on

        this virtual network. If the flag is set to true, and

        allowGatewayTransit on remote peering is also true, virtual network

        will use gateways of remote virtual network for transit. Only one

        peering can have this flag set to true. This flag cannot be set if

        virtual network already has a gateway.
    - id: remoteVirtualNetwork
      type: Microsoft.Azure.Management.Network.Models.SubResource
      description: >-
        The reference of the remote

        virtual network.
    - id: peeringState
      type: System.String
      description: >-
        The status of the virtual network

        peering. Possible values are 'Initiated', 'Connected', and

        'Disconnected'. Possible values include: 'Initiated', 'Connected',

        'Disconnected'
    - id: provisioningState
      type: System.String
      description: >-
        The provisioning state of the

        resource.
    - id: name
      type: System.String
      description: >-
        The name of the resource that is unique within a

        resource group. This name can be used to access the

        resource.
    - id: etag
      type: System.String
      description: >-
        A unique read-only string that changes whenever

        the resource is updated.
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.#ctor*
  nameWithType.vb: VirtualNetworkPeering.VirtualNetworkPeering(String, Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), SubResource, String, String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.VirtualNetworkPeering(System.String, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), Microsoft.Azure.Management.Network.Models.SubResource, System.String, System.String, System.String, System.String)
  name.vb: VirtualNetworkPeering(String, Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), SubResource, String, String, String, String)
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowVirtualNetworkAccess
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowVirtualNetworkAccess
  id: AllowVirtualNetworkAccess
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  langs:
  - csharp
  - vb
  name: AllowVirtualNetworkAccess
  nameWithType: VirtualNetworkPeering.AllowVirtualNetworkAccess
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowVirtualNetworkAccess
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowVirtualNetworkAccess
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets whether the VMs in the linked virtual network space\nwould be able to access all the VMs in local Virtual network space.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.allowVirtualNetworkAccess")]

      public bool ? AllowVirtualNetworkAccess { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.allowVirtualNetworkAccess")>

      Public Property AllowVirtualNetworkAccess As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowVirtualNetworkAccess*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.allowVirtualNetworkAccess
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowForwardedTraffic
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowForwardedTraffic
  id: AllowForwardedTraffic
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  langs:
  - csharp
  - vb
  name: AllowForwardedTraffic
  nameWithType: VirtualNetworkPeering.AllowForwardedTraffic
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowForwardedTraffic
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowForwardedTraffic
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets whether the forwarded traffic from the VMs in the\nremote virtual network will be allowed/disallowed.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.allowForwardedTraffic")]

      public bool ? AllowForwardedTraffic { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.allowForwardedTraffic")>

      Public Property AllowForwardedTraffic As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowForwardedTraffic*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.allowForwardedTraffic
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowGatewayTransit
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowGatewayTransit
  id: AllowGatewayTransit
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  langs:
  - csharp
  - vb
  name: AllowGatewayTransit
  nameWithType: VirtualNetworkPeering.AllowGatewayTransit
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowGatewayTransit
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowGatewayTransit
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets if gateway links can be used in remote virtual\nnetworking to link to this virtual network.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.allowGatewayTransit")]

      public bool ? AllowGatewayTransit { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.allowGatewayTransit")>

      Public Property AllowGatewayTransit As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowGatewayTransit*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.allowGatewayTransit
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.UseRemoteGateways
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.UseRemoteGateways
  id: UseRemoteGateways
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  langs:
  - csharp
  - vb
  name: UseRemoteGateways
  nameWithType: VirtualNetworkPeering.UseRemoteGateways
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.UseRemoteGateways
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UseRemoteGateways
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets if remote gateways can be used on this virtual\nnetwork. If the flag is set to true, and allowGatewayTransit on\nremote peering is also true, virtual network will use gateways of\nremote virtual network for transit. Only one peering can have this\nflag set to true. This flag cannot be set if virtual network\nalready has a gateway.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.useRemoteGateways")]

      public bool ? UseRemoteGateways { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.useRemoteGateways")>

      Public Property UseRemoteGateways As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.UseRemoteGateways*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.useRemoteGateways
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.RemoteVirtualNetwork
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.RemoteVirtualNetwork
  id: RemoteVirtualNetwork
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  langs:
  - csharp
  - vb
  name: RemoteVirtualNetwork
  nameWithType: VirtualNetworkPeering.RemoteVirtualNetwork
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.RemoteVirtualNetwork
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoteVirtualNetwork
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the reference of the remote virtual network.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.remoteVirtualNetwork")]

      public SubResource RemoteVirtualNetwork { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.remoteVirtualNetwork")>

      Public Property RemoteVirtualNetwork As SubResource
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.SubResource
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.RemoteVirtualNetwork*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.remoteVirtualNetwork
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.PeeringState
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.PeeringState
  id: PeeringState
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  langs:
  - csharp
  - vb
  name: PeeringState
  nameWithType: VirtualNetworkPeering.PeeringState
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.PeeringState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PeeringState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 117
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the status of the virtual network peering. Possible\nvalues are 'Initiated', 'Connected', and 'Disconnected'. Possible\nvalues include: 'Initiated', 'Connected', 'Disconnected'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.peeringState")]

      public string PeeringState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.peeringState")>

      Public Property PeeringState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.PeeringState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.peeringState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: VirtualNetworkPeering.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the provisioning state of the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: VirtualNetworkPeering.Name
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the name of the resource that is unique within a\nresource group. This name can be used to access the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: VirtualNetworkPeering.Etag
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetworkPeering.cs
    startLine: 137
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a unique read-only string that changes whenever the\nresource is updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.SubResource
  commentId: T:Microsoft.Azure.Management.Network.Models.SubResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: SubResource
  nameWithType: SubResource
  fullName: Microsoft.Azure.Management.Network.Models.SubResource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.SubResource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.SubResource.Id
  parent: Microsoft.Azure.Management.Network.Models.SubResource
  isExternal: false
  name: Id
  nameWithType: SubResource.Id
  fullName: Microsoft.Azure.Management.Network.Models.SubResource.Id
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.#ctor
  isExternal: false
  name: VirtualNetworkPeering
  nameWithType: VirtualNetworkPeering.VirtualNetworkPeering
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.VirtualNetworkPeering
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowVirtualNetworkAccess*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowVirtualNetworkAccess
  isExternal: false
  name: AllowVirtualNetworkAccess
  nameWithType: VirtualNetworkPeering.AllowVirtualNetworkAccess
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowVirtualNetworkAccess
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowForwardedTraffic*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowForwardedTraffic
  isExternal: false
  name: AllowForwardedTraffic
  nameWithType: VirtualNetworkPeering.AllowForwardedTraffic
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowForwardedTraffic
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowGatewayTransit*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowGatewayTransit
  isExternal: false
  name: AllowGatewayTransit
  nameWithType: VirtualNetworkPeering.AllowGatewayTransit
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.AllowGatewayTransit
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.UseRemoteGateways*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.UseRemoteGateways
  isExternal: false
  name: UseRemoteGateways
  nameWithType: VirtualNetworkPeering.UseRemoteGateways
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.UseRemoteGateways
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.RemoteVirtualNetwork*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.RemoteVirtualNetwork
  isExternal: false
  name: RemoteVirtualNetwork
  nameWithType: VirtualNetworkPeering.RemoteVirtualNetwork
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.RemoteVirtualNetwork
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.PeeringState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.PeeringState
  isExternal: false
  name: PeeringState
  nameWithType: VirtualNetworkPeering.PeeringState
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.PeeringState
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: VirtualNetworkPeering.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Name*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Name
  isExternal: false
  name: Name
  nameWithType: VirtualNetworkPeering.Name
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Name
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Etag
  isExternal: false
  name: Etag
  nameWithType: VirtualNetworkPeering.Etag
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering.Etag
