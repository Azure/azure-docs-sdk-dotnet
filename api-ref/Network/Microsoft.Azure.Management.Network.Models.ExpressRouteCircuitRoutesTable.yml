### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable
  commentId: T:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable
  id: ExpressRouteCircuitRoutesTable
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.#ctor
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.LocPrf
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Network
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.NextHop
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Path
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Weight
  langs:
  - csharp
  - vb
  name: ExpressRouteCircuitRoutesTable
  nameWithType: ExpressRouteCircuitRoutesTable
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExpressRouteCircuitRoutesTable
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nThe routes table associated with the ExpressRouteCircuit\n"
  example: []
  syntax:
    content: public class ExpressRouteCircuitRoutesTable
    content.vb: Public Class ExpressRouteCircuitRoutesTable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable
  langs:
  - csharp
  - vb
  name: ExpressRouteCircuitRoutesTable()
  nameWithType: ExpressRouteCircuitRoutesTable.ExpressRouteCircuitRoutesTable()
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.ExpressRouteCircuitRoutesTable()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the ExpressRouteCircuitRoutesTable\nclass.\n"
  example: []
  syntax:
    content: public ExpressRouteCircuitRoutesTable()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  id: '#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)'
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable
  langs:
  - csharp
  - vb
  name: ExpressRouteCircuitRoutesTable(String, String, String, Nullable<Int32>, String)
  nameWithType: ExpressRouteCircuitRoutesTable.ExpressRouteCircuitRoutesTable(String, String, String, Nullable<Int32>, String)
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.ExpressRouteCircuitRoutesTable(System.String, System.String, System.String, System.Nullable<System.Int32>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the ExpressRouteCircuitRoutesTable\nclass.\n"
  example: []
  syntax:
    content: public ExpressRouteCircuitRoutesTable(string network = null, string nextHop = null, string locPrf = null, int ? weight = null, string path = null)
    content.vb: Public Sub New(network As String = Nothing, nextHop As String = Nothing, locPrf As String = Nothing, weight As Integer? = Nothing, path As String = Nothing)
    parameters:
    - id: network
      type: System.String
      description: network
    - id: nextHop
      type: System.String
      description: nextHop
    - id: locPrf
      type: System.String
      description: locPrf
    - id: weight
      type: System.Nullable{System.Int32}
      description: weight.
    - id: path
      type: System.String
      description: path
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.#ctor*
  nameWithType.vb: ExpressRouteCircuitRoutesTable.ExpressRouteCircuitRoutesTable(String, String, String, Nullable(Of Int32), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.ExpressRouteCircuitRoutesTable(System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String)
  name.vb: ExpressRouteCircuitRoutesTable(String, String, String, Nullable(Of Int32), String)
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Network
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Network
  id: Network
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable
  langs:
  - csharp
  - vb
  name: Network
  nameWithType: ExpressRouteCircuitRoutesTable.Network
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Network
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Network
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets network\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "network")]

      public string Network { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="network")>

      Public Property Network As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Network*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: network
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.NextHop
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.NextHop
  id: NextHop
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable
  langs:
  - csharp
  - vb
  name: NextHop
  nameWithType: ExpressRouteCircuitRoutesTable.NextHop
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.NextHop
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NextHop
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets nextHop\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "nextHop")]

      public string NextHop { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="nextHop")>

      Public Property NextHop As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.NextHop*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: nextHop
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.LocPrf
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.LocPrf
  id: LocPrf
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable
  langs:
  - csharp
  - vb
  name: LocPrf
  nameWithType: ExpressRouteCircuitRoutesTable.LocPrf
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.LocPrf
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LocPrf
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets locPrf\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "locPrf")]

      public string LocPrf { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="locPrf")>

      Public Property LocPrf As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.LocPrf*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: locPrf
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Weight
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Weight
  id: Weight
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable
  langs:
  - csharp
  - vb
  name: Weight
  nameWithType: ExpressRouteCircuitRoutesTable.Weight
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Weight
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Weight
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets weight.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "weight")]

      public int ? Weight { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="weight")>

      Public Property Weight As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Weight*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: weight
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Path
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Path
  id: Path
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: ExpressRouteCircuitRoutesTable.Path
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Path
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Path
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuitRoutesTable.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets path\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "path")]

      public string Path { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="path")>

      Public Property Path As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Path*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: path
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.#ctor
  isExternal: false
  name: ExpressRouteCircuitRoutesTable
  nameWithType: ExpressRouteCircuitRoutesTable.ExpressRouteCircuitRoutesTable
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.ExpressRouteCircuitRoutesTable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Network*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Network
  isExternal: false
  name: Network
  nameWithType: ExpressRouteCircuitRoutesTable.Network
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Network
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.NextHop*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.NextHop
  isExternal: false
  name: NextHop
  nameWithType: ExpressRouteCircuitRoutesTable.NextHop
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.NextHop
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.LocPrf*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.LocPrf
  isExternal: false
  name: LocPrf
  nameWithType: ExpressRouteCircuitRoutesTable.LocPrf
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.LocPrf
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Weight*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Weight
  isExternal: false
  name: Weight
  nameWithType: ExpressRouteCircuitRoutesTable.Weight
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Weight
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Path*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Path
  isExternal: false
  name: Path
  nameWithType: ExpressRouteCircuitRoutesTable.Path
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitRoutesTable.Path
