### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  commentId: T:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  id: NetworkInterfaceDnsSettings
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDomainNameSuffix
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn
  langs:
  - csharp
  - vb
  name: NetworkInterfaceDnsSettings
  nameWithType: NetworkInterfaceDnsSettings
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NetworkInterfaceDnsSettings
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nDNS settings of a network interface.\n"
  example: []
  syntax:
    content: public class NetworkInterfaceDnsSettings
    content.vb: Public Class NetworkInterfaceDnsSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: NetworkInterfaceDnsSettings()
  nameWithType: NetworkInterfaceDnsSettings.NetworkInterfaceDnsSettings()
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.NetworkInterfaceDnsSettings()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the NetworkInterfaceDnsSettings\nclass.\n"
  example: []
  syntax:
    content: public NetworkInterfaceDnsSettings()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.String,System.String)
  id: '#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: NetworkInterfaceDnsSettings(IList<String>, IList<String>, String, String, String)
  nameWithType: NetworkInterfaceDnsSettings.NetworkInterfaceDnsSettings(IList<String>, IList<String>, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.NetworkInterfaceDnsSettings(System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the NetworkInterfaceDnsSettings\nclass.\n"
  example: []
  syntax:
    content: public NetworkInterfaceDnsSettings(IList<string> dnsServers = null, IList<string> appliedDnsServers = null, string internalDnsNameLabel = null, string internalFqdn = null, string internalDomainNameSuffix = null)
    content.vb: Public Sub New(dnsServers As IList(Of String) = Nothing, appliedDnsServers As IList(Of String) = Nothing, internalDnsNameLabel As String = Nothing, internalFqdn As String = Nothing, internalDomainNameSuffix As String = Nothing)
    parameters:
    - id: dnsServers
      type: System.Collections.Generic.IList{System.String}
      description: >-
        List of DNS servers IP addresses. Use

        'AzureProvidedDNS' to switch to azure provided DNS resolution.

        'AzureProvidedDNS' value cannot be combined with other IPs, it must

        be the only value in dnsServers collection.
    - id: appliedDnsServers
      type: System.Collections.Generic.IList{System.String}
      description: >-
        If the VM that uses this NIC is

        part of an Availability Set, then this list will have the union of

        all DNS servers from all NICs that are part of the Availability

        Set. This property is what is configured on each of those

        VMs.
    - id: internalDnsNameLabel
      type: System.String
      description: >-
        Relative DNS name for this NIC

        used for internal communications between VMs in the same virtual

        network.
    - id: internalFqdn
      type: System.String
      description: >-
        Fully qualified DNS name supporting

        internal communications between VMs in the same virtual

        network.
    - id: internalDomainNameSuffix
      type: System.String
      description: >-
        Even if internalDnsNameLabel

        is not specified, a DNS entry is created for the primary NIC of the

        VM. This DNS name can be constructed by concatenating the VM name

        with the value of internalDomainNameSuffix.
  overload: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor*
  nameWithType.vb: NetworkInterfaceDnsSettings.NetworkInterfaceDnsSettings(IList(Of String), IList(Of String), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.NetworkInterfaceDnsSettings(System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String), System.String, System.String, System.String)
  name.vb: NetworkInterfaceDnsSettings(IList(Of String), IList(Of String), String, String, String)
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers
  commentId: P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers
  id: DnsServers
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: DnsServers
  nameWithType: NetworkInterfaceDnsSettings.DnsServers
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DnsServers
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets list of DNS servers IP addresses. Use\n'AzureProvidedDNS' to switch to azure provided DNS resolution.\n'AzureProvidedDNS' value cannot be combined with other IPs, it must\nbe the only value in dnsServers collection.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "dnsServers")]

      public IList<string> DnsServers { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="dnsServers")>

      Public Property DnsServers As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: dnsServers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers
  commentId: P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers
  id: AppliedDnsServers
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: AppliedDnsServers
  nameWithType: NetworkInterfaceDnsSettings.AppliedDnsServers
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AppliedDnsServers
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets if the VM that uses this NIC is part of an\nAvailability Set, then this list will have the union of all DNS\nservers from all NICs that are part of the Availability Set. This\nproperty is what is configured on each of those VMs.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "appliedDnsServers")]

      public IList<string> AppliedDnsServers { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="appliedDnsServers")>

      Public Property AppliedDnsServers As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: appliedDnsServers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel
  commentId: P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel
  id: InternalDnsNameLabel
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: InternalDnsNameLabel
  nameWithType: NetworkInterfaceDnsSettings.InternalDnsNameLabel
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InternalDnsNameLabel
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets relative DNS name for this NIC used for internal\ncommunications between VMs in the same virtual network.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "internalDnsNameLabel")]

      public string InternalDnsNameLabel { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="internalDnsNameLabel")>

      Public Property InternalDnsNameLabel As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: internalDnsNameLabel
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn
  commentId: P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn
  id: InternalFqdn
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: InternalFqdn
  nameWithType: NetworkInterfaceDnsSettings.InternalFqdn
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InternalFqdn
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets fully qualified DNS name supporting internal\ncommunications between VMs in the same virtual network.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "internalFqdn")]

      public string InternalFqdn { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="internalFqdn")>

      Public Property InternalFqdn As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: internalFqdn
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDomainNameSuffix
  commentId: P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDomainNameSuffix
  id: InternalDomainNameSuffix
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: InternalDomainNameSuffix
  nameWithType: NetworkInterfaceDnsSettings.InternalDomainNameSuffix
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDomainNameSuffix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InternalDomainNameSuffix
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets even if internalDnsNameLabel is not specified, a DNS\nentry is created for the primary NIC of the VM. This DNS name can\nbe constructed by concatenating the VM name with the value of\ninternalDomainNameSuffix.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "internalDomainNameSuffix")]

      public string InternalDomainNameSuffix { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="internalDomainNameSuffix")>

      Public Property InternalDomainNameSuffix As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDomainNameSuffix*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: internalDomainNameSuffix
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor
  isExternal: false
  name: NetworkInterfaceDnsSettings
  nameWithType: NetworkInterfaceDnsSettings.NetworkInterfaceDnsSettings
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.NetworkInterfaceDnsSettings
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers
  isExternal: false
  name: DnsServers
  nameWithType: NetworkInterfaceDnsSettings.DnsServers
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers
  isExternal: false
  name: AppliedDnsServers
  nameWithType: NetworkInterfaceDnsSettings.AppliedDnsServers
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel
  isExternal: false
  name: InternalDnsNameLabel
  nameWithType: NetworkInterfaceDnsSettings.InternalDnsNameLabel
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn
  isExternal: false
  name: InternalFqdn
  nameWithType: NetworkInterfaceDnsSettings.InternalFqdn
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDomainNameSuffix*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDomainNameSuffix
  isExternal: false
  name: InternalDomainNameSuffix
  nameWithType: NetworkInterfaceDnsSettings.InternalDomainNameSuffix
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDomainNameSuffix
