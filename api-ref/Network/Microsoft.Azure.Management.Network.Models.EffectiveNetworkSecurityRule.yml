### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  commentId: T:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  id: EffectiveNetworkSecurityRule
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.#ctor
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Int32},System.String)
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Access
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationAddressPrefix
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationPortRange
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Direction
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedDestinationAddressPrefix
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedSourceAddressPrefix
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Name
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Priority
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Protocol
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourceAddressPrefix
  - Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourcePortRange
  langs:
  - csharp
  - vb
  name: EffectiveNetworkSecurityRule
  nameWithType: EffectiveNetworkSecurityRule
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EffectiveNetworkSecurityRule
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nEffective network security rules.\n"
  example: []
  syntax:
    content: public class EffectiveNetworkSecurityRule
    content.vb: Public Class EffectiveNetworkSecurityRule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: EffectiveNetworkSecurityRule()
  nameWithType: EffectiveNetworkSecurityRule.EffectiveNetworkSecurityRule()
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.EffectiveNetworkSecurityRule()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the EffectiveNetworkSecurityRule\nclass.\n"
  example: []
  syntax:
    content: public EffectiveNetworkSecurityRule()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Int32},System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Int32},System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Int32},System.String)'
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: EffectiveNetworkSecurityRule(String, String, String, String, String, String, IList<String>, IList<String>, String, Nullable<Int32>, String)
  nameWithType: EffectiveNetworkSecurityRule.EffectiveNetworkSecurityRule(String, String, String, String, String, String, IList<String>, IList<String>, String, Nullable<Int32>, String)
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.EffectiveNetworkSecurityRule(System.String, System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>, System.String, System.Nullable<System.Int32>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the EffectiveNetworkSecurityRule\nclass.\n"
  example: []
  syntax:
    content: public EffectiveNetworkSecurityRule(string name = null, string protocol = null, string sourcePortRange = null, string destinationPortRange = null, string sourceAddressPrefix = null, string destinationAddressPrefix = null, IList<string> expandedSourceAddressPrefix = null, IList<string> expandedDestinationAddressPrefix = null, string access = null, int ? priority = null, string direction = null)
    content.vb: Public Sub New(name As String = Nothing, protocol As String = Nothing, sourcePortRange As String = Nothing, destinationPortRange As String = Nothing, sourceAddressPrefix As String = Nothing, destinationAddressPrefix As String = Nothing, expandedSourceAddressPrefix As IList(Of String) = Nothing, expandedDestinationAddressPrefix As IList(Of String) = Nothing, access As String = Nothing, priority As Integer? = Nothing, direction As String = Nothing)
    parameters:
    - id: name
      type: System.String
      description: >-
        The name of the security rule specified by the

        user (if created by the user).
    - id: protocol
      type: System.String
      description: >-
        The network protocol this rule applies to.

        Possible values are: 'Tcp', 'Udp', and '*'. Possible values

        include: 'Tcp', 'Udp', '*'
    - id: sourcePortRange
      type: System.String
      description: The source port or range.
    - id: destinationPortRange
      type: System.String
      description: >-
        The destination port or

        range.
    - id: sourceAddressPrefix
      type: System.String
      description: >-
        The source address

        prefix.
    - id: destinationAddressPrefix
      type: System.String
      description: >-
        The destination address

        prefix.
    - id: expandedSourceAddressPrefix
      type: System.Collections.Generic.IList{System.String}
      description: >-
        The expanded source

        address prefix.
    - id: expandedDestinationAddressPrefix
      type: System.Collections.Generic.IList{System.String}
      description: >-
        Expanded destination

        address prefix.
    - id: access
      type: System.String
      description: >-
        Whether network traffic is allowed or denied.

        Possible values are: 'Allow' and 'Deny'. Possible values include:

        'Allow', 'Deny'
    - id: priority
      type: System.Nullable{System.Int32}
      description: The priority of the rule.
    - id: direction
      type: System.String
      description: >-
        The direction of the rule. Possible values

        are: 'Inbound and Outbound'. Possible values include: 'Inbound',

        'Outbound'
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.#ctor*
  nameWithType.vb: EffectiveNetworkSecurityRule.EffectiveNetworkSecurityRule(String, String, String, String, String, String, IList(Of String), IList(Of String), String, Nullable(Of Int32), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.EffectiveNetworkSecurityRule(System.String, System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String), System.String, System.Nullable(Of System.Int32), System.String)
  name.vb: EffectiveNetworkSecurityRule(String, String, String, String, String, String, IList(Of String), IList(Of String), String, Nullable(Of Int32), String)
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EffectiveNetworkSecurityRule.Name
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the name of the security rule specified by the user\n(if created by the user).\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Protocol
  commentId: P:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: EffectiveNetworkSecurityRule.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Protocol
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Protocol
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the network protocol this rule applies to. Possible\nvalues are: 'Tcp', 'Udp', and '*'. Possible values include: 'Tcp',\n'Udp', '*'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "protocol")]

      public string Protocol { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="protocol")>

      Public Property Protocol As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Protocol*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: protocol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourcePortRange
  commentId: P:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourcePortRange
  id: SourcePortRange
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: SourcePortRange
  nameWithType: EffectiveNetworkSecurityRule.SourcePortRange
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourcePortRange
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SourcePortRange
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the source port or range.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sourcePortRange")]

      public string SourcePortRange { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sourcePortRange")>

      Public Property SourcePortRange As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourcePortRange*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sourcePortRange
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationPortRange
  commentId: P:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationPortRange
  id: DestinationPortRange
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: DestinationPortRange
  nameWithType: EffectiveNetworkSecurityRule.DestinationPortRange
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationPortRange
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DestinationPortRange
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the destination port or range.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "destinationPortRange")]

      public string DestinationPortRange { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="destinationPortRange")>

      Public Property DestinationPortRange As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationPortRange*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: destinationPortRange
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourceAddressPrefix
  commentId: P:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourceAddressPrefix
  id: SourceAddressPrefix
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: SourceAddressPrefix
  nameWithType: EffectiveNetworkSecurityRule.SourceAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourceAddressPrefix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SourceAddressPrefix
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the source address prefix.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sourceAddressPrefix")]

      public string SourceAddressPrefix { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sourceAddressPrefix")>

      Public Property SourceAddressPrefix As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourceAddressPrefix*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sourceAddressPrefix
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationAddressPrefix
  commentId: P:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationAddressPrefix
  id: DestinationAddressPrefix
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: DestinationAddressPrefix
  nameWithType: EffectiveNetworkSecurityRule.DestinationAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationAddressPrefix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DestinationAddressPrefix
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the destination address prefix.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "destinationAddressPrefix")]

      public string DestinationAddressPrefix { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="destinationAddressPrefix")>

      Public Property DestinationAddressPrefix As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationAddressPrefix*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: destinationAddressPrefix
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedSourceAddressPrefix
  commentId: P:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedSourceAddressPrefix
  id: ExpandedSourceAddressPrefix
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: ExpandedSourceAddressPrefix
  nameWithType: EffectiveNetworkSecurityRule.ExpandedSourceAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedSourceAddressPrefix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExpandedSourceAddressPrefix
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the expanded source address prefix.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "expandedSourceAddressPrefix")]

      public IList<string> ExpandedSourceAddressPrefix { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="expandedSourceAddressPrefix")>

      Public Property ExpandedSourceAddressPrefix As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedSourceAddressPrefix*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: expandedSourceAddressPrefix
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedDestinationAddressPrefix
  commentId: P:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedDestinationAddressPrefix
  id: ExpandedDestinationAddressPrefix
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: ExpandedDestinationAddressPrefix
  nameWithType: EffectiveNetworkSecurityRule.ExpandedDestinationAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedDestinationAddressPrefix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExpandedDestinationAddressPrefix
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets expanded destination address prefix.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "expandedDestinationAddressPrefix")]

      public IList<string> ExpandedDestinationAddressPrefix { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="expandedDestinationAddressPrefix")>

      Public Property ExpandedDestinationAddressPrefix As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedDestinationAddressPrefix*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: expandedDestinationAddressPrefix
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Access
  commentId: P:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Access
  id: Access
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: Access
  nameWithType: EffectiveNetworkSecurityRule.Access
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Access
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Access
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets whether network traffic is allowed or denied. Possible\nvalues are: 'Allow' and 'Deny'. Possible values include: 'Allow',\n'Deny'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "access")]

      public string Access { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="access")>

      Public Property Access As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Access*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: access
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Priority
  commentId: P:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Priority
  id: Priority
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: EffectiveNetworkSecurityRule.Priority
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Priority
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Priority
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the priority of the rule.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "priority")]

      public int ? Priority { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="priority")>

      Public Property Priority As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Priority*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: priority
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Direction
  commentId: P:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Direction
  id: Direction
  parent: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: EffectiveNetworkSecurityRule.Direction
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Direction
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Direction
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/EffectiveNetworkSecurityRule.cs
    startLine: 141
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the direction of the rule. Possible values are:\n'Inbound and Outbound'. Possible values include: 'Inbound',\n'Outbound'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "direction")]

      public string Direction { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="direction")>

      Public Property Direction As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Direction*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: direction
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.#ctor
  isExternal: false
  name: EffectiveNetworkSecurityRule
  nameWithType: EffectiveNetworkSecurityRule.EffectiveNetworkSecurityRule
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.EffectiveNetworkSecurityRule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Name*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Name
  isExternal: false
  name: Name
  nameWithType: EffectiveNetworkSecurityRule.Name
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Name
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Protocol*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Protocol
  isExternal: false
  name: Protocol
  nameWithType: EffectiveNetworkSecurityRule.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Protocol
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourcePortRange*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourcePortRange
  isExternal: false
  name: SourcePortRange
  nameWithType: EffectiveNetworkSecurityRule.SourcePortRange
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourcePortRange
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationPortRange*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationPortRange
  isExternal: false
  name: DestinationPortRange
  nameWithType: EffectiveNetworkSecurityRule.DestinationPortRange
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationPortRange
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourceAddressPrefix*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourceAddressPrefix
  isExternal: false
  name: SourceAddressPrefix
  nameWithType: EffectiveNetworkSecurityRule.SourceAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.SourceAddressPrefix
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationAddressPrefix*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationAddressPrefix
  isExternal: false
  name: DestinationAddressPrefix
  nameWithType: EffectiveNetworkSecurityRule.DestinationAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.DestinationAddressPrefix
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedSourceAddressPrefix*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedSourceAddressPrefix
  isExternal: false
  name: ExpandedSourceAddressPrefix
  nameWithType: EffectiveNetworkSecurityRule.ExpandedSourceAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedSourceAddressPrefix
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedDestinationAddressPrefix*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedDestinationAddressPrefix
  isExternal: false
  name: ExpandedDestinationAddressPrefix
  nameWithType: EffectiveNetworkSecurityRule.ExpandedDestinationAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.ExpandedDestinationAddressPrefix
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Access*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Access
  isExternal: false
  name: Access
  nameWithType: EffectiveNetworkSecurityRule.Access
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Access
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Priority*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Priority
  isExternal: false
  name: Priority
  nameWithType: EffectiveNetworkSecurityRule.Priority
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Priority
- uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Direction*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Direction
  isExternal: false
  name: Direction
  nameWithType: EffectiveNetworkSecurityRule.Direction
  fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule.Direction
