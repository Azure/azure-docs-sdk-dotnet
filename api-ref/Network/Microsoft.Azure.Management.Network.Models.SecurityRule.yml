### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule
  commentId: T:Microsoft.Azure.Management.Network.Models.SecurityRule
  id: SecurityRule
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.SecurityRule.#ctor
  - Microsoft.Azure.Management.Network.Models.SecurityRule.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.SecurityRule.Access
  - Microsoft.Azure.Management.Network.Models.SecurityRule.Description
  - Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationAddressPrefix
  - Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationPortRange
  - Microsoft.Azure.Management.Network.Models.SecurityRule.Direction
  - Microsoft.Azure.Management.Network.Models.SecurityRule.Etag
  - Microsoft.Azure.Management.Network.Models.SecurityRule.Name
  - Microsoft.Azure.Management.Network.Models.SecurityRule.Priority
  - Microsoft.Azure.Management.Network.Models.SecurityRule.Protocol
  - Microsoft.Azure.Management.Network.Models.SecurityRule.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.SecurityRule.SourceAddressPrefix
  - Microsoft.Azure.Management.Network.Models.SecurityRule.SourcePortRange
  - Microsoft.Azure.Management.Network.Models.SecurityRule.Validate
  langs:
  - csharp
  - vb
  name: SecurityRule
  nameWithType: SecurityRule
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SecurityRule
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nNetwork security rule.\n"
  example: []
  syntax:
    content: 'public class SecurityRule : SubResource, IResource'
    content.vb: >-
      Public Class SecurityRule
          Inherits SubResource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.SubResource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.SubResource.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.SecurityRule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: SecurityRule()
  nameWithType: SecurityRule.SecurityRule()
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.SecurityRule()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the SecurityRule class.\n"
  example: []
  syntax:
    content: public SecurityRule()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.SecurityRule.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: SecurityRule(String, String, String, String, String, String, String, String, String, Nullable<Int32>, String, String, String)
  nameWithType: SecurityRule.SecurityRule(String, String, String, String, String, String, String, String, String, Nullable<Int32>, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.SecurityRule(System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the SecurityRule class.\n"
  example: []
  syntax:
    content: public SecurityRule(string protocol, string sourceAddressPrefix, string destinationAddressPrefix, string access, string direction, string id = null, string description = null, string sourcePortRange = null, string destinationPortRange = null, int ? priority = null, string provisioningState = null, string name = null, string etag = null)
    content.vb: Public Sub New(protocol As String, sourceAddressPrefix As String, destinationAddressPrefix As String, access As String, direction As String, id As String = Nothing, description As String = Nothing, sourcePortRange As String = Nothing, destinationPortRange As String = Nothing, priority As Integer? = Nothing, provisioningState As String = Nothing, name As String = Nothing, etag As String = Nothing)
    parameters:
    - id: protocol
      type: System.String
      description: >-
        Network protocol this rule applies to.

        Possible values are 'Tcp', 'Udp', and '*'. Possible values include:

        'Tcp', 'Udp', '*'
    - id: sourceAddressPrefix
      type: System.String
      description: "The CIDR or source IP range.\nAsterix '*' can also be used to match all source IPs. Default tags\nsuch as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can\nalso be used. If this is an ingress rule, specifies where network\ntraffic originates from. "
    - id: destinationAddressPrefix
      type: System.String
      description: >-
        The destination address

        prefix. CIDR or source IP range. Asterix '*' can also be used to

        match all source IPs. Default tags such as 'VirtualNetwork',

        'AzureLoadBalancer' and 'Internet' can also be used.
    - id: access
      type: System.String
      description: >-
        The network traffic is allowed or denied.

        Possible values are: 'Allow' and 'Deny'. Possible values include:

        'Allow', 'Deny'
    - id: direction
      type: System.String
      description: >-
        The direction of the rule. The direction

        specifies if rule will be evaluated on incoming or outcoming

        traffic. Possible values are: 'Inbound' and 'Outbound'. Possible

        values include: 'Inbound', 'Outbound'
    - id: id
      type: System.String
      description: Resource ID.
    - id: description
      type: System.String
      description: >-
        A description for this rule. Restricted

        to 140 chars.
    - id: sourcePortRange
      type: System.String
      description: >-
        The source port or range. Integer or

        range between 0 and 65535. Asterix '*' can also be used to match

        all ports.
    - id: destinationPortRange
      type: System.String
      description: >-
        The destination port or range.

        Integer or range between 0 and 65535. Asterix '*' can also be used

        to match all ports.
    - id: priority
      type: System.Nullable{System.Int32}
      description: >-
        The priority of the rule. The value can be

        between 100 and 4096. The priority number must be unique for each

        rule in the collection. The lower the priority number, the higher

        the priority of the rule.
    - id: provisioningState
      type: System.String
      description: >-
        The provisioning state of the

        public IP resource. Possible values are: 'Updating', 'Deleting',

        and 'Failed'.
    - id: name
      type: System.String
      description: >-
        The name of the resource that is unique within a

        resource group. This name can be used to access the

        resource.
    - id: etag
      type: System.String
      description: >-
        A unique read-only string that changes whenever

        the resource is updated.
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.#ctor*
  nameWithType.vb: SecurityRule.SecurityRule(String, String, String, String, String, String, String, String, String, Nullable(Of Int32), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.SecurityRule.SecurityRule(System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String, System.String)
  name.vb: SecurityRule(String, String, String, String, String, String, String, String, String, Nullable(Of Int32), String, String, String)
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Description
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.Description
  id: Description
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: SecurityRule.Description
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Description
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Description
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a description for this rule. Restricted to 140 chars.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.description")]

      public string Description { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.description")>

      Public Property Description As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.Description*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Protocol
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: SecurityRule.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Protocol
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Protocol
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets network protocol this rule applies to. Possible values\nare 'Tcp', 'Udp', and '*'. Possible values include: 'Tcp', 'Udp',\n'*'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.protocol")]

      public string Protocol { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.protocol")>

      Public Property Protocol As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.Protocol*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.protocol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.SourcePortRange
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.SourcePortRange
  id: SourcePortRange
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: SourcePortRange
  nameWithType: SecurityRule.SourcePortRange
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.SourcePortRange
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SourcePortRange
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the source port or range. Integer or range between 0\nand 65535. Asterix '*' can also be used to match all ports.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.sourcePortRange")]

      public string SourcePortRange { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.sourcePortRange")>

      Public Property SourcePortRange As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.SourcePortRange*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.sourcePortRange
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationPortRange
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationPortRange
  id: DestinationPortRange
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: DestinationPortRange
  nameWithType: SecurityRule.DestinationPortRange
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationPortRange
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DestinationPortRange
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the destination port or range. Integer or range\nbetween 0 and 65535. Asterix '*' can also be used to match all\nports.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.destinationPortRange")]

      public string DestinationPortRange { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.destinationPortRange")>

      Public Property DestinationPortRange As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationPortRange*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.destinationPortRange
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.SourceAddressPrefix
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.SourceAddressPrefix
  id: SourceAddressPrefix
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: SourceAddressPrefix
  nameWithType: SecurityRule.SourceAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.SourceAddressPrefix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SourceAddressPrefix
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 125
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the CIDR or source IP range. Asterix '*' can also be\nused to match all source IPs. Default tags such as\n'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be\nused. If this is an ingress rule, specifies where network traffic\noriginates from.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.sourceAddressPrefix")]

      public string SourceAddressPrefix { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.sourceAddressPrefix")>

      Public Property SourceAddressPrefix As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.SourceAddressPrefix*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.sourceAddressPrefix
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationAddressPrefix
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationAddressPrefix
  id: DestinationAddressPrefix
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: DestinationAddressPrefix
  nameWithType: SecurityRule.DestinationAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationAddressPrefix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DestinationAddressPrefix
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the destination address prefix. CIDR or source IP\nrange. Asterix '*' can also be used to match all source IPs.\nDefault tags such as 'VirtualNetwork', 'AzureLoadBalancer' and\n'Internet' can also be used.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.destinationAddressPrefix")]

      public string DestinationAddressPrefix { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.destinationAddressPrefix")>

      Public Property DestinationAddressPrefix As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationAddressPrefix*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.destinationAddressPrefix
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Access
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.Access
  id: Access
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: Access
  nameWithType: SecurityRule.Access
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Access
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Access
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the network traffic is allowed or denied. Possible\nvalues are: 'Allow' and 'Deny'. Possible values include: 'Allow',\n'Deny'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.access")]

      public string Access { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.access")>

      Public Property Access As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.Access*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.access
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Priority
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.Priority
  id: Priority
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: SecurityRule.Priority
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Priority
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Priority
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the priority of the rule. The value can be between 100\nand 4096. The priority number must be unique for each rule in the\ncollection. The lower the priority number, the higher the priority\nof the rule.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.priority")]

      public int ? Priority { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.priority")>

      Public Property Priority As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.Priority*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.priority
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Direction
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.Direction
  id: Direction
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: SecurityRule.Direction
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Direction
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Direction
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 160
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the direction of the rule. The direction specifies if\nrule will be evaluated on incoming or outcoming traffic. Possible\nvalues are: 'Inbound' and 'Outbound'. Possible values include:\n'Inbound', 'Outbound'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.direction")]

      public string Direction { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.direction")>

      Public Property Direction As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.Direction*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.direction
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: SecurityRule.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 167
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the provisioning state of the public IP resource.\nPossible values are: 'Updating', 'Deleting', and 'Failed'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SecurityRule.Name
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 174
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the name of the resource that is unique within a\nresource group. This name can be used to access the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRule.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: SecurityRule.Etag
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 181
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a unique read-only string that changes whenever the\nresource is updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Validate
  commentId: M:Microsoft.Azure.Management.Network.Models.SecurityRule.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Network.Models.SecurityRule
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: SecurityRule.Validate()
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRule.cs
    startLine: 190
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Network.Models.SecurityRule.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.SubResource
  commentId: T:Microsoft.Azure.Management.Network.Models.SubResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: SubResource
  nameWithType: SubResource
  fullName: Microsoft.Azure.Management.Network.Models.SubResource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.SubResource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.SubResource.Id
  parent: Microsoft.Azure.Management.Network.Models.SubResource
  isExternal: false
  name: Id
  nameWithType: SubResource.Id
  fullName: Microsoft.Azure.Management.Network.Models.SubResource.Id
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.#ctor
  isExternal: false
  name: SecurityRule
  nameWithType: SecurityRule.SecurityRule
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.SecurityRule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Description*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.Description
  isExternal: false
  name: Description
  nameWithType: SecurityRule.Description
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Description
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Protocol*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.Protocol
  isExternal: false
  name: Protocol
  nameWithType: SecurityRule.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Protocol
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.SourcePortRange*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.SourcePortRange
  isExternal: false
  name: SourcePortRange
  nameWithType: SecurityRule.SourcePortRange
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.SourcePortRange
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationPortRange*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationPortRange
  isExternal: false
  name: DestinationPortRange
  nameWithType: SecurityRule.DestinationPortRange
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationPortRange
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.SourceAddressPrefix*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.SourceAddressPrefix
  isExternal: false
  name: SourceAddressPrefix
  nameWithType: SecurityRule.SourceAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.SourceAddressPrefix
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationAddressPrefix*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationAddressPrefix
  isExternal: false
  name: DestinationAddressPrefix
  nameWithType: SecurityRule.DestinationAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.DestinationAddressPrefix
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Access*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.Access
  isExternal: false
  name: Access
  nameWithType: SecurityRule.Access
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Access
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Priority*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.Priority
  isExternal: false
  name: Priority
  nameWithType: SecurityRule.Priority
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Priority
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Direction*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.Direction
  isExternal: false
  name: Direction
  nameWithType: SecurityRule.Direction
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Direction
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: SecurityRule.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Name*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.Name
  isExternal: false
  name: Name
  nameWithType: SecurityRule.Name
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Name
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.Etag
  isExternal: false
  name: Etag
  nameWithType: SecurityRule.Etag
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Etag
- uid: Microsoft.Azure.Management.Network.Models.SecurityRule.Validate*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRule.Validate
  isExternal: false
  name: Validate
  nameWithType: SecurityRule.Validate
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRule.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
