### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.Usage
  commentId: T:Microsoft.Azure.Management.Network.Models.Usage
  id: Usage
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.Usage.#ctor
  - Microsoft.Azure.Management.Network.Models.Usage.#ctor(System.Int64,System.Int64,Microsoft.Azure.Management.Network.Models.UsageName)
  - Microsoft.Azure.Management.Network.Models.Usage.CurrentValue
  - Microsoft.Azure.Management.Network.Models.Usage.Limit
  - Microsoft.Azure.Management.Network.Models.Usage.Name
  - Microsoft.Azure.Management.Network.Models.Usage.Unit
  - Microsoft.Azure.Management.Network.Models.Usage.Validate
  langs:
  - csharp
  - vb
  name: Usage
  nameWithType: Usage
  fullName: Microsoft.Azure.Management.Network.Models.Usage
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Usage
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nDescribes network resource usage.\n"
  example: []
  syntax:
    content: public class Usage
    content.vb: Public Class Usage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.Usage.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.Usage.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.Usage
  langs:
  - csharp
  - vb
  name: Usage()
  nameWithType: Usage.Usage()
  fullName: Microsoft.Azure.Management.Network.Models.Usage.Usage()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the Usage class.\n"
  example: []
  syntax:
    content: public Usage()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.Usage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Usage.#ctor(System.Int64,System.Int64,Microsoft.Azure.Management.Network.Models.UsageName)
  commentId: M:Microsoft.Azure.Management.Network.Models.Usage.#ctor(System.Int64,System.Int64,Microsoft.Azure.Management.Network.Models.UsageName)
  id: '#ctor(System.Int64,System.Int64,Microsoft.Azure.Management.Network.Models.UsageName)'
  parent: Microsoft.Azure.Management.Network.Models.Usage
  langs:
  - csharp
  - vb
  name: Usage(Int64, Int64, UsageName)
  nameWithType: Usage.Usage(Int64, Int64, UsageName)
  fullName: Microsoft.Azure.Management.Network.Models.Usage.Usage(System.Int64, System.Int64, Microsoft.Azure.Management.Network.Models.UsageName)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the Usage class.\n"
  example: []
  syntax:
    content: public Usage(long currentValue, long limit, UsageName name)
    content.vb: Public Sub New(currentValue As Long, limit As Long, name As UsageName)
    parameters:
    - id: currentValue
      type: System.Int64
      description: The current value of the usage.
    - id: limit
      type: System.Int64
      description: The limit of usage.
    - id: name
      type: Microsoft.Azure.Management.Network.Models.UsageName
      description: The name of the type of usage.
  overload: Microsoft.Azure.Management.Network.Models.Usage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Usage.CurrentValue
  commentId: P:Microsoft.Azure.Management.Network.Models.Usage.CurrentValue
  id: CurrentValue
  parent: Microsoft.Azure.Management.Network.Models.Usage
  langs:
  - csharp
  - vb
  name: CurrentValue
  nameWithType: Usage.CurrentValue
  fullName: Microsoft.Azure.Management.Network.Models.Usage.CurrentValue
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CurrentValue
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the current value of the usage.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "currentValue")]

      public long CurrentValue { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="currentValue")>

      Public Property CurrentValue As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.Azure.Management.Network.Models.Usage.CurrentValue*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: currentValue
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Usage.Limit
  commentId: P:Microsoft.Azure.Management.Network.Models.Usage.Limit
  id: Limit
  parent: Microsoft.Azure.Management.Network.Models.Usage
  langs:
  - csharp
  - vb
  name: Limit
  nameWithType: Usage.Limit
  fullName: Microsoft.Azure.Management.Network.Models.Usage.Limit
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Limit
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the limit of usage.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "limit")]

      public long Limit { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="limit")>

      Public Property Limit As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.Azure.Management.Network.Models.Usage.Limit*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: limit
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Usage.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.Usage.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.Usage
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Usage.Name
  fullName: Microsoft.Azure.Management.Network.Models.Usage.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the name of the type of usage.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public UsageName Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As UsageName
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.UsageName
  overload: Microsoft.Azure.Management.Network.Models.Usage.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Usage.Unit
  commentId: P:Microsoft.Azure.Management.Network.Models.Usage.Unit
  id: Unit
  parent: Microsoft.Azure.Management.Network.Models.Usage
  langs:
  - csharp
  - vb
  name: Unit
  nameWithType: Usage.Unit
  fullName: Microsoft.Azure.Management.Network.Models.Usage.Unit
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Unit
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nAn enum describing the unit of measurement.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "unit")]

      public static string Unit { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="unit")>

      Public Shared ReadOnly Property Unit As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.Usage.Unit*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: unit
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Management.Network.Models.Usage.Validate
  commentId: M:Microsoft.Azure.Management.Network.Models.Usage.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Network.Models.Usage
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Usage.Validate()
  fullName: Microsoft.Azure.Management.Network.Models.Usage.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/Usage.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Network.Models.Usage.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.Usage.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.Usage.#ctor
  isExternal: false
  name: Usage
  nameWithType: Usage.Usage
  fullName: Microsoft.Azure.Management.Network.Models.Usage.Usage
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Azure.Management.Network.Models.UsageName
  commentId: T:Microsoft.Azure.Management.Network.Models.UsageName
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: UsageName
  nameWithType: UsageName
  fullName: Microsoft.Azure.Management.Network.Models.UsageName
- uid: Microsoft.Azure.Management.Network.Models.Usage.CurrentValue*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.Usage.CurrentValue
  isExternal: false
  name: CurrentValue
  nameWithType: Usage.CurrentValue
  fullName: Microsoft.Azure.Management.Network.Models.Usage.CurrentValue
- uid: Microsoft.Azure.Management.Network.Models.Usage.Limit*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.Usage.Limit
  isExternal: false
  name: Limit
  nameWithType: Usage.Limit
  fullName: Microsoft.Azure.Management.Network.Models.Usage.Limit
- uid: Microsoft.Azure.Management.Network.Models.Usage.Name*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.Usage.Name
  isExternal: false
  name: Name
  nameWithType: Usage.Name
  fullName: Microsoft.Azure.Management.Network.Models.Usage.Name
- uid: Microsoft.Azure.Management.Network.Models.Usage.Unit*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.Usage.Unit
  isExternal: false
  name: Unit
  nameWithType: Usage.Unit
  fullName: Microsoft.Azure.Management.Network.Models.Usage.Unit
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Network.Models.Usage.Validate*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.Usage.Validate
  isExternal: false
  name: Validate
  nameWithType: Usage.Validate
  fullName: Microsoft.Azure.Management.Network.Models.Usage.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
