### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool
  commentId: T:Microsoft.Azure.Management.Network.Models.InboundNatPool
  id: InboundNatPool
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.InboundNatPool.#ctor
  - Microsoft.Azure.Management.Network.Models.InboundNatPool.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.String,Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.InboundNatPool.BackendPort
  - Microsoft.Azure.Management.Network.Models.InboundNatPool.Etag
  - Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendIPConfiguration
  - Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeEnd
  - Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeStart
  - Microsoft.Azure.Management.Network.Models.InboundNatPool.Name
  - Microsoft.Azure.Management.Network.Models.InboundNatPool.Protocol
  - Microsoft.Azure.Management.Network.Models.InboundNatPool.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.InboundNatPool.Validate
  langs:
  - csharp
  - vb
  name: InboundNatPool
  nameWithType: InboundNatPool
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InboundNatPool
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInbound NAT pool of the load balancer.\n"
  example: []
  syntax:
    content: 'public class InboundNatPool : SubResource, IResource'
    content.vb: >-
      Public Class InboundNatPool
          Inherits SubResource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.SubResource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.SubResource.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.InboundNatPool.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.InboundNatPool
  langs:
  - csharp
  - vb
  name: InboundNatPool()
  nameWithType: InboundNatPool.InboundNatPool()
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.InboundNatPool()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the InboundNatPool class.\n"
  example: []
  syntax:
    content: public InboundNatPool()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.InboundNatPool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.String,Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.InboundNatPool.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.String,Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.String,System.String)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Int32,System.String,Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.InboundNatPool
  langs:
  - csharp
  - vb
  name: InboundNatPool(String, Int32, Int32, Int32, String, SubResource, String, String, String)
  nameWithType: InboundNatPool.InboundNatPool(String, Int32, Int32, Int32, String, SubResource, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.InboundNatPool(System.String, System.Int32, System.Int32, System.Int32, System.String, Microsoft.Azure.Management.Network.Models.SubResource, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the InboundNatPool class.\n"
  example: []
  syntax:
    content: public InboundNatPool(string protocol, int frontendPortRangeStart, int frontendPortRangeEnd, int backendPort, string id = null, SubResource frontendIPConfiguration = null, string provisioningState = null, string name = null, string etag = null)
    content.vb: Public Sub New(protocol As String, frontendPortRangeStart As Integer, frontendPortRangeEnd As Integer, backendPort As Integer, id As String = Nothing, frontendIPConfiguration As SubResource = Nothing, provisioningState As String = Nothing, name As String = Nothing, etag As String = Nothing)
    parameters:
    - id: protocol
      type: System.String
      description: >-
        The transport protocol for the endpoint.

        Possible values are: 'Udp' or 'Tcp'. Possible values include:

        'Udp', 'Tcp'
    - id: frontendPortRangeStart
      type: System.Int32
      description: >-
        The first port number in the

        range of external ports that will be used to provide Inbound Nat to

        NICs associated with a load balancer. Acceptable values range

        between 1 and 65534.
    - id: frontendPortRangeEnd
      type: System.Int32
      description: >-
        The last port number in the

        range of external ports that will be used to provide Inbound Nat to

        NICs associated with a load balancer. Acceptable values range

        between 1 and 65535.
    - id: backendPort
      type: System.Int32
      description: >-
        The port used for internal connections on

        the endpoint. Acceptable values are between 1 and 65535.
    - id: id
      type: System.String
      description: Resource ID.
    - id: frontendIPConfiguration
      type: Microsoft.Azure.Management.Network.Models.SubResource
      description: >-
        A reference to frontend IP

        addresses.
    - id: provisioningState
      type: System.String
      description: >-
        Gets the provisioning state of the

        PublicIP resource. Possible values are: 'Updating', 'Deleting', and

        'Failed'.
    - id: name
      type: System.String
      description: >-
        The name of the resource that is unique within a

        resource group. This name can be used to access the

        resource.
    - id: etag
      type: System.String
      description: >-
        A unique read-only string that changes whenever

        the resource is updated.
  overload: Microsoft.Azure.Management.Network.Models.InboundNatPool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendIPConfiguration
  commentId: P:Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendIPConfiguration
  id: FrontendIPConfiguration
  parent: Microsoft.Azure.Management.Network.Models.InboundNatPool
  langs:
  - csharp
  - vb
  name: FrontendIPConfiguration
  nameWithType: InboundNatPool.FrontendIPConfiguration
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendIPConfiguration
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendIPConfiguration
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a reference to frontend IP addresses.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.frontendIPConfiguration")]

      public SubResource FrontendIPConfiguration { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.frontendIPConfiguration")>

      Public Property FrontendIPConfiguration As SubResource
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.SubResource
  overload: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendIPConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.frontendIPConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.Protocol
  commentId: P:Microsoft.Azure.Management.Network.Models.InboundNatPool.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Network.Models.InboundNatPool
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: InboundNatPool.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.Protocol
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Protocol
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the transport protocol for the endpoint. Possible\nvalues are: 'Udp' or 'Tcp'. Possible values include: 'Udp', 'Tcp'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.protocol")]

      public string Protocol { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.protocol")>

      Public Property Protocol As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.InboundNatPool.Protocol*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.protocol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeStart
  commentId: P:Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeStart
  id: FrontendPortRangeStart
  parent: Microsoft.Azure.Management.Network.Models.InboundNatPool
  langs:
  - csharp
  - vb
  name: FrontendPortRangeStart
  nameWithType: InboundNatPool.FrontendPortRangeStart
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeStart
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendPortRangeStart
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the first port number in the range of external ports\nthat will be used to provide Inbound Nat to NICs associated with a\nload balancer. Acceptable values range between 1 and 65534.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.frontendPortRangeStart")]

      public int FrontendPortRangeStart { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.frontendPortRangeStart")>

      Public Property FrontendPortRangeStart As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeStart*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.frontendPortRangeStart
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeEnd
  commentId: P:Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeEnd
  id: FrontendPortRangeEnd
  parent: Microsoft.Azure.Management.Network.Models.InboundNatPool
  langs:
  - csharp
  - vb
  name: FrontendPortRangeEnd
  nameWithType: InboundNatPool.FrontendPortRangeEnd
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeEnd
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendPortRangeEnd
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the last port number in the range of external ports\nthat will be used to provide Inbound Nat to NICs associated with a\nload balancer. Acceptable values range between 1 and 65535.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.frontendPortRangeEnd")]

      public int FrontendPortRangeEnd { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.frontendPortRangeEnd")>

      Public Property FrontendPortRangeEnd As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeEnd*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.frontendPortRangeEnd
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.BackendPort
  commentId: P:Microsoft.Azure.Management.Network.Models.InboundNatPool.BackendPort
  id: BackendPort
  parent: Microsoft.Azure.Management.Network.Models.InboundNatPool
  langs:
  - csharp
  - vb
  name: BackendPort
  nameWithType: InboundNatPool.BackendPort
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.BackendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendPort
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the port used for internal connections on the\nendpoint. Acceptable values are between 1 and 65535.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.backendPort")]

      public int BackendPort { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.backendPort")>

      Public Property BackendPort As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Management.Network.Models.InboundNatPool.BackendPort*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.backendPort
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.InboundNatPool.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.InboundNatPool
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: InboundNatPool.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the provisioning state of the PublicIP resource. Possible\nvalues are: 'Updating', 'Deleting', and 'Failed'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.InboundNatPool.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.InboundNatPool.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.InboundNatPool
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: InboundNatPool.Name
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 116
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the name of the resource that is unique within a\nresource group. This name can be used to access the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.InboundNatPool.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.InboundNatPool.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.InboundNatPool
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: InboundNatPool.Etag
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a unique read-only string that changes whenever the\nresource is updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.InboundNatPool.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.Validate
  commentId: M:Microsoft.Azure.Management.Network.Models.InboundNatPool.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Network.Models.InboundNatPool
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: InboundNatPool.Validate()
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/InboundNatPool.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Network.Models.InboundNatPool.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.SubResource
  commentId: T:Microsoft.Azure.Management.Network.Models.SubResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: SubResource
  nameWithType: SubResource
  fullName: Microsoft.Azure.Management.Network.Models.SubResource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.SubResource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.SubResource.Id
  parent: Microsoft.Azure.Management.Network.Models.SubResource
  isExternal: false
  name: Id
  nameWithType: SubResource.Id
  fullName: Microsoft.Azure.Management.Network.Models.SubResource.Id
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.InboundNatPool.#ctor
  isExternal: false
  name: InboundNatPool
  nameWithType: InboundNatPool.InboundNatPool
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.InboundNatPool
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendIPConfiguration*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendIPConfiguration
  isExternal: false
  name: FrontendIPConfiguration
  nameWithType: InboundNatPool.FrontendIPConfiguration
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendIPConfiguration
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.Protocol*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.InboundNatPool.Protocol
  isExternal: false
  name: Protocol
  nameWithType: InboundNatPool.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.Protocol
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeStart*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeStart
  isExternal: false
  name: FrontendPortRangeStart
  nameWithType: InboundNatPool.FrontendPortRangeStart
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeStart
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeEnd*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeEnd
  isExternal: false
  name: FrontendPortRangeEnd
  nameWithType: InboundNatPool.FrontendPortRangeEnd
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.FrontendPortRangeEnd
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.BackendPort*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.InboundNatPool.BackendPort
  isExternal: false
  name: BackendPort
  nameWithType: InboundNatPool.BackendPort
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.BackendPort
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.InboundNatPool.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: InboundNatPool.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.Name*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.InboundNatPool.Name
  isExternal: false
  name: Name
  nameWithType: InboundNatPool.Name
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.Name
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.InboundNatPool.Etag
  isExternal: false
  name: Etag
  nameWithType: InboundNatPool.Etag
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.Etag
- uid: Microsoft.Azure.Management.Network.Models.InboundNatPool.Validate*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.InboundNatPool.Validate
  isExternal: false
  name: Validate
  nameWithType: InboundNatPool.Validate
  fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
