### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer
  commentId: T:Microsoft.Azure.Management.Network.Models.LoadBalancer
  id: LoadBalancer
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.#ctor
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.BackendAddressPool},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.LoadBalancingRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Probe},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatPool},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.OutboundNatRule},System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.BackendAddressPools
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.Etag
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.FrontendIPConfigurations
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatPools
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatRules
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancingRules
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.OutboundNatRules
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.Probes
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.LoadBalancer.ResourceGuid
  langs:
  - csharp
  - vb
  name: LoadBalancer
  nameWithType: LoadBalancer
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LoadBalancer
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nLoadBalancer resource\n"
  example: []
  syntax:
    content: 'public class LoadBalancer : Resource, IResource'
    content.vb: >-
      Public Class LoadBalancer
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.Resource.Id
  - Microsoft.Azure.Management.Network.Models.Resource.Name
  - Microsoft.Azure.Management.Network.Models.Resource.Type
  - Microsoft.Azure.Management.Network.Models.Resource.Location
  - Microsoft.Azure.Management.Network.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.LoadBalancer.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: LoadBalancer()
  nameWithType: LoadBalancer.LoadBalancer()
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancer()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the LoadBalancer class.\n"
  example: []
  syntax:
    content: public LoadBalancer()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.BackendAddressPool},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.LoadBalancingRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Probe},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatPool},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.OutboundNatRule},System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.LoadBalancer.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.BackendAddressPool},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.LoadBalancingRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Probe},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatPool},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.OutboundNatRule},System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.BackendAddressPool},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.LoadBalancingRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Probe},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatPool},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.OutboundNatRule},System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: LoadBalancer(String, String, String, String, IDictionary<String, String>, IList<FrontendIPConfiguration>, IList<BackendAddressPool>, IList<LoadBalancingRule>, IList<Probe>, IList<InboundNatRule>, IList<InboundNatPool>, IList<OutboundNatRule>, String, String, String)
  nameWithType: LoadBalancer.LoadBalancer(String, String, String, String, IDictionary<String, String>, IList<FrontendIPConfiguration>, IList<BackendAddressPool>, IList<LoadBalancingRule>, IList<Probe>, IList<InboundNatRule>, IList<InboundNatPool>, IList<OutboundNatRule>, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancer(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.BackendAddressPool>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.LoadBalancingRule>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.Probe>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.InboundNatRule>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.InboundNatPool>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.OutboundNatRule>, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the LoadBalancer class.\n"
  example: []
  syntax:
    content: public LoadBalancer(string id = null, string name = null, string type = null, string location = null, IDictionary<string, string> tags = null, IList<FrontendIPConfiguration> frontendIPConfigurations = null, IList<BackendAddressPool> backendAddressPools = null, IList<LoadBalancingRule> loadBalancingRules = null, IList<Probe> probes = null, IList<InboundNatRule> inboundNatRules = null, IList<InboundNatPool> inboundNatPools = null, IList<OutboundNatRule> outboundNatRules = null, string resourceGuid = null, string provisioningState = null, string etag = null)
    content.vb: Public Sub New(id As String = Nothing, name As String = Nothing, type As String = Nothing, location As String = Nothing, tags As IDictionary(Of String, String) = Nothing, frontendIPConfigurations As IList(Of FrontendIPConfiguration) = Nothing, backendAddressPools As IList(Of BackendAddressPool) = Nothing, loadBalancingRules As IList(Of LoadBalancingRule) = Nothing, probes As IList(Of Probe) = Nothing, inboundNatRules As IList(Of InboundNatRule) = Nothing, inboundNatPools As IList(Of InboundNatPool) = Nothing, outboundNatRules As IList(Of OutboundNatRule) = Nothing, resourceGuid As String = Nothing, provisioningState As String = Nothing, etag As String = Nothing)
    parameters:
    - id: id
      type: System.String
      description: Resource ID.
    - id: name
      type: System.String
      description: Resource name.
    - id: type
      type: System.String
      description: Resource type.
    - id: location
      type: System.String
      description: Resource location.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Resource tags.
    - id: frontendIPConfigurations
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration}
      description: >-
        Object representing the

        frontend IPs to be used for the load balancer
    - id: backendAddressPools
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.BackendAddressPool}
      description: >-
        Collection of backend address

        pools used by a load balancer
    - id: loadBalancingRules
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.LoadBalancingRule}
      description: "Object collection representing the\nload balancing rules Gets the provisioning "
    - id: probes
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Probe}
      description: >-
        Collection of probe objects used in the load

        balancer
    - id: inboundNatRules
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatRule}
      description: >-
        Collection of inbound NAT Rules used

        by a load balancer. Defining inbound NAT rules on your load

        balancer is mutually exclusive with defining an inbound NAT pool.

        Inbound NAT pools are referenced from virtual machine scale sets.

        NICs that are associated with individual virtual machines cannot

        reference an Inbound NAT pool. They have to reference individual

        inbound NAT rules.
    - id: inboundNatPools
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatPool}
      description: >-
        Defines an external port range for

        inbound NAT to a single backend port on NICs associated with a load

        balancer. Inbound NAT rules are created automatically for each NIC

        associated with the Load Balancer using an external port from this

        range. Defining an Inbound NAT pool on your Load Balancer is

        mutually exclusive with defining inbound Nat rules. Inbound NAT

        pools are referenced from virtual machine scale sets. NICs that are

        associated with individual virtual machines cannot reference an

        inbound NAT pool. They have to reference individual inbound NAT

        rules.
    - id: outboundNatRules
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.OutboundNatRule}
      description: The outbound NAT rules.
    - id: resourceGuid
      type: System.String
      description: >-
        The resource GUID property of the load

        balancer resource.
    - id: provisioningState
      type: System.String
      description: >-
        Gets the provisioning state of the

        PublicIP resource. Possible values are: 'Updating', 'Deleting', and

        'Failed'.
    - id: etag
      type: System.String
      description: >-
        A unique read-only string that changes whenever

        the resource is updated.
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.#ctor*
  nameWithType.vb: LoadBalancer.LoadBalancer(String, String, String, String, IDictionary(Of String, String), IList(Of FrontendIPConfiguration), IList(Of BackendAddressPool), IList(Of LoadBalancingRule), IList(Of Probe), IList(Of InboundNatRule), IList(Of InboundNatPool), IList(Of OutboundNatRule), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancer(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.BackendAddressPool), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.LoadBalancingRule), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.Probe), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.InboundNatRule), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.InboundNatPool), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.OutboundNatRule), System.String, System.String, System.String)
  name.vb: LoadBalancer(String, String, String, String, IDictionary(Of String, String), IList(Of FrontendIPConfiguration), IList(Of BackendAddressPool), IList(Of LoadBalancingRule), IList(Of Probe), IList(Of InboundNatRule), IList(Of InboundNatPool), IList(Of OutboundNatRule), String, String, String)
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.FrontendIPConfigurations
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancer.FrontendIPConfigurations
  id: FrontendIPConfigurations
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: FrontendIPConfigurations
  nameWithType: LoadBalancer.FrontendIPConfigurations
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.FrontendIPConfigurations
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendIPConfigurations
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets object representing the frontend IPs to be used for\nthe load balancer\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.frontendIPConfigurations")]

      public IList<FrontendIPConfiguration> FrontendIPConfigurations { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.frontendIPConfigurations")>

      Public Property FrontendIPConfigurations As IList(Of FrontendIPConfiguration)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration}
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.FrontendIPConfigurations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.frontendIPConfigurations
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.BackendAddressPools
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancer.BackendAddressPools
  id: BackendAddressPools
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: BackendAddressPools
  nameWithType: LoadBalancer.BackendAddressPools
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.BackendAddressPools
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendAddressPools
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets collection of backend address pools used by a load\nbalancer\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.backendAddressPools")]

      public IList<BackendAddressPool> BackendAddressPools { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.backendAddressPools")>

      Public Property BackendAddressPools As IList(Of BackendAddressPool)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.BackendAddressPool}
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.BackendAddressPools*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.backendAddressPools
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancingRules
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancingRules
  id: LoadBalancingRules
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: LoadBalancingRules
  nameWithType: LoadBalancer.LoadBalancingRules
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancingRules
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LoadBalancingRules
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 105
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets object collection representing the load balancing\nrules Gets the provisioning\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.loadBalancingRules")]

      public IList<LoadBalancingRule> LoadBalancingRules { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.loadBalancingRules")>

      Public Property LoadBalancingRules As IList(Of LoadBalancingRule)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.LoadBalancingRule}
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancingRules*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.loadBalancingRules
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.Probes
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancer.Probes
  id: Probes
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: Probes
  nameWithType: LoadBalancer.Probes
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.Probes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Probes
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets collection of probe objects used in the load balancer\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.probes")]

      public IList<Probe> Probes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.probes")>

      Public Property Probes As IList(Of Probe)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Probe}
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.Probes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.probes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatRules
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatRules
  id: InboundNatRules
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: InboundNatRules
  nameWithType: LoadBalancer.InboundNatRules
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatRules
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InboundNatRules
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets collection of inbound NAT Rules used by a load\nbalancer. Defining inbound NAT rules on your load balancer is\nmutually exclusive with defining an inbound NAT pool. Inbound NAT\npools are referenced from virtual machine scale sets. NICs that are\nassociated with individual virtual machines cannot reference an\nInbound NAT pool. They have to reference individual inbound NAT\nrules.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.inboundNatRules")]

      public IList<InboundNatRule> InboundNatRules { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.inboundNatRules")>

      Public Property InboundNatRules As IList(Of InboundNatRule)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatRule}
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatRules*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.inboundNatRules
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatPools
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatPools
  id: InboundNatPools
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: InboundNatPools
  nameWithType: LoadBalancer.InboundNatPools
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatPools
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InboundNatPools
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets defines an external port range for inbound NAT to a\nsingle backend port on NICs associated with a load balancer.\nInbound NAT rules are created automatically for each NIC associated\nwith the Load Balancer using an external port from this range.\nDefining an Inbound NAT pool on your Load Balancer is mutually\nexclusive with defining inbound Nat rules. Inbound NAT pools are\nreferenced from virtual machine scale sets. NICs that are\nassociated with individual virtual machines cannot reference an\ninbound NAT pool. They have to reference individual inbound NAT\nrules.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.inboundNatPools")]

      public IList<InboundNatPool> InboundNatPools { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.inboundNatPools")>

      Public Property InboundNatPools As IList(Of InboundNatPool)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatPool}
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatPools*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.inboundNatPools
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.OutboundNatRules
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancer.OutboundNatRules
  id: OutboundNatRules
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: OutboundNatRules
  nameWithType: LoadBalancer.OutboundNatRules
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.OutboundNatRules
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OutboundNatRules
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 144
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the outbound NAT rules.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.outboundNatRules")]

      public IList<OutboundNatRule> OutboundNatRules { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.outboundNatRules")>

      Public Property OutboundNatRules As IList(Of OutboundNatRule)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.OutboundNatRule}
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.OutboundNatRules*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.outboundNatRules
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.ResourceGuid
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancer.ResourceGuid
  id: ResourceGuid
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: ResourceGuid
  nameWithType: LoadBalancer.ResourceGuid
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.ResourceGuid
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceGuid
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the resource GUID property of the load balancer\nresource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.resourceGuid")]

      public string ResourceGuid { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.resourceGuid")>

      Public Property ResourceGuid As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.ResourceGuid*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.resourceGuid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancer.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: LoadBalancer.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 158
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the provisioning state of the PublicIP resource. Possible\nvalues are: 'Updating', 'Deleting', and 'Failed'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancer.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancer
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: LoadBalancer.Etag
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancer.cs
    startLine: 165
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a unique read-only string that changes whenever the\nresource is updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancer.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.Resource
  commentId: T:Microsoft.Azure.Management.Network.Models.Resource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.Network.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Id
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Id
- uid: Microsoft.Azure.Management.Network.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Name
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Name
- uid: Microsoft.Azure.Management.Network.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Type
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Type
- uid: Microsoft.Azure.Management.Network.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Location
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Location
- uid: Microsoft.Azure.Management.Network.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Tags
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancer.#ctor
  isExternal: false
  name: LoadBalancer
  nameWithType: LoadBalancer.LoadBalancer
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<FrontendIPConfiguration>
  nameWithType: IList<FrontendIPConfiguration>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration>
  nameWithType.vb: IList(Of FrontendIPConfiguration)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration)
  name.vb: IList(Of FrontendIPConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration
    name: FrontendIPConfiguration
    nameWithType: FrontendIPConfiguration
    fullName: Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration
    name: FrontendIPConfiguration
    nameWithType: FrontendIPConfiguration
    fullName: Microsoft.Azure.Management.Network.Models.FrontendIPConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.BackendAddressPool}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.BackendAddressPool}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<BackendAddressPool>
  nameWithType: IList<BackendAddressPool>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.BackendAddressPool>
  nameWithType.vb: IList(Of BackendAddressPool)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.BackendAddressPool)
  name.vb: IList(Of BackendAddressPool)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.BackendAddressPool
    name: BackendAddressPool
    nameWithType: BackendAddressPool
    fullName: Microsoft.Azure.Management.Network.Models.BackendAddressPool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.BackendAddressPool
    name: BackendAddressPool
    nameWithType: BackendAddressPool
    fullName: Microsoft.Azure.Management.Network.Models.BackendAddressPool
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.LoadBalancingRule}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.LoadBalancingRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<LoadBalancingRule>
  nameWithType: IList<LoadBalancingRule>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.LoadBalancingRule>
  nameWithType.vb: IList(Of LoadBalancingRule)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.LoadBalancingRule)
  name.vb: IList(Of LoadBalancingRule)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
    name: LoadBalancingRule
    nameWithType: LoadBalancingRule
    fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
    name: LoadBalancingRule
    nameWithType: LoadBalancingRule
    fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Probe}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Probe}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Probe>
  nameWithType: IList<Probe>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.Probe>
  nameWithType.vb: IList(Of Probe)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.Probe)
  name.vb: IList(Of Probe)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.Probe
    name: Probe
    nameWithType: Probe
    fullName: Microsoft.Azure.Management.Network.Models.Probe
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.Probe
    name: Probe
    nameWithType: Probe
    fullName: Microsoft.Azure.Management.Network.Models.Probe
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatRule}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<InboundNatRule>
  nameWithType: IList<InboundNatRule>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.InboundNatRule>
  nameWithType.vb: IList(Of InboundNatRule)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.InboundNatRule)
  name.vb: IList(Of InboundNatRule)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.InboundNatRule
    name: InboundNatRule
    nameWithType: InboundNatRule
    fullName: Microsoft.Azure.Management.Network.Models.InboundNatRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.InboundNatRule
    name: InboundNatRule
    nameWithType: InboundNatRule
    fullName: Microsoft.Azure.Management.Network.Models.InboundNatRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatPool}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.InboundNatPool}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<InboundNatPool>
  nameWithType: IList<InboundNatPool>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.InboundNatPool>
  nameWithType.vb: IList(Of InboundNatPool)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.InboundNatPool)
  name.vb: IList(Of InboundNatPool)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.InboundNatPool
    name: InboundNatPool
    nameWithType: InboundNatPool
    fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.InboundNatPool
    name: InboundNatPool
    nameWithType: InboundNatPool
    fullName: Microsoft.Azure.Management.Network.Models.InboundNatPool
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.OutboundNatRule}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.OutboundNatRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<OutboundNatRule>
  nameWithType: IList<OutboundNatRule>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.OutboundNatRule>
  nameWithType.vb: IList(Of OutboundNatRule)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.OutboundNatRule)
  name.vb: IList(Of OutboundNatRule)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule
    name: OutboundNatRule
    nameWithType: OutboundNatRule
    fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.OutboundNatRule
    name: OutboundNatRule
    nameWithType: OutboundNatRule
    fullName: Microsoft.Azure.Management.Network.Models.OutboundNatRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.FrontendIPConfigurations*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancer.FrontendIPConfigurations
  isExternal: false
  name: FrontendIPConfigurations
  nameWithType: LoadBalancer.FrontendIPConfigurations
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.FrontendIPConfigurations
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.BackendAddressPools*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancer.BackendAddressPools
  isExternal: false
  name: BackendAddressPools
  nameWithType: LoadBalancer.BackendAddressPools
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.BackendAddressPools
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancingRules*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancingRules
  isExternal: false
  name: LoadBalancingRules
  nameWithType: LoadBalancer.LoadBalancingRules
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.LoadBalancingRules
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.Probes*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancer.Probes
  isExternal: false
  name: Probes
  nameWithType: LoadBalancer.Probes
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.Probes
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatRules*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatRules
  isExternal: false
  name: InboundNatRules
  nameWithType: LoadBalancer.InboundNatRules
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatRules
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatPools*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatPools
  isExternal: false
  name: InboundNatPools
  nameWithType: LoadBalancer.InboundNatPools
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.InboundNatPools
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.OutboundNatRules*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancer.OutboundNatRules
  isExternal: false
  name: OutboundNatRules
  nameWithType: LoadBalancer.OutboundNatRules
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.OutboundNatRules
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.ResourceGuid*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancer.ResourceGuid
  isExternal: false
  name: ResourceGuid
  nameWithType: LoadBalancer.ResourceGuid
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.ResourceGuid
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancer.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: LoadBalancer.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancer.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancer.Etag
  isExternal: false
  name: Etag
  nameWithType: LoadBalancer.Etag
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancer.Etag
