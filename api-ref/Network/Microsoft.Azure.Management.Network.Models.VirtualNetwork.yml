### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork
  commentId: T:Microsoft.Azure.Management.Network.Models.VirtualNetwork
  id: VirtualNetwork
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.VirtualNetwork.#ctor
  - Microsoft.Azure.Management.Network.Models.VirtualNetwork.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Network.Models.AddressSpace,Microsoft.Azure.Management.Network.Models.DhcpOptions,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering},System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.VirtualNetwork.AddressSpace
  - Microsoft.Azure.Management.Network.Models.VirtualNetwork.DhcpOptions
  - Microsoft.Azure.Management.Network.Models.VirtualNetwork.Etag
  - Microsoft.Azure.Management.Network.Models.VirtualNetwork.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.VirtualNetwork.ResourceGuid
  - Microsoft.Azure.Management.Network.Models.VirtualNetwork.Subnets
  - Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetworkPeerings
  langs:
  - csharp
  - vb
  name: VirtualNetwork
  nameWithType: VirtualNetwork
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualNetwork
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nVirtual Network resource.\n"
  example: []
  syntax:
    content: 'public class VirtualNetwork : Resource, IResource'
    content.vb: >-
      Public Class VirtualNetwork
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.Resource.Id
  - Microsoft.Azure.Management.Network.Models.Resource.Name
  - Microsoft.Azure.Management.Network.Models.Resource.Type
  - Microsoft.Azure.Management.Network.Models.Resource.Location
  - Microsoft.Azure.Management.Network.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.VirtualNetwork.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetwork
  langs:
  - csharp
  - vb
  name: VirtualNetwork()
  nameWithType: VirtualNetwork.VirtualNetwork()
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetwork()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the VirtualNetwork class.\n"
  example: []
  syntax:
    content: public VirtualNetwork()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetwork.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Network.Models.AddressSpace,Microsoft.Azure.Management.Network.Models.DhcpOptions,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering},System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.VirtualNetwork.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Network.Models.AddressSpace,Microsoft.Azure.Management.Network.Models.DhcpOptions,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering},System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Network.Models.AddressSpace,Microsoft.Azure.Management.Network.Models.DhcpOptions,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering},System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetwork
  langs:
  - csharp
  - vb
  name: VirtualNetwork(String, String, String, String, IDictionary<String, String>, AddressSpace, DhcpOptions, IList<Subnet>, IList<VirtualNetworkPeering>, String, String, String)
  nameWithType: VirtualNetwork.VirtualNetwork(String, String, String, String, IDictionary<String, String>, AddressSpace, DhcpOptions, IList<Subnet>, IList<VirtualNetworkPeering>, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetwork(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.Azure.Management.Network.Models.AddressSpace, Microsoft.Azure.Management.Network.Models.DhcpOptions, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.Subnet>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering>, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the VirtualNetwork class.\n"
  example: []
  syntax:
    content: public VirtualNetwork(string id = null, string name = null, string type = null, string location = null, IDictionary<string, string> tags = null, AddressSpace addressSpace = null, DhcpOptions dhcpOptions = null, IList<Subnet> subnets = null, IList<VirtualNetworkPeering> virtualNetworkPeerings = null, string resourceGuid = null, string provisioningState = null, string etag = null)
    content.vb: Public Sub New(id As String = Nothing, name As String = Nothing, type As String = Nothing, location As String = Nothing, tags As IDictionary(Of String, String) = Nothing, addressSpace As AddressSpace = Nothing, dhcpOptions As DhcpOptions = Nothing, subnets As IList(Of Subnet) = Nothing, virtualNetworkPeerings As IList(Of VirtualNetworkPeering) = Nothing, resourceGuid As String = Nothing, provisioningState As String = Nothing, etag As String = Nothing)
    parameters:
    - id: id
      type: System.String
      description: Resource ID.
    - id: name
      type: System.String
      description: Resource name.
    - id: type
      type: System.String
      description: Resource type.
    - id: location
      type: System.String
      description: Resource location.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Resource tags.
    - id: addressSpace
      type: Microsoft.Azure.Management.Network.Models.AddressSpace
      description: >-
        The AddressSpace that contains an array

        of IP address ranges that can be used by subnets.
    - id: dhcpOptions
      type: Microsoft.Azure.Management.Network.Models.DhcpOptions
      description: >-
        The dhcpOptions that contains an array of

        DNS servers available to VMs deployed in the virtual

        network.
    - id: subnets
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet}
      description: >-
        A list of subnets in a Virtual

        Network.
    - id: virtualNetworkPeerings
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering}
      description: >-
        A list of peerings in a

        Virtual Network.
    - id: resourceGuid
      type: System.String
      description: >-
        The resourceGuid property of the Virtual

        Network resource.
    - id: provisioningState
      type: System.String
      description: >-
        The provisioning state of the

        PublicIP resource. Possible values are: 'Updating', 'Deleting', and

        'Failed'.
    - id: etag
      type: System.String
      description: >-
        Gets a unique read-only string that changes

        whenever the resource is updated.
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetwork.#ctor*
  nameWithType.vb: VirtualNetwork.VirtualNetwork(String, String, String, String, IDictionary(Of String, String), AddressSpace, DhcpOptions, IList(Of Subnet), IList(Of VirtualNetworkPeering), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetwork(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.Azure.Management.Network.Models.AddressSpace, Microsoft.Azure.Management.Network.Models.DhcpOptions, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.Subnet), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering), System.String, System.String, System.String)
  name.vb: VirtualNetwork(String, String, String, String, IDictionary(Of String, String), AddressSpace, DhcpOptions, IList(Of Subnet), IList(Of VirtualNetworkPeering), String, String, String)
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.AddressSpace
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetwork.AddressSpace
  id: AddressSpace
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetwork
  langs:
  - csharp
  - vb
  name: AddressSpace
  nameWithType: VirtualNetwork.AddressSpace
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.AddressSpace
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddressSpace
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the AddressSpace that contains an array of IP address\nranges that can be used by subnets.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.addressSpace")]

      public AddressSpace AddressSpace { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.addressSpace")>

      Public Property AddressSpace As AddressSpace
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.AddressSpace
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetwork.AddressSpace*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.addressSpace
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.DhcpOptions
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetwork.DhcpOptions
  id: DhcpOptions
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetwork
  langs:
  - csharp
  - vb
  name: DhcpOptions
  nameWithType: VirtualNetwork.DhcpOptions
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.DhcpOptions
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DhcpOptions
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the dhcpOptions that contains an array of DNS servers\navailable to VMs deployed in the virtual network.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.dhcpOptions")]

      public DhcpOptions DhcpOptions { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.dhcpOptions")>

      Public Property DhcpOptions As DhcpOptions
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.DhcpOptions
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetwork.DhcpOptions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.dhcpOptions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.Subnets
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetwork.Subnets
  id: Subnets
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetwork
  langs:
  - csharp
  - vb
  name: Subnets
  nameWithType: VirtualNetwork.Subnets
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.Subnets
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Subnets
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a list of subnets in a Virtual Network.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.subnets")]

      public IList<Subnet> Subnets { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.subnets")>

      Public Property Subnets As IList(Of Subnet)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet}
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetwork.Subnets*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.subnets
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetworkPeerings
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetworkPeerings
  id: VirtualNetworkPeerings
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetwork
  langs:
  - csharp
  - vb
  name: VirtualNetworkPeerings
  nameWithType: VirtualNetwork.VirtualNetworkPeerings
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetworkPeerings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualNetworkPeerings
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a list of peerings in a Virtual Network.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.virtualNetworkPeerings")]

      public IList<VirtualNetworkPeering> VirtualNetworkPeerings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.virtualNetworkPeerings")>

      Public Property VirtualNetworkPeerings As IList(Of VirtualNetworkPeering)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering}
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetworkPeerings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.virtualNetworkPeerings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.ResourceGuid
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetwork.ResourceGuid
  id: ResourceGuid
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetwork
  langs:
  - csharp
  - vb
  name: ResourceGuid
  nameWithType: VirtualNetwork.ResourceGuid
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.ResourceGuid
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceGuid
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the resourceGuid property of the Virtual Network\nresource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.resourceGuid")]

      public string ResourceGuid { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.resourceGuid")>

      Public Property ResourceGuid As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetwork.ResourceGuid*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.resourceGuid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetwork.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetwork
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: VirtualNetwork.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the provisioning state of the PublicIP resource.\nPossible values are: 'Updating', 'Deleting', and 'Failed'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetwork.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.VirtualNetwork.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.VirtualNetwork
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: VirtualNetwork.Etag
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/VirtualNetwork.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets a unique read-only string that changes whenever the resource\nis updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.VirtualNetwork.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.Resource
  commentId: T:Microsoft.Azure.Management.Network.Models.Resource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.Network.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Id
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Id
- uid: Microsoft.Azure.Management.Network.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Name
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Name
- uid: Microsoft.Azure.Management.Network.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Type
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Type
- uid: Microsoft.Azure.Management.Network.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Location
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Location
- uid: Microsoft.Azure.Management.Network.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Tags
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetwork.#ctor
  isExternal: false
  name: VirtualNetwork
  nameWithType: VirtualNetwork.VirtualNetwork
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetwork
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.AddressSpace
  commentId: T:Microsoft.Azure.Management.Network.Models.AddressSpace
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: AddressSpace
  nameWithType: AddressSpace
  fullName: Microsoft.Azure.Management.Network.Models.AddressSpace
- uid: Microsoft.Azure.Management.Network.Models.DhcpOptions
  commentId: T:Microsoft.Azure.Management.Network.Models.DhcpOptions
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: DhcpOptions
  nameWithType: DhcpOptions
  fullName: Microsoft.Azure.Management.Network.Models.DhcpOptions
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.Subnet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Subnet>
  nameWithType: IList<Subnet>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.Subnet>
  nameWithType.vb: IList(Of Subnet)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.Subnet)
  name.vb: IList(Of Subnet)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.Subnet
    name: Subnet
    nameWithType: Subnet
    fullName: Microsoft.Azure.Management.Network.Models.Subnet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.Subnet
    name: Subnet
    nameWithType: Subnet
    fullName: Microsoft.Azure.Management.Network.Models.Subnet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<VirtualNetworkPeering>
  nameWithType: IList<VirtualNetworkPeering>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering>
  nameWithType.vb: IList(Of VirtualNetworkPeering)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering)
  name.vb: IList(Of VirtualNetworkPeering)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
    name: VirtualNetworkPeering
    nameWithType: VirtualNetworkPeering
    fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
    name: VirtualNetworkPeering
    nameWithType: VirtualNetworkPeering
    fullName: Microsoft.Azure.Management.Network.Models.VirtualNetworkPeering
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.AddressSpace*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetwork.AddressSpace
  isExternal: false
  name: AddressSpace
  nameWithType: VirtualNetwork.AddressSpace
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.AddressSpace
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.DhcpOptions*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetwork.DhcpOptions
  isExternal: false
  name: DhcpOptions
  nameWithType: VirtualNetwork.DhcpOptions
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.DhcpOptions
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.Subnets*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetwork.Subnets
  isExternal: false
  name: Subnets
  nameWithType: VirtualNetwork.Subnets
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.Subnets
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetworkPeerings*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetworkPeerings
  isExternal: false
  name: VirtualNetworkPeerings
  nameWithType: VirtualNetwork.VirtualNetworkPeerings
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.VirtualNetworkPeerings
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.ResourceGuid*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetwork.ResourceGuid
  isExternal: false
  name: ResourceGuid
  nameWithType: VirtualNetwork.ResourceGuid
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.ResourceGuid
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetwork.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: VirtualNetwork.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.VirtualNetwork.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.VirtualNetwork.Etag
  isExternal: false
  name: Etag
  nameWithType: VirtualNetwork.Etag
  fullName: Microsoft.Azure.Management.Network.Models.VirtualNetwork.Etag
