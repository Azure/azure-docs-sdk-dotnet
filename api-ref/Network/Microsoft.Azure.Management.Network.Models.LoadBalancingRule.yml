### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  commentId: T:Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  id: LoadBalancingRule
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.#ctor
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.#ctor(System.String,System.Int32,System.String,Microsoft.Azure.Management.Network.Models.SubResource,Microsoft.Azure.Management.Network.Models.SubResource,Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendAddressPool
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendPort
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.EnableFloatingIP
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Etag
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendIPConfiguration
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendPort
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.IdleTimeoutInMinutes
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadDistribution
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Name
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Probe
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Protocol
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Validate
  langs:
  - csharp
  - vb
  name: LoadBalancingRule
  nameWithType: LoadBalancingRule
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LoadBalancingRule
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nA loag balancing rule for a load balancer.\n"
  example: []
  syntax:
    content: 'public class LoadBalancingRule : SubResource, IResource'
    content.vb: >-
      Public Class LoadBalancingRule
          Inherits SubResource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.SubResource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.SubResource.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: LoadBalancingRule()
  nameWithType: LoadBalancingRule.LoadBalancingRule()
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadBalancingRule()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the LoadBalancingRule class.\n"
  example: []
  syntax:
    content: public LoadBalancingRule()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.#ctor(System.String,System.Int32,System.String,Microsoft.Azure.Management.Network.Models.SubResource,Microsoft.Azure.Management.Network.Models.SubResource,Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.#ctor(System.String,System.Int32,System.String,Microsoft.Azure.Management.Network.Models.SubResource,Microsoft.Azure.Management.Network.Models.SubResource,Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String)
  id: '#ctor(System.String,System.Int32,System.String,Microsoft.Azure.Management.Network.Models.SubResource,Microsoft.Azure.Management.Network.Models.SubResource,Microsoft.Azure.Management.Network.Models.SubResource,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: LoadBalancingRule(String, Int32, String, SubResource, SubResource, SubResource, String, Nullable<Int32>, Nullable<Int32>, Nullable<Boolean>, String, String, String)
  nameWithType: LoadBalancingRule.LoadBalancingRule(String, Int32, String, SubResource, SubResource, SubResource, String, Nullable<Int32>, Nullable<Int32>, Nullable<Boolean>, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadBalancingRule(System.String, System.Int32, System.String, Microsoft.Azure.Management.Network.Models.SubResource, Microsoft.Azure.Management.Network.Models.SubResource, Microsoft.Azure.Management.Network.Models.SubResource, System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Boolean>, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the LoadBalancingRule class.\n"
  example: []
  syntax:
    content: public LoadBalancingRule(string protocol, int frontendPort, string id = null, SubResource frontendIPConfiguration = null, SubResource backendAddressPool = null, SubResource probe = null, string loadDistribution = null, int ? backendPort = null, int ? idleTimeoutInMinutes = null, bool ? enableFloatingIP = null, string provisioningState = null, string name = null, string etag = null)
    content.vb: Public Sub New(protocol As String, frontendPort As Integer, id As String = Nothing, frontendIPConfiguration As SubResource = Nothing, backendAddressPool As SubResource = Nothing, probe As SubResource = Nothing, loadDistribution As String = Nothing, backendPort As Integer? = Nothing, idleTimeoutInMinutes As Integer? = Nothing, enableFloatingIP As Boolean? = Nothing, provisioningState As String = Nothing, name As String = Nothing, etag As String = Nothing)
    parameters:
    - id: protocol
      type: System.String
      description: >-
        The transport protocol for the external

        endpoint. Possible values are 'Udp' or 'Tcp'. Possible values

        include: 'Udp', 'Tcp'
    - id: frontendPort
      type: System.Int32
      description: >-
        The port for the external endpoint. Port

        numbers for each Rule must be unique within the Load Balancer.

        Acceptable values are between 1 and 65534.
    - id: id
      type: System.String
      description: Resource ID.
    - id: frontendIPConfiguration
      type: Microsoft.Azure.Management.Network.Models.SubResource
      description: >-
        A reference to frontend IP

        addresses.
    - id: backendAddressPool
      type: Microsoft.Azure.Management.Network.Models.SubResource
      description: >-
        A reference to a pool of DIPs.

        Inbound traffic is randomly load balanced across IPs in the backend

        IPs.
    - id: probe
      type: Microsoft.Azure.Management.Network.Models.SubResource
      description: >-
        The reference of the load balancer probe used

        by the load balancing rule.
    - id: loadDistribution
      type: System.String
      description: >-
        The load distribution policy for

        this rule. Possible values are 'Default', 'SourceIP', and

        'SourceIPProtocol'. Possible values include: 'Default', 'SourceIP',

        'SourceIPProtocol'
    - id: backendPort
      type: System.Nullable{System.Int32}
      description: "The port used for internal connections on\nthe endpoint. Acceptable values are between 1 and 65535. "
    - id: idleTimeoutInMinutes
      type: System.Nullable{System.Int32}
      description: >-
        The timeout for the TCP idle

        connection. The value can be set between 4 and 30 minutes. The

        default value is 4 minutes. This element is only used when the

        protocol is set to TCP.
    - id: enableFloatingIP
      type: System.Nullable{System.Boolean}
      description: >-
        Configures a virtual machine's

        endpoint for the floating IP capability required to configure a SQL

        AlwaysOn Availability Group. This setting is required when using

        the SQL AlwaysOn Availability Groups in SQL server. This setting

        can't be changed after you create the endpoint.
    - id: provisioningState
      type: System.String
      description: >-
        Gets the provisioning state of the

        PublicIP resource. Possible values are: 'Updating', 'Deleting', and

        'Failed'.
    - id: name
      type: System.String
      description: >-
        The name of the resource that is unique within a

        resource group. This name can be used to access the

        resource.
    - id: etag
      type: System.String
      description: >-
        A unique read-only string that changes whenever

        the resource is updated.
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.#ctor*
  nameWithType.vb: LoadBalancingRule.LoadBalancingRule(String, Int32, String, SubResource, SubResource, SubResource, String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Boolean), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadBalancingRule(System.String, System.Int32, System.String, Microsoft.Azure.Management.Network.Models.SubResource, Microsoft.Azure.Management.Network.Models.SubResource, Microsoft.Azure.Management.Network.Models.SubResource, System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Boolean), System.String, System.String, System.String)
  name.vb: LoadBalancingRule(String, Int32, String, SubResource, SubResource, SubResource, String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Boolean), String, String, String)
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendIPConfiguration
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendIPConfiguration
  id: FrontendIPConfiguration
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: FrontendIPConfiguration
  nameWithType: LoadBalancingRule.FrontendIPConfiguration
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendIPConfiguration
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendIPConfiguration
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a reference to frontend IP addresses.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.frontendIPConfiguration")]

      public SubResource FrontendIPConfiguration { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.frontendIPConfiguration")>

      Public Property FrontendIPConfiguration As SubResource
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.SubResource
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendIPConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.frontendIPConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendAddressPool
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendAddressPool
  id: BackendAddressPool
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: BackendAddressPool
  nameWithType: LoadBalancingRule.BackendAddressPool
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendAddressPool
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendAddressPool
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a reference to a pool of DIPs. Inbound traffic is\nrandomly load balanced across IPs in the backend IPs.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.backendAddressPool")]

      public SubResource BackendAddressPool { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.backendAddressPool")>

      Public Property BackendAddressPool As SubResource
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.SubResource
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendAddressPool*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.backendAddressPool
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Probe
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Probe
  id: Probe
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: Probe
  nameWithType: LoadBalancingRule.Probe
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Probe
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Probe
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the reference of the load balancer probe used by the\nload balancing rule.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.probe")]

      public SubResource Probe { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.probe")>

      Public Property Probe As SubResource
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.SubResource
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Probe*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.probe
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Protocol
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: LoadBalancingRule.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Protocol
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Protocol
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the transport protocol for the external endpoint.\nPossible values are 'Udp' or 'Tcp'. Possible values include: 'Udp',\n'Tcp'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.protocol")]

      public string Protocol { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.protocol")>

      Public Property Protocol As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Protocol*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.protocol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadDistribution
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadDistribution
  id: LoadDistribution
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: LoadDistribution
  nameWithType: LoadBalancingRule.LoadDistribution
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadDistribution
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LoadDistribution
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the load distribution policy for this rule. Possible\nvalues are 'Default', 'SourceIP', and 'SourceIPProtocol'. Possible\nvalues include: 'Default', 'SourceIP', 'SourceIPProtocol'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.loadDistribution")]

      public string LoadDistribution { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.loadDistribution")>

      Public Property LoadDistribution As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadDistribution*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.loadDistribution
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendPort
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendPort
  id: FrontendPort
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: FrontendPort
  nameWithType: LoadBalancingRule.FrontendPort
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendPort
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the port for the external endpoint. Port numbers for\neach Rule must be unique within the Load Balancer. Acceptable\nvalues are between 1 and 65534.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.frontendPort")]

      public int FrontendPort { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.frontendPort")>

      Public Property FrontendPort As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendPort*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.frontendPort
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendPort
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendPort
  id: BackendPort
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: BackendPort
  nameWithType: LoadBalancingRule.BackendPort
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendPort
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the port used for internal connections on the\nendpoint. Acceptable values are between 1 and 65535.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.backendPort")]

      public int ? BackendPort { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.backendPort")>

      Public Property BackendPort As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendPort*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.backendPort
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.IdleTimeoutInMinutes
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.IdleTimeoutInMinutes
  id: IdleTimeoutInMinutes
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: IdleTimeoutInMinutes
  nameWithType: LoadBalancingRule.IdleTimeoutInMinutes
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.IdleTimeoutInMinutes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IdleTimeoutInMinutes
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the timeout for the TCP idle connection. The value can\nbe set between 4 and 30 minutes. The default value is 4 minutes.\nThis element is only used when the protocol is set to TCP.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.idleTimeoutInMinutes")]

      public int ? IdleTimeoutInMinutes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.idleTimeoutInMinutes")>

      Public Property IdleTimeoutInMinutes As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.IdleTimeoutInMinutes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.idleTimeoutInMinutes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.EnableFloatingIP
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.EnableFloatingIP
  id: EnableFloatingIP
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: EnableFloatingIP
  nameWithType: LoadBalancingRule.EnableFloatingIP
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.EnableFloatingIP
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableFloatingIP
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 152
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets configures a virtual machine's endpoint for the\nfloating IP capability required to configure a SQL AlwaysOn\nAvailability Group. This setting is required when using the SQL\nAlwaysOn Availability Groups in SQL server. This setting can't be\nchanged after you create the endpoint.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.enableFloatingIP")]

      public bool ? EnableFloatingIP { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.enableFloatingIP")>

      Public Property EnableFloatingIP As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.EnableFloatingIP*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.enableFloatingIP
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: LoadBalancingRule.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 159
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the provisioning state of the PublicIP resource. Possible\nvalues are: 'Updating', 'Deleting', and 'Failed'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: LoadBalancingRule.Name
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 166
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the name of the resource that is unique within a\nresource group. This name can be used to access the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: LoadBalancingRule.Etag
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 173
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a unique read-only string that changes whenever the\nresource is updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Validate
  commentId: M:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Network.Models.LoadBalancingRule
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: LoadBalancingRule.Validate()
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/LoadBalancingRule.cs
    startLine: 182
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.SubResource
  commentId: T:Microsoft.Azure.Management.Network.Models.SubResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: SubResource
  nameWithType: SubResource
  fullName: Microsoft.Azure.Management.Network.Models.SubResource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.SubResource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.SubResource.Id
  parent: Microsoft.Azure.Management.Network.Models.SubResource
  isExternal: false
  name: Id
  nameWithType: SubResource.Id
  fullName: Microsoft.Azure.Management.Network.Models.SubResource.Id
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.#ctor
  isExternal: false
  name: LoadBalancingRule
  nameWithType: LoadBalancingRule.LoadBalancingRule
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadBalancingRule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendIPConfiguration*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendIPConfiguration
  isExternal: false
  name: FrontendIPConfiguration
  nameWithType: LoadBalancingRule.FrontendIPConfiguration
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendIPConfiguration
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendAddressPool*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendAddressPool
  isExternal: false
  name: BackendAddressPool
  nameWithType: LoadBalancingRule.BackendAddressPool
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendAddressPool
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Probe*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Probe
  isExternal: false
  name: Probe
  nameWithType: LoadBalancingRule.Probe
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Probe
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Protocol*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Protocol
  isExternal: false
  name: Protocol
  nameWithType: LoadBalancingRule.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Protocol
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadDistribution*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadDistribution
  isExternal: false
  name: LoadDistribution
  nameWithType: LoadBalancingRule.LoadDistribution
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.LoadDistribution
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendPort*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendPort
  isExternal: false
  name: FrontendPort
  nameWithType: LoadBalancingRule.FrontendPort
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.FrontendPort
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendPort*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendPort
  isExternal: false
  name: BackendPort
  nameWithType: LoadBalancingRule.BackendPort
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.BackendPort
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.IdleTimeoutInMinutes*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.IdleTimeoutInMinutes
  isExternal: false
  name: IdleTimeoutInMinutes
  nameWithType: LoadBalancingRule.IdleTimeoutInMinutes
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.IdleTimeoutInMinutes
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.EnableFloatingIP*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.EnableFloatingIP
  isExternal: false
  name: EnableFloatingIP
  nameWithType: LoadBalancingRule.EnableFloatingIP
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.EnableFloatingIP
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: LoadBalancingRule.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Name*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Name
  isExternal: false
  name: Name
  nameWithType: LoadBalancingRule.Name
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Name
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Etag
  isExternal: false
  name: Etag
  nameWithType: LoadBalancingRule.Etag
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Etag
- uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Validate*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Validate
  isExternal: false
  name: Validate
  nameWithType: LoadBalancingRule.Validate
  fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRule.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
