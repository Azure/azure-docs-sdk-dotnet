### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer
  commentId: T:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer
  id: ApplicationGatewayBackendHealthServer
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.#ctor
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.#ctor(System.String,Microsoft.Azure.Management.Network.Models.SubResource,System.String)
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Address
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Health
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.IpConfiguration
  langs:
  - csharp
  - vb
  name: ApplicationGatewayBackendHealthServer
  nameWithType: ApplicationGatewayBackendHealthServer
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationGatewayBackendHealthServer
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nApplication gateway backendhealth http settings.\n"
  example: []
  syntax:
    content: public class ApplicationGatewayBackendHealthServer
    content.vb: Public Class ApplicationGatewayBackendHealthServer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer
  langs:
  - csharp
  - vb
  name: ApplicationGatewayBackendHealthServer()
  nameWithType: ApplicationGatewayBackendHealthServer.ApplicationGatewayBackendHealthServer()
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.ApplicationGatewayBackendHealthServer()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the\nApplicationGatewayBackendHealthServer class.\n"
  example: []
  syntax:
    content: public ApplicationGatewayBackendHealthServer()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.#ctor(System.String,Microsoft.Azure.Management.Network.Models.SubResource,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.#ctor(System.String,Microsoft.Azure.Management.Network.Models.SubResource,System.String)
  id: '#ctor(System.String,Microsoft.Azure.Management.Network.Models.SubResource,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer
  langs:
  - csharp
  - vb
  name: ApplicationGatewayBackendHealthServer(String, SubResource, String)
  nameWithType: ApplicationGatewayBackendHealthServer.ApplicationGatewayBackendHealthServer(String, SubResource, String)
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.ApplicationGatewayBackendHealthServer(System.String, Microsoft.Azure.Management.Network.Models.SubResource, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the\nApplicationGatewayBackendHealthServer class.\n"
  example: []
  syntax:
    content: public ApplicationGatewayBackendHealthServer(string address = null, SubResource ipConfiguration = null, string health = null)
    content.vb: Public Sub New(address As String = Nothing, ipConfiguration As SubResource = Nothing, health As String = Nothing)
    parameters:
    - id: address
      type: System.String
      description: IP address or FQDN of backend server.
    - id: ipConfiguration
      type: Microsoft.Azure.Management.Network.Models.SubResource
      description: >-
        Reference of IP configuration of

        backend server.
    - id: health
      type: System.String
      description: >-
        Health of backend server. Possible values are:

        'Unknown', 'Up', 'Down', and 'Partial'. Possible values include:

        'Unknown', 'Up', 'Down', 'Partial'
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Address
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Address
  id: Address
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: ApplicationGatewayBackendHealthServer.Address
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Address
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Address
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets IP address or FQDN of backend server.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "address")]

      public string Address { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="address")>

      Public Property Address As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Address*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: address
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.IpConfiguration
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.IpConfiguration
  id: IpConfiguration
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer
  langs:
  - csharp
  - vb
  name: IpConfiguration
  nameWithType: ApplicationGatewayBackendHealthServer.IpConfiguration
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.IpConfiguration
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IpConfiguration
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets reference of IP configuration of backend server.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "ipConfiguration")]

      public SubResource IpConfiguration { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="ipConfiguration")>

      Public Property IpConfiguration As SubResource
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.SubResource
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.IpConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: ipConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Health
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Health
  id: Health
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer
  langs:
  - csharp
  - vb
  name: Health
  nameWithType: ApplicationGatewayBackendHealthServer.Health
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Health
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Health
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHealthServer.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets health of backend server. Possible values are:\n'Unknown', 'Up', 'Down', and 'Partial'. Possible values include:\n'Unknown', 'Up', 'Down', 'Partial'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "health")]

      public string Health { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="health")>

      Public Property Health As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Health*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: health
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.#ctor
  isExternal: false
  name: ApplicationGatewayBackendHealthServer
  nameWithType: ApplicationGatewayBackendHealthServer.ApplicationGatewayBackendHealthServer
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.ApplicationGatewayBackendHealthServer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Network.Models.SubResource
  commentId: T:Microsoft.Azure.Management.Network.Models.SubResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: SubResource
  nameWithType: SubResource
  fullName: Microsoft.Azure.Management.Network.Models.SubResource
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Address*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Address
  isExternal: false
  name: Address
  nameWithType: ApplicationGatewayBackendHealthServer.Address
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Address
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.IpConfiguration*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.IpConfiguration
  isExternal: false
  name: IpConfiguration
  nameWithType: ApplicationGatewayBackendHealthServer.IpConfiguration
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.IpConfiguration
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Health*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Health
  isExternal: false
  name: Health
  nameWithType: ApplicationGatewayBackendHealthServer.Health
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHealthServer.Health
