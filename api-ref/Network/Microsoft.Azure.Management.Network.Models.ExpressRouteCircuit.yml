### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  commentId: T:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  id: ExpressRouteCircuit
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.#ctor
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitSku,System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering},System.String,System.String,Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitServiceProviderProperties,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.AllowClassicOperations
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Authorizations
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.CircuitProvisioningState
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Etag
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.GatewayManagerEtag
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Peerings
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceKey
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderNotes
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProperties
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProvisioningState
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Sku
  langs:
  - csharp
  - vb
  name: ExpressRouteCircuit
  nameWithType: ExpressRouteCircuit
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExpressRouteCircuit
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nExpressRouteCircuit resource\n"
  example: []
  syntax:
    content: 'public class ExpressRouteCircuit : Resource, IResource'
    content.vb: >-
      Public Class ExpressRouteCircuit
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.Resource.Id
  - Microsoft.Azure.Management.Network.Models.Resource.Name
  - Microsoft.Azure.Management.Network.Models.Resource.Type
  - Microsoft.Azure.Management.Network.Models.Resource.Location
  - Microsoft.Azure.Management.Network.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: ExpressRouteCircuit()
  nameWithType: ExpressRouteCircuit.ExpressRouteCircuit()
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ExpressRouteCircuit()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the ExpressRouteCircuit class.\n"
  example: []
  syntax:
    content: public ExpressRouteCircuit()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitSku,System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering},System.String,System.String,Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitServiceProviderProperties,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitSku,System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering},System.String,System.String,Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitServiceProviderProperties,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitSku,System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering},System.String,System.String,Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitServiceProviderProperties,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: ExpressRouteCircuit(String, String, String, String, IDictionary<String, String>, ExpressRouteCircuitSku, Nullable<Boolean>, String, String, IList<ExpressRouteCircuitAuthorization>, IList<ExpressRouteCircuitPeering>, String, String, ExpressRouteCircuitServiceProviderProperties, String, String, String)
  nameWithType: ExpressRouteCircuit.ExpressRouteCircuit(String, String, String, String, IDictionary<String, String>, ExpressRouteCircuitSku, Nullable<Boolean>, String, String, IList<ExpressRouteCircuitAuthorization>, IList<ExpressRouteCircuitPeering>, String, String, ExpressRouteCircuitServiceProviderProperties, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ExpressRouteCircuit(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitSku, System.Nullable<System.Boolean>, System.String, System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering>, System.String, System.String, Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitServiceProviderProperties, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the ExpressRouteCircuit class.\n"
  example: []
  syntax:
    content: public ExpressRouteCircuit(string id = null, string name = null, string type = null, string location = null, IDictionary<string, string> tags = null, ExpressRouteCircuitSku sku = null, bool ? allowClassicOperations = null, string circuitProvisioningState = null, string serviceProviderProvisioningState = null, IList<ExpressRouteCircuitAuthorization> authorizations = null, IList<ExpressRouteCircuitPeering> peerings = null, string serviceKey = null, string serviceProviderNotes = null, ExpressRouteCircuitServiceProviderProperties serviceProviderProperties = null, string provisioningState = null, string gatewayManagerEtag = null, string etag = null)
    content.vb: Public Sub New(id As String = Nothing, name As String = Nothing, type As String = Nothing, location As String = Nothing, tags As IDictionary(Of String, String) = Nothing, sku As ExpressRouteCircuitSku = Nothing, allowClassicOperations As Boolean? = Nothing, circuitProvisioningState As String = Nothing, serviceProviderProvisioningState As String = Nothing, authorizations As IList(Of ExpressRouteCircuitAuthorization) = Nothing, peerings As IList(Of ExpressRouteCircuitPeering) = Nothing, serviceKey As String = Nothing, serviceProviderNotes As String = Nothing, serviceProviderProperties As ExpressRouteCircuitServiceProviderProperties = Nothing, provisioningState As String = Nothing, gatewayManagerEtag As String = Nothing, etag As String = Nothing)
    parameters:
    - id: id
      type: System.String
      description: Resource ID.
    - id: name
      type: System.String
      description: Resource name.
    - id: type
      type: System.String
      description: Resource type.
    - id: location
      type: System.String
      description: Resource location.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Resource tags.
    - id: sku
      type: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitSku
      description: The SKU.
    - id: allowClassicOperations
      type: System.Nullable{System.Boolean}
      description: >-
        Allow classic

        operations
    - id: circuitProvisioningState
      type: System.String
      description: >-
        The CircuitProvisioningState

        state of the resource.
    - id: serviceProviderProvisioningState
      type: System.String
      description: >-
        The

        ServiceProviderProvisioningState state of the resource. Possible

        values are 'NotProvisioned', 'Provisioning', 'Provisioned', and

        'Deprovisioning'. Possible values include: 'NotProvisioned',

        'Provisioning', 'Provisioned', 'Deprovisioning'
    - id: authorizations
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization}
      description: The list of authorizations.
    - id: peerings
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering}
      description: The list of peerings.
    - id: serviceKey
      type: System.String
      description: The ServiceKey.
    - id: serviceProviderNotes
      type: System.String
      description: >-
        The

        ServiceProviderNotes.
    - id: serviceProviderProperties
      type: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitServiceProviderProperties
      description: >-
        The

        ServiceProviderProperties.
    - id: provisioningState
      type: System.String
      description: >-
        Gets the provisioning state of the

        public IP resource. Possible values are: 'Updating', 'Deleting',

        and 'Failed'.
    - id: gatewayManagerEtag
      type: System.String
      description: The GatewayManager Etag.
    - id: etag
      type: System.String
      description: >-
        Gets a unique read-only string that changes

        whenever the resource is updated.
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.#ctor*
  nameWithType.vb: ExpressRouteCircuit.ExpressRouteCircuit(String, String, String, String, IDictionary(Of String, String), ExpressRouteCircuitSku, Nullable(Of Boolean), String, String, IList(Of ExpressRouteCircuitAuthorization), IList(Of ExpressRouteCircuitPeering), String, String, ExpressRouteCircuitServiceProviderProperties, String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ExpressRouteCircuit(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitSku, System.Nullable(Of System.Boolean), System.String, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering), System.String, System.String, Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitServiceProviderProperties, System.String, System.String, System.String)
  name.vb: ExpressRouteCircuit(String, String, String, String, IDictionary(Of String, String), ExpressRouteCircuitSku, Nullable(Of Boolean), String, String, IList(Of ExpressRouteCircuitAuthorization), IList(Of ExpressRouteCircuitPeering), String, String, ExpressRouteCircuitServiceProviderProperties, String, String, String)
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Sku
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Sku
  id: Sku
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: Sku
  nameWithType: ExpressRouteCircuit.Sku
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Sku
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Sku
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the SKU.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sku")]

      public ExpressRouteCircuitSku Sku { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sku")>

      Public Property Sku As ExpressRouteCircuitSku
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitSku
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Sku*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sku
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.AllowClassicOperations
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.AllowClassicOperations
  id: AllowClassicOperations
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: AllowClassicOperations
  nameWithType: ExpressRouteCircuit.AllowClassicOperations
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.AllowClassicOperations
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowClassicOperations
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets allow classic operations\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.allowClassicOperations")]

      public bool ? AllowClassicOperations { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.allowClassicOperations")>

      Public Property AllowClassicOperations As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.AllowClassicOperations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.allowClassicOperations
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.CircuitProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.CircuitProvisioningState
  id: CircuitProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: CircuitProvisioningState
  nameWithType: ExpressRouteCircuit.CircuitProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.CircuitProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CircuitProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the CircuitProvisioningState state of the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.circuitProvisioningState")]

      public string CircuitProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.circuitProvisioningState")>

      Public Property CircuitProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.CircuitProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.circuitProvisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProvisioningState
  id: ServiceProviderProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: ServiceProviderProvisioningState
  nameWithType: ExpressRouteCircuit.ServiceProviderProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServiceProviderProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the ServiceProviderProvisioningState state of the\nresource. Possible values are 'NotProvisioned', 'Provisioning',\n'Provisioned', and 'Deprovisioning'. Possible values include:\n'NotProvisioned', 'Provisioning', 'Provisioned', 'Deprovisioning'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.serviceProviderProvisioningState")]

      public string ServiceProviderProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.serviceProviderProvisioningState")>

      Public Property ServiceProviderProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.serviceProviderProvisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Authorizations
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Authorizations
  id: Authorizations
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: Authorizations
  nameWithType: ExpressRouteCircuit.Authorizations
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Authorizations
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Authorizations
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the list of authorizations.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.authorizations")]

      public IList<ExpressRouteCircuitAuthorization> Authorizations { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.authorizations")>

      Public Property Authorizations As IList(Of ExpressRouteCircuitAuthorization)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization}
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Authorizations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.authorizations
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Peerings
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Peerings
  id: Peerings
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: Peerings
  nameWithType: ExpressRouteCircuit.Peerings
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Peerings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Peerings
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the list of peerings.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.peerings")]

      public IList<ExpressRouteCircuitPeering> Peerings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.peerings")>

      Public Property Peerings As IList(Of ExpressRouteCircuitPeering)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering}
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Peerings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.peerings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceKey
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceKey
  id: ServiceKey
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: ServiceKey
  nameWithType: ExpressRouteCircuit.ServiceKey
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceKey
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServiceKey
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the ServiceKey.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.serviceKey")]

      public string ServiceKey { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.serviceKey")>

      Public Property ServiceKey As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceKey*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.serviceKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderNotes
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderNotes
  id: ServiceProviderNotes
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: ServiceProviderNotes
  nameWithType: ExpressRouteCircuit.ServiceProviderNotes
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderNotes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServiceProviderNotes
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the ServiceProviderNotes.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.serviceProviderNotes")]

      public string ServiceProviderNotes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.serviceProviderNotes")>

      Public Property ServiceProviderNotes As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderNotes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.serviceProviderNotes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProperties
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProperties
  id: ServiceProviderProperties
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: ServiceProviderProperties
  nameWithType: ExpressRouteCircuit.ServiceProviderProperties
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProperties
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServiceProviderProperties
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the ServiceProviderProperties.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.serviceProviderProperties")]

      public ExpressRouteCircuitServiceProviderProperties ServiceProviderProperties { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.serviceProviderProperties")>

      Public Property ServiceProviderProperties As ExpressRouteCircuitServiceProviderProperties
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitServiceProviderProperties
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProperties*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.serviceProviderProperties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: ExpressRouteCircuit.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the provisioning state of the public IP resource. Possible\nvalues are: 'Updating', 'Deleting', and 'Failed'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.GatewayManagerEtag
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.GatewayManagerEtag
  id: GatewayManagerEtag
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: GatewayManagerEtag
  nameWithType: ExpressRouteCircuit.GatewayManagerEtag
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.GatewayManagerEtag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GatewayManagerEtag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 146
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the GatewayManager Etag.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.gatewayManagerEtag")]

      public string GatewayManagerEtag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.gatewayManagerEtag")>

      Public Property GatewayManagerEtag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.GatewayManagerEtag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.gatewayManagerEtag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: ExpressRouteCircuit.Etag
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ExpressRouteCircuit.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets a unique read-only string that changes whenever the resource\nis updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.Resource
  commentId: T:Microsoft.Azure.Management.Network.Models.Resource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.Network.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Id
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Id
- uid: Microsoft.Azure.Management.Network.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Name
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Name
- uid: Microsoft.Azure.Management.Network.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Type
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Type
- uid: Microsoft.Azure.Management.Network.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Location
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Location
- uid: Microsoft.Azure.Management.Network.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.Network.Models.Resource.Tags
  parent: Microsoft.Azure.Management.Network.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.Network.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.#ctor
  isExternal: false
  name: ExpressRouteCircuit
  nameWithType: ExpressRouteCircuit.ExpressRouteCircuit
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ExpressRouteCircuit
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitSku
  commentId: T:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitSku
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ExpressRouteCircuitSku
  nameWithType: ExpressRouteCircuitSku
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitSku
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ExpressRouteCircuitAuthorization>
  nameWithType: IList<ExpressRouteCircuitAuthorization>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization>
  nameWithType.vb: IList(Of ExpressRouteCircuitAuthorization)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization)
  name.vb: IList(Of ExpressRouteCircuitAuthorization)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization
    name: ExpressRouteCircuitAuthorization
    nameWithType: ExpressRouteCircuitAuthorization
    fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization
    name: ExpressRouteCircuitAuthorization
    nameWithType: ExpressRouteCircuitAuthorization
    fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitAuthorization
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ExpressRouteCircuitPeering>
  nameWithType: IList<ExpressRouteCircuitPeering>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering>
  nameWithType.vb: IList(Of ExpressRouteCircuitPeering)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering)
  name.vb: IList(Of ExpressRouteCircuitPeering)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
    name: ExpressRouteCircuitPeering
    nameWithType: ExpressRouteCircuitPeering
    fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
    name: ExpressRouteCircuitPeering
    nameWithType: ExpressRouteCircuitPeering
    fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitServiceProviderProperties
  commentId: T:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitServiceProviderProperties
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ExpressRouteCircuitServiceProviderProperties
  nameWithType: ExpressRouteCircuitServiceProviderProperties
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitServiceProviderProperties
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Sku*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Sku
  isExternal: false
  name: Sku
  nameWithType: ExpressRouteCircuit.Sku
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Sku
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.AllowClassicOperations*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.AllowClassicOperations
  isExternal: false
  name: AllowClassicOperations
  nameWithType: ExpressRouteCircuit.AllowClassicOperations
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.AllowClassicOperations
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.CircuitProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.CircuitProvisioningState
  isExternal: false
  name: CircuitProvisioningState
  nameWithType: ExpressRouteCircuit.CircuitProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.CircuitProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProvisioningState
  isExternal: false
  name: ServiceProviderProvisioningState
  nameWithType: ExpressRouteCircuit.ServiceProviderProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Authorizations*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Authorizations
  isExternal: false
  name: Authorizations
  nameWithType: ExpressRouteCircuit.Authorizations
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Authorizations
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Peerings*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Peerings
  isExternal: false
  name: Peerings
  nameWithType: ExpressRouteCircuit.Peerings
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Peerings
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceKey*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceKey
  isExternal: false
  name: ServiceKey
  nameWithType: ExpressRouteCircuit.ServiceKey
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceKey
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderNotes*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderNotes
  isExternal: false
  name: ServiceProviderNotes
  nameWithType: ExpressRouteCircuit.ServiceProviderNotes
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderNotes
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProperties*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProperties
  isExternal: false
  name: ServiceProviderProperties
  nameWithType: ExpressRouteCircuit.ServiceProviderProperties
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ServiceProviderProperties
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: ExpressRouteCircuit.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.GatewayManagerEtag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.GatewayManagerEtag
  isExternal: false
  name: GatewayManagerEtag
  nameWithType: ExpressRouteCircuit.GatewayManagerEtag
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.GatewayManagerEtag
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Etag
  isExternal: false
  name: Etag
  nameWithType: ExpressRouteCircuit.Etag
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuit.Etag
