### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  commentId: T:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  id: ApplicationGatewayBackendHttpSettings
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.#ctor
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Management.Network.Models.SubResource,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource},System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.AuthenticationCertificates
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.CookieBasedAffinity
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Etag
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Name
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Port
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Probe
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Protocol
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.RequestTimeout
  langs:
  - csharp
  - vb
  name: ApplicationGatewayBackendHttpSettings
  nameWithType: ApplicationGatewayBackendHttpSettings
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationGatewayBackendHttpSettings
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nBackend address pool settings of an application gateway.\n"
  example: []
  syntax:
    content: 'public class ApplicationGatewayBackendHttpSettings : SubResource, IResource'
    content.vb: >-
      Public Class ApplicationGatewayBackendHttpSettings
          Inherits SubResource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.SubResource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.SubResource.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  langs:
  - csharp
  - vb
  name: ApplicationGatewayBackendHttpSettings()
  nameWithType: ApplicationGatewayBackendHttpSettings.ApplicationGatewayBackendHttpSettings()
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ApplicationGatewayBackendHttpSettings()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the\nApplicationGatewayBackendHttpSettings class.\n"
  example: []
  syntax:
    content: public ApplicationGatewayBackendHttpSettings()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Management.Network.Models.SubResource,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource},System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Management.Network.Models.SubResource,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource},System.String,System.String,System.String)
  id: '#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Management.Network.Models.SubResource,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource},System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  langs:
  - csharp
  - vb
  name: ApplicationGatewayBackendHttpSettings(String, Nullable<Int32>, String, String, Nullable<Int32>, SubResource, IList<SubResource>, String, String, String)
  nameWithType: ApplicationGatewayBackendHttpSettings.ApplicationGatewayBackendHttpSettings(String, Nullable<Int32>, String, String, Nullable<Int32>, SubResource, IList<SubResource>, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ApplicationGatewayBackendHttpSettings(System.String, System.Nullable<System.Int32>, System.String, System.String, System.Nullable<System.Int32>, Microsoft.Azure.Management.Network.Models.SubResource, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.SubResource>, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the\nApplicationGatewayBackendHttpSettings class.\n"
  example: []
  syntax:
    content: public ApplicationGatewayBackendHttpSettings(string id = null, int ? port = null, string protocol = null, string cookieBasedAffinity = null, int ? requestTimeout = null, SubResource probe = null, IList<SubResource> authenticationCertificates = null, string provisioningState = null, string name = null, string etag = null)
    content.vb: Public Sub New(id As String = Nothing, port As Integer? = Nothing, protocol As String = Nothing, cookieBasedAffinity As String = Nothing, requestTimeout As Integer? = Nothing, probe As SubResource = Nothing, authenticationCertificates As IList(Of SubResource) = Nothing, provisioningState As String = Nothing, name As String = Nothing, etag As String = Nothing)
    parameters:
    - id: id
      type: System.String
      description: Resource ID.
    - id: port
      type: System.Nullable{System.Int32}
      description: Port
    - id: protocol
      type: System.String
      description: >-
        Protocol. Possible values are: 'Http' and

        'Https'. Possible values include: 'Http', 'Https'
    - id: cookieBasedAffinity
      type: System.String
      description: >-
        Cookie based affinity. Possible

        values are: 'Enabled' and 'Disabled'. Possible values include:

        'Enabled', 'Disabled'
    - id: requestTimeout
      type: System.Nullable{System.Int32}
      description: >-
        Request timeout in seconds.

        Application Gateway will fail the request if response is not

        received within RequestTimeout. Acceptable values are from 1 second

        to 86400 seconds.
    - id: probe
      type: Microsoft.Azure.Management.Network.Models.SubResource
      description: >-
        Probe resource of an application

        gateway.
    - id: authenticationCertificates
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource}
      description: >-
        Array of references to

        application gateway authentication certificates.
    - id: provisioningState
      type: System.String
      description: >-
        Provisioning state of the backend

        http settings resource. Possible values are: 'Updating',

        'Deleting', and 'Failed'.
    - id: name
      type: System.String
      description: >-
        Name of the resource that is unique within a

        resource group. This name can be used to access the

        resource.
    - id: etag
      type: System.String
      description: >-
        A unique read-only string that changes whenever

        the resource is updated.
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.#ctor*
  nameWithType.vb: ApplicationGatewayBackendHttpSettings.ApplicationGatewayBackendHttpSettings(String, Nullable(Of Int32), String, String, Nullable(Of Int32), SubResource, IList(Of SubResource), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ApplicationGatewayBackendHttpSettings(System.String, System.Nullable(Of System.Int32), System.String, System.String, System.Nullable(Of System.Int32), Microsoft.Azure.Management.Network.Models.SubResource, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.SubResource), System.String, System.String, System.String)
  name.vb: ApplicationGatewayBackendHttpSettings(String, Nullable(Of Int32), String, String, Nullable(Of Int32), SubResource, IList(Of SubResource), String, String, String)
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Port
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Port
  id: Port
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: ApplicationGatewayBackendHttpSettings.Port
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Port
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Port
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets port\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.port")]

      public int ? Port { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.port")>

      Public Property Port As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Port*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.port
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Protocol
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: ApplicationGatewayBackendHttpSettings.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Protocol
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Protocol
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets protocol. Possible values are: 'Http' and 'Https'.\nPossible values include: 'Http', 'Https'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.protocol")]

      public string Protocol { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.protocol")>

      Public Property Protocol As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Protocol*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.protocol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.CookieBasedAffinity
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.CookieBasedAffinity
  id: CookieBasedAffinity
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  langs:
  - csharp
  - vb
  name: CookieBasedAffinity
  nameWithType: ApplicationGatewayBackendHttpSettings.CookieBasedAffinity
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.CookieBasedAffinity
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CookieBasedAffinity
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets cookie based affinity. Possible values are: 'Enabled'\nand 'Disabled'. Possible values include: 'Enabled', 'Disabled'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.cookieBasedAffinity")]

      public string CookieBasedAffinity { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.cookieBasedAffinity")>

      Public Property CookieBasedAffinity As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.CookieBasedAffinity*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.cookieBasedAffinity
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.RequestTimeout
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.RequestTimeout
  id: RequestTimeout
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  langs:
  - csharp
  - vb
  name: RequestTimeout
  nameWithType: ApplicationGatewayBackendHttpSettings.RequestTimeout
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.RequestTimeout
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RequestTimeout
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets request timeout in seconds. Application Gateway will\nfail the request if response is not received within RequestTimeout.\nAcceptable values are from 1 second to 86400 seconds.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.requestTimeout")]

      public int ? RequestTimeout { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.requestTimeout")>

      Public Property RequestTimeout As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.RequestTimeout*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.requestTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Probe
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Probe
  id: Probe
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  langs:
  - csharp
  - vb
  name: Probe
  nameWithType: ApplicationGatewayBackendHttpSettings.Probe
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Probe
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Probe
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets probe resource of an application gateway.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.probe")]

      public SubResource Probe { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.probe")>

      Public Property Probe As SubResource
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.SubResource
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Probe*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.probe
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.AuthenticationCertificates
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.AuthenticationCertificates
  id: AuthenticationCertificates
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  langs:
  - csharp
  - vb
  name: AuthenticationCertificates
  nameWithType: ApplicationGatewayBackendHttpSettings.AuthenticationCertificates
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.AuthenticationCertificates
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AuthenticationCertificates
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets array of references to application gateway\nauthentication certificates.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.authenticationCertificates")]

      public IList<SubResource> AuthenticationCertificates { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.authenticationCertificates")>

      Public Property AuthenticationCertificates As IList(Of SubResource)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource}
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.AuthenticationCertificates*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.authenticationCertificates
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: ApplicationGatewayBackendHttpSettings.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets provisioning state of the backend http settings\nresource. Possible values are: 'Updating', 'Deleting', and\n'Failed'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ApplicationGatewayBackendHttpSettings.Name
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets name of the resource that is unique within a resource\ngroup. This name can be used to access the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: ApplicationGatewayBackendHttpSettings.Etag
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayBackendHttpSettings.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a unique read-only string that changes whenever the\nresource is updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.SubResource
  commentId: T:Microsoft.Azure.Management.Network.Models.SubResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: SubResource
  nameWithType: SubResource
  fullName: Microsoft.Azure.Management.Network.Models.SubResource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.SubResource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.SubResource.Id
  parent: Microsoft.Azure.Management.Network.Models.SubResource
  isExternal: false
  name: Id
  nameWithType: SubResource.Id
  fullName: Microsoft.Azure.Management.Network.Models.SubResource.Id
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.#ctor
  isExternal: false
  name: ApplicationGatewayBackendHttpSettings
  nameWithType: ApplicationGatewayBackendHttpSettings.ApplicationGatewayBackendHttpSettings
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ApplicationGatewayBackendHttpSettings
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SubResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SubResource>
  nameWithType: IList<SubResource>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.SubResource>
  nameWithType.vb: IList(Of SubResource)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.SubResource)
  name.vb: IList(Of SubResource)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.SubResource
    name: SubResource
    nameWithType: SubResource
    fullName: Microsoft.Azure.Management.Network.Models.SubResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.SubResource
    name: SubResource
    nameWithType: SubResource
    fullName: Microsoft.Azure.Management.Network.Models.SubResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Port*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Port
  isExternal: false
  name: Port
  nameWithType: ApplicationGatewayBackendHttpSettings.Port
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Port
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Protocol*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Protocol
  isExternal: false
  name: Protocol
  nameWithType: ApplicationGatewayBackendHttpSettings.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Protocol
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.CookieBasedAffinity*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.CookieBasedAffinity
  isExternal: false
  name: CookieBasedAffinity
  nameWithType: ApplicationGatewayBackendHttpSettings.CookieBasedAffinity
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.CookieBasedAffinity
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.RequestTimeout*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.RequestTimeout
  isExternal: false
  name: RequestTimeout
  nameWithType: ApplicationGatewayBackendHttpSettings.RequestTimeout
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.RequestTimeout
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Probe*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Probe
  isExternal: false
  name: Probe
  nameWithType: ApplicationGatewayBackendHttpSettings.Probe
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Probe
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.AuthenticationCertificates*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.AuthenticationCertificates
  isExternal: false
  name: AuthenticationCertificates
  nameWithType: ApplicationGatewayBackendHttpSettings.AuthenticationCertificates
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.AuthenticationCertificates
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: ApplicationGatewayBackendHttpSettings.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Name*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Name
  isExternal: false
  name: Name
  nameWithType: ApplicationGatewayBackendHttpSettings.Name
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Name
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Etag
  isExternal: false
  name: Etag
  nameWithType: ApplicationGatewayBackendHttpSettings.Etag
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayBackendHttpSettings.Etag
