### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  commentId: T:Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  id: CheckNameAvailabilityOutput
  parent: Microsoft.Azure.Management.Search.Models
  children:
  - Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.#ctor
  - Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.#ctor(System.Nullable{System.Boolean},System.String,System.String)
  - Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.IsNameAvailable
  - Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Message
  - Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Reason
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilityOutput
  nameWithType: CheckNameAvailabilityOutput
  fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckNameAvailabilityOutput
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nOutput of check name availability API.\n"
  example: []
  syntax:
    content: public class CheckNameAvailabilityOutput
    content.vb: Public Class CheckNameAvailabilityOutput
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.#ctor
  commentId: M:Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilityOutput()
  nameWithType: CheckNameAvailabilityOutput.CheckNameAvailabilityOutput()
  fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.CheckNameAvailabilityOutput()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nInitializes a new instance of the CheckNameAvailabilityOutput\nclass.\n"
  example: []
  syntax:
    content: public CheckNameAvailabilityOutput()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.#ctor(System.Nullable{System.Boolean},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.#ctor(System.Nullable{System.Boolean},System.String,System.String)
  id: '#ctor(System.Nullable{System.Boolean},System.String,System.String)'
  parent: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilityOutput(Nullable<Boolean>, String, String)
  nameWithType: CheckNameAvailabilityOutput.CheckNameAvailabilityOutput(Nullable<Boolean>, String, String)
  fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.CheckNameAvailabilityOutput(System.Nullable<System.Boolean>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nInitializes a new instance of the CheckNameAvailabilityOutput\nclass.\n"
  example: []
  syntax:
    content: public CheckNameAvailabilityOutput(bool ? isNameAvailable = null, string reason = null, string message = null)
    content.vb: Public Sub New(isNameAvailable As Boolean? = Nothing, reason As String = Nothing, message As String = Nothing)
    parameters:
    - id: isNameAvailable
      type: System.Nullable{System.Boolean}
      description: >-
        A value indicating whether the name

        is available.
    - id: reason
      type: System.String
      description: >-
        The reason why the name is not available.

        'Invalid' indicates the name provided does not match the naming

        requirements (incorrect length, unsupported characters, etc.).

        'AlreadyExists' indicates that the name is already in use and is

        therefore unavailable. Possible values include: 'Invalid',

        'AlreadyExists'
    - id: message
      type: System.String
      description: >-
        A message that explains why the name is

        invalid and provides resource naming requirements. Available only

        if 'Invalid' is returned in the 'reason' property.
  overload: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.#ctor*
  nameWithType.vb: CheckNameAvailabilityOutput.CheckNameAvailabilityOutput(Nullable(Of Boolean), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.CheckNameAvailabilityOutput(System.Nullable(Of System.Boolean), System.String, System.String)
  name.vb: CheckNameAvailabilityOutput(Nullable(Of Boolean), String, String)
- uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.IsNameAvailable
  commentId: P:Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.IsNameAvailable
  id: IsNameAvailable
  parent: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  langs:
  - csharp
  - vb
  name: IsNameAvailable
  nameWithType: CheckNameAvailabilityOutput.IsNameAvailable
  fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.IsNameAvailable
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsNameAvailable
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets a value indicating whether the name is available.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "nameAvailable")]

      public bool ? IsNameAvailable { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="nameAvailable")>

      Public ReadOnly Property IsNameAvailable As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.IsNameAvailable*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: nameAvailable
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Reason
  commentId: P:Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Reason
  id: Reason
  parent: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: CheckNameAvailabilityOutput.Reason
  fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Reason
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Reason
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets the reason why the name is not available. 'Invalid' indicates\nthe name provided does not match the naming requirements\n(incorrect length, unsupported characters, etc.). 'AlreadyExists'\nindicates that the name is already in use and is therefore\nunavailable. Possible values include: 'Invalid', 'AlreadyExists'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "reason")]

      public string Reason { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="reason")>

      Public ReadOnly Property Reason As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Reason*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: reason
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Message
  commentId: P:Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Message
  id: Message
  parent: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: CheckNameAvailabilityOutput.Message
  fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Message
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Message
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/CheckNameAvailabilityOutput.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets a message that explains why the name is invalid and provides\nresource naming requirements. Available only if 'Invalid' is\nreturned in the 'reason' property.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "message")]

      public string Message { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="message")>

      Public ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Message*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: message
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.Search.Models
  commentId: N:Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: Microsoft.Azure.Management.Search.Models
  nameWithType: Microsoft.Azure.Management.Search.Models
  fullName: Microsoft.Azure.Management.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.#ctor
  isExternal: false
  name: CheckNameAvailabilityOutput
  nameWithType: CheckNameAvailabilityOutput.CheckNameAvailabilityOutput
  fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.CheckNameAvailabilityOutput
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.IsNameAvailable*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.IsNameAvailable
  isExternal: false
  name: IsNameAvailable
  nameWithType: CheckNameAvailabilityOutput.IsNameAvailable
  fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.IsNameAvailable
- uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Reason*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Reason
  isExternal: false
  name: Reason
  nameWithType: CheckNameAvailabilityOutput.Reason
  fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Reason
- uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Message*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Message
  isExternal: false
  name: Message
  nameWithType: CheckNameAvailabilityOutput.Message
  fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput.Message
