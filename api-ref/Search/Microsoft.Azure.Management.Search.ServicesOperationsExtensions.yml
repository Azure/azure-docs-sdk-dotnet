### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  id: ServicesOperationsExtensions
  parent: Microsoft.Azure.Management.Search
  children:
  - Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailability(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  - Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchService,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  - Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchService,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Delete(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  - Microsoft.Azure.Management.Search.ServicesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Get(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  - Microsoft.Azure.Management.Search.ServicesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  - Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ServicesOperationsExtensions
  nameWithType: ServicesOperationsExtensions
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServicesOperationsExtensions
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nExtension methods for ServicesOperations.\n"
  example: []
  syntax:
    content: public static class ServicesOperationsExtensions
    content.vb: Public Module ServicesOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchService,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  commentId: M:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchService,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  id: CreateOrUpdate(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchService,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IServicesOperations, String, String, SearchService, SearchManagementRequestOptions)
  nameWithType: ServicesOperationsExtensions.CreateOrUpdate(IServicesOperations, String, String, SearchService, SearchManagementRequestOptions)
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Search.IServicesOperations, System.String, System.String, Microsoft.Azure.Management.Search.Models.SearchService, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nCreates or updates a Search service in the given resource group. If the\nSearch service already exists, all properties will be updated with the\ngiven values.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static SearchService CreateOrUpdate(this IServicesOperations operations, string resourceGroupName, string searchServiceName, SearchService service, SearchManagementRequestOptions searchManagementRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IServicesOperations, resourceGroupName As String, searchServiceName As String, service As SearchService, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing) As SearchService
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IServicesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchServiceName
      type: System.String
      description: "\nThe name of the Azure Search service to create or update. Search service\nnames must only contain lowercase letters, digits or dashes, cannot use\ndash as the first two or last one characters, cannot contain consecutive\ndashes, and must be between 2 and 60 characters in length. Search service\nnames must be globally unique since they are part of the service URI\n(https://&lt;name&gt;.search.windows.net). You cannot change the service\nname after the service is created.\n"
    - id: service
      type: Microsoft.Azure.Management.Search.Models.SearchService
      description: "\nThe definition of the Search service to create or update.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Management.Search.Models.SearchService
  overload: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchService,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchService,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchService,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IServicesOperations, String, String, SearchService, SearchManagementRequestOptions, CancellationToken)
  nameWithType: ServicesOperationsExtensions.CreateOrUpdateAsync(IServicesOperations, String, String, SearchService, SearchManagementRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Search.IServicesOperations, System.String, System.String, Microsoft.Azure.Management.Search.Models.SearchService, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nCreates or updates a Search service in the given resource group. If the\nSearch service already exists, all properties will be updated with the\ngiven values.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static Task<SearchService> CreateOrUpdateAsync(this IServicesOperations operations, string resourceGroupName, string searchServiceName, SearchService service, SearchManagementRequestOptions searchManagementRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IServicesOperations, resourceGroupName As String, searchServiceName As String, service As SearchService, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of SearchService)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IServicesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchServiceName
      type: System.String
      description: "\nThe name of the Azure Search service to create or update. Search service\nnames must only contain lowercase letters, digits or dashes, cannot use\ndash as the first two or last one characters, cannot contain consecutive\ndashes, and must be between 2 and 60 characters in length. Search service\nnames must be globally unique since they are part of the service URI\n(https://&lt;name&gt;.search.windows.net). You cannot change the service\nname after the service is created.\n"
    - id: service
      type: Microsoft.Azure.Management.Search.Models.SearchService
      description: "\nThe definition of the Search service to create or update.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Search.Models.SearchService}
  overload: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Get(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  commentId: M:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Get(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  id: Get(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IServicesOperations, String, String, SearchManagementRequestOptions)
  nameWithType: ServicesOperationsExtensions.Get(IServicesOperations, String, String, SearchManagementRequestOptions)
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Get(Microsoft.Azure.Management.Search.IServicesOperations, System.String, System.String, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nGets the Search service with the given name in the given resource group.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static SearchService Get(this IServicesOperations operations, string resourceGroupName, string searchServiceName, SearchManagementRequestOptions searchManagementRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IServicesOperations, resourceGroupName As String, searchServiceName As String, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing) As SearchService
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IServicesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchServiceName
      type: System.String
      description: "\nThe name of the Azure Search service associated with the specified\nresource group.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Management.Search.Models.SearchService
  overload: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IServicesOperations, String, String, SearchManagementRequestOptions, CancellationToken)
  nameWithType: ServicesOperationsExtensions.GetAsync(IServicesOperations, String, String, SearchManagementRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Search.IServicesOperations, System.String, System.String, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nGets the Search service with the given name in the given resource group.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static Task<SearchService> GetAsync(this IServicesOperations operations, string resourceGroupName, string searchServiceName, SearchManagementRequestOptions searchManagementRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IServicesOperations, resourceGroupName As String, searchServiceName As String, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of SearchService)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IServicesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchServiceName
      type: System.String
      description: "\nThe name of the Azure Search service associated with the specified\nresource group.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Search.Models.SearchService}
  overload: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Delete(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  commentId: M:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Delete(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  id: Delete(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IServicesOperations, String, String, SearchManagementRequestOptions)
  nameWithType: ServicesOperationsExtensions.Delete(IServicesOperations, String, String, SearchManagementRequestOptions)
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Delete(Microsoft.Azure.Management.Search.IServicesOperations, System.String, System.String, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
    startLine: 162
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nDeletes a Search service in the given resource group, along with its\nassociated resources.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static void Delete(this IServicesOperations operations, string resourceGroupName, string searchServiceName, SearchManagementRequestOptions searchManagementRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IServicesOperations, resourceGroupName As String, searchServiceName As String, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IServicesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchServiceName
      type: System.String
      description: "\nThe name of the Azure Search service associated with the specified\nresource group.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
  overload: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IServicesOperations, String, String, SearchManagementRequestOptions, CancellationToken)
  nameWithType: ServicesOperationsExtensions.DeleteAsync(IServicesOperations, String, String, SearchManagementRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Search.IServicesOperations, System.String, System.String, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
    startLine: 189
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nDeletes a Search service in the given resource group, along with its\nassociated resources.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IServicesOperations operations, string resourceGroupName, string searchServiceName, SearchManagementRequestOptions searchManagementRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IServicesOperations, resourceGroupName As String, searchServiceName As String, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IServicesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchServiceName
      type: System.String
      description: "\nThe name of the Azure Search service associated with the specified\nresource group.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.DeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  commentId: M:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  id: ListByResourceGroup(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroup(IServicesOperations, String, SearchManagementRequestOptions)
  nameWithType: ServicesOperationsExtensions.ListByResourceGroup(IServicesOperations, String, SearchManagementRequestOptions)
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Search.IServicesOperations, System.String, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroup
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
    startLine: 208
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nGets a list of all Search services in the given resource group.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static IEnumerable<SearchService> ListByResourceGroup(this IServicesOperations operations, string resourceGroupName, SearchManagementRequestOptions searchManagementRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroup(operations As IServicesOperations, resourceGroupName As String, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing) As IEnumerable(Of SearchService)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IServicesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Search.Models.SearchService}
  overload: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  id: ListByResourceGroupAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroupAsync(IServicesOperations, String, SearchManagementRequestOptions, CancellationToken)
  nameWithType: ServicesOperationsExtensions.ListByResourceGroupAsync(IServicesOperations, String, SearchManagementRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Search.IServicesOperations, System.String, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
    startLine: 230
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nGets a list of all Search services in the given resource group.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static Task<IEnumerable<SearchService>> ListByResourceGroupAsync(this IServicesOperations operations, string resourceGroupName, SearchManagementRequestOptions searchManagementRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroupAsync(operations As IServicesOperations, resourceGroupName As String, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of SearchService))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IServicesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Search.Models.SearchService}}
  overload: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroupAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailability(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  commentId: M:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailability(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  id: CheckNameAvailability(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckNameAvailability(IServicesOperations, String, SearchManagementRequestOptions)
  nameWithType: ServicesOperationsExtensions.CheckNameAvailability(IServicesOperations, String, SearchManagementRequestOptions)
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailability(Microsoft.Azure.Management.Search.IServicesOperations, System.String, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckNameAvailability
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
    startLine: 256
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nChecks whether or not the given Search service name is available for use.\nSearch service names must be globally unique since they are part of the\nservice URI (https://&lt;name&gt;.search.windows.net).\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static CheckNameAvailabilityOutput CheckNameAvailability(this IServicesOperations operations, string name, SearchManagementRequestOptions searchManagementRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckNameAvailability(operations As IServicesOperations, name As String, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing) As CheckNameAvailabilityOutput
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IServicesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: name
      type: System.String
      description: "\nThe Search service name to validate. Search service names must only\ncontain lowercase letters, digits or dashes, cannot use dash as the first\ntwo or last one characters, cannot contain consecutive dashes, and must\nbe between 2 and 60 characters in length.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  overload: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailability*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  id: CheckNameAvailabilityAsync(Microsoft.Azure.Management.Search.IServicesOperations,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.ServicesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilityAsync(IServicesOperations, String, SearchManagementRequestOptions, CancellationToken)
  nameWithType: ServicesOperationsExtensions.CheckNameAvailabilityAsync(IServicesOperations, String, SearchManagementRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Search.IServicesOperations, System.String, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckNameAvailabilityAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/ServicesOperationsExtensions.cs
    startLine: 282
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nChecks whether or not the given Search service name is available for use.\nSearch service names must be globally unique since they are part of the\nservice URI (https://&lt;name&gt;.search.windows.net).\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static Task<CheckNameAvailabilityOutput> CheckNameAvailabilityAsync(this IServicesOperations operations, string name, SearchManagementRequestOptions searchManagementRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckNameAvailabilityAsync(operations As IServicesOperations, name As String, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CheckNameAvailabilityOutput)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IServicesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: name
      type: System.String
      description: "\nThe Search service name to validate. Search service names must only\ncontain lowercase letters, digits or dashes, cannot use dash as the first\ntwo or last one characters, cannot contain consecutive dashes, and must\nbe between 2 and 60 characters in length.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput}
  overload: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailabilityAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Search
  commentId: N:Microsoft.Azure.Management.Search
  isExternal: false
  name: Microsoft.Azure.Management.Search
  nameWithType: Microsoft.Azure.Management.Search
  fullName: Microsoft.Azure.Management.Search
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdate*
  commentId: Overload:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdate
  isExternal: false
  name: CreateOrUpdate
  nameWithType: ServicesOperationsExtensions.CreateOrUpdate
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdate
- uid: Microsoft.Azure.Management.Search.IServicesOperations
  commentId: T:Microsoft.Azure.Management.Search.IServicesOperations
  parent: Microsoft.Azure.Management.Search
  isExternal: false
  name: IServicesOperations
  nameWithType: IServicesOperations
  fullName: Microsoft.Azure.Management.Search.IServicesOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Search.Models.SearchService
  commentId: T:Microsoft.Azure.Management.Search.Models.SearchService
  parent: Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: SearchService
  nameWithType: SearchService
  fullName: Microsoft.Azure.Management.Search.Models.SearchService
- uid: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
  commentId: T:Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
  parent: Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: SearchManagementRequestOptions
  nameWithType: SearchManagementRequestOptions
  fullName: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
- uid: Microsoft.Azure.Management.Search.Models
  commentId: N:Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: Microsoft.Azure.Management.Search.Models
  nameWithType: Microsoft.Azure.Management.Search.Models
  fullName: Microsoft.Azure.Management.Search.Models
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdateAsync*
  commentId: Overload:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdateAsync
  isExternal: false
  name: CreateOrUpdateAsync
  nameWithType: ServicesOperationsExtensions.CreateOrUpdateAsync
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CreateOrUpdateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Search.Models.SearchService}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.Search.Models.SearchService}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SearchService>
  nameWithType: Task<SearchService>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Search.Models.SearchService>
  nameWithType.vb: Task(Of SearchService)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Search.Models.SearchService)
  name.vb: Task(Of SearchService)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Search.Models.SearchService
    name: SearchService
    nameWithType: SearchService
    fullName: Microsoft.Azure.Management.Search.Models.SearchService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Search.Models.SearchService
    name: SearchService
    nameWithType: SearchService
    fullName: Microsoft.Azure.Management.Search.Models.SearchService
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: ServicesOperationsExtensions.Get
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Get
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: ServicesOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.GetAsync
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: ServicesOperationsExtensions.Delete
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.Delete
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: ServicesOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.DeleteAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroup*
  commentId: Overload:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroup
  isExternal: false
  name: ListByResourceGroup
  nameWithType: ServicesOperationsExtensions.ListByResourceGroup
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroup
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Search.Models.SearchService}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Search.Models.SearchService}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SearchService>
  nameWithType: IEnumerable<SearchService>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Management.Search.Models.SearchService>
  nameWithType.vb: IEnumerable(Of SearchService)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Management.Search.Models.SearchService)
  name.vb: IEnumerable(Of SearchService)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Search.Models.SearchService
    name: SearchService
    nameWithType: SearchService
    fullName: Microsoft.Azure.Management.Search.Models.SearchService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Search.Models.SearchService
    name: SearchService
    nameWithType: SearchService
    fullName: Microsoft.Azure.Management.Search.Models.SearchService
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroupAsync*
  commentId: Overload:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroupAsync
  isExternal: false
  name: ListByResourceGroupAsync
  nameWithType: ServicesOperationsExtensions.ListByResourceGroupAsync
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.ListByResourceGroupAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Search.Models.SearchService}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Search.Models.SearchService}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<SearchService>>
  nameWithType: Task<IEnumerable<SearchService>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.Azure.Management.Search.Models.SearchService>>
  nameWithType.vb: Task(Of IEnumerable(Of SearchService))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Management.Search.Models.SearchService))
  name.vb: Task(Of IEnumerable(Of SearchService))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Search.Models.SearchService
    name: SearchService
    nameWithType: SearchService
    fullName: Microsoft.Azure.Management.Search.Models.SearchService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Search.Models.SearchService
    name: SearchService
    nameWithType: SearchService
    fullName: Microsoft.Azure.Management.Search.Models.SearchService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailability*
  commentId: Overload:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailability
  isExternal: false
  name: CheckNameAvailability
  nameWithType: ServicesOperationsExtensions.CheckNameAvailability
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailability
- uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  commentId: T:Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  parent: Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: CheckNameAvailabilityOutput
  nameWithType: CheckNameAvailabilityOutput
  fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
- uid: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailabilityAsync*
  commentId: Overload:Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailabilityAsync
  isExternal: false
  name: CheckNameAvailabilityAsync
  nameWithType: ServicesOperationsExtensions.CheckNameAvailabilityAsync
  fullName: Microsoft.Azure.Management.Search.ServicesOperationsExtensions.CheckNameAvailabilityAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CheckNameAvailabilityOutput>
  nameWithType: Task<CheckNameAvailabilityOutput>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput>
  nameWithType.vb: Task(Of CheckNameAvailabilityOutput)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput)
  name.vb: Task(Of CheckNameAvailabilityOutput)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
    name: CheckNameAvailabilityOutput
    nameWithType: CheckNameAvailabilityOutput
    fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
    name: CheckNameAvailabilityOutput
    nameWithType: CheckNameAvailabilityOutput
    fullName: Microsoft.Azure.Management.Search.Models.CheckNameAvailabilityOutput
  - name: )
    nameWithType: )
    fullName: )
