### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions
  id: AdminKeysOperationsExtensions
  parent: Microsoft.Azure.Management.Search
  children:
  - Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Get(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  - Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.GetAsync(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Regenerate(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.AdminKeyKind,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  - Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.RegenerateAsync(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.AdminKeyKind,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: AdminKeysOperationsExtensions
  nameWithType: AdminKeysOperationsExtensions
  fullName: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/AdminKeysOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AdminKeysOperationsExtensions
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/AdminKeysOperationsExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nExtension methods for AdminKeysOperations.\n"
  example: []
  syntax:
    content: public static class AdminKeysOperationsExtensions
    content.vb: Public Module AdminKeysOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Get(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  commentId: M:Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Get(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  id: Get(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IAdminKeysOperations, String, String, SearchManagementRequestOptions)
  nameWithType: AdminKeysOperationsExtensions.Get(IAdminKeysOperations, String, String, SearchManagementRequestOptions)
  fullName: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Get(Microsoft.Azure.Management.Search.IAdminKeysOperations, System.String, System.String, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/AdminKeysOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/AdminKeysOperationsExtensions.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nGets the primary and secondary admin API keys for the specified Azure\nSearch service.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static AdminKeyResult Get(this IAdminKeysOperations operations, string resourceGroupName, string searchServiceName, SearchManagementRequestOptions searchManagementRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IAdminKeysOperations, resourceGroupName As String, searchServiceName As String, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing) As AdminKeyResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IAdminKeysOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchServiceName
      type: System.String
      description: "\nThe name of the Azure Search service associated with the specified\nresource group.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Management.Search.Models.AdminKeyResult
  overload: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.GetAsync(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.GetAsync(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IAdminKeysOperations, String, String, SearchManagementRequestOptions, CancellationToken)
  nameWithType: AdminKeysOperationsExtensions.GetAsync(IAdminKeysOperations, String, String, SearchManagementRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.GetAsync(Microsoft.Azure.Management.Search.IAdminKeysOperations, System.String, System.String, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/AdminKeysOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/AdminKeysOperationsExtensions.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nGets the primary and secondary admin API keys for the specified Azure\nSearch service.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static Task<AdminKeyResult> GetAsync(this IAdminKeysOperations operations, string resourceGroupName, string searchServiceName, SearchManagementRequestOptions searchManagementRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IAdminKeysOperations, resourceGroupName As String, searchServiceName As String, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AdminKeyResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IAdminKeysOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchServiceName
      type: System.String
      description: "\nThe name of the Azure Search service associated with the specified\nresource group.\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Search.Models.AdminKeyResult}
  overload: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Regenerate(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.AdminKeyKind,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  commentId: M:Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Regenerate(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.AdminKeyKind,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  id: Regenerate(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.AdminKeyKind,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions
  langs:
  - csharp
  - vb
  name: Regenerate(IAdminKeysOperations, String, String, AdminKeyKind, SearchManagementRequestOptions)
  nameWithType: AdminKeysOperationsExtensions.Regenerate(IAdminKeysOperations, String, String, AdminKeyKind, SearchManagementRequestOptions)
  fullName: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Regenerate(Microsoft.Azure.Management.Search.IAdminKeysOperations, System.String, System.String, Microsoft.Azure.Management.Search.Models.AdminKeyKind, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/AdminKeysOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Regenerate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/AdminKeysOperationsExtensions.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nRegenerates either the primary or secondary admin API key. You can only\nregenerate one key at a time.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static AdminKeyResult Regenerate(this IAdminKeysOperations operations, string resourceGroupName, string searchServiceName, AdminKeyKind keyKind, SearchManagementRequestOptions searchManagementRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Regenerate(operations As IAdminKeysOperations, resourceGroupName As String, searchServiceName As String, keyKind As AdminKeyKind, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing) As AdminKeyResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IAdminKeysOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchServiceName
      type: System.String
      description: "\nThe name of the Azure Search service associated with the specified\nresource group.\n"
    - id: keyKind
      type: Microsoft.Azure.Management.Search.Models.AdminKeyKind
      description: "\nSpecifies which key to regenerate. Valid values include 'primary' and\n'secondary'. Possible values include: 'primary', 'secondary'\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Management.Search.Models.AdminKeyResult
  overload: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Regenerate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.RegenerateAsync(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.AdminKeyKind,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.RegenerateAsync(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.AdminKeyKind,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  id: RegenerateAsync(Microsoft.Azure.Management.Search.IAdminKeysOperations,System.String,System.String,Microsoft.Azure.Management.Search.Models.AdminKeyKind,Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegenerateAsync(IAdminKeysOperations, String, String, AdminKeyKind, SearchManagementRequestOptions, CancellationToken)
  nameWithType: AdminKeysOperationsExtensions.RegenerateAsync(IAdminKeysOperations, String, String, AdminKeyKind, SearchManagementRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.RegenerateAsync(Microsoft.Azure.Management.Search.IAdminKeysOperations, System.String, System.String, Microsoft.Azure.Management.Search.Models.AdminKeyKind, Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/AdminKeysOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/AdminKeysOperationsExtensions.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search
  summary: "\nRegenerates either the primary or secondary admin API key. You can only\nregenerate one key at a time.\n<a href=\"https://aka.ms/search-manage\"></a>\n"
  example: []
  syntax:
    content: public static Task<AdminKeyResult> RegenerateAsync(this IAdminKeysOperations operations, string resourceGroupName, string searchServiceName, AdminKeyKind keyKind, SearchManagementRequestOptions searchManagementRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegenerateAsync(operations As IAdminKeysOperations, resourceGroupName As String, searchServiceName As String, keyKind As AdminKeyKind, searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AdminKeyResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Search.IAdminKeysOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group within the current subscription. You can\nobtain this value from the Azure Resource Manager API or the portal.\n"
    - id: searchServiceName
      type: System.String
      description: "\nThe name of the Azure Search service associated with the specified\nresource group.\n"
    - id: keyKind
      type: Microsoft.Azure.Management.Search.Models.AdminKeyKind
      description: "\nSpecifies which key to regenerate. Valid values include 'primary' and\n'secondary'. Possible values include: 'primary', 'secondary'\n"
    - id: searchManagementRequestOptions
      type: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Search.Models.AdminKeyResult}
  overload: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.RegenerateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Search
  commentId: N:Microsoft.Azure.Management.Search
  isExternal: false
  name: Microsoft.Azure.Management.Search
  nameWithType: Microsoft.Azure.Management.Search
  fullName: Microsoft.Azure.Management.Search
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: AdminKeysOperationsExtensions.Get
  fullName: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Get
- uid: Microsoft.Azure.Management.Search.IAdminKeysOperations
  commentId: T:Microsoft.Azure.Management.Search.IAdminKeysOperations
  parent: Microsoft.Azure.Management.Search
  isExternal: false
  name: IAdminKeysOperations
  nameWithType: IAdminKeysOperations
  fullName: Microsoft.Azure.Management.Search.IAdminKeysOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
  commentId: T:Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
  parent: Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: SearchManagementRequestOptions
  nameWithType: SearchManagementRequestOptions
  fullName: Microsoft.Azure.Management.Search.Models.SearchManagementRequestOptions
- uid: Microsoft.Azure.Management.Search.Models.AdminKeyResult
  commentId: T:Microsoft.Azure.Management.Search.Models.AdminKeyResult
  parent: Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: AdminKeyResult
  nameWithType: AdminKeyResult
  fullName: Microsoft.Azure.Management.Search.Models.AdminKeyResult
- uid: Microsoft.Azure.Management.Search.Models
  commentId: N:Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: Microsoft.Azure.Management.Search.Models
  nameWithType: Microsoft.Azure.Management.Search.Models
  fullName: Microsoft.Azure.Management.Search.Models
- uid: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: AdminKeysOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.GetAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Search.Models.AdminKeyResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.Search.Models.AdminKeyResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AdminKeyResult>
  nameWithType: Task<AdminKeyResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Search.Models.AdminKeyResult>
  nameWithType.vb: Task(Of AdminKeyResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Search.Models.AdminKeyResult)
  name.vb: Task(Of AdminKeyResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Search.Models.AdminKeyResult
    name: AdminKeyResult
    nameWithType: AdminKeyResult
    fullName: Microsoft.Azure.Management.Search.Models.AdminKeyResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Search.Models.AdminKeyResult
    name: AdminKeyResult
    nameWithType: AdminKeyResult
    fullName: Microsoft.Azure.Management.Search.Models.AdminKeyResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Regenerate*
  commentId: Overload:Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Regenerate
  isExternal: false
  name: Regenerate
  nameWithType: AdminKeysOperationsExtensions.Regenerate
  fullName: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.Regenerate
- uid: Microsoft.Azure.Management.Search.Models.AdminKeyKind
  commentId: T:Microsoft.Azure.Management.Search.Models.AdminKeyKind
  parent: Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: AdminKeyKind
  nameWithType: AdminKeyKind
  fullName: Microsoft.Azure.Management.Search.Models.AdminKeyKind
- uid: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.RegenerateAsync*
  commentId: Overload:Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.RegenerateAsync
  isExternal: false
  name: RegenerateAsync
  nameWithType: AdminKeysOperationsExtensions.RegenerateAsync
  fullName: Microsoft.Azure.Management.Search.AdminKeysOperationsExtensions.RegenerateAsync
