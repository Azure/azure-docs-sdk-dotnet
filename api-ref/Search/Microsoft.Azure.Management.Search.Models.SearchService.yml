### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Search.Models.SearchService
  commentId: T:Microsoft.Azure.Management.Search.Models.SearchService
  id: SearchService
  parent: Microsoft.Azure.Management.Search.Models
  children:
  - Microsoft.Azure.Management.Search.Models.SearchService.#ctor
  - Microsoft.Azure.Management.Search.Models.SearchService.#ctor(System.String,Microsoft.Azure.Management.Search.Models.Sku,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Microsoft.Azure.Management.Search.Models.HostingMode},System.Nullable{Microsoft.Azure.Management.Search.Models.SearchServiceStatus},System.String,System.Nullable{Microsoft.Azure.Management.Search.Models.ProvisioningState})
  - Microsoft.Azure.Management.Search.Models.SearchService.HostingMode
  - Microsoft.Azure.Management.Search.Models.SearchService.PartitionCount
  - Microsoft.Azure.Management.Search.Models.SearchService.ProvisioningState
  - Microsoft.Azure.Management.Search.Models.SearchService.ReplicaCount
  - Microsoft.Azure.Management.Search.Models.SearchService.Sku
  - Microsoft.Azure.Management.Search.Models.SearchService.Status
  - Microsoft.Azure.Management.Search.Models.SearchService.StatusDetails
  - Microsoft.Azure.Management.Search.Models.SearchService.Validate
  langs:
  - csharp
  - vb
  name: SearchService
  nameWithType: SearchService
  fullName: Microsoft.Azure.Management.Search.Models.SearchService
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: SearchService
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nDescribes an Azure Search service and its current state.\n"
  example: []
  syntax:
    content: 'public class SearchService : Resource, IResource'
    content.vb: >-
      Public Class SearchService
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Search.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Search.Models.Resource.Id
  - Microsoft.Azure.Management.Search.Models.Resource.Name
  - Microsoft.Azure.Management.Search.Models.Resource.Type
  - Microsoft.Azure.Management.Search.Models.Resource.Location
  - Microsoft.Azure.Management.Search.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Search.Models.SearchService.#ctor
  commentId: M:Microsoft.Azure.Management.Search.Models.SearchService.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Search.Models.SearchService
  langs:
  - csharp
  - vb
  name: SearchService()
  nameWithType: SearchService.SearchService()
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.SearchService()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nInitializes a new instance of the SearchService class.\n"
  example: []
  syntax:
    content: public SearchService()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Search.Models.SearchService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Search.Models.SearchService.#ctor(System.String,Microsoft.Azure.Management.Search.Models.Sku,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Microsoft.Azure.Management.Search.Models.HostingMode},System.Nullable{Microsoft.Azure.Management.Search.Models.SearchServiceStatus},System.String,System.Nullable{Microsoft.Azure.Management.Search.Models.ProvisioningState})
  commentId: M:Microsoft.Azure.Management.Search.Models.SearchService.#ctor(System.String,Microsoft.Azure.Management.Search.Models.Sku,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Microsoft.Azure.Management.Search.Models.HostingMode},System.Nullable{Microsoft.Azure.Management.Search.Models.SearchServiceStatus},System.String,System.Nullable{Microsoft.Azure.Management.Search.Models.ProvisioningState})
  id: '#ctor(System.String,Microsoft.Azure.Management.Search.Models.Sku,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Microsoft.Azure.Management.Search.Models.HostingMode},System.Nullable{Microsoft.Azure.Management.Search.Models.SearchServiceStatus},System.String,System.Nullable{Microsoft.Azure.Management.Search.Models.ProvisioningState})'
  parent: Microsoft.Azure.Management.Search.Models.SearchService
  langs:
  - csharp
  - vb
  name: SearchService(String, Sku, String, String, String, IDictionary<String, String>, Nullable<Int32>, Nullable<Int32>, Nullable<HostingMode>, Nullable<SearchServiceStatus>, String, Nullable<ProvisioningState>)
  nameWithType: SearchService.SearchService(String, Sku, String, String, String, IDictionary<String, String>, Nullable<Int32>, Nullable<Int32>, Nullable<HostingMode>, Nullable<SearchServiceStatus>, String, Nullable<ProvisioningState>)
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.SearchService(System.String, Microsoft.Azure.Management.Search.Models.Sku, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<Microsoft.Azure.Management.Search.Models.HostingMode>, System.Nullable<Microsoft.Azure.Management.Search.Models.SearchServiceStatus>, System.String, System.Nullable<Microsoft.Azure.Management.Search.Models.ProvisioningState>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nInitializes a new instance of the SearchService class.\n"
  example: []
  syntax:
    content: public SearchService(string location, Sku sku, string id = null, string name = null, string type = null, IDictionary<string, string> tags = null, int ? replicaCount = null, int ? partitionCount = null, HostingMode? hostingMode = null, SearchServiceStatus? status = null, string statusDetails = null, ProvisioningState? provisioningState = null)
    content.vb: Public Sub New(location As String, sku As Sku, id As String = Nothing, name As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, replicaCount As Integer? = Nothing, partitionCount As Integer? = Nothing, hostingMode As HostingMode? = Nothing, status As SearchServiceStatus? = Nothing, statusDetails As String = Nothing, provisioningState As ProvisioningState? = Nothing)
    parameters:
    - id: location
      type: System.String
      description: >-
        The geographic location of the resource.

        This must be one of the supported and registered Azure Geo

        Regions (for example, West US, East US, Southeast Asia, and so

        forth).
    - id: sku
      type: Microsoft.Azure.Management.Search.Models.Sku
      description: >-
        The SKU of the Search Service, which determines

        price tier and capacity limits.
    - id: id
      type: System.String
      description: >-
        The ID of the resource. This can be used with the

        Azure Resource Manager to link resources together.
    - id: name
      type: System.String
      description: The name of the resource.
    - id: type
      type: System.String
      description: The resource type.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: >-
        Tags to help categorize the resource in the

        Azure portal.
    - id: replicaCount
      type: System.Nullable{System.Int32}
      description: >-
        The number of replicas in the Search

        service. If specified, it must be a value between 1 and 12

        inclusive for standard SKUs or between 1 and 3 inclusive for

        basic SKU.
    - id: partitionCount
      type: System.Nullable{System.Int32}
      description: >-
        The number of partitions in the

        Search service; if specified, it can be 1, 2, 3, 4, 6, or 12.

        Values greater than 1 are only valid for standard SKUs. For

        'standard3' services with hostingMode set to 'highDensity', the

        allowed values are between 1 and 3.
    - id: hostingMode
      type: System.Nullable{Microsoft.Azure.Management.Search.Models.HostingMode}
      description: >-
        Applicable only for the standard3 SKU.

        You can set this property to enable up to 3 high density

        partitions that allow up to 1000 indexes, which is much higher

        than the maximum indexes allowed for any other SKU. For the

        standard3 SKU, the value is either 'default' or 'highDensity'.

        For all other SKUs, this value must be 'default'. Possible values

        include: 'default', 'highDensity'
    - id: status
      type: System.Nullable{Microsoft.Azure.Management.Search.Models.SearchServiceStatus}
      description: >-
        The status of the Search service. Possible

        values include: 'running': The Search service is running and no

        provisioning operations are underway. 'provisioning': The Search

        service is being provisioned or scaled up or down. 'deleting':

        The Search service is being deleted. 'degraded': The Search

        service is degraded. This can occur when the underlying search

        units are not healthy. The Search service is most likely

        operational, but performance might be slow and some requests

        might be dropped. 'disabled': The Search service is disabled. In

        this state, the service will reject all API requests. 'error':

        The Search service is in an error state. If your service is in

        the degraded, disabled, or error states, it means the Azure

        Search team is actively investigating the underlying issue.

        Dedicated services in these states are still chargeable based on

        the number of search units provisioned. Possible values include:

        'running', 'provisioning', 'deleting', 'degraded', 'disabled',

        'error'
    - id: statusDetails
      type: System.String
      description: >-
        The details of the Search service

        status.
    - id: provisioningState
      type: System.Nullable{Microsoft.Azure.Management.Search.Models.ProvisioningState}
      description: >-
        The state of the last provisioning

        operation performed on the Search service. Provisioning is an

        intermediate state that occurs while service capacity is being

        established. After capacity is set up, provisioningState changes

        to either 'succeeded' or 'failed'. Client applications can poll

        provisioning status (the recommended polling interval is from 30

        seconds to one minute) by using the Get Search Service operation

        to see when an operation is completed. If you are using the free

        service, this value tends to come back as 'succeeded' directly in

        the call to Create Search service. This is because the free

        service uses capacity that is already set up. Possible values

        include: 'succeeded', 'provisioning', 'failed'
  overload: Microsoft.Azure.Management.Search.Models.SearchService.#ctor*
  nameWithType.vb: SearchService.SearchService(String, Sku, String, String, String, IDictionary(Of String, String), Nullable(Of Int32), Nullable(Of Int32), Nullable(Of HostingMode), Nullable(Of SearchServiceStatus), String, Nullable(Of ProvisioningState))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Search.Models.SearchService.SearchService(System.String, Microsoft.Azure.Management.Search.Models.Sku, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of Microsoft.Azure.Management.Search.Models.HostingMode), System.Nullable(Of Microsoft.Azure.Management.Search.Models.SearchServiceStatus), System.String, System.Nullable(Of Microsoft.Azure.Management.Search.Models.ProvisioningState))
  name.vb: SearchService(String, Sku, String, String, String, IDictionary(Of String, String), Nullable(Of Int32), Nullable(Of Int32), Nullable(Of HostingMode), Nullable(Of SearchServiceStatus), String, Nullable(Of ProvisioningState))
- uid: Microsoft.Azure.Management.Search.Models.SearchService.ReplicaCount
  commentId: P:Microsoft.Azure.Management.Search.Models.SearchService.ReplicaCount
  id: ReplicaCount
  parent: Microsoft.Azure.Management.Search.Models.SearchService
  langs:
  - csharp
  - vb
  name: ReplicaCount
  nameWithType: SearchService.ReplicaCount
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.ReplicaCount
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ReplicaCount
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets or sets the number of replicas in the Search service. If\nspecified, it must be a value between 1 and 12 inclusive for\nstandard SKUs or between 1 and 3 inclusive for basic SKU.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.replicaCount")]

      public int ? ReplicaCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.replicaCount")>

      Public Property ReplicaCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Search.Models.SearchService.ReplicaCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.replicaCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Search.Models.SearchService.PartitionCount
  commentId: P:Microsoft.Azure.Management.Search.Models.SearchService.PartitionCount
  id: PartitionCount
  parent: Microsoft.Azure.Management.Search.Models.SearchService
  langs:
  - csharp
  - vb
  name: PartitionCount
  nameWithType: SearchService.PartitionCount
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.PartitionCount
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: PartitionCount
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets or sets the number of partitions in the Search service; if\nspecified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1\nare only valid for standard SKUs. For 'standard3' services with\nhostingMode set to 'highDensity', the allowed values are between\n1 and 3.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.partitionCount")]

      public int ? PartitionCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.partitionCount")>

      Public Property PartitionCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Search.Models.SearchService.PartitionCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.partitionCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Search.Models.SearchService.HostingMode
  commentId: P:Microsoft.Azure.Management.Search.Models.SearchService.HostingMode
  id: HostingMode
  parent: Microsoft.Azure.Management.Search.Models.SearchService
  langs:
  - csharp
  - vb
  name: HostingMode
  nameWithType: SearchService.HostingMode
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.HostingMode
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: HostingMode
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets or sets applicable only for the standard3 SKU. You can set\nthis property to enable up to 3 high density partitions that\nallow up to 1000 indexes, which is much higher than the maximum\nindexes allowed for any other SKU. For the standard3 SKU, the\nvalue is either 'default' or 'highDensity'. For all other SKUs,\nthis value must be 'default'. Possible values include: 'default',\n'highDensity'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.hostingMode")]

      public HostingMode? HostingMode { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.hostingMode")>

      Public Property HostingMode As HostingMode?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Search.Models.HostingMode}
  overload: Microsoft.Azure.Management.Search.Models.SearchService.HostingMode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.hostingMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Search.Models.SearchService.Status
  commentId: P:Microsoft.Azure.Management.Search.Models.SearchService.Status
  id: Status
  parent: Microsoft.Azure.Management.Search.Models.SearchService
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: SearchService.Status
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.Status
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Status
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
    startLine: 145
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets the status of the Search service. Possible values include:\n'running': The Search service is running and no provisioning\noperations are underway. 'provisioning': The Search service is\nbeing provisioned or scaled up or down. 'deleting': The Search\nservice is being deleted. 'degraded': The Search service is\ndegraded. This can occur when the underlying search units are not\nhealthy. The Search service is most likely operational, but\nperformance might be slow and some requests might be dropped.\n'disabled': The Search service is disabled. In this state, the\nservice will reject all API requests. 'error': The Search service\nis in an error state. If your service is in the degraded,\ndisabled, or error states, it means the Azure Search team is\nactively investigating the underlying issue. Dedicated services\nin these states are still chargeable based on the number of\nsearch units provisioned. Possible values include: 'running',\n'provisioning', 'deleting', 'degraded', 'disabled', 'error'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.status")]

      public SearchServiceStatus? Status { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.status")>

      Public ReadOnly Property Status As SearchServiceStatus?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Search.Models.SearchServiceStatus}
  overload: Microsoft.Azure.Management.Search.Models.SearchService.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.status
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Search.Models.SearchService.StatusDetails
  commentId: P:Microsoft.Azure.Management.Search.Models.SearchService.StatusDetails
  id: StatusDetails
  parent: Microsoft.Azure.Management.Search.Models.SearchService
  langs:
  - csharp
  - vb
  name: StatusDetails
  nameWithType: SearchService.StatusDetails
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.StatusDetails
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: StatusDetails
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets the details of the Search service status.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.statusDetails")]

      public string StatusDetails { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.statusDetails")>

      Public ReadOnly Property StatusDetails As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Search.Models.SearchService.StatusDetails*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.statusDetails
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Search.Models.SearchService.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Search.Models.SearchService.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Search.Models.SearchService
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: SearchService.ProvisioningState
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.ProvisioningState
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
    startLine: 168
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets the state of the last provisioning operation performed on the\nSearch service. Provisioning is an intermediate state that occurs\nwhile service capacity is being established. After capacity is\nset up, provisioningState changes to either 'succeeded' or\n'failed'. Client applications can poll provisioning status (the\nrecommended polling interval is from 30 seconds to one minute) by\nusing the Get Search Service operation to see when an operation\nis completed. If you are using the free service, this value tends\nto come back as 'succeeded' directly in the call to Create Search\nservice. This is because the free service uses capacity that is\nalready set up. Possible values include: 'succeeded',\n'provisioning', 'failed'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public ProvisioningState? ProvisioningState { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public ReadOnly Property ProvisioningState As ProvisioningState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Search.Models.ProvisioningState}
  overload: Microsoft.Azure.Management.Search.Models.SearchService.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Search.Models.SearchService.Sku
  commentId: P:Microsoft.Azure.Management.Search.Models.SearchService.Sku
  id: Sku
  parent: Microsoft.Azure.Management.Search.Models.SearchService
  langs:
  - csharp
  - vb
  name: Sku
  nameWithType: SearchService.Sku
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.Sku
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Sku
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets or sets the SKU of the Search Service, which determines price\ntier and capacity limits.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sku")]

      public Sku Sku { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sku")>

      Public Property Sku As Sku
    parameters: []
    return:
      type: Microsoft.Azure.Management.Search.Models.Sku
  overload: Microsoft.Azure.Management.Search.Models.SearchService.Sku*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sku
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Search.Models.SearchService.Validate
  commentId: M:Microsoft.Azure.Management.Search.Models.SearchService.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Search.Models.SearchService
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: SearchService.Validate()
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.Validate()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Validate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchService.cs
    startLine: 184
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.Search.Models.Resource.Validate
  overload: Microsoft.Azure.Management.Search.Models.SearchService.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.Search.Models
  commentId: N:Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: Microsoft.Azure.Management.Search.Models
  nameWithType: Microsoft.Azure.Management.Search.Models
  fullName: Microsoft.Azure.Management.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Search.Models.Resource
  commentId: T:Microsoft.Azure.Management.Search.Models.Resource
  parent: Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.Search.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Search.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.Search.Models.Resource.Id
  parent: Microsoft.Azure.Management.Search.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.Search.Models.Resource.Id
- uid: Microsoft.Azure.Management.Search.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.Search.Models.Resource.Name
  parent: Microsoft.Azure.Management.Search.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.Search.Models.Resource.Name
- uid: Microsoft.Azure.Management.Search.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.Search.Models.Resource.Type
  parent: Microsoft.Azure.Management.Search.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.Search.Models.Resource.Type
- uid: Microsoft.Azure.Management.Search.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.Search.Models.Resource.Location
  parent: Microsoft.Azure.Management.Search.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.Search.Models.Resource.Location
- uid: Microsoft.Azure.Management.Search.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.Search.Models.Resource.Tags
  parent: Microsoft.Azure.Management.Search.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.Search.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Search.Models.SearchService.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchService.#ctor
  isExternal: false
  name: SearchService
  nameWithType: SearchService.SearchService
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.SearchService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Search.Models.Sku
  commentId: T:Microsoft.Azure.Management.Search.Models.Sku
  parent: Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: Sku
  nameWithType: Sku
  fullName: Microsoft.Azure.Management.Search.Models.Sku
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Search.Models.HostingMode}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Search.Models.HostingMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<HostingMode>
  nameWithType: Nullable<HostingMode>
  fullName: System.Nullable<Microsoft.Azure.Management.Search.Models.HostingMode>
  nameWithType.vb: Nullable(Of HostingMode)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Search.Models.HostingMode)
  name.vb: Nullable(Of HostingMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Search.Models.HostingMode
    name: HostingMode
    nameWithType: HostingMode
    fullName: Microsoft.Azure.Management.Search.Models.HostingMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Search.Models.HostingMode
    name: HostingMode
    nameWithType: HostingMode
    fullName: Microsoft.Azure.Management.Search.Models.HostingMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Search.Models.SearchServiceStatus}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Search.Models.SearchServiceStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SearchServiceStatus>
  nameWithType: Nullable<SearchServiceStatus>
  fullName: System.Nullable<Microsoft.Azure.Management.Search.Models.SearchServiceStatus>
  nameWithType.vb: Nullable(Of SearchServiceStatus)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Search.Models.SearchServiceStatus)
  name.vb: Nullable(Of SearchServiceStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Search.Models.SearchServiceStatus
    name: SearchServiceStatus
    nameWithType: SearchServiceStatus
    fullName: Microsoft.Azure.Management.Search.Models.SearchServiceStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Search.Models.SearchServiceStatus
    name: SearchServiceStatus
    nameWithType: SearchServiceStatus
    fullName: Microsoft.Azure.Management.Search.Models.SearchServiceStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Search.Models.ProvisioningState}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Search.Models.ProvisioningState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ProvisioningState>
  nameWithType: Nullable<ProvisioningState>
  fullName: System.Nullable<Microsoft.Azure.Management.Search.Models.ProvisioningState>
  nameWithType.vb: Nullable(Of ProvisioningState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Search.Models.ProvisioningState)
  name.vb: Nullable(Of ProvisioningState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Search.Models.ProvisioningState
    name: ProvisioningState
    nameWithType: ProvisioningState
    fullName: Microsoft.Azure.Management.Search.Models.ProvisioningState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Search.Models.ProvisioningState
    name: ProvisioningState
    nameWithType: ProvisioningState
    fullName: Microsoft.Azure.Management.Search.Models.ProvisioningState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Search.Models.SearchService.ReplicaCount*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchService.ReplicaCount
  isExternal: false
  name: ReplicaCount
  nameWithType: SearchService.ReplicaCount
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.ReplicaCount
- uid: Microsoft.Azure.Management.Search.Models.SearchService.PartitionCount*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchService.PartitionCount
  isExternal: false
  name: PartitionCount
  nameWithType: SearchService.PartitionCount
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.PartitionCount
- uid: Microsoft.Azure.Management.Search.Models.SearchService.HostingMode*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchService.HostingMode
  isExternal: false
  name: HostingMode
  nameWithType: SearchService.HostingMode
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.HostingMode
- uid: Microsoft.Azure.Management.Search.Models.SearchService.Status*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchService.Status
  isExternal: false
  name: Status
  nameWithType: SearchService.Status
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.Status
- uid: Microsoft.Azure.Management.Search.Models.SearchService.StatusDetails*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchService.StatusDetails
  isExternal: false
  name: StatusDetails
  nameWithType: SearchService.StatusDetails
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.StatusDetails
- uid: Microsoft.Azure.Management.Search.Models.SearchService.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchService.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: SearchService.ProvisioningState
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.ProvisioningState
- uid: Microsoft.Azure.Management.Search.Models.SearchService.Sku*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchService.Sku
  isExternal: false
  name: Sku
  nameWithType: SearchService.Sku
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.Sku
- uid: Microsoft.Azure.Management.Search.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.Search.Models.Resource.Validate
  parent: Microsoft.Azure.Management.Search.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.Search.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Search.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.Search.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Search.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.Search.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Search.Models.SearchService.Validate*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchService.Validate
  isExternal: false
  name: Validate
  nameWithType: SearchService.Validate
  fullName: Microsoft.Azure.Management.Search.Models.SearchService.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
