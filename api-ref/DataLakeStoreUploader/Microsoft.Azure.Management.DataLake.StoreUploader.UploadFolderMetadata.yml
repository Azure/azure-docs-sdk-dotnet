### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  id: UploadFolderMetadata
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  children:
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter)
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.DeleteFile
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.FileCount
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Files
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.InputFolderPath
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.IsRecursive
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Save
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TargetStreamFolderPath
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TotalFileBytes
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.UploadId
  langs:
  - csharp
  - vb
  name: UploadFolderMetadata
  nameWithType: UploadFolderMetadata
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UploadFolderMetadata
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nRepresents general metadata pertaining to an upload.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class UploadFolderMetadata
    content.vb: >-
      <DataContract>

      Public Class UploadFolderMetadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter)
  id: '#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter)'
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  langs:
  - csharp
  - vb
  name: UploadFolderMetadata(String, UploadParameters, IFrontEndAdapter)
  nameWithType: UploadFolderMetadata.UploadFolderMetadata(String, UploadParameters, IFrontEndAdapter)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.UploadFolderMetadata(System.String, Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters, Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nConstructs a new UploadMetadata from the given parameters.\n"
  example: []
  syntax:
    content: public UploadFolderMetadata(string metadataFilePath, UploadParameters uploadParameters, IFrontEndAdapter frontend)
    content.vb: Public Sub New(metadataFilePath As String, uploadParameters As UploadParameters, frontend As IFrontEndAdapter)
    parameters:
    - id: metadataFilePath
      type: System.String
      description: The file path to assign to this metadata file (for saving purposes).
    - id: uploadParameters
      type: Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters
      description: The parameters to use for constructing this metadata.
    - id: frontend
      type: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
      description: The frontend to use when generating per file metadata.
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.UploadId
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.UploadId
  id: UploadId
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  langs:
  - csharp
  - vb
  name: UploadId
  nameWithType: UploadFolderMetadata.UploadId
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.UploadId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UploadId
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating the unique identifier associated with this upload.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "UploadId")]

      public string UploadId { get; set; }
    content.vb: >-
      <DataMember(Name:="UploadId")>

      Public Property UploadId As String
    parameters: []
    return:
      type: System.String
      description: "\nThe upload identifier.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.UploadId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: UploadId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.InputFolderPath
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.InputFolderPath
  id: InputFolderPath
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  langs:
  - csharp
  - vb
  name: InputFolderPath
  nameWithType: UploadFolderMetadata.InputFolderPath
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.InputFolderPath
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InputFolderPath
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
    startLine: 178
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating the full path to the file to be uploaded.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "InputFolderPath")]

      public string InputFolderPath { get; set; }
    content.vb: >-
      <DataMember(Name:="InputFolderPath")>

      Public Property InputFolderPath As String
    parameters: []
    return:
      type: System.String
      description: "\nThe input file path.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.InputFolderPath*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: InputFolderPath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TargetStreamFolderPath
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TargetStreamFolderPath
  id: TargetStreamFolderPath
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  langs:
  - csharp
  - vb
  name: TargetStreamFolderPath
  nameWithType: UploadFolderMetadata.TargetStreamFolderPath
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TargetStreamFolderPath
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TargetStreamFolderPath
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
    startLine: 187
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating the full stream folder path that will be used as the root folder for all files and folders being uploaded.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "TargetStreamFolderPath")]

      public string TargetStreamFolderPath { get; set; }
    content.vb: >-
      <DataMember(Name:="TargetStreamFolderPath")>

      Public Property TargetStreamFolderPath As String
    parameters: []
    return:
      type: System.String
      description: "\nThe target stream path.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TargetStreamFolderPath*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: TargetStreamFolderPath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.FileCount
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.FileCount
  id: FileCount
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  langs:
  - csharp
  - vb
  name: FileCount
  nameWithType: UploadFolderMetadata.FileCount
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.FileCount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FileCount
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
    startLine: 196
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating the number of files in this upload.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "FileCount")]

      public int FileCount { get; set; }
    content.vb: >-
      <DataMember(Name:="FileCount")>

      Public Property FileCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nThe segment count.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.FileCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: FileCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TotalFileBytes
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TotalFileBytes
  id: TotalFileBytes
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  langs:
  - csharp
  - vb
  name: TotalFileBytes
  nameWithType: UploadFolderMetadata.TotalFileBytes
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TotalFileBytes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TotalFileBytes
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
    startLine: 205
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets the total bytes for all the files.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "TotalFileBytes")]

      public long TotalFileBytes { get; set; }
    content.vb: >-
      <DataMember(Name:="TotalFileBytes")>

      Public Property TotalFileBytes As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe total bytes for all the files.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TotalFileBytes*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: TotalFileBytes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.IsRecursive
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.IsRecursive
  id: IsRecursive
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  langs:
  - csharp
  - vb
  name: IsRecursive
  nameWithType: UploadFolderMetadata.IsRecursive
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.IsRecursive
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsRecursive
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
    startLine: 214
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets a value indicating whether this is recurisve directory upload or a flat directory upload\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "IsRecursive")]

      public bool IsRecursive { get; set; }
    content.vb: >-
      <DataMember(Name:="IsRecursive")>

      Public Property IsRecursive As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is recursive; otherwise, <code>false</code>.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.IsRecursive*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: IsRecursive
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Files
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Files
  id: Files
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: UploadFolderMetadata.Files
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Files
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Files
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
    startLine: 223
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets a pointer to an array of file upload metadata. This is used for each file that is being uploaded.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Files")]

      public UploadMetadata[] Files { get; set; }
    content.vb: >-
      <DataMember(Name:="Files")>

      Public Property Files As UploadMetadata()
    parameters: []
    return:
      type: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata[]
      description: "\nThe segments.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Files*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Files
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Save
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Save
  id: Save
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: UploadFolderMetadata.Save()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Save()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Save
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
    startLine: 283
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nSaves the given metadata to its canonical location. This method is thread-safe.\n"
  example: []
  syntax:
    content: public void Save()
    content.vb: Public Sub Save
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.DeleteFile
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.DeleteFile
  id: DeleteFile
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata
  langs:
  - csharp
  - vb
  name: DeleteFile()
  nameWithType: UploadFolderMetadata.DeleteFile()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.DeleteFile()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteFile
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadFolderMetadata.cs
    startLine: 314
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nDeletes the metadata file from disk.\n"
  example: []
  syntax:
    content: public void DeleteFile()
    content.vb: Public Sub DeleteFile
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.DeleteFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Null or empty MetadataFilePath. Cannot delete metadata until this property is set.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader
  commentId: N:Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.StoreUploader
  nameWithType: Microsoft.Azure.Management.DataLake.StoreUploader
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.#ctor*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.#ctor
  isExternal: false
  name: UploadFolderMetadata
  nameWithType: UploadFolderMetadata.UploadFolderMetadata
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.UploadFolderMetadata
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: UploadParameters
  nameWithType: UploadParameters
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: IFrontEndAdapter
  nameWithType: IFrontEndAdapter
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.UploadId*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.UploadId
  isExternal: false
  name: UploadId
  nameWithType: UploadFolderMetadata.UploadId
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.UploadId
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.InputFolderPath*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.InputFolderPath
  isExternal: false
  name: InputFolderPath
  nameWithType: UploadFolderMetadata.InputFolderPath
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.InputFolderPath
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TargetStreamFolderPath*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TargetStreamFolderPath
  isExternal: false
  name: TargetStreamFolderPath
  nameWithType: UploadFolderMetadata.TargetStreamFolderPath
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TargetStreamFolderPath
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.FileCount*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.FileCount
  isExternal: false
  name: FileCount
  nameWithType: UploadFolderMetadata.FileCount
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.FileCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TotalFileBytes*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TotalFileBytes
  isExternal: false
  name: TotalFileBytes
  nameWithType: UploadFolderMetadata.TotalFileBytes
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.TotalFileBytes
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.IsRecursive*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.IsRecursive
  isExternal: false
  name: IsRecursive
  nameWithType: UploadFolderMetadata.IsRecursive
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.IsRecursive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Files*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Files
  isExternal: false
  name: Files
  nameWithType: UploadFolderMetadata.Files
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Files
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata[]
  name: UploadMetadata[]
  nameWithType: UploadMetadata[]
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata[]
  nameWithType.vb: UploadMetadata()
  fullname.vb: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata()
  name.vb: UploadMetadata()
  spec.csharp:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
    name: UploadMetadata
    nameWithType: UploadMetadata
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
    name: UploadMetadata
    nameWithType: UploadMetadata
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Save*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Save
  isExternal: false
  name: Save
  nameWithType: UploadFolderMetadata.Save
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.Save
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.DeleteFile*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.DeleteFile
  isExternal: false
  name: DeleteFile
  nameWithType: UploadFolderMetadata.DeleteFile
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderMetadata.DeleteFile
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
