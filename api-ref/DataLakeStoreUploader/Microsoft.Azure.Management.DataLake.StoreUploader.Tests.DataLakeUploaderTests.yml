### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  id: DataLakeUploaderTests
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  children:
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.#ctor
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_CancelUpload
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshFolderUploadDownload
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshUploadDownload
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_InvalidParameters
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUpload
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUploadWithProgress
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialUploadDownload
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_TargetExistsNoOverwrite
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_UploadDownloadSingleSegment
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.Dispose
  langs:
  - csharp
  - vb
  name: DataLakeUploaderTests
  nameWithType: DataLakeUploaderTests
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeUploaderTests
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 23
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  summary: "\nUnit tests for the uploader.\n"
  example: []
  syntax:
    content: 'public class DataLakeUploaderTests : IDisposable'
    content.vb: >-
      Public Class DataLakeUploaderTests
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.#ctor
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: DataLakeUploaderTests()
  nameWithType: DataLakeUploaderTests.DataLakeUploaderTests()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploaderTests()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 48
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  syntax:
    content: public DataLakeUploaderTests()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.Dispose
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.Dispose
  id: Dispose
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DataLakeUploaderTests.Dispose()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.Dispose()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Dispose
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 56
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_InvalidParameters
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_InvalidParameters
  id: DataLakeUploader_InvalidParameters
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: DataLakeUploader_InvalidParameters()
  nameWithType: DataLakeUploaderTests.DataLakeUploader_InvalidParameters()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_InvalidParameters()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeUploader_InvalidParameters
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 72
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  summary: "\nTests the case when invalid parameters are being passed to the uploader.\n"
  example: []
  syntax:
    content: public void DataLakeUploader_InvalidParameters()
    content.vb: Public Sub DataLakeUploader_InvalidParameters
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_InvalidParameters*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_TargetExistsNoOverwrite
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_TargetExistsNoOverwrite
  id: DataLakeUploader_TargetExistsNoOverwrite
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: DataLakeUploader_TargetExistsNoOverwrite()
  nameWithType: DataLakeUploaderTests.DataLakeUploader_TargetExistsNoOverwrite()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_TargetExistsNoOverwrite()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeUploader_TargetExistsNoOverwrite
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 114
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  summary: "\nTests the case when the target stream exists and we haven't set the overwrite flag.\n"
  example: []
  syntax:
    content: public void DataLakeUploader_TargetExistsNoOverwrite()
    content.vb: Public Sub DataLakeUploader_TargetExistsNoOverwrite
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_TargetExistsNoOverwrite*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshUploadDownload
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshUploadDownload
  id: DataLakeUploader_FreshUploadDownload
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: DataLakeUploader_FreshUploadDownload()
  nameWithType: DataLakeUploaderTests.DataLakeUploader_FreshUploadDownload()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshUploadDownload()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeUploader_FreshUploadDownload
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 164
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  summary: "\nTests the case of a fresh upload with multiple segments.\n"
  example: []
  syntax:
    content: public void DataLakeUploader_FreshUploadDownload()
    content.vb: Public Sub DataLakeUploader_FreshUploadDownload
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshUploadDownload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshFolderUploadDownload
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshFolderUploadDownload
  id: DataLakeUploader_FreshFolderUploadDownload
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: DataLakeUploader_FreshFolderUploadDownload()
  nameWithType: DataLakeUploaderTests.DataLakeUploader_FreshFolderUploadDownload()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshFolderUploadDownload()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeUploader_FreshFolderUploadDownload
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 204
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  summary: "\nTests the case of a fresh upload with multiple segments and multiple files.\n"
  example: []
  syntax:
    content: public void DataLakeUploader_FreshFolderUploadDownload()
    content.vb: Public Sub DataLakeUploader_FreshFolderUploadDownload
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshFolderUploadDownload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_CancelUpload
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_CancelUpload
  id: DataLakeUploader_CancelUpload
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: DataLakeUploader_CancelUpload()
  nameWithType: DataLakeUploaderTests.DataLakeUploader_CancelUpload()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_CancelUpload()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeUploader_CancelUpload
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 247
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  summary: "\nTests the case of a fresh upload with multiple segments being cancelled\n"
  example: []
  syntax:
    content: public void DataLakeUploader_CancelUpload()
    content.vb: Public Sub DataLakeUploader_CancelUpload
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_CancelUpload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles
  id: DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles()
  nameWithType: DataLakeUploaderTests.DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 304
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  summary: "\nTests the resume upload when the metadata indicates all files are uploaded but no files exist on the server.\n"
  example: []
  syntax:
    content: public void DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles()
    content.vb: Public Sub DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUploadWithProgress
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUploadWithProgress
  id: DataLakeUploader_ResumePartialFolderUploadWithProgress
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: DataLakeUploader_ResumePartialFolderUploadWithProgress()
  nameWithType: DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUploadWithProgress()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUploadWithProgress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeUploader_ResumePartialFolderUploadWithProgress
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 369
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  summary: "\nTests the resume upload when only some segments were uploaded previously with progress tracking enabled\n"
  example: []
  syntax:
    content: public void DataLakeUploader_ResumePartialFolderUploadWithProgress()
    content.vb: Public Sub DataLakeUploader_ResumePartialFolderUploadWithProgress
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUploadWithProgress*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUpload
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUpload
  id: DataLakeUploader_ResumePartialFolderUpload
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: DataLakeUploader_ResumePartialFolderUpload()
  nameWithType: DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUpload()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUpload()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeUploader_ResumePartialFolderUpload
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 449
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  summary: "\nTests the resume upload when only some segments were uploaded previously\n"
  example: []
  syntax:
    content: public void DataLakeUploader_ResumePartialFolderUpload()
    content.vb: Public Sub DataLakeUploader_ResumePartialFolderUpload
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUpload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialUploadDownload
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialUploadDownload
  id: DataLakeUploader_ResumePartialUploadDownload
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: DataLakeUploader_ResumePartialUploadDownload()
  nameWithType: DataLakeUploaderTests.DataLakeUploader_ResumePartialUploadDownload()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialUploadDownload()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeUploader_ResumePartialUploadDownload
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 494
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  summary: "\nTests the resume upload when only some segments were uploaded previously\n"
  example: []
  syntax:
    content: public void DataLakeUploader_ResumePartialUploadDownload()
    content.vb: Public Sub DataLakeUploader_ResumePartialUploadDownload
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialUploadDownload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_UploadDownloadSingleSegment
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_UploadDownloadSingleSegment
  id: DataLakeUploader_UploadDownloadSingleSegment
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests
  langs:
  - csharp
  - vb
  name: DataLakeUploader_UploadDownloadSingleSegment()
  nameWithType: DataLakeUploaderTests.DataLakeUploader_UploadDownloadSingleSegment()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_UploadDownloadSingleSegment()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeUploader_UploadDownloadSingleSegment
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/DataLakeUploaderTests.cs
    startLine: 576
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  summary: "\nTests the upload case with only 1 segment (since that is an optimization of the broader case).\n"
  example: []
  syntax:
    content: public void DataLakeUploader_UploadDownloadSingleSegment()
    content.vb: Public Sub DataLakeUploader_UploadDownloadSingleSegment
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_UploadDownloadSingleSegment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  commentId: N:Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  nameWithType: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.#ctor*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.#ctor
  isExternal: false
  name: DataLakeUploaderTests
  nameWithType: DataLakeUploaderTests.DataLakeUploaderTests
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploaderTests
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.Dispose*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.Dispose
  isExternal: false
  name: Dispose
  nameWithType: DataLakeUploaderTests.Dispose
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_InvalidParameters*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_InvalidParameters
  isExternal: false
  name: DataLakeUploader_InvalidParameters
  nameWithType: DataLakeUploaderTests.DataLakeUploader_InvalidParameters
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_InvalidParameters
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_TargetExistsNoOverwrite*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_TargetExistsNoOverwrite
  isExternal: false
  name: DataLakeUploader_TargetExistsNoOverwrite
  nameWithType: DataLakeUploaderTests.DataLakeUploader_TargetExistsNoOverwrite
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_TargetExistsNoOverwrite
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshUploadDownload*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshUploadDownload
  isExternal: false
  name: DataLakeUploader_FreshUploadDownload
  nameWithType: DataLakeUploaderTests.DataLakeUploader_FreshUploadDownload
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshUploadDownload
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshFolderUploadDownload*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshFolderUploadDownload
  isExternal: false
  name: DataLakeUploader_FreshFolderUploadDownload
  nameWithType: DataLakeUploaderTests.DataLakeUploader_FreshFolderUploadDownload
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_FreshFolderUploadDownload
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_CancelUpload*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_CancelUpload
  isExternal: false
  name: DataLakeUploader_CancelUpload
  nameWithType: DataLakeUploaderTests.DataLakeUploader_CancelUpload
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_CancelUpload
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles
  isExternal: false
  name: DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles
  nameWithType: DataLakeUploaderTests.DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumeUploadDownloadWithAllMissingFiles
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUploadWithProgress*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUploadWithProgress
  isExternal: false
  name: DataLakeUploader_ResumePartialFolderUploadWithProgress
  nameWithType: DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUploadWithProgress
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUploadWithProgress
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUpload*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUpload
  isExternal: false
  name: DataLakeUploader_ResumePartialFolderUpload
  nameWithType: DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUpload
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialFolderUpload
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialUploadDownload*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialUploadDownload
  isExternal: false
  name: DataLakeUploader_ResumePartialUploadDownload
  nameWithType: DataLakeUploaderTests.DataLakeUploader_ResumePartialUploadDownload
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_ResumePartialUploadDownload
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_UploadDownloadSingleSegment*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_UploadDownloadSingleSegment
  isExternal: false
  name: DataLakeUploader_UploadDownloadSingleSegment
  nameWithType: DataLakeUploaderTests.DataLakeUploader_UploadDownloadSingleSegment
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.DataLakeUploaderTests.DataLakeUploader_UploadDownloadSingleSegment
