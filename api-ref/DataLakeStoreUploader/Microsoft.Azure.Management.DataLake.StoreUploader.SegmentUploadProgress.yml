### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress
  id: SegmentUploadProgress
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  children:
  - Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.IsFailed
  - Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.Length
  - Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.SegmentNumber
  - Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.UploadedByteCount
  langs:
  - csharp
  - vb
  name: SegmentUploadProgress
  nameWithType: SegmentUploadProgress
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/SegmentUploadProgress.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SegmentUploadProgress
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/SegmentUploadProgress.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nRepresents a class used for reporting upload progress on a segment.\n"
  example: []
  syntax:
    content: public class SegmentUploadProgress
    content.vb: Public Class SegmentUploadProgress
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.SegmentNumber
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.SegmentNumber
  id: SegmentNumber
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress
  langs:
  - csharp
  - vb
  name: SegmentNumber
  nameWithType: SegmentUploadProgress.SegmentNumber
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.SegmentNumber
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/SegmentUploadProgress.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SegmentNumber
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/SegmentUploadProgress.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets a value indicating the segment number this progress report refers to.\n"
  example: []
  syntax:
    content: public int SegmentNumber { get; }
    content.vb: Public ReadOnly Property SegmentNumber As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nThe segment number.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.SegmentNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.Length
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.Length
  id: Length
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: SegmentUploadProgress.Length
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.Length
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/SegmentUploadProgress.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Length
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/SegmentUploadProgress.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets a value indicating the segment length, in bytes.\n"
  example: []
  syntax:
    content: public long Length { get; }
    content.vb: Public ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe length.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.IsFailed
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.IsFailed
  id: IsFailed
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress
  langs:
  - csharp
  - vb
  name: IsFailed
  nameWithType: SegmentUploadProgress.IsFailed
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.IsFailed
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/SegmentUploadProgress.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsFailed
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/SegmentUploadProgress.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets a value indicating whether the upload failed or not.\n"
  example: []
  syntax:
    content: public bool IsFailed { get; }
    content.vb: Public ReadOnly Property IsFailed As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is failed; otherwise, <code>false</code>.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.IsFailed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.UploadedByteCount
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.UploadedByteCount
  id: UploadedByteCount
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress
  langs:
  - csharp
  - vb
  name: UploadedByteCount
  nameWithType: SegmentUploadProgress.UploadedByteCount
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.UploadedByteCount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/SegmentUploadProgress.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UploadedByteCount
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/SegmentUploadProgress.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets a value indicating the number of bytes uploaded so far for this segment.\n"
  example: []
  syntax:
    content: public long UploadedByteCount { get; }
    content.vb: Public ReadOnly Property UploadedByteCount As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe uploaded byte count.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.UploadedByteCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader
  commentId: N:Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.StoreUploader
  nameWithType: Microsoft.Azure.Management.DataLake.StoreUploader
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.SegmentNumber*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.SegmentNumber
  isExternal: false
  name: SegmentNumber
  nameWithType: SegmentUploadProgress.SegmentNumber
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.SegmentNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.Length*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.Length
  isExternal: false
  name: Length
  nameWithType: SegmentUploadProgress.Length
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.Length
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.IsFailed*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.IsFailed
  isExternal: false
  name: IsFailed
  nameWithType: SegmentUploadProgress.IsFailed
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.IsFailed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.UploadedByteCount*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.UploadedByteCount
  isExternal: false
  name: UploadedByteCount
  nameWithType: SegmentUploadProgress.UploadedByteCount
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadProgress.UploadedByteCount
