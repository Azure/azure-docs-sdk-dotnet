### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests
  id: StringExtensionsTests
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  children:
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_ASCII
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16BigEndian
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF32
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF7
  - Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF8
  langs:
  - csharp
  - vb
  name: StringExtensionsTests
  nameWithType: StringExtensionsTests
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StringExtensionsTests
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
    startLine: 18
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  syntax:
    content: public class StringExtensionsTests
    content.vb: Public Class StringExtensionsTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF8
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF8
  id: StringExtensions_FindNewLine_UTF8
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests
  langs:
  - csharp
  - vb
  name: StringExtensions_FindNewLine_UTF8()
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_UTF8()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF8()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StringExtensions_FindNewLine_UTF8
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
    startLine: 143
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  syntax:
    content: public void StringExtensions_FindNewLine_UTF8()
    content.vb: Public Sub StringExtensions_FindNewLine_UTF8
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF8*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16
  id: StringExtensions_FindNewLine_UTF16
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests
  langs:
  - csharp
  - vb
  name: StringExtensions_FindNewLine_UTF16()
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_UTF16()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StringExtensions_FindNewLine_UTF16
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
    startLine: 185
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  syntax:
    content: public void StringExtensions_FindNewLine_UTF16()
    content.vb: Public Sub StringExtensions_FindNewLine_UTF16
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16BigEndian
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16BigEndian
  id: StringExtensions_FindNewLine_UTF16BigEndian
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests
  langs:
  - csharp
  - vb
  name: StringExtensions_FindNewLine_UTF16BigEndian()
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_UTF16BigEndian()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16BigEndian()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StringExtensions_FindNewLine_UTF16BigEndian
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
    startLine: 227
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  syntax:
    content: public void StringExtensions_FindNewLine_UTF16BigEndian()
    content.vb: Public Sub StringExtensions_FindNewLine_UTF16BigEndian
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16BigEndian*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF32
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF32
  id: StringExtensions_FindNewLine_UTF32
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests
  langs:
  - csharp
  - vb
  name: StringExtensions_FindNewLine_UTF32()
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_UTF32()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF32()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StringExtensions_FindNewLine_UTF32
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
    startLine: 269
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  syntax:
    content: public void StringExtensions_FindNewLine_UTF32()
    content.vb: Public Sub StringExtensions_FindNewLine_UTF32
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_ASCII
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_ASCII
  id: StringExtensions_FindNewLine_ASCII
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests
  langs:
  - csharp
  - vb
  name: StringExtensions_FindNewLine_ASCII()
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_ASCII()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_ASCII()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StringExtensions_FindNewLine_ASCII
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
    startLine: 311
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  syntax:
    content: public void StringExtensions_FindNewLine_ASCII()
    content.vb: Public Sub StringExtensions_FindNewLine_ASCII
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_ASCII*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF7
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF7
  id: StringExtensions_FindNewLine_UTF7
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests
  langs:
  - csharp
  - vb
  name: StringExtensions_FindNewLine_UTF7()
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_UTF7()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF7()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StringExtensions_FindNewLine_UTF7
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/tests/UnitTests/StringExtensionsTests.cs
    startLine: 353
  assemblies:
  - DataLakeStoreUploader.Tests
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  syntax:
    content: public void StringExtensions_FindNewLine_UTF7()
    content.vb: Public Sub StringExtensions_FindNewLine_UTF7
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF7*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  commentId: N:Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  nameWithType: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF8*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF8
  isExternal: false
  name: StringExtensions_FindNewLine_UTF8
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_UTF8
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF8
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16
  isExternal: false
  name: StringExtensions_FindNewLine_UTF16
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_UTF16
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16BigEndian*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16BigEndian
  isExternal: false
  name: StringExtensions_FindNewLine_UTF16BigEndian
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_UTF16BigEndian
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF16BigEndian
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF32*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF32
  isExternal: false
  name: StringExtensions_FindNewLine_UTF32
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_UTF32
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF32
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_ASCII*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_ASCII
  isExternal: false
  name: StringExtensions_FindNewLine_ASCII
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_ASCII
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_ASCII
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF7*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF7
  isExternal: false
  name: StringExtensions_FindNewLine_UTF7
  nameWithType: StringExtensionsTests.StringExtensions_FindNewLine_UTF7
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.Tests.StringExtensionsTests.StringExtensions_FindNewLine_UTF7
