### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader
  id: DataLakeStoreUploader
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  children:
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.#ctor(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress},System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress})
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.#ctor(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress},System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress})
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Execute
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.MaxAllowedThreads
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.OnFileUploadThreadFailProgressUpdate
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Parameters
  langs:
  - csharp
  - vb
  name: DataLakeStoreUploader
  nameWithType: DataLakeStoreUploader
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: DataLakeStoreUploader
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nRepresents a general purpose file uploader into DataLake. Supports the efficient upload of large files.\n"
  example: []
  syntax:
    content: public sealed class DataLakeStoreUploader
    content.vb: Public NotInheritable Class DataLakeStoreUploader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.MaxAllowedThreads
  commentId: F:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.MaxAllowedThreads
  id: MaxAllowedThreads
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader
  langs:
  - csharp
  - vb
  name: MaxAllowedThreads
  nameWithType: DataLakeStoreUploader.MaxAllowedThreads
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.MaxAllowedThreads
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: MaxAllowedThreads
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nThe maximum number of parallel threads to allow. \n"
  example: []
  syntax:
    content: public const int MaxAllowedThreads = 1024
    content.vb: Public Const MaxAllowedThreads As Integer = 1024
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.OnFileUploadThreadFailProgressUpdate
  commentId: E:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.OnFileUploadThreadFailProgressUpdate
  id: OnFileUploadThreadFailProgressUpdate
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader
  langs:
  - csharp
  - vb
  name: OnFileUploadThreadFailProgressUpdate
  nameWithType: DataLakeStoreUploader.OnFileUploadThreadFailProgressUpdate
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.OnFileUploadThreadFailProgressUpdate
  type: Event
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: OnFileUploadThreadFailProgressUpdate
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nAn event that is registered to progress tracking to ensure that, in the event of an unexpected upload failure,\nprogress is properly updated.\n"
  example: []
  syntax:
    content: public event FileUploadThreadFailProgressUpdate OnFileUploadThreadFailProgressUpdate
    content.vb: Public Event OnFileUploadThreadFailProgressUpdate As FileUploadThreadFailProgressUpdate
    return:
      type: Microsoft.Azure.Management.DataLake.StoreUploader.FileUploadThreadFailProgressUpdate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.#ctor(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress},System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.#ctor(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress},System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress})
  id: '#ctor(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress},System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress})'
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader
  langs:
  - csharp
  - vb
  name: DataLakeStoreUploader(UploadParameters, IFrontEndAdapter, IProgress<UploadProgress>, IProgress<UploadFolderProgress>)
  nameWithType: DataLakeStoreUploader.DataLakeStoreUploader(UploadParameters, IFrontEndAdapter, IProgress<UploadProgress>, IProgress<UploadFolderProgress>)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.DataLakeStoreUploader(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters, Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter, System.IProgress<Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress>, System.IProgress<Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nCreates a new instance of the DataLakeUploader class, by specifying a pointer to the FrontEnd to use for the upload.\n"
  example: []
  syntax:
    content: public DataLakeStoreUploader(UploadParameters uploadParameters, IFrontEndAdapter frontEnd, IProgress<UploadProgress> progressTracker = null, IProgress<UploadFolderProgress> folderProgressTracker = null)
    content.vb: Public Sub New(uploadParameters As UploadParameters, frontEnd As IFrontEndAdapter, progressTracker As IProgress(Of UploadProgress) = Nothing, folderProgressTracker As IProgress(Of UploadFolderProgress) = Nothing)
    parameters:
    - id: uploadParameters
      type: Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters
      description: The Upload Parameters to use.
    - id: frontEnd
      type: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
      description: A pointer to the FrontEnd interface to use for the upload.
    - id: progressTracker
      type: System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress}
      description: (Optional) A tracker that reports progress on the upload.
    - id: folderProgressTracker
      type: System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress}
      description: (Optional) The folder progress tracker.
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.#ctor*
  nameWithType.vb: DataLakeStoreUploader.DataLakeStoreUploader(UploadParameters, IFrontEndAdapter, IProgress(Of UploadProgress), IProgress(Of UploadFolderProgress))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.DataLakeStoreUploader(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters, Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter, System.IProgress(Of Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress), System.IProgress(Of Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress))
  name.vb: DataLakeStoreUploader(UploadParameters, IFrontEndAdapter, IProgress(Of UploadProgress), IProgress(Of UploadFolderProgress))
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.#ctor(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress},System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.#ctor(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress},System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress})
  id: '#ctor(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters,Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress},System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress})'
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader
  langs:
  - csharp
  - vb
  name: DataLakeStoreUploader(UploadParameters, IFrontEndAdapter, CancellationToken, IProgress<UploadProgress>, IProgress<UploadFolderProgress>)
  nameWithType: DataLakeStoreUploader.DataLakeStoreUploader(UploadParameters, IFrontEndAdapter, CancellationToken, IProgress<UploadProgress>, IProgress<UploadFolderProgress>)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.DataLakeStoreUploader(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters, Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter, System.Threading.CancellationToken, System.IProgress<Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress>, System.IProgress<Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nCreates a new instance of the DataLakeUploader class, by specifying a pointer to the FrontEnd to use for the upload.\n"
  example: []
  syntax:
    content: public DataLakeStoreUploader(UploadParameters uploadParameters, IFrontEndAdapter frontEnd, CancellationToken token, IProgress<UploadProgress> progressTracker = null, IProgress<UploadFolderProgress> folderProgressTracker = null)
    content.vb: Public Sub New(uploadParameters As UploadParameters, frontEnd As IFrontEndAdapter, token As CancellationToken, progressTracker As IProgress(Of UploadProgress) = Nothing, folderProgressTracker As IProgress(Of UploadFolderProgress) = Nothing)
    parameters:
    - id: uploadParameters
      type: Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters
      description: The Upload Parameters to use.
    - id: frontEnd
      type: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
      description: A pointer to the FrontEnd interface to use for the upload.
    - id: token
      type: System.Threading.CancellationToken
      description: The token.
    - id: progressTracker
      type: System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress}
      description: (Optional) A tracker that reports progress on the upload.
    - id: folderProgressTracker
      type: System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress}
      description: (Optional) The folder progress tracker.
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.#ctor*
  nameWithType.vb: DataLakeStoreUploader.DataLakeStoreUploader(UploadParameters, IFrontEndAdapter, CancellationToken, IProgress(Of UploadProgress), IProgress(Of UploadFolderProgress))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.DataLakeStoreUploader(Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters, Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter, System.Threading.CancellationToken, System.IProgress(Of Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress), System.IProgress(Of Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress))
  name.vb: DataLakeStoreUploader(UploadParameters, IFrontEndAdapter, CancellationToken, IProgress(Of UploadProgress), IProgress(Of UploadFolderProgress))
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Parameters
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Parameters
  id: Parameters
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: DataLakeStoreUploader.Parameters
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Parameters
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Parameters
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets the parameters to use for this upload.\n"
  example: []
  syntax:
    content: public UploadParameters Parameters { get; }
    content.vb: Public ReadOnly Property Parameters As UploadParameters
    parameters: []
    return:
      type: Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Parameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Execute
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Execute
  id: Execute
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: DataLakeStoreUploader.Execute()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Execute()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
      commit: 7cead20bae816484e8ea311f7200fe55ed5555f6
    id: Execute
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/DataLakeStoreUploader.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nExecutes the upload as defined by the input parameters.\n"
  example: []
  syntax:
    content: public void Execute()
    content.vb: Public Sub Execute
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Execute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader
  commentId: N:Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.StoreUploader
  nameWithType: Microsoft.Azure.Management.DataLake.StoreUploader
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.FileUploadThreadFailProgressUpdate
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.FileUploadThreadFailProgressUpdate
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: FileUploadThreadFailProgressUpdate
  nameWithType: FileUploadThreadFailProgressUpdate
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.FileUploadThreadFailProgressUpdate
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.#ctor*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.#ctor
  isExternal: false
  name: DataLakeStoreUploader
  nameWithType: DataLakeStoreUploader.DataLakeStoreUploader
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.DataLakeStoreUploader
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: UploadParameters
  nameWithType: UploadParameters
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadParameters
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: IFrontEndAdapter
  nameWithType: IFrontEndAdapter
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
- uid: System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress}
  commentId: T:System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress}
  parent: System
  definition: System.IProgress`1
  name: IProgress<UploadProgress>
  nameWithType: IProgress<UploadProgress>
  fullName: System.IProgress<Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress>
  nameWithType.vb: IProgress(Of UploadProgress)
  fullname.vb: System.IProgress(Of Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress)
  name.vb: IProgress(Of UploadProgress)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress
    name: UploadProgress
    nameWithType: UploadProgress
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress
    name: UploadProgress
    nameWithType: UploadProgress
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress}
  commentId: T:System.IProgress{Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress}
  parent: System
  definition: System.IProgress`1
  name: IProgress<UploadFolderProgress>
  nameWithType: IProgress<UploadFolderProgress>
  fullName: System.IProgress<Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress>
  nameWithType.vb: IProgress(Of UploadFolderProgress)
  fullname.vb: System.IProgress(Of Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress)
  name.vb: IProgress(Of UploadFolderProgress)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress
    name: UploadFolderProgress
    nameWithType: UploadFolderProgress
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress
    name: UploadFolderProgress
    nameWithType: UploadFolderProgress
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadFolderProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IProgress`1
  commentId: T:System.IProgress`1
  isExternal: true
  name: IProgress<T>
  nameWithType: IProgress<T>
  fullName: System.IProgress<T>
  nameWithType.vb: IProgress(Of T)
  fullname.vb: System.IProgress(Of T)
  name.vb: IProgress(Of T)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Parameters*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Parameters
  isExternal: false
  name: Parameters
  nameWithType: DataLakeStoreUploader.Parameters
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Parameters
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Execute*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Execute
  isExternal: false
  name: Execute
  nameWithType: DataLakeStoreUploader.Execute
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreUploader.Execute
