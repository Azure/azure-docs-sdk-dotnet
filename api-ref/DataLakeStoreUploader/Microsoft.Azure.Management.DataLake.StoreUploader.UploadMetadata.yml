### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  id: UploadMetadata
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  children:
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.DeleteFile
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Delimiter
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.EncodingCodePage
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.FileLength
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.InputFilePath
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsBinary
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsDownload
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentCount
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentLength
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Segments
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentStreamDirectory
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Status
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.TargetStreamPath
  - Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.UploadId
  langs:
  - csharp
  - vb
  name: UploadMetadata
  nameWithType: UploadMetadata
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UploadMetadata
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nRepresents general metadata pertaining to an upload.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class UploadMetadata
    content.vb: >-
      <DataContract>

      Public Class UploadMetadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.UploadId
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.UploadId
  id: UploadId
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: UploadId
  nameWithType: UploadMetadata.UploadId
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.UploadId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UploadId
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating the unique identifier associated with this upload.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "UploadId")]

      public string UploadId { get; set; }
    content.vb: >-
      <DataMember(Name:="UploadId")>

      Public Property UploadId As String
    parameters: []
    return:
      type: System.String
      description: "\nThe upload identifier.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.UploadId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: UploadId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.InputFilePath
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.InputFilePath
  id: InputFilePath
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: InputFilePath
  nameWithType: UploadMetadata.InputFilePath
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.InputFilePath
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InputFilePath
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\n/Gets or sets a value indicating the full path to the file to be uploaded.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "InputFilePath")]

      public string InputFilePath { get; set; }
    content.vb: >-
      <DataMember(Name:="InputFilePath")>

      Public Property InputFilePath As String
    parameters: []
    return:
      type: System.String
      description: "\nThe input file path.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.InputFilePath*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: InputFilePath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.FileLength
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.FileLength
  id: FileLength
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: FileLength
  nameWithType: UploadMetadata.FileLength
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.FileLength
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FileLength
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 128
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating the length (in bytes) of the file to be uploaded.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "FileLength")]

      public long FileLength { get; set; }
    content.vb: >-
      <DataMember(Name:="FileLength")>

      Public Property FileLength As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe length of the file.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.FileLength*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: FileLength
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.TargetStreamPath
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.TargetStreamPath
  id: TargetStreamPath
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: TargetStreamPath
  nameWithType: UploadMetadata.TargetStreamPath
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.TargetStreamPath
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TargetStreamPath
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 137
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating the full stream path where the file will be uploaded to.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "TargetStreamPath")]

      public string TargetStreamPath { get; set; }
    content.vb: >-
      <DataMember(Name:="TargetStreamPath")>

      Public Property TargetStreamPath As String
    parameters: []
    return:
      type: System.String
      description: "\nThe target stream path.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.TargetStreamPath*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: TargetStreamPath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentStreamDirectory
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentStreamDirectory
  id: SegmentStreamDirectory
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: SegmentStreamDirectory
  nameWithType: UploadMetadata.SegmentStreamDirectory
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentStreamDirectory
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SegmentStreamDirectory
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 146
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating the directory path where intermediate segment streams will be stored.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "SegmentStreamDirectory")]

      public string SegmentStreamDirectory { get; set; }
    content.vb: >-
      <DataMember(Name:="SegmentStreamDirectory")>

      Public Property SegmentStreamDirectory As String
    parameters: []
    return:
      type: System.String
      description: "\nThe target stream path.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentStreamDirectory*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: SegmentStreamDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentCount
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentCount
  id: SegmentCount
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: SegmentCount
  nameWithType: UploadMetadata.SegmentCount
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentCount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SegmentCount
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 155
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating the number of segments this file is split into for purposes of uploading it.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "SegmentCount")]

      public int SegmentCount { get; set; }
    content.vb: >-
      <DataMember(Name:="SegmentCount")>

      Public Property SegmentCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nThe segment count.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: SegmentCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentLength
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentLength
  id: SegmentLength
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: SegmentLength
  nameWithType: UploadMetadata.SegmentLength
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentLength
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SegmentLength
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 164
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating the length (in bytes) of each segment of the file (except the last one, which may be less).\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "SegmentLength")]

      public long SegmentLength { get; set; }
    content.vb: >-
      <DataMember(Name:="SegmentLength")>

      Public Property SegmentLength As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe length of the segment.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentLength*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: SegmentLength
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Segments
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Segments
  id: Segments
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: Segments
  nameWithType: UploadMetadata.Segments
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Segments
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Segments
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 173
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets a pointer to an array of segment metadata. The segments are ordered by their segment number (sequence).\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Segments")]

      public UploadSegmentMetadata[] Segments { get; set; }
    content.vb: >-
      <DataMember(Name:="Segments")>

      Public Property Segments As UploadSegmentMetadata()
    parameters: []
    return:
      type: Microsoft.Azure.Management.DataLake.StoreUploader.UploadSegmentMetadata[]
      description: "\nThe segments.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Segments*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Segments
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsBinary
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsBinary
  id: IsBinary
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: IsBinary
  nameWithType: UploadMetadata.IsBinary
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsBinary
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsBinary
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 182
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets a value indicating whether the upload file should be treated as a binary file or not.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "IsBinary")]

      public bool IsBinary { get; set; }
    content.vb: >-
      <DataMember(Name:="IsBinary")>

      Public Property IsBinary As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is binary; otherwise, <code>false</code>.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsBinary*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: IsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsDownload
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsDownload
  id: IsDownload
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: IsDownload
  nameWithType: UploadMetadata.IsDownload
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsDownload
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsDownload
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 191
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating whether this instance is a download instead of an upload.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "IsDownload")]

      public bool IsDownload { get; set; }
    content.vb: >-
      <DataMember(Name:="IsDownload")>

      Public Property IsDownload As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is download; otherwise, <code>false</code>.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsDownload*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: IsDownload
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.EncodingCodePage
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.EncodingCodePage
  id: EncodingCodePage
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: EncodingCodePage
  nameWithType: UploadMetadata.EncodingCodePage
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.EncodingCodePage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncodingCodePage
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets the CodePage of the current encoding being used.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "EncodingCodePage")]

      public int EncodingCodePage { get; set; }
    content.vb: >-
      <DataMember(Name:="EncodingCodePage")>

      Public Property EncodingCodePage As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nThe CodePage of the current encoding.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.EncodingCodePage*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: EncodingCodePage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Delimiter
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Delimiter
  id: Delimiter
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: Delimiter
  nameWithType: UploadMetadata.Delimiter
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Delimiter
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delimiter
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 209
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets a value indicating the record boundary delimiter for the file, if any.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Delimiter")]

      public string Delimiter { get; set; }
    content.vb: >-
      <DataMember(Name:="Delimiter")>

      Public Property Delimiter As String
    parameters: []
    return:
      type: System.String
      description: "\nThe record boundary delimiter\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Delimiter*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Delimiter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Status
  commentId: P:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Status
  id: Status
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: UploadMetadata.Status
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Status
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 220
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets or sets a value indicating the current upload status for this file upload.\nThis value is checked for folder upload progress and resuming. \nSingle file uploads use segment status for tracking.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Status")]

      public SegmentUploadStatus Status { get; set; }
    content.vb: >-
      <DataMember(Name:="Status")>

      Public Property Status As SegmentUploadStatus
    parameters: []
    return:
      type: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadStatus
      description: "\nThe status.\n"
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Status*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.DeleteFile
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.DeleteFile
  id: DeleteFile
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata
  langs:
  - csharp
  - vb
  name: DeleteFile()
  nameWithType: UploadMetadata.DeleteFile()
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.DeleteFile()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteFile
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.StoreUploader/src/DataLakeStoreUploader/UploadMetadata.cs
    startLine: 302
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nDeletes the metadata file from disk.\n"
  example: []
  syntax:
    content: public void DeleteFile()
    content.vb: Public Sub DeleteFile
  overload: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.DeleteFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Null or empty MetadataFilePath. Cannot delete metadata until this property is set.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader
  commentId: N:Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.StoreUploader
  nameWithType: Microsoft.Azure.Management.DataLake.StoreUploader
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.UploadId*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.UploadId
  isExternal: false
  name: UploadId
  nameWithType: UploadMetadata.UploadId
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.UploadId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.InputFilePath*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.InputFilePath
  isExternal: false
  name: InputFilePath
  nameWithType: UploadMetadata.InputFilePath
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.InputFilePath
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.FileLength*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.FileLength
  isExternal: false
  name: FileLength
  nameWithType: UploadMetadata.FileLength
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.FileLength
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.TargetStreamPath*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.TargetStreamPath
  isExternal: false
  name: TargetStreamPath
  nameWithType: UploadMetadata.TargetStreamPath
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.TargetStreamPath
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentStreamDirectory*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentStreamDirectory
  isExternal: false
  name: SegmentStreamDirectory
  nameWithType: UploadMetadata.SegmentStreamDirectory
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentStreamDirectory
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentCount*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentCount
  isExternal: false
  name: SegmentCount
  nameWithType: UploadMetadata.SegmentCount
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentLength*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentLength
  isExternal: false
  name: SegmentLength
  nameWithType: UploadMetadata.SegmentLength
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.SegmentLength
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Segments*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Segments
  isExternal: false
  name: Segments
  nameWithType: UploadMetadata.Segments
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Segments
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadSegmentMetadata[]
  name: UploadSegmentMetadata[]
  nameWithType: UploadSegmentMetadata[]
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadSegmentMetadata[]
  nameWithType.vb: UploadSegmentMetadata()
  fullname.vb: Microsoft.Azure.Management.DataLake.StoreUploader.UploadSegmentMetadata()
  name.vb: UploadSegmentMetadata()
  spec.csharp:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadSegmentMetadata
    name: UploadSegmentMetadata
    nameWithType: UploadSegmentMetadata
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadSegmentMetadata
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadSegmentMetadata
    name: UploadSegmentMetadata
    nameWithType: UploadSegmentMetadata
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadSegmentMetadata
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsBinary*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsBinary
  isExternal: false
  name: IsBinary
  nameWithType: UploadMetadata.IsBinary
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsBinary
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsDownload*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsDownload
  isExternal: false
  name: IsDownload
  nameWithType: UploadMetadata.IsDownload
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.IsDownload
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.EncodingCodePage*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.EncodingCodePage
  isExternal: false
  name: EncodingCodePage
  nameWithType: UploadMetadata.EncodingCodePage
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.EncodingCodePage
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Delimiter*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Delimiter
  isExternal: false
  name: Delimiter
  nameWithType: UploadMetadata.Delimiter
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Delimiter
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Status*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Status
  isExternal: false
  name: Status
  nameWithType: UploadMetadata.Status
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.Status
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadStatus
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadStatus
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: SegmentUploadStatus
  nameWithType: SegmentUploadStatus
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.SegmentUploadStatus
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.DeleteFile*
  commentId: Overload:Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.DeleteFile
  isExternal: false
  name: DeleteFile
  nameWithType: UploadMetadata.DeleteFile
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.UploadMetadata.DeleteFile
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
