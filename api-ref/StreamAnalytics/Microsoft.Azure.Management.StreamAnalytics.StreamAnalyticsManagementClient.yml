### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  commentId: T:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  id: StreamAnalyticsManagementClient
  parent: Microsoft.Azure.Management.StreamAnalytics
  children:
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials)
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Uri)
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.ApiVersion
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.BaseUri
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Clone(Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient})
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Credentials
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Functions
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetTestConnectionStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Inputs
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Outputs
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamingJobs
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Subscriptions
  - Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Transformations
  langs:
  - csharp
  - vb
  name: StreamAnalyticsManagementClient
  nameWithType: StreamAnalyticsManagementClient
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  type: Class
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: StreamAnalyticsManagementClient
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  syntax:
    content: 'public class StreamAnalyticsManagementClient : ServiceClient<StreamAnalyticsManagementClient>, IStreamAnalyticsManagementClient, IDisposable'
    content.vb: >-
      Public Class StreamAnalyticsManagementClient
          Inherits ServiceClient(Of StreamAnalyticsManagementClient)
          Implements IStreamAnalyticsManagementClient, IDisposable
  inheritance:
  - System.Object
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  - System.IDisposable
  inheritedMembers:
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.Dispose
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.WithHandler(System.Net.Http.DelegatingHandler)
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.WithHandlers(System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.GetHttpPipeline
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.WithHandler(Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient},System.Net.Http.DelegatingHandler)
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.HttpClient
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.HttpMessageHandler
  - Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.UserAgent
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(System.String)
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(System.String)
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(System.String)
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.ApiVersion
  id: ApiVersion
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: ApiVersion
  nameWithType: StreamAnalyticsManagementClient.ApiVersion
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.ApiVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ApiVersion
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nGets the API version.\n"
  example: []
  syntax:
    content: public string ApiVersion { get; }
    content.vb: Public ReadOnly Property ApiVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.ApiVersion*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.ApiVersion
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: StreamAnalyticsManagementClient.BaseUri
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.BaseUri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: BaseUri
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nThe URI used as the base for all Service Management requests.\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    content.vb: Public Property BaseUri As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.BaseUri*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: StreamAnalyticsManagementClient.Credentials
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Credentials
  type: Property
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Credentials
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nWhen you create a Windows Azure subscription, it is uniquely\nidentified by a subscription ID. The subscription ID forms part of\nthe URI for every call that you make to the Service Management\nAPI. The Windows Azure Service ManagementAPI use mutual\nauthentication of management certificates over SSL to ensure that\na request made to the service is secure. No anonymous requests are\nallowed.\n"
  example: []
  syntax:
    content: public SubscriptionCloudCredentials Credentials { get; set; }
    content.vb: Public Property Credentials As SubscriptionCloudCredentials
    parameters: []
    return:
      type: Microsoft.Azure.SubscriptionCloudCredentials
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Credentials*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Credentials
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
  id: LongRunningOperationInitialTimeout
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationInitialTimeout
  nameWithType: StreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
  type: Property
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: LongRunningOperationInitialTimeout
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nGets or sets the initial timeout for Long Running Operations.\n"
  example: []
  syntax:
    content: public int LongRunningOperationInitialTimeout { get; set; }
    content.vb: Public Property LongRunningOperationInitialTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationInitialTimeout*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  nameWithType: StreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: LongRunningOperationRetryTimeout
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nGets or sets the retry timeout for Long Running Operations.\n"
  example: []
  syntax:
    content: public int LongRunningOperationRetryTimeout { get; set; }
    content.vb: Public Property LongRunningOperationRetryTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationRetryTimeout*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Functions
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Functions
  id: Functions
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: Functions
  nameWithType: StreamAnalyticsManagementClient.Functions
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Functions
  type: Property
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Functions
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nOperations for managing the function(s) of the stream analytics job.\n"
  example: []
  syntax:
    content: public virtual IFunctionOperations Functions { get; }
    content.vb: Public Overridable ReadOnly Property Functions As IFunctionOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.StreamAnalytics.IFunctionOperations
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Functions*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Functions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Inputs
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Inputs
  id: Inputs
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: Inputs
  nameWithType: StreamAnalyticsManagementClient.Inputs
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Inputs
  type: Property
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Inputs
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nOperations for managing the input(s) of the stream analytics job.\n"
  example: []
  syntax:
    content: public virtual IInputOperations Inputs { get; }
    content.vb: Public Overridable ReadOnly Property Inputs As IInputOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.StreamAnalytics.IInputOperations
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Inputs*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Inputs
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamingJobs
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamingJobs
  id: StreamingJobs
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: StreamingJobs
  nameWithType: StreamAnalyticsManagementClient.StreamingJobs
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamingJobs
  type: Property
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: StreamingJobs
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nOperations for managing the stream analytics job.\n"
  example: []
  syntax:
    content: public virtual IJobOperations StreamingJobs { get; }
    content.vb: Public Overridable ReadOnly Property StreamingJobs As IJobOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.StreamAnalytics.IJobOperations
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamingJobs*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.StreamingJobs
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Outputs
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Outputs
  id: Outputs
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: Outputs
  nameWithType: StreamAnalyticsManagementClient.Outputs
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Outputs
  type: Property
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Outputs
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nOperations for managing the output(s) of the stream analytics job.\n"
  example: []
  syntax:
    content: public virtual IOutputOperations Outputs { get; }
    content.vb: Public Overridable ReadOnly Property Outputs As IOutputOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.StreamAnalytics.IOutputOperations
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Outputs*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Outputs
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Subscriptions
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Subscriptions
  id: Subscriptions
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: Subscriptions
  nameWithType: StreamAnalyticsManagementClient.Subscriptions
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Subscriptions
  type: Property
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Subscriptions
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 143
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nOperations for Azure Stream Analytics subscription information.\n"
  example: []
  syntax:
    content: public virtual ISubscriptionOperations Subscriptions { get; }
    content.vb: Public Overridable ReadOnly Property Subscriptions As ISubscriptionOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.StreamAnalytics.ISubscriptionOperations
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Subscriptions*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Subscriptions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Transformations
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Transformations
  id: Transformations
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: Transformations
  nameWithType: StreamAnalyticsManagementClient.Transformations
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Transformations
  type: Property
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Transformations
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 154
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nOperations for managing the transformation definition of the stream\nanalytics job.\n"
  example: []
  syntax:
    content: public virtual ITransformationOperations Transformations { get; }
    content.vb: Public Overridable ReadOnly Property Transformations As ITransformationOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.StreamAnalytics.ITransformationOperations
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Transformations*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Transformations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: StreamAnalyticsManagementClient()
  nameWithType: StreamAnalyticsManagementClient.StreamAnalyticsManagementClient()
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamAnalyticsManagementClient()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 163
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nInitializes a new instance of the StreamAnalyticsManagementClient\nclass.\n"
  example: []
  syntax:
    content: public StreamAnalyticsManagementClient()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Uri)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Uri)
  id: '#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Uri)'
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: StreamAnalyticsManagementClient(SubscriptionCloudCredentials, Uri)
  nameWithType: StreamAnalyticsManagementClient.StreamAnalyticsManagementClient(SubscriptionCloudCredentials, Uri)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamAnalyticsManagementClient(Microsoft.Azure.SubscriptionCloudCredentials, System.Uri)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 195
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nInitializes a new instance of the StreamAnalyticsManagementClient\nclass.\n"
  example: []
  syntax:
    content: public StreamAnalyticsManagementClient(SubscriptionCloudCredentials credentials, Uri baseUri)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, baseUri As Uri)
    parameters:
    - id: credentials
      type: Microsoft.Azure.SubscriptionCloudCredentials
      description: "\nRequired. When you create a Windows Azure subscription, it is\nuniquely identified by a subscription ID. The subscription ID\nforms part of the URI for every call that you make to the Service\nManagement API. The Windows Azure Service ManagementAPI use mutual\nauthentication of management certificates over SSL to ensure that\na request made to the service is secure. No anonymous requests are\nallowed.\n"
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The URI used as the base for all Service Management\nrequests.\n"
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials)
  id: '#ctor(Microsoft.Azure.SubscriptionCloudCredentials)'
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: StreamAnalyticsManagementClient(SubscriptionCloudCredentials)
  nameWithType: StreamAnalyticsManagementClient.StreamAnalyticsManagementClient(SubscriptionCloudCredentials)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamAnalyticsManagementClient(Microsoft.Azure.SubscriptionCloudCredentials)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 225
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nInitializes a new instance of the StreamAnalyticsManagementClient\nclass.\n"
  example: []
  syntax:
    content: public StreamAnalyticsManagementClient(SubscriptionCloudCredentials credentials)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials)
    parameters:
    - id: credentials
      type: Microsoft.Azure.SubscriptionCloudCredentials
      description: "\nRequired. When you create a Windows Azure subscription, it is\nuniquely identified by a subscription ID. The subscription ID\nforms part of the URI for every call that you make to the Service\nManagement API. The Windows Azure Service ManagementAPI use mutual\nauthentication of management certificates over SSL to ensure that\na request made to the service is secure. No anonymous requests are\nallowed.\n"
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: StreamAnalyticsManagementClient(HttpClient)
  nameWithType: StreamAnalyticsManagementClient.StreamAnalyticsManagementClient(HttpClient)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamAnalyticsManagementClient(System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 245
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nInitializes a new instance of the StreamAnalyticsManagementClient\nclass.\n"
  example: []
  syntax:
    content: public StreamAnalyticsManagementClient(HttpClient httpClient)
    content.vb: Public Sub New(httpClient As HttpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\nThe Http client\n"
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  id: '#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: StreamAnalyticsManagementClient(SubscriptionCloudCredentials, Uri, HttpClient)
  nameWithType: StreamAnalyticsManagementClient.StreamAnalyticsManagementClient(SubscriptionCloudCredentials, Uri, HttpClient)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamAnalyticsManagementClient(Microsoft.Azure.SubscriptionCloudCredentials, System.Uri, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 280
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nInitializes a new instance of the StreamAnalyticsManagementClient\nclass.\n"
  example: []
  syntax:
    content: public StreamAnalyticsManagementClient(SubscriptionCloudCredentials credentials, Uri baseUri, HttpClient httpClient)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, baseUri As Uri, httpClient As HttpClient)
    parameters:
    - id: credentials
      type: Microsoft.Azure.SubscriptionCloudCredentials
      description: "\nRequired. When you create a Windows Azure subscription, it is\nuniquely identified by a subscription ID. The subscription ID\nforms part of the URI for every call that you make to the Service\nManagement API. The Windows Azure Service ManagementAPI use mutual\nauthentication of management certificates over SSL to ensure that\na request made to the service is secure. No anonymous requests are\nallowed.\n"
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The URI used as the base for all Service Management\nrequests.\n"
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\nThe Http client\n"
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  id: '#ctor(Microsoft.Azure.SubscriptionCloudCredentials,System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: StreamAnalyticsManagementClient(SubscriptionCloudCredentials, HttpClient)
  nameWithType: StreamAnalyticsManagementClient.StreamAnalyticsManagementClient(SubscriptionCloudCredentials, HttpClient)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamAnalyticsManagementClient(Microsoft.Azure.SubscriptionCloudCredentials, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 313
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nInitializes a new instance of the StreamAnalyticsManagementClient\nclass.\n"
  example: []
  syntax:
    content: public StreamAnalyticsManagementClient(SubscriptionCloudCredentials credentials, HttpClient httpClient)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, httpClient As HttpClient)
    parameters:
    - id: credentials
      type: Microsoft.Azure.SubscriptionCloudCredentials
      description: "\nRequired. When you create a Windows Azure subscription, it is\nuniquely identified by a subscription ID. The subscription ID\nforms part of the URI for every call that you make to the Service\nManagement API. The Windows Azure Service ManagementAPI use mutual\nauthentication of management certificates over SSL to ensure that\na request made to the service is secure. No anonymous requests are\nallowed.\n"
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\nThe Http client\n"
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Clone(Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient})
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Clone(Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient})
  id: Clone(Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient})
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: Clone(ServiceClient<StreamAnalyticsManagementClient>)
  nameWithType: StreamAnalyticsManagementClient.Clone(ServiceClient<StreamAnalyticsManagementClient>)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Clone(Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Clone
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 333
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nClones properties from current instance to another\nStreamAnalyticsManagementClient instance\n"
  example: []
  syntax:
    content: protected override void Clone(ServiceClient<StreamAnalyticsManagementClient> client)
    content.vb: Protected Overrides Sub Clone(client As ServiceClient(Of StreamAnalyticsManagementClient))
    parameters:
    - id: client
      type: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
      description: "\nInstance of StreamAnalyticsManagementClient to clone to\n"
  overridden: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.Clone(Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient})
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Clone*
  nameWithType.vb: StreamAnalyticsManagementClient.Clone(ServiceClient(Of StreamAnalyticsManagementClient))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Clone(Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient))
  name.vb: Clone(ServiceClient(Of StreamAnalyticsManagementClient))
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: GetLongRunningOperationStatusAsync(String, CancellationToken)
  nameWithType: StreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetLongRunningOperationStatusAsync
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 366
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  summary: "\nThe Get Operation Status operation returns the status of the\nspecified operation. After calling an asynchronous operation, you\ncan call Get Operation Status to determine whether the operation\nhas succeeded, failed, or is still in progress.\n"
  example: []
  syntax:
    content: public Task<LongRunningOperationResponse> GetLongRunningOperationStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Public Function GetLongRunningOperationStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\nRequired. Location value returned by the Begin operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nCancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.StreamAnalytics.Models.LongRunningOperationResponse}
      description: "\nA standard service response for long running operations.\n"
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetTestConnectionStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetTestConnectionStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetTestConnectionStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  langs:
  - csharp
  - vb
  name: GetTestConnectionStatusAsync(String, CancellationToken)
  nameWithType: StreamAnalyticsManagementClient.GetTestConnectionStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetTestConnectionStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetTestConnectionStatusAsync
    path: src/azure-sdk-for-net-master/src/ResourceManagement/StreamAnalytics/StreamAnalyticsManagement/Generated/StreamAnalyticsManagementClient.cs
    startLine: 492
  assemblies:
  - Microsoft.Azure.Management.StreamAnalytics
  namespace: Microsoft.Azure.Management.StreamAnalytics
  example: []
  syntax:
    content: public Task<ResourceTestConnectionResponse> GetTestConnectionStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Public Function GetTestConnectionStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of ResourceTestConnectionResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\nRequired. Location value returned by the Begin operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nCancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.StreamAnalytics.Models.ResourceTestConnectionResponse}
      description: "\nThe test result of the input or output data source.\n"
  overload: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetTestConnectionStatusAsync*
  implements:
  - Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetTestConnectionStatusAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.StreamAnalytics
  commentId: N:Microsoft.Azure.Management.StreamAnalytics
  isExternal: false
  name: Microsoft.Azure.Management.StreamAnalytics
  nameWithType: Microsoft.Azure.Management.StreamAnalytics
  fullName: Microsoft.Azure.Management.StreamAnalytics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  commentId: T:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  parent: Hyak.Common
  definition: Hyak.Common.ServiceClient`1
  name: ServiceClient<StreamAnalyticsManagementClient>
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient)
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient)
  name.vb: ServiceClient(Of StreamAnalyticsManagementClient)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
    name: StreamAnalyticsManagementClient
    nameWithType: StreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
    name: StreamAnalyticsManagementClient
    nameWithType: StreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  commentId: T:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  parent: Microsoft.Azure.Management.StreamAnalytics
  isExternal: false
  name: IStreamAnalyticsManagementClient
  nameWithType: IStreamAnalyticsManagementClient
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.Dispose
  commentId: M:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.Dispose
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.Dispose
  name: Dispose()
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.Dispose()
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.Dispose()
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).Dispose()
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).Dispose()
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient<StreamAnalyticsManagementClient>.Dispose
    fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient(Of StreamAnalyticsManagementClient).Dispose
    fullName: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.WithHandler(System.Net.Http.DelegatingHandler)
  commentId: M:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.WithHandler(System.Net.Http.DelegatingHandler)
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.WithHandler(System.Net.Http.DelegatingHandler)
  name: WithHandler(DelegatingHandler)
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.WithHandler(DelegatingHandler)
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.WithHandler(System.Net.Http.DelegatingHandler)
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).WithHandler(DelegatingHandler)
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).WithHandler(System.Net.Http.DelegatingHandler)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.WithHandler(System.Net.Http.DelegatingHandler)
    name: WithHandler
    nameWithType: ServiceClient<StreamAnalyticsManagementClient>.WithHandler
    fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.WithHandler
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.WithHandler(System.Net.Http.DelegatingHandler)
    name: WithHandler
    nameWithType: ServiceClient(Of StreamAnalyticsManagementClient).WithHandler
    fullName: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).WithHandler
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.WithHandlers(System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})
  commentId: M:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.WithHandlers(System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.WithHandlers(System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})
  name: WithHandlers(IEnumerable<DelegatingHandler>)
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.WithHandlers(IEnumerable<DelegatingHandler>)
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.WithHandlers(System.Collections.Generic.IEnumerable<System.Net.Http.DelegatingHandler>)
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).WithHandlers(IEnumerable(Of DelegatingHandler))
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).WithHandlers(System.Collections.Generic.IEnumerable(Of System.Net.Http.DelegatingHandler))
  name.vb: WithHandlers(IEnumerable(Of DelegatingHandler))
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.WithHandlers(System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})
    name: WithHandlers
    nameWithType: ServiceClient<StreamAnalyticsManagementClient>.WithHandlers
    fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.WithHandlers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.WithHandlers(System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})
    name: WithHandlers
    nameWithType: ServiceClient(Of StreamAnalyticsManagementClient).WithHandlers
    fullName: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).WithHandlers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.GetHttpPipeline
  commentId: M:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.GetHttpPipeline
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.GetHttpPipeline
  name: GetHttpPipeline()
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.GetHttpPipeline()
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.GetHttpPipeline()
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).GetHttpPipeline()
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).GetHttpPipeline()
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.GetHttpPipeline
    name: GetHttpPipeline
    nameWithType: ServiceClient<StreamAnalyticsManagementClient>.GetHttpPipeline
    fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.GetHttpPipeline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.GetHttpPipeline
    name: GetHttpPipeline
    nameWithType: ServiceClient(Of StreamAnalyticsManagementClient).GetHttpPipeline
    fullName: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).GetHttpPipeline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
  commentId: M:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
  name: AddHandlerToPipeline(DelegatingHandler)
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.AddHandlerToPipeline(DelegatingHandler)
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).AddHandlerToPipeline(DelegatingHandler)
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
    name: AddHandlerToPipeline
    nameWithType: ServiceClient<StreamAnalyticsManagementClient>.AddHandlerToPipeline
    fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.AddHandlerToPipeline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
    name: AddHandlerToPipeline
    nameWithType: ServiceClient(Of StreamAnalyticsManagementClient).AddHandlerToPipeline
    fullName: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).AddHandlerToPipeline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
  commentId: M:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
  name: SetRetryPolicy(RetryPolicy)
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.SetRetryPolicy(RetryPolicy)
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).SetRetryPolicy(RetryPolicy)
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient<StreamAnalyticsManagementClient>.SetRetryPolicy
    fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.SetRetryPolicy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Hyak.Common.TransientFaultHandling.RetryPolicy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient(Of StreamAnalyticsManagementClient).SetRetryPolicy
    fullName: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).SetRetryPolicy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Hyak.Common.TransientFaultHandling.RetryPolicy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
  commentId: M:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
  name: InitializeHttpClient(HttpMessageHandler)
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.InitializeHttpClient(HttpMessageHandler)
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).InitializeHttpClient(HttpMessageHandler)
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).InitializeHttpClient(System.Net.Http.HttpMessageHandler)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
    name: InitializeHttpClient
    nameWithType: ServiceClient<StreamAnalyticsManagementClient>.InitializeHttpClient
    fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.InitializeHttpClient
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
    name: InitializeHttpClient
    nameWithType: ServiceClient(Of StreamAnalyticsManagementClient).InitializeHttpClient
    fullName: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).InitializeHttpClient
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.WithHandler(Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient},System.Net.Http.DelegatingHandler)
  commentId: M:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.WithHandler(Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient},System.Net.Http.DelegatingHandler)
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.WithHandler(Hyak.Common.ServiceClient{`0},System.Net.Http.DelegatingHandler)
  name: WithHandler(ServiceClient<StreamAnalyticsManagementClient>, DelegatingHandler)
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.WithHandler(ServiceClient<StreamAnalyticsManagementClient>, DelegatingHandler)
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.WithHandler(Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>, System.Net.Http.DelegatingHandler)
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).WithHandler(ServiceClient(Of StreamAnalyticsManagementClient), DelegatingHandler)
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).WithHandler(Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient), System.Net.Http.DelegatingHandler)
  name.vb: WithHandler(ServiceClient(Of StreamAnalyticsManagementClient), DelegatingHandler)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.WithHandler(Hyak.Common.ServiceClient{`0},System.Net.Http.DelegatingHandler)
    name: WithHandler
    nameWithType: ServiceClient<StreamAnalyticsManagementClient>.WithHandler
    fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.WithHandler
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
    name: StreamAnalyticsManagementClient
    nameWithType: StreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.WithHandler(Hyak.Common.ServiceClient{`0},System.Net.Http.DelegatingHandler)
    name: WithHandler
    nameWithType: ServiceClient(Of StreamAnalyticsManagementClient).WithHandler
    fullName: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).WithHandler
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
    name: StreamAnalyticsManagementClient
    nameWithType: StreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.HttpClient
  commentId: P:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.HttpClient
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.HttpClient
  name: HttpClient
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.HttpClient
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.HttpClient
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).HttpClient
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).HttpClient
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.HttpMessageHandler
  commentId: P:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.HttpMessageHandler
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.HttpMessageHandler
  name: HttpMessageHandler
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.HttpMessageHandler
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.HttpMessageHandler
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).HttpMessageHandler
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).HttpMessageHandler
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.UserAgent
  commentId: P:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.UserAgent
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.UserAgent
  name: UserAgent
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.UserAgent
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.UserAgent
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).UserAgent
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).UserAgent
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(System.String)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions
  definition: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  name: GetLongRunningOperationStatus(String)
  nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(String)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(System.String)
    name: GetLongRunningOperationStatus
    nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(System.String)
    name: GetLongRunningOperationStatus
    nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(System.String)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions
  definition: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  name: GetLongRunningOperationStatusAsync(String)
  nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(String)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(System.String)
    name: GetLongRunningOperationStatusAsync
    nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(System.String)
    name: GetLongRunningOperationStatusAsync
    nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(System.String)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions
  definition: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  name: GetTestConnectionStatus(String)
  nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(String)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(System.String)
    name: GetTestConnectionStatus
    nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(System.String)
    name: GetTestConnectionStatus
    nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(System.String)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  parent: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions
  definition: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  name: GetTestConnectionStatusAsync(String)
  nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(String)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(System.String)
    name: GetTestConnectionStatusAsync
    nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(System.String)
    name: GetTestConnectionStatusAsync
    nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Hyak.Common.ServiceClient`1
  commentId: T:Hyak.Common.ServiceClient`1
  isExternal: true
  name: ServiceClient<T>
  nameWithType: ServiceClient<T>
  fullName: Hyak.Common.ServiceClient<T>
  nameWithType.vb: ServiceClient(Of T)
  fullname.vb: Hyak.Common.ServiceClient(Of T)
  name.vb: ServiceClient(Of T)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common
  commentId: N:Hyak.Common
  isExternal: false
  name: Hyak.Common
  nameWithType: Hyak.Common
  fullName: Hyak.Common
- uid: Hyak.Common.ServiceClient`1.Dispose
  commentId: M:Hyak.Common.ServiceClient`1.Dispose
  isExternal: true
  name: Dispose()
  nameWithType: ServiceClient<T>.Dispose()
  fullName: Hyak.Common.ServiceClient<T>.Dispose()
  nameWithType.vb: ServiceClient(Of T).Dispose()
  fullname.vb: Hyak.Common.ServiceClient(Of T).Dispose()
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient<T>.Dispose
    fullName: Hyak.Common.ServiceClient<T>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient(Of T).Dispose
    fullName: Hyak.Common.ServiceClient(Of T).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient`1.WithHandler(System.Net.Http.DelegatingHandler)
  commentId: M:Hyak.Common.ServiceClient`1.WithHandler(System.Net.Http.DelegatingHandler)
  isExternal: true
  name: WithHandler(DelegatingHandler)
  nameWithType: ServiceClient<T>.WithHandler(DelegatingHandler)
  fullName: Hyak.Common.ServiceClient<T>.WithHandler(System.Net.Http.DelegatingHandler)
  nameWithType.vb: ServiceClient(Of T).WithHandler(DelegatingHandler)
  fullname.vb: Hyak.Common.ServiceClient(Of T).WithHandler(System.Net.Http.DelegatingHandler)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.WithHandler(System.Net.Http.DelegatingHandler)
    name: WithHandler
    nameWithType: ServiceClient<T>.WithHandler
    fullName: Hyak.Common.ServiceClient<T>.WithHandler
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.WithHandler(System.Net.Http.DelegatingHandler)
    name: WithHandler
    nameWithType: ServiceClient(Of T).WithHandler
    fullName: Hyak.Common.ServiceClient(Of T).WithHandler
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient`1.WithHandlers(System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})
  commentId: M:Hyak.Common.ServiceClient`1.WithHandlers(System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})
  isExternal: true
  name: WithHandlers(IEnumerable<DelegatingHandler>)
  nameWithType: ServiceClient<T>.WithHandlers(IEnumerable<DelegatingHandler>)
  fullName: Hyak.Common.ServiceClient<T>.WithHandlers(System.Collections.Generic.IEnumerable<System.Net.Http.DelegatingHandler>)
  nameWithType.vb: ServiceClient(Of T).WithHandlers(IEnumerable(Of DelegatingHandler))
  fullname.vb: Hyak.Common.ServiceClient(Of T).WithHandlers(System.Collections.Generic.IEnumerable(Of System.Net.Http.DelegatingHandler))
  name.vb: WithHandlers(IEnumerable(Of DelegatingHandler))
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.WithHandlers(System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})
    name: WithHandlers
    nameWithType: ServiceClient<T>.WithHandlers
    fullName: Hyak.Common.ServiceClient<T>.WithHandlers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.WithHandlers(System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})
    name: WithHandlers
    nameWithType: ServiceClient(Of T).WithHandlers
    fullName: Hyak.Common.ServiceClient(Of T).WithHandlers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient`1.GetHttpPipeline
  commentId: M:Hyak.Common.ServiceClient`1.GetHttpPipeline
  isExternal: true
  name: GetHttpPipeline()
  nameWithType: ServiceClient<T>.GetHttpPipeline()
  fullName: Hyak.Common.ServiceClient<T>.GetHttpPipeline()
  nameWithType.vb: ServiceClient(Of T).GetHttpPipeline()
  fullname.vb: Hyak.Common.ServiceClient(Of T).GetHttpPipeline()
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.GetHttpPipeline
    name: GetHttpPipeline
    nameWithType: ServiceClient<T>.GetHttpPipeline
    fullName: Hyak.Common.ServiceClient<T>.GetHttpPipeline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.GetHttpPipeline
    name: GetHttpPipeline
    nameWithType: ServiceClient(Of T).GetHttpPipeline
    fullName: Hyak.Common.ServiceClient(Of T).GetHttpPipeline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient`1.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
  commentId: M:Hyak.Common.ServiceClient`1.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
  isExternal: true
  name: AddHandlerToPipeline(DelegatingHandler)
  nameWithType: ServiceClient<T>.AddHandlerToPipeline(DelegatingHandler)
  fullName: Hyak.Common.ServiceClient<T>.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
  nameWithType.vb: ServiceClient(Of T).AddHandlerToPipeline(DelegatingHandler)
  fullname.vb: Hyak.Common.ServiceClient(Of T).AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
    name: AddHandlerToPipeline
    nameWithType: ServiceClient<T>.AddHandlerToPipeline
    fullName: Hyak.Common.ServiceClient<T>.AddHandlerToPipeline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)
    name: AddHandlerToPipeline
    nameWithType: ServiceClient(Of T).AddHandlerToPipeline
    fullName: Hyak.Common.ServiceClient(Of T).AddHandlerToPipeline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient`1.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
  commentId: M:Hyak.Common.ServiceClient`1.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
  isExternal: true
  name: SetRetryPolicy(RetryPolicy)
  nameWithType: ServiceClient<T>.SetRetryPolicy(RetryPolicy)
  fullName: Hyak.Common.ServiceClient<T>.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
  nameWithType.vb: ServiceClient(Of T).SetRetryPolicy(RetryPolicy)
  fullname.vb: Hyak.Common.ServiceClient(Of T).SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient<T>.SetRetryPolicy
    fullName: Hyak.Common.ServiceClient<T>.SetRetryPolicy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Hyak.Common.TransientFaultHandling.RetryPolicy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient(Of T).SetRetryPolicy
    fullName: Hyak.Common.ServiceClient(Of T).SetRetryPolicy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Hyak.Common.TransientFaultHandling.RetryPolicy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
  commentId: M:Hyak.Common.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
  isExternal: true
  name: InitializeHttpClient(HttpMessageHandler)
  nameWithType: ServiceClient<T>.InitializeHttpClient(HttpMessageHandler)
  fullName: Hyak.Common.ServiceClient<T>.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
  nameWithType.vb: ServiceClient(Of T).InitializeHttpClient(HttpMessageHandler)
  fullname.vb: Hyak.Common.ServiceClient(Of T).InitializeHttpClient(System.Net.Http.HttpMessageHandler)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
    name: InitializeHttpClient
    nameWithType: ServiceClient<T>.InitializeHttpClient
    fullName: Hyak.Common.ServiceClient<T>.InitializeHttpClient
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpMessageHandler)
    name: InitializeHttpClient
    nameWithType: ServiceClient(Of T).InitializeHttpClient
    fullName: Hyak.Common.ServiceClient(Of T).InitializeHttpClient
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient`1.WithHandler(Hyak.Common.ServiceClient{`0},System.Net.Http.DelegatingHandler)
  commentId: M:Hyak.Common.ServiceClient`1.WithHandler(Hyak.Common.ServiceClient{`0},System.Net.Http.DelegatingHandler)
  isExternal: true
  name: WithHandler(ServiceClient<T>, DelegatingHandler)
  nameWithType: ServiceClient<T>.WithHandler(ServiceClient<T>, DelegatingHandler)
  fullName: Hyak.Common.ServiceClient<T>.WithHandler(Hyak.Common.ServiceClient<T>, System.Net.Http.DelegatingHandler)
  nameWithType.vb: ServiceClient(Of T).WithHandler(ServiceClient(Of T), DelegatingHandler)
  fullname.vb: Hyak.Common.ServiceClient(Of T).WithHandler(Hyak.Common.ServiceClient(Of T), System.Net.Http.DelegatingHandler)
  name.vb: WithHandler(ServiceClient(Of T), DelegatingHandler)
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.WithHandler(Hyak.Common.ServiceClient{`0},System.Net.Http.DelegatingHandler)
    name: WithHandler
    nameWithType: ServiceClient<T>.WithHandler
    fullName: Hyak.Common.ServiceClient<T>.WithHandler
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.WithHandler(Hyak.Common.ServiceClient{`0},System.Net.Http.DelegatingHandler)
    name: WithHandler
    nameWithType: ServiceClient(Of T).WithHandler
    fullName: Hyak.Common.ServiceClient(Of T).WithHandler
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hyak.Common.ServiceClient`1.HttpClient
  commentId: P:Hyak.Common.ServiceClient`1.HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: ServiceClient<T>.HttpClient
  fullName: Hyak.Common.ServiceClient<T>.HttpClient
  nameWithType.vb: ServiceClient(Of T).HttpClient
  fullname.vb: Hyak.Common.ServiceClient(Of T).HttpClient
- uid: Hyak.Common.ServiceClient`1.HttpMessageHandler
  commentId: P:Hyak.Common.ServiceClient`1.HttpMessageHandler
  isExternal: true
  name: HttpMessageHandler
  nameWithType: ServiceClient<T>.HttpMessageHandler
  fullName: Hyak.Common.ServiceClient<T>.HttpMessageHandler
  nameWithType.vb: ServiceClient(Of T).HttpMessageHandler
  fullname.vb: Hyak.Common.ServiceClient(Of T).HttpMessageHandler
- uid: Hyak.Common.ServiceClient`1.UserAgent
  commentId: P:Hyak.Common.ServiceClient`1.UserAgent
  isExternal: true
  name: UserAgent
  nameWithType: ServiceClient<T>.UserAgent
  fullName: Hyak.Common.ServiceClient<T>.UserAgent
  nameWithType.vb: ServiceClient(Of T).UserAgent
  fullname.vb: Hyak.Common.ServiceClient(Of T).UserAgent
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  isExternal: true
  name: GetLongRunningOperationStatus(IStreamAnalyticsManagementClient, String)
  nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(IStreamAnalyticsManagementClient, String)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
    name: GetLongRunningOperationStatus
    nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
    name: IStreamAnalyticsManagementClient
    nameWithType: IStreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
    name: GetLongRunningOperationStatus
    nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
    name: IStreamAnalyticsManagementClient
    nameWithType: IStreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions
  commentId: T:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions
  parent: Microsoft.Azure.Management.StreamAnalytics
  isExternal: false
  name: StreamAnalyticsManagementClientExtensions
  nameWithType: StreamAnalyticsManagementClientExtensions
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  isExternal: true
  name: GetLongRunningOperationStatusAsync(IStreamAnalyticsManagementClient, String)
  nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(IStreamAnalyticsManagementClient, String)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
    name: GetLongRunningOperationStatusAsync
    nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
    name: IStreamAnalyticsManagementClient
    nameWithType: IStreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
    name: GetLongRunningOperationStatusAsync
    nameWithType: StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetLongRunningOperationStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
    name: IStreamAnalyticsManagementClient
    nameWithType: IStreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  isExternal: true
  name: GetTestConnectionStatus(IStreamAnalyticsManagementClient, String)
  nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(IStreamAnalyticsManagementClient, String)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
    name: GetTestConnectionStatus
    nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
    name: IStreamAnalyticsManagementClient
    nameWithType: IStreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
    name: GetTestConnectionStatus
    nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
    name: IStreamAnalyticsManagementClient
    nameWithType: IStreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
  isExternal: true
  name: GetTestConnectionStatusAsync(IStreamAnalyticsManagementClient, String)
  nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(IStreamAnalyticsManagementClient, String)
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
    name: GetTestConnectionStatusAsync
    nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
    name: IStreamAnalyticsManagementClient
    nameWithType: IStreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync(Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient,System.String)
    name: GetTestConnectionStatusAsync
    nameWithType: StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClientExtensions.GetTestConnectionStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
    name: IStreamAnalyticsManagementClient
    nameWithType: IStreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.ApiVersion*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.ApiVersion
  isExternal: false
  name: ApiVersion
  nameWithType: StreamAnalyticsManagementClient.ApiVersion
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.ApiVersion
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.ApiVersion
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: false
  name: ApiVersion
  nameWithType: IStreamAnalyticsManagementClient.ApiVersion
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.ApiVersion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.BaseUri*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.BaseUri
  isExternal: false
  name: BaseUri
  nameWithType: StreamAnalyticsManagementClient.BaseUri
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.BaseUri
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.BaseUri
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: false
  name: BaseUri
  nameWithType: IStreamAnalyticsManagementClient.BaseUri
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Credentials*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Credentials
  isExternal: false
  name: Credentials
  nameWithType: StreamAnalyticsManagementClient.Credentials
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Credentials
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Credentials
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: false
  name: Credentials
  nameWithType: IStreamAnalyticsManagementClient.Credentials
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Credentials
- uid: Microsoft.Azure.SubscriptionCloudCredentials
  commentId: T:Microsoft.Azure.SubscriptionCloudCredentials
  parent: Microsoft.Azure
  isExternal: true
  name: SubscriptionCloudCredentials
  nameWithType: SubscriptionCloudCredentials
  fullName: Microsoft.Azure.SubscriptionCloudCredentials
- uid: Microsoft.Azure
  commentId: N:Microsoft.Azure
  isExternal: false
  name: Microsoft.Azure
  nameWithType: Microsoft.Azure
  fullName: Microsoft.Azure
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationInitialTimeout*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
  isExternal: false
  name: LongRunningOperationInitialTimeout
  nameWithType: StreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: false
  name: LongRunningOperationInitialTimeout
  nameWithType: IStreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.LongRunningOperationInitialTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationRetryTimeout*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
  isExternal: false
  name: LongRunningOperationRetryTimeout
  nameWithType: StreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: false
  name: LongRunningOperationRetryTimeout
  nameWithType: IStreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.LongRunningOperationRetryTimeout
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Functions*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Functions
  isExternal: false
  name: Functions
  nameWithType: StreamAnalyticsManagementClient.Functions
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Functions
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Functions
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Functions
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: false
  name: Functions
  nameWithType: IStreamAnalyticsManagementClient.Functions
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Functions
- uid: Microsoft.Azure.Management.StreamAnalytics.IFunctionOperations
  commentId: T:Microsoft.Azure.Management.StreamAnalytics.IFunctionOperations
  parent: Microsoft.Azure.Management.StreamAnalytics
  isExternal: false
  name: IFunctionOperations
  nameWithType: IFunctionOperations
  fullName: Microsoft.Azure.Management.StreamAnalytics.IFunctionOperations
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Inputs*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Inputs
  isExternal: false
  name: Inputs
  nameWithType: StreamAnalyticsManagementClient.Inputs
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Inputs
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Inputs
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Inputs
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: false
  name: Inputs
  nameWithType: IStreamAnalyticsManagementClient.Inputs
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Inputs
- uid: Microsoft.Azure.Management.StreamAnalytics.IInputOperations
  commentId: T:Microsoft.Azure.Management.StreamAnalytics.IInputOperations
  parent: Microsoft.Azure.Management.StreamAnalytics
  isExternal: false
  name: IInputOperations
  nameWithType: IInputOperations
  fullName: Microsoft.Azure.Management.StreamAnalytics.IInputOperations
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamingJobs*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamingJobs
  isExternal: false
  name: StreamingJobs
  nameWithType: StreamAnalyticsManagementClient.StreamingJobs
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamingJobs
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.StreamingJobs
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.StreamingJobs
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: false
  name: StreamingJobs
  nameWithType: IStreamAnalyticsManagementClient.StreamingJobs
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.StreamingJobs
- uid: Microsoft.Azure.Management.StreamAnalytics.IJobOperations
  commentId: T:Microsoft.Azure.Management.StreamAnalytics.IJobOperations
  parent: Microsoft.Azure.Management.StreamAnalytics
  isExternal: false
  name: IJobOperations
  nameWithType: IJobOperations
  fullName: Microsoft.Azure.Management.StreamAnalytics.IJobOperations
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Outputs*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Outputs
  isExternal: false
  name: Outputs
  nameWithType: StreamAnalyticsManagementClient.Outputs
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Outputs
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Outputs
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Outputs
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: false
  name: Outputs
  nameWithType: IStreamAnalyticsManagementClient.Outputs
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Outputs
- uid: Microsoft.Azure.Management.StreamAnalytics.IOutputOperations
  commentId: T:Microsoft.Azure.Management.StreamAnalytics.IOutputOperations
  parent: Microsoft.Azure.Management.StreamAnalytics
  isExternal: false
  name: IOutputOperations
  nameWithType: IOutputOperations
  fullName: Microsoft.Azure.Management.StreamAnalytics.IOutputOperations
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Subscriptions*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Subscriptions
  isExternal: false
  name: Subscriptions
  nameWithType: StreamAnalyticsManagementClient.Subscriptions
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Subscriptions
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Subscriptions
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Subscriptions
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: false
  name: Subscriptions
  nameWithType: IStreamAnalyticsManagementClient.Subscriptions
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Subscriptions
- uid: Microsoft.Azure.Management.StreamAnalytics.ISubscriptionOperations
  commentId: T:Microsoft.Azure.Management.StreamAnalytics.ISubscriptionOperations
  parent: Microsoft.Azure.Management.StreamAnalytics
  isExternal: false
  name: ISubscriptionOperations
  nameWithType: ISubscriptionOperations
  fullName: Microsoft.Azure.Management.StreamAnalytics.ISubscriptionOperations
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Transformations*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Transformations
  isExternal: false
  name: Transformations
  nameWithType: StreamAnalyticsManagementClient.Transformations
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Transformations
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Transformations
  commentId: P:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Transformations
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: false
  name: Transformations
  nameWithType: IStreamAnalyticsManagementClient.Transformations
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.Transformations
- uid: Microsoft.Azure.Management.StreamAnalytics.ITransformationOperations
  commentId: T:Microsoft.Azure.Management.StreamAnalytics.ITransformationOperations
  parent: Microsoft.Azure.Management.StreamAnalytics
  isExternal: false
  name: ITransformationOperations
  nameWithType: ITransformationOperations
  fullName: Microsoft.Azure.Management.StreamAnalytics.ITransformationOperations
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.#ctor
  isExternal: false
  name: StreamAnalyticsManagementClient
  nameWithType: StreamAnalyticsManagementClient.StreamAnalyticsManagementClient
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.StreamAnalyticsManagementClient
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.Clone(Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient})
  commentId: M:Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}.Clone(Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient})
  parent: Hyak.Common.ServiceClient{Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient}
  definition: Hyak.Common.ServiceClient`1.Clone(Hyak.Common.ServiceClient{`0})
  name: Clone(ServiceClient<StreamAnalyticsManagementClient>)
  nameWithType: ServiceClient<StreamAnalyticsManagementClient>.Clone(ServiceClient<StreamAnalyticsManagementClient>)
  fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.Clone(Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>)
  nameWithType.vb: ServiceClient(Of StreamAnalyticsManagementClient).Clone(ServiceClient(Of StreamAnalyticsManagementClient))
  fullname.vb: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).Clone(Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient))
  name.vb: Clone(ServiceClient(Of StreamAnalyticsManagementClient))
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.Clone(Hyak.Common.ServiceClient{`0})
    name: Clone
    nameWithType: ServiceClient<StreamAnalyticsManagementClient>.Clone
    fullName: Hyak.Common.ServiceClient<Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
    name: StreamAnalyticsManagementClient
    nameWithType: StreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.Clone(Hyak.Common.ServiceClient{`0})
    name: Clone
    nameWithType: ServiceClient(Of StreamAnalyticsManagementClient).Clone
    fullName: Hyak.Common.ServiceClient(Of Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
    name: StreamAnalyticsManagementClient
    nameWithType: StreamAnalyticsManagementClient
    fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Clone*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Clone
  isExternal: false
  name: Clone
  nameWithType: StreamAnalyticsManagementClient.Clone
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.Clone
- uid: Hyak.Common.ServiceClient`1.Clone(Hyak.Common.ServiceClient{`0})
  commentId: M:Hyak.Common.ServiceClient`1.Clone(Hyak.Common.ServiceClient{`0})
  isExternal: true
  name: Clone(ServiceClient<T>)
  nameWithType: ServiceClient<T>.Clone(ServiceClient<T>)
  fullName: Hyak.Common.ServiceClient<T>.Clone(Hyak.Common.ServiceClient<T>)
  nameWithType.vb: ServiceClient(Of T).Clone(ServiceClient(Of T))
  fullname.vb: Hyak.Common.ServiceClient(Of T).Clone(Hyak.Common.ServiceClient(Of T))
  name.vb: Clone(ServiceClient(Of T))
  spec.csharp:
  - uid: Hyak.Common.ServiceClient`1.Clone(Hyak.Common.ServiceClient{`0})
    name: Clone
    nameWithType: ServiceClient<T>.Clone
    fullName: Hyak.Common.ServiceClient<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hyak.Common.ServiceClient`1.Clone(Hyak.Common.ServiceClient{`0})
    name: Clone
    nameWithType: ServiceClient(Of T).Clone
    fullName: Hyak.Common.ServiceClient(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hyak.Common.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Hyak.Common.ServiceClient
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync
  isExternal: false
  name: GetLongRunningOperationStatusAsync
  nameWithType: StreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: true
  name: GetLongRunningOperationStatusAsync(String, CancellationToken)
  nameWithType: IStreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
    name: GetLongRunningOperationStatusAsync
    nameWithType: IStreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
    name: GetLongRunningOperationStatusAsync
    nameWithType: IStreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetLongRunningOperationStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.StreamAnalytics.Models.LongRunningOperationResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.StreamAnalytics.Models.LongRunningOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LongRunningOperationResponse>
  nameWithType: Task<LongRunningOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.StreamAnalytics.Models.LongRunningOperationResponse>
  nameWithType.vb: Task(Of LongRunningOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.StreamAnalytics.Models.LongRunningOperationResponse)
  name.vb: Task(Of LongRunningOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.StreamAnalytics.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    nameWithType: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.StreamAnalytics.Models.LongRunningOperationResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.StreamAnalytics.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    nameWithType: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.StreamAnalytics.Models.LongRunningOperationResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetTestConnectionStatusAsync*
  commentId: Overload:Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetTestConnectionStatusAsync
  isExternal: false
  name: GetTestConnectionStatusAsync
  nameWithType: StreamAnalyticsManagementClient.GetTestConnectionStatusAsync
  fullName: Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.GetTestConnectionStatusAsync
- uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetTestConnectionStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetTestConnectionStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient
  isExternal: true
  name: GetTestConnectionStatusAsync(String, CancellationToken)
  nameWithType: IStreamAnalyticsManagementClient.GetTestConnectionStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetTestConnectionStatusAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetTestConnectionStatusAsync(System.String,System.Threading.CancellationToken)
    name: GetTestConnectionStatusAsync
    nameWithType: IStreamAnalyticsManagementClient.GetTestConnectionStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetTestConnectionStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetTestConnectionStatusAsync(System.String,System.Threading.CancellationToken)
    name: GetTestConnectionStatusAsync
    nameWithType: IStreamAnalyticsManagementClient.GetTestConnectionStatusAsync
    fullName: Microsoft.Azure.Management.StreamAnalytics.IStreamAnalyticsManagementClient.GetTestConnectionStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.StreamAnalytics.Models.ResourceTestConnectionResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.StreamAnalytics.Models.ResourceTestConnectionResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResourceTestConnectionResponse>
  nameWithType: Task<ResourceTestConnectionResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.StreamAnalytics.Models.ResourceTestConnectionResponse>
  nameWithType.vb: Task(Of ResourceTestConnectionResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.StreamAnalytics.Models.ResourceTestConnectionResponse)
  name.vb: Task(Of ResourceTestConnectionResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.StreamAnalytics.Models.ResourceTestConnectionResponse
    name: ResourceTestConnectionResponse
    nameWithType: ResourceTestConnectionResponse
    fullName: Microsoft.Azure.Management.StreamAnalytics.Models.ResourceTestConnectionResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.StreamAnalytics.Models.ResourceTestConnectionResponse
    name: ResourceTestConnectionResponse
    nameWithType: ResourceTestConnectionResponse
    fullName: Microsoft.Azure.Management.StreamAnalytics.Models.ResourceTestConnectionResponse
  - name: )
    nameWithType: )
    fullName: )
