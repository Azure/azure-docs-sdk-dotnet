### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Models.RecognizedFormCollection?alt=Azure.AI.FormRecognizer.Models.RecognizedFormCollection&text=RecognizedFormCollection" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Response`1"></xref> representing the result of the operation. It can be cast to a <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IReadOnlyList`1"></xref>
                  containing the recognized business cards.
  parameters:
  - namesWithMoniker:
    - value: operation
    description: The instance that this method was invoked on.
    type: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Models.RecognizeBusinessCardsOperation?alt=Azure.AI.FormRecognizer.Models.RecognizeBusinessCardsOperation&text=RecognizeBusinessCardsOperation" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> controlling the request lifetime.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Models.RecognizeBusinessCardsOperation},System.Threading.CancellationToken)
  commentId: M:Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Models.RecognizeBusinessCardsOperation},System.Threading.CancellationToken)
  name: WaitForCompletionAsync(Task<RecognizeBusinessCardsOperation>, CancellationToken)
  fullName: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(Task<RecognizeBusinessCardsOperation>, CancellationToken)
  nameWithType: OperationExtensions.WaitForCompletionAsync(Task<RecognizeBusinessCardsOperation>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Models.RecognizedFormCollection>> WaitForCompletionAsync (this System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Models.RecognizeBusinessCardsOperation> operation, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member WaitForCompletionAsync : System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Models.RecognizeBusinessCardsOperation> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Models.RecognizedFormCollection>>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function WaitForCompletionAsync (operation As Task(Of RecognizeBusinessCardsOperation), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecognizedFormCollection))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Periodically calls the server until the long-running operation completes.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Models.FormPageCollection?alt=Azure.AI.FormRecognizer.Models.FormPageCollection&text=FormPageCollection" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Response`1"></xref> representing the result of the operation. It can be cast to a <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IReadOnlyList`1"></xref>
                  containing the recognized pages.
  parameters:
  - namesWithMoniker:
    - value: operation
    description: The instance that this method was invoked on.
    type: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Models.RecognizeContentOperation?alt=Azure.AI.FormRecognizer.Models.RecognizeContentOperation&text=RecognizeContentOperation" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> controlling the request lifetime.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Models.RecognizeContentOperation},System.Threading.CancellationToken)
  commentId: M:Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Models.RecognizeContentOperation},System.Threading.CancellationToken)
  name: WaitForCompletionAsync(Task<RecognizeContentOperation>, CancellationToken)
  fullName: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(Task<RecognizeContentOperation>, CancellationToken)
  nameWithType: OperationExtensions.WaitForCompletionAsync(Task<RecognizeContentOperation>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Models.FormPageCollection>> WaitForCompletionAsync (this System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Models.RecognizeContentOperation> operation, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member WaitForCompletionAsync : System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Models.RecognizeContentOperation> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Models.FormPageCollection>>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function WaitForCompletionAsync (operation As Task(Of RecognizeContentOperation), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FormPageCollection))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Periodically calls the server until the long-running operation completes.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Models.RecognizedFormCollection?alt=Azure.AI.FormRecognizer.Models.RecognizedFormCollection&text=RecognizedFormCollection" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Response`1"></xref> representing the result of the operation. It can be cast to a <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IReadOnlyList`1"></xref>
                  containing the recognized forms.
  parameters:
  - namesWithMoniker:
    - value: operation
    description: The instance that this method was invoked on.
    type: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation?alt=Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&text=RecognizeCustomFormsOperation" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> controlling the request lifetime.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation},System.Threading.CancellationToken)
  commentId: M:Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation},System.Threading.CancellationToken)
  name: WaitForCompletionAsync(Task<RecognizeCustomFormsOperation>, CancellationToken)
  fullName: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(Task<RecognizeCustomFormsOperation>, CancellationToken)
  nameWithType: OperationExtensions.WaitForCompletionAsync(Task<RecognizeCustomFormsOperation>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Models.RecognizedFormCollection>> WaitForCompletionAsync (this System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation> operation, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member WaitForCompletionAsync : System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Models.RecognizedFormCollection>>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function WaitForCompletionAsync (operation As Task(Of RecognizeCustomFormsOperation), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecognizedFormCollection))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Periodically calls the server until the long-running operation completes.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Models.RecognizedFormCollection?alt=Azure.AI.FormRecognizer.Models.RecognizedFormCollection&text=RecognizedFormCollection" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Response`1"></xref> representing the result of the operation. It can be cast to a <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IReadOnlyList`1"></xref>
                  containing the recognized business cards.
  parameters:
  - namesWithMoniker:
    - value: operation
    description: The instance that this method was invoked on.
    type: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Models.RecognizeInvoicesOperation?alt=Azure.AI.FormRecognizer.Models.RecognizeInvoicesOperation&text=RecognizeInvoicesOperation" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> controlling the request lifetime.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Models.RecognizeInvoicesOperation},System.Threading.CancellationToken)
  commentId: M:Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Models.RecognizeInvoicesOperation},System.Threading.CancellationToken)
  name: WaitForCompletionAsync(Task<RecognizeInvoicesOperation>, CancellationToken)
  fullName: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(Task<RecognizeInvoicesOperation>, CancellationToken)
  nameWithType: OperationExtensions.WaitForCompletionAsync(Task<RecognizeInvoicesOperation>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Models.RecognizedFormCollection>> WaitForCompletionAsync (this System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Models.RecognizeInvoicesOperation> operation, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member WaitForCompletionAsync : System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Models.RecognizeInvoicesOperation> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Models.RecognizedFormCollection>>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function WaitForCompletionAsync (operation As Task(Of RecognizeInvoicesOperation), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecognizedFormCollection))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Periodically calls the server until the long-running operation completes.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Models.RecognizedFormCollection?alt=Azure.AI.FormRecognizer.Models.RecognizedFormCollection&text=RecognizedFormCollection" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Response`1"></xref> representing the result of the operation. It can be cast to a <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IReadOnlyList`1"></xref>
                  containing the recognized receipts.
  parameters:
  - namesWithMoniker:
    - value: operation
    description: The instance that this method was invoked on.
    type: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation?alt=Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&text=RecognizeReceiptsOperation" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> controlling the request lifetime.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation},System.Threading.CancellationToken)
  commentId: M:Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation},System.Threading.CancellationToken)
  name: WaitForCompletionAsync(Task<RecognizeReceiptsOperation>, CancellationToken)
  fullName: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(Task<RecognizeReceiptsOperation>, CancellationToken)
  nameWithType: OperationExtensions.WaitForCompletionAsync(Task<RecognizeReceiptsOperation>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Models.RecognizedFormCollection>> WaitForCompletionAsync (this System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation> operation, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member WaitForCompletionAsync : System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Models.RecognizedFormCollection>>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function WaitForCompletionAsync (operation As Task(Of RecognizeReceiptsOperation), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecognizedFormCollection))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Periodically calls the server until the long-running operation completes.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Training.CustomFormModelInfo?alt=Azure.AI.FormRecognizer.Training.CustomFormModelInfo&text=CustomFormModelInfo" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Response`1"></xref> representing the result of the operation. It can be cast to a <xref data-throw-if-not-resolved="true" uid="Azure.AI.FormRecognizer.Training.CustomFormModelInfo"></xref>
                  containing meta-data about the trained model.
  parameters:
  - namesWithMoniker:
    - value: operation
    description: The instance that this method was invoked on.
    type: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Training.CopyModelOperation?alt=Azure.AI.FormRecognizer.Training.CopyModelOperation&text=CopyModelOperation" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> controlling the request lifetime.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Training.CopyModelOperation},System.Threading.CancellationToken)
  commentId: M:Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Training.CopyModelOperation},System.Threading.CancellationToken)
  name: WaitForCompletionAsync(Task<CopyModelOperation>, CancellationToken)
  fullName: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(Task<CopyModelOperation>, CancellationToken)
  nameWithType: OperationExtensions.WaitForCompletionAsync(Task<CopyModelOperation>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Training.CustomFormModelInfo>> WaitForCompletionAsync (this System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Training.CopyModelOperation> operation, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member WaitForCompletionAsync : System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Training.CopyModelOperation> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Training.CustomFormModelInfo>>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function WaitForCompletionAsync (operation As Task(Of CopyModelOperation), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CustomFormModelInfo))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Periodically calls the server until the long-running operation completes.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Training.CustomFormModel?alt=Azure.AI.FormRecognizer.Training.CustomFormModel&text=CustomFormModel" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Response`1"></xref> representing the result of the operation. It can be cast to a <xref data-throw-if-not-resolved="true" uid="Azure.AI.FormRecognizer.Training.CustomFormModel"></xref>
                  containing meta-data about the trained model.
  parameters:
  - namesWithMoniker:
    - value: operation
    description: The instance that this method was invoked on.
    type: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Training.CreateComposedModelOperation?alt=Azure.AI.FormRecognizer.Training.CreateComposedModelOperation&text=CreateComposedModelOperation" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> controlling the request lifetime.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Training.CreateComposedModelOperation},System.Threading.CancellationToken)
  commentId: M:Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Training.CreateComposedModelOperation},System.Threading.CancellationToken)
  name: WaitForCompletionAsync(Task<CreateComposedModelOperation>, CancellationToken)
  fullName: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(Task<CreateComposedModelOperation>, CancellationToken)
  nameWithType: OperationExtensions.WaitForCompletionAsync(Task<CreateComposedModelOperation>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Training.CustomFormModel>> WaitForCompletionAsync (this System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Training.CreateComposedModelOperation> operation, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member WaitForCompletionAsync : System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Training.CreateComposedModelOperation> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Training.CustomFormModel>>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function WaitForCompletionAsync (operation As Task(Of CreateComposedModelOperation), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CustomFormModel))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Periodically calls the server until the long-running operation completes.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Training.CustomFormModel?alt=Azure.AI.FormRecognizer.Training.CustomFormModel&text=CustomFormModel" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Response`1"></xref> representing the result of the operation. It can be cast to a <xref data-throw-if-not-resolved="true" uid="Azure.AI.FormRecognizer.Training.CustomFormModel"></xref>
                  containing meta-data about the trained model.
  parameters:
  - namesWithMoniker:
    - value: operation
    description: The instance that this method was invoked on.
    type: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.FormRecognizer.Training.TrainingOperation?alt=Azure.AI.FormRecognizer.Training.TrainingOperation&text=TrainingOperation" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> controlling the request lifetime.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Training.TrainingOperation},System.Threading.CancellationToken)
  commentId: M:Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(System.Threading.Tasks.Task{Azure.AI.FormRecognizer.Training.TrainingOperation},System.Threading.CancellationToken)
  name: WaitForCompletionAsync(Task<TrainingOperation>, CancellationToken)
  fullName: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync(Task<TrainingOperation>, CancellationToken)
  nameWithType: OperationExtensions.WaitForCompletionAsync(Task<TrainingOperation>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Training.CustomFormModel>> WaitForCompletionAsync (this System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Training.TrainingOperation> operation, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member WaitForCompletionAsync : System.Threading.Tasks.Task<Azure.AI.FormRecognizer.Training.TrainingOperation> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.FormRecognizer.Training.CustomFormModel>>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function WaitForCompletionAsync (operation As Task(Of TrainingOperation), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CustomFormModel))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Periodically calls the server until the long-running operation completes.
  metadata: {}
uid: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync*
commentId: Overload:Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync
namespace: Azure.AI.FormRecognizer
name: WaitForCompletionAsync
fullName: Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync
nameWithType: OperationExtensions.WaitForCompletionAsync
assembliesWithMoniker:
- value: Azure.AI.FormRecognizer.dll
packagesWithMoniker:
- value: Azure.AI.FormRecognizer v4.0.0
  monikers:
  - azure-dotnet
- value: Azure.AI.FormRecognizer v4.1.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync
  api_location:
  - Azure.AI.FormRecognizer.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.FormRecognizer.OperationExtensions.WaitForCompletionAsync
  - Azure::AI::FormRecognizer::OperationExtensions::WaitForCompletionAsync
  - WaitForCompletionAsync
  - OperationExtensions.WaitForCompletionAsync
  - OperationExtensions::WaitForCompletionAsync
  helpviewer_keywords:
  - OperationExtensions.WaitForCompletionAsync method [.NET]
  - WaitForCompletionAsync method [.NET], class OperationExtensions
  - OperationExtensions.WaitForCompletionAsync(Task<RecognizeBusinessCardsOperation>, CancellationToken) extension method [.NET]
  - WaitForCompletionAsync(Task<RecognizeBusinessCardsOperation>, CancellationToken) extension method [.NET], class OperationExtensions
  - OperationExtensions.WaitForCompletionAsync(Task<RecognizeContentOperation>, CancellationToken) extension method [.NET]
  - WaitForCompletionAsync(Task<RecognizeContentOperation>, CancellationToken) extension method [.NET], class OperationExtensions
  - OperationExtensions.WaitForCompletionAsync(Task<RecognizeCustomFormsOperation>, CancellationToken) extension method [.NET]
  - WaitForCompletionAsync(Task<RecognizeCustomFormsOperation>, CancellationToken) extension method [.NET], class OperationExtensions
  - OperationExtensions.WaitForCompletionAsync(Task<RecognizeInvoicesOperation>, CancellationToken) extension method [.NET]
  - WaitForCompletionAsync(Task<RecognizeInvoicesOperation>, CancellationToken) extension method [.NET], class OperationExtensions
  - OperationExtensions.WaitForCompletionAsync(Task<RecognizeReceiptsOperation>, CancellationToken) extension method [.NET]
  - WaitForCompletionAsync(Task<RecognizeReceiptsOperation>, CancellationToken) extension method [.NET], class OperationExtensions
  - OperationExtensions.WaitForCompletionAsync(Task<CopyModelOperation>, CancellationToken) extension method [.NET]
  - WaitForCompletionAsync(Task<CopyModelOperation>, CancellationToken) extension method [.NET], class OperationExtensions
  - OperationExtensions.WaitForCompletionAsync(Task<CreateComposedModelOperation>, CancellationToken) extension method [.NET]
  - WaitForCompletionAsync(Task<CreateComposedModelOperation>, CancellationToken) extension method [.NET], class OperationExtensions
  - OperationExtensions.WaitForCompletionAsync(Task<TrainingOperation>, CancellationToken) extension method [.NET]
  - WaitForCompletionAsync(Task<TrainingOperation>, CancellationToken) extension method [.NET], class OperationExtensions
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
