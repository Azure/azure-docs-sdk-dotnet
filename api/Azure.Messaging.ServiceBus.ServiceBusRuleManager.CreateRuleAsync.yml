### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>
    description: A task instance that represents the asynchronous add rule operation.
  parameters:
  - namesWithMoniker:
    - value: options
    description: The options for the rule to add.
    type: <xref href="Azure.Messaging.ServiceBus.Administration.CreateRuleOptions?alt=Azure.Messaging.ServiceBus.Administration.CreateRuleOptions&text=CreateRuleOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: >-
      <ul><li>
                 A rule with the same name exists under the subscription. The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to
                 <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.MessagingEntityAlreadyExists"></xref> in this case.
               </li><li>
                 The operation timed out. The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to
                 <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.ServiceTimeout"></xref> in this case.
               </li><li>
                 Either the specified size of the entity is not supported or the maximum allowable quota has been reached.
                 You must specify one of the supported size values, delete existing entities, or increase your quota size.
                 The failure reason will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.QuotaExceeded"></xref> in this case.
               </li><li>
                 The server is busy. You should wait before you retry the operation. The failure reason will be set to
                 <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.ServiceBusy"></xref> in this case.
               </li><li>
                 An internal error or unexpected exception occurs. The failure reason will be set to
                 <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.GeneralError"></xref> in this case.
               </li></ul>
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusException?alt=Azure.Messaging.ServiceBus.ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.ServiceBus.ServiceBusRuleManager.CreateRuleAsync(Azure.Messaging.ServiceBus.Administration.CreateRuleOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.ServiceBus.ServiceBusRuleManager.CreateRuleAsync(Azure.Messaging.ServiceBus.Administration.CreateRuleOptions,System.Threading.CancellationToken)
  name: CreateRuleAsync(CreateRuleOptions, CancellationToken)
  fullName: Azure.Messaging.ServiceBus.ServiceBusRuleManager.CreateRuleAsync(CreateRuleOptions, CancellationToken)
  nameWithType: ServiceBusRuleManager.CreateRuleAsync(CreateRuleOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task CreateRuleAsync (Azure.Messaging.ServiceBus.Administration.CreateRuleOptions options, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member CreateRuleAsync : Azure.Messaging.ServiceBus.Administration.CreateRuleOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task

        override this.CreateRuleAsync : Azure.Messaging.ServiceBus.Administration.CreateRuleOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task
  - lang: vb
    values:
    - value: Public Overridable Function CreateRuleAsync (options As CreateRuleOptions, Optional cancellationToken As CancellationToken = Nothing) As Task
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Adds a rule to the current subscription to filter the messages reaching from topic to the subscription.
  remarks: <p>You can add rules to the subscription that decides which messages from the topic should reach the subscription. A default <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.Administration.TrueRuleFilter"></xref> rule named <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.Administration.RuleProperties.DefaultRuleName"></xref> is always added while creation of the Subscription. You can add multiple rules with distinct names to the same subscription. Multiple filters combine with each other using logical OR condition. i.e., If any filter succeeds, the message is passed on to the subscription.</p>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>
    description: A task instance that represents the asynchronous add rule operation.
  parameters:
  - namesWithMoniker:
    - value: ruleName
    description: Name of the rule
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: filter
    description: The filter expression against which messages will be matched.
    type: <xref href="Azure.Messaging.ServiceBus.Administration.RuleFilter?alt=Azure.Messaging.ServiceBus.Administration.RuleFilter&text=RuleFilter" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: >-
      <ul><li>
                 A rule with the same name exists under the subscription. The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to
                 <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.MessagingEntityAlreadyExists"></xref> in this case.
               </li><li>
                 The operation timed out. The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to
                 <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.ServiceTimeout"></xref> in this case.
               </li><li>
                 Either the specified size of the entity is not supported or the maximum allowable quota has been reached.
                 You must specify one of the supported size values, delete existing entities, or increase your quota size.
                 The failure reason will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.QuotaExceeded"></xref> in this case.
               </li><li>
                 The server is busy. You should wait before you retry the operation. The failure reason will be set to
                 <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.ServiceBusy"></xref> in this case.
               </li><li>
                 An internal error or unexpected exception occurs. The failure reason will be set to
                 <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.GeneralError"></xref> in this case.
               </li></ul>
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusException?alt=Azure.Messaging.ServiceBus.ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.ServiceBus.ServiceBusRuleManager.CreateRuleAsync(System.String,Azure.Messaging.ServiceBus.Administration.RuleFilter,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.ServiceBus.ServiceBusRuleManager.CreateRuleAsync(System.String,Azure.Messaging.ServiceBus.Administration.RuleFilter,System.Threading.CancellationToken)
  name: CreateRuleAsync(String, RuleFilter, CancellationToken)
  fullName: Azure.Messaging.ServiceBus.ServiceBusRuleManager.CreateRuleAsync(String, RuleFilter, CancellationToken)
  nameWithType: ServiceBusRuleManager.CreateRuleAsync(String, RuleFilter, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task CreateRuleAsync (string ruleName, Azure.Messaging.ServiceBus.Administration.RuleFilter filter, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member CreateRuleAsync : string * Azure.Messaging.ServiceBus.Administration.RuleFilter * System.Threading.CancellationToken -> System.Threading.Tasks.Task

        override this.CreateRuleAsync : string * Azure.Messaging.ServiceBus.Administration.RuleFilter * System.Threading.CancellationToken -> System.Threading.Tasks.Task
  - lang: vb
    values:
    - value: Public Overridable Function CreateRuleAsync (ruleName As String, filter As RuleFilter, Optional cancellationToken As CancellationToken = Nothing) As Task
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Adds a rule to the current subscription to filter the messages reaching from topic to the subscription.
  remarks: <p>You can add rules to the subscription that decides which messages from the topic should reach the subscription. A default <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.Administration.TrueRuleFilter"></xref> rule named <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.Administration.RuleProperties.DefaultRuleName"></xref> is always added while creation of the Subscription. You can add multiple rules with distinct names to the same subscription. Multiple filters combine with each other using logical OR condition. i.e., If any filter succeeds, the message is passed on to the subscription.</p>
  metadata: {}
uid: Azure.Messaging.ServiceBus.ServiceBusRuleManager.CreateRuleAsync*
commentId: Overload:Azure.Messaging.ServiceBus.ServiceBusRuleManager.CreateRuleAsync
namespace: Azure.Messaging.ServiceBus
name: CreateRuleAsync
fullName: Azure.Messaging.ServiceBus.ServiceBusRuleManager.CreateRuleAsync
nameWithType: ServiceBusRuleManager.CreateRuleAsync
assembliesWithMoniker:
- value: Azure.Messaging.ServiceBus.dll
packagesWithMoniker:
- value: Azure.Messaging.ServiceBus v7.15.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.ServiceBus v7.11.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.ServiceBus.ServiceBusRuleManager.CreateRuleAsync
  api_location:
  - Azure.Messaging.ServiceBus.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.ServiceBus.ServiceBusRuleManager.CreateRuleAsync
  - Azure::Messaging::ServiceBus::ServiceBusRuleManager::CreateRuleAsync
  - CreateRuleAsync
  - ServiceBusRuleManager.CreateRuleAsync
  - ServiceBusRuleManager::CreateRuleAsync
  helpviewer_keywords:
  - ServiceBusRuleManager.CreateRuleAsync method [.NET]
  - CreateRuleAsync method [.NET], class ServiceBusRuleManager
  - ServiceBusRuleManager.CreateRuleAsync(CreateRuleOptions, CancellationToken) method [.NET]
  - CreateRuleAsync(CreateRuleOptions, CancellationToken) method [.NET], class ServiceBusRuleManager
  - ServiceBusRuleManager.CreateRuleAsync(String, RuleFilter, CancellationToken) method [.NET]
  - CreateRuleAsync(String, RuleFilter, CancellationToken) method [.NET], class ServiceBusRuleManager
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
