### YamlMime:NetMember
type: constructor
members:
- parameters:
  - namesWithMoniker:
    - value: failedLogs
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: exception
    type: <xref href="System.Exception?alt=System.Exception&text=Exception" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isRunningSynchronously
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Monitor.Ingestion.LogsUploadFailedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.Object},System.Exception,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Azure.Monitor.Ingestion.LogsUploadFailedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.Object},System.Exception,System.Boolean,System.Threading.CancellationToken)
  name: LogsUploadFailedEventArgs(IEnumerable<Object>, Exception, Boolean, CancellationToken)
  fullName: Azure.Monitor.Ingestion.LogsUploadFailedEventArgs.LogsUploadFailedEventArgs(IEnumerable<Object>, Exception, Boolean, CancellationToken)
  nameWithType: LogsUploadFailedEventArgs.LogsUploadFailedEventArgs(IEnumerable<Object>, Exception, Boolean, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public LogsUploadFailedEventArgs (System.Collections.Generic.IEnumerable<object> failedLogs, Exception exception, bool isRunningSynchronously, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'new Azure.Monitor.Ingestion.LogsUploadFailedEventArgs : seq<obj> * Exception * bool * System.Threading.CancellationToken -> Azure.Monitor.Ingestion.LogsUploadFailedEventArgs'
  - lang: vb
    values:
    - value: Public Sub New (failedLogs As IEnumerable(Of Object), exception As Exception, isRunningSynchronously As Boolean, cancellationToken As CancellationToken)
  monikers:
  - azure-dotnet
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Monitor.Ingestion.LogsUploadFailedEventArgs"></xref> class.
  metadata: {}
uid: Azure.Monitor.Ingestion.LogsUploadFailedEventArgs.#ctor*
commentId: Overload:Azure.Monitor.Ingestion.LogsUploadFailedEventArgs.#ctor
namespace: Azure.Monitor.Ingestion
name: LogsUploadFailedEventArgs
fullName: Azure.Monitor.Ingestion.LogsUploadFailedEventArgs.LogsUploadFailedEventArgs
nameWithType: LogsUploadFailedEventArgs.LogsUploadFailedEventArgs
assembliesWithMoniker:
- value: Azure.Monitor.Ingestion.dll
packagesWithMoniker:
- value: Azure.Monitor.Ingestion v1.0.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.Monitor.Ingestion.LogsUploadFailedEventArgs..ctor
  api_location:
  - Azure.Monitor.Ingestion.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Monitor.Ingestion.LogsUploadFailedEventArgs.#ctor
  - Azure::Monitor::Ingestion::LogsUploadFailedEventArgs::#ctor
  - '#ctor'
  - LogsUploadFailedEventArgs.#ctor
  - LogsUploadFailedEventArgs::#ctor
  helpviewer_keywords:
  - LogsUploadFailedEventArgs class [.NET], constructors
  - LogsUploadFailedEventArgs(IEnumerable<Object>, Exception, Boolean, CancellationToken) class [.NET], constructors
  monikers:
  - azure-dotnet
