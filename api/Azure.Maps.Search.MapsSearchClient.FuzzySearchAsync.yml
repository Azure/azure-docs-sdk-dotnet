### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Maps.Search.Models.SearchAddressResult?alt=Azure.Maps.Search.Models.SearchAddressResult&text=SearchAddressResult" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: query
    description: The POI name to search for (e.g., "statue of liberty", "starbucks"), must be properly URL encoded.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: additional options
    type: <xref href="Azure.Maps.Search.FuzzySearchOptions?alt=Azure.Maps.Search.FuzzySearchOptions&text=FuzzySearchOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Maps.Search.MapsSearchClient.FuzzySearchAsync(System.String,Azure.Maps.Search.FuzzySearchOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Maps.Search.MapsSearchClient.FuzzySearchAsync(System.String,Azure.Maps.Search.FuzzySearchOptions,System.Threading.CancellationToken)
  name: FuzzySearchAsync(String, FuzzySearchOptions, CancellationToken)
  fullName: Azure.Maps.Search.MapsSearchClient.FuzzySearchAsync(String, FuzzySearchOptions, CancellationToken)
  nameWithType: MapsSearchClient.FuzzySearchAsync(String, FuzzySearchOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.Maps.Search.Models.SearchAddressResult>> FuzzySearchAsync (string query, Azure.Maps.Search.FuzzySearchOptions options = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member FuzzySearchAsync : string * Azure.Maps.Search.FuzzySearchOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Maps.Search.Models.SearchAddressResult>>

        override this.FuzzySearchAsync : string * Azure.Maps.Search.FuzzySearchOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Maps.Search.Models.SearchAddressResult>>
  - lang: vb
    values:
    - value: Public Overridable Function FuzzySearchAsync (query As String, Optional options As FuzzySearchOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SearchAddressResult))
  monikers:
  - azure-dotnet-preview
  summary: "The basic default API is Free Form Search which handles the most fuzzy of inputs handling any combination of address or POI tokens. This search API is the canonical 'single line search'. The Free Form Search API is a seamless combination of POI search and geocoding. The API can also be weighted with a contextual position (lat./lon. pair), or fully constrained by a a pair of coordinates and radius, or it can be executed more generally without any geo biasing anchor point.&lt;br&gt;&lt;br&gt;We strongly advise you to use the 'countrySet' parameter to specify only the countries for which your application needs coverage, as the default behavior will be to search the entire world, potentially returning unnecessary results.&lt;br&gt;&lt;br&gt; E.g.: `countrySet`=US,FR &lt;br&gt;&lt;br&gt;Please see <a href=\"https://docs.microsoft.com/azure/location-based-services/geocoding-coverage\">Search Coverage</a> for a complete list of all the supported countries.&lt;br&gt;&lt;br&gt;Most Search queries default to `maxFuzzyLevel`=2 to gain performance and also reduce unusual results. This new default can be overridden as needed per request by passing in the query param `maxFuzzyLevel`=3 or 4."
  remarks: '**Free Form Search**'
  metadata: {}
uid: Azure.Maps.Search.MapsSearchClient.FuzzySearchAsync*
commentId: Overload:Azure.Maps.Search.MapsSearchClient.FuzzySearchAsync
namespace: Azure.Maps.Search
name: FuzzySearchAsync
fullName: Azure.Maps.Search.MapsSearchClient.FuzzySearchAsync
nameWithType: MapsSearchClient.FuzzySearchAsync
assembliesWithMoniker:
- value: Azure.Maps.Search.dll
packagesWithMoniker:
- value: Azure.Maps.Search v1.0.0-beta.4
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Maps.Search.MapsSearchClient.FuzzySearchAsync
  api_location:
  - Azure.Maps.Search.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Maps.Search.MapsSearchClient.FuzzySearchAsync
  - Azure::Maps::Search::MapsSearchClient::FuzzySearchAsync
  - FuzzySearchAsync
  - MapsSearchClient.FuzzySearchAsync
  - MapsSearchClient::FuzzySearchAsync
  helpviewer_keywords:
  - MapsSearchClient.FuzzySearchAsync method [.NET]
  - FuzzySearchAsync method [.NET], class MapsSearchClient
  - MapsSearchClient.FuzzySearchAsync(String, FuzzySearchOptions, CancellationToken) method [.NET]
  - FuzzySearchAsync(String, FuzzySearchOptions, CancellationToken) method [.NET], class MapsSearchClient
  monikers:
  - azure-dotnet-preview
