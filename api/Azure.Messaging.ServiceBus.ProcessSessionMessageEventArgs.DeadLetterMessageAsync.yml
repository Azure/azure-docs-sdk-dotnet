### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: message
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage"></xref> to dead-letter.
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage?alt=Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: propertiesToModify
    description: The properties of the message to modify while moving to subqueue.
    type: <xref href="System.Collections.Generic.IDictionary`2?alt=System.Collections.Generic.IDictionary&text=IDictionary" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>,<xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: >-
      <ul><li>
                 The lock for the message has expired or the message has already been completed. This does not apply for session-enabled entities.
                 The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.MessageLockLost"></xref> in this case.
               </li><li>
                 The lock for the session has expired or the message has already been completed. This only applies for session-enabled entities.
                 The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost"></xref> in this case.
               </li></ul>
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusException?alt=Azure.Messaging.ServiceBus.ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name: DeadLetterMessageAsync(ServiceBusReceivedMessage, IDictionary<String,Object>, CancellationToken)
  fullName: Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync(ServiceBusReceivedMessage, IDictionary<String,Object>, CancellationToken)
  nameWithType: ProcessSessionMessageEventArgs.DeadLetterMessageAsync(ServiceBusReceivedMessage, IDictionary<String,Object>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary<string,object> propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary<string, obj> * System.Threading.CancellationToken -> System.Threading.Tasks.Task

        override this.DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary<string, obj> * System.Threading.CancellationToken -> System.Threading.Tasks.Task
  - lang: vb
    values:
    - value: Public Overridable Function DeadLetterMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Moves a message to the dead-letter subqueue.
  remarks: <p>In order to receive a message from the dead-letter queue or transfer dead-letter queue, set the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiverOptions.SubQueue"></xref> property to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.SubQueue.DeadLetter"></xref> or <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.SubQueue.TransferDeadLetter"></xref> when calling <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)"></xref> or <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)"></xref>. This operation can only be performed when <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode"></xref> is set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock"></xref>.</p>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: message
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage"></xref> to dead-letter.
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage?alt=Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: deadLetterReason
    description: The reason for dead-lettering the message.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: deadLetterErrorDescription
    description: The error description for dead-lettering the message.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: >-
      <ul><li>
                 The lock for the message has expired or the message has already been completed. This does not apply for session-enabled entities.
                 The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.MessageLockLost"></xref> in this case.
               </li><li>
                 The lock for the session has expired or the message has already been completed. This only applies for session-enabled entities.
                 The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost"></xref> in this case.
               </li></ul>
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusException?alt=Azure.Messaging.ServiceBus.ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="True"/>
  - description: >-
      <ul><li>
                 The dead letter reason or dead letter error description exceeded the maximum length of 4096.
               </li></ul>
    type: <xref href="System.ArgumentOutOfRangeException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.String,System.String,System.Threading.CancellationToken)
  name: DeadLetterMessageAsync(ServiceBusReceivedMessage, String, String, CancellationToken)
  fullName: Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync(ServiceBusReceivedMessage, String, String, CancellationToken)
  nameWithType: ProcessSessionMessageEventArgs.DeadLetterMessageAsync(ServiceBusReceivedMessage, String, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, string deadLetterReason, string deadLetterErrorDescription = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * string * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task

        override this.DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * string * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task
  - lang: vb
    values:
    - value: Public Overridable Function DeadLetterMessageAsync (message As ServiceBusReceivedMessage, deadLetterReason As String, Optional deadLetterErrorDescription As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Moves a message to the dead-letter subqueue.
  remarks: <p>In order to receive a message from the dead-letter queue or transfer dead-letter queue, set the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiverOptions.SubQueue"></xref> property to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.SubQueue.DeadLetter"></xref> or <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.SubQueue.TransferDeadLetter"></xref> when calling <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)"></xref> or <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)"></xref>. This operation can only be performed when <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode"></xref> is set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock"></xref>.</p>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: message
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage"></xref> to dead-letter.
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage?alt=Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: propertiesToModify
    description: The properties of the message to modify while moving to subqueue.
    type: <xref href="System.Collections.Generic.Dictionary`2?alt=System.Collections.Generic.Dictionary&text=Dictionary" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>,<xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: deadLetterReason
    description: The reason for dead-lettering the message.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: deadLetterErrorDescription
    description: The error description for dead-lettering the message.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: >-
      <ul><li>
                 The lock for the message has expired or the message has already been completed. This does not apply for session-enabled entities.
                 The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.MessageLockLost"></xref> in this case.
               </li><li>
                 The lock for the session has expired or the message has already been completed. This only applies for session-enabled entities.
                 The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost"></xref> in this case.
               </li></ul>
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusException?alt=Azure.Messaging.ServiceBus.ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="True"/>
  - description: >-
      <ul><li>
                 The dead letter reason or dead letter error exception was specified in both the parameter and the properties dictionary.
               </li></ul>
    type: <xref href="System.InvalidOperationException" data-throw-if-not-resolved="True"/>
  - description: >-
      <ul><li>
                 The dead letter reason or dead letter error description exceeded the maximum length of 4096.
               </li></ul>
    type: <xref href="System.ArgumentOutOfRangeException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.Threading.CancellationToken)
  name: DeadLetterMessageAsync(ServiceBusReceivedMessage, Dictionary<String,Object>, String, String, CancellationToken)
  fullName: Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync(ServiceBusReceivedMessage, Dictionary<String,Object>, String, String, CancellationToken)
  nameWithType: ProcessSessionMessageEventArgs.DeadLetterMessageAsync(ServiceBusReceivedMessage, Dictionary<String,Object>, String, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.Dictionary<string,object> propertiesToModify, string deadLetterReason, string deadLetterErrorDescription = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.Dictionary<string, obj> * string * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task

        override this.DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.Dictionary<string, obj> * string * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task
  - lang: vb
    values:
    - value: Public Overridable Function DeadLetterMessageAsync (message As ServiceBusReceivedMessage, propertiesToModify As Dictionary(Of String, Object), deadLetterReason As String, Optional deadLetterErrorDescription As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Moves a message to the dead-letter subqueue.
  remarks: <p>In order to receive a message from the dead-letter queue or transfer dead-letter queue, set the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiverOptions.SubQueue"></xref> property to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.SubQueue.DeadLetter"></xref> or <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.SubQueue.TransferDeadLetter"></xref> when calling <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)"></xref> or <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)"></xref>. This operation can only be performed when <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode"></xref> is set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock"></xref>. The dead letter reason and error description can only be specified either through the method parameters or hard coded using this properties.</p>
  metadata: {}
uid: Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync*
commentId: Overload:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync
namespace: Azure.Messaging.ServiceBus
name: DeadLetterMessageAsync
fullName: Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync
nameWithType: ProcessSessionMessageEventArgs.DeadLetterMessageAsync
assembliesWithMoniker:
- value: Azure.Messaging.ServiceBus.dll
packagesWithMoniker:
- value: Azure.Messaging.ServiceBus v7.15.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.ServiceBus v7.11.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync
  api_location:
  - Azure.Messaging.ServiceBus.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync
  - Azure::Messaging::ServiceBus::ProcessSessionMessageEventArgs::DeadLetterMessageAsync
  - DeadLetterMessageAsync
  - ProcessSessionMessageEventArgs.DeadLetterMessageAsync
  - ProcessSessionMessageEventArgs::DeadLetterMessageAsync
  helpviewer_keywords:
  - ProcessSessionMessageEventArgs.DeadLetterMessageAsync method [.NET]
  - DeadLetterMessageAsync method [.NET], class ProcessSessionMessageEventArgs
  - ProcessSessionMessageEventArgs.DeadLetterMessageAsync(ServiceBusReceivedMessage, IDictionary<String,Object>, CancellationToken) method [.NET]
  - DeadLetterMessageAsync(ServiceBusReceivedMessage, IDictionary<String,Object>, CancellationToken) method [.NET], class ProcessSessionMessageEventArgs
  - ProcessSessionMessageEventArgs.DeadLetterMessageAsync(ServiceBusReceivedMessage, String, String, CancellationToken) method [.NET]
  - DeadLetterMessageAsync(ServiceBusReceivedMessage, String, String, CancellationToken) method [.NET], class ProcessSessionMessageEventArgs
  - ProcessSessionMessageEventArgs.DeadLetterMessageAsync(ServiceBusReceivedMessage, Dictionary<String,Object>, String, String, CancellationToken) method [.NET]
  - DeadLetterMessageAsync(ServiceBusReceivedMessage, Dictionary<String,Object>, String, String, CancellationToken) method [.NET], class ProcessSessionMessageEventArgs
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
