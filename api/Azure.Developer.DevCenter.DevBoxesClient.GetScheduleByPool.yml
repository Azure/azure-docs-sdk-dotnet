### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: poolName
    description: The name of a pool of Dev Boxes.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: scheduleName
    description: The name of a schedule.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">poolName</code> or <code data-dev-comment-type="paramref">scheduleName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">poolName</code> or <code data-dev-comment-type="paramref">scheduleName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Developer.DevCenter.DevBoxesClient.GetScheduleByPool(System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.Developer.DevCenter.DevBoxesClient.GetScheduleByPool(System.String,System.String,Azure.RequestContext)
  name: GetScheduleByPool(String, String, RequestContext)
  fullName: Azure.Developer.DevCenter.DevBoxesClient.GetScheduleByPool(String, String, RequestContext)
  nameWithType: DevBoxesClient.GetScheduleByPool(String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response GetScheduleByPool (string poolName, string scheduleName, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetScheduleByPool : string * string * Azure.RequestContext -> Azure.Response

        override this.GetScheduleByPool : string * string * Azure.RequestContext -> Azure.Response
  - lang: vb
    values:
    - value: Public Overridable Function GetScheduleByPool (poolName As String, scheduleName As String, Optional context As RequestContext = Nothing) As Response
  monikers:
  - azure-dotnet-preview
  summary: Gets a schedule.
  remarks: >-
    <p>Below is the JSON schema for the response payload.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">Schedule</code>: 


    ```

    {
      name: string, # Optional. Display name for the Schedule
      type: "StopDevBox", # Optional. Supported type this scheduled task represents.
      frequency: "Daily", # Optional. The frequency of this scheduled task.
      time: string, # Optional. The target time to trigger the action. The format is HH:MM.
      timeZone: string, # Optional. The IANA timezone id at which the schedule should execute.
    }

    ```

    </p>
  examples: >-
    This sample shows how to call GetScheduleByPool with required parameters and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DevBoxesClient(endpoint, "<projectName>", credential);


    Response response = client.GetScheduleByPool("<poolName>", "<scheduleName>");


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("name").ToString());

    Console.WriteLine(result.GetProperty("type").ToString());

    Console.WriteLine(result.GetProperty("frequency").ToString());

    Console.WriteLine(result.GetProperty("time").ToString());

    Console.WriteLine(result.GetProperty("timeZone").ToString());

    ```
  metadata: {}
uid: Azure.Developer.DevCenter.DevBoxesClient.GetScheduleByPool*
commentId: Overload:Azure.Developer.DevCenter.DevBoxesClient.GetScheduleByPool
namespace: Azure.Developer.DevCenter
name: GetScheduleByPool
fullName: Azure.Developer.DevCenter.DevBoxesClient.GetScheduleByPool
nameWithType: DevBoxesClient.GetScheduleByPool
assembliesWithMoniker:
- value: Azure.Developer.DevCenter.dll
packagesWithMoniker:
- value: Azure.Developer.DevCenter v1.0.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Developer.DevCenter.DevBoxesClient.GetScheduleByPool
  api_location:
  - Azure.Developer.DevCenter.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Developer.DevCenter.DevBoxesClient.GetScheduleByPool
  - Azure::Developer::DevCenter::DevBoxesClient::GetScheduleByPool
  - GetScheduleByPool
  - DevBoxesClient.GetScheduleByPool
  - DevBoxesClient::GetScheduleByPool
  helpviewer_keywords:
  - DevBoxesClient.GetScheduleByPool method [.NET]
  - GetScheduleByPool method [.NET], class DevBoxesClient
  - DevBoxesClient.GetScheduleByPool(String, String, RequestContext) method [.NET]
  - GetScheduleByPool(String, String, RequestContext) method [.NET], class DevBoxesClient
  monikers:
  - azure-dotnet-preview
