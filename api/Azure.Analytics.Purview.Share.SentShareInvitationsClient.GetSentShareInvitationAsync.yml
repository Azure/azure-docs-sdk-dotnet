### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: sentShareName
    description: The name of the sent share.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: sentShareInvitationName
    description: Name of the sent invitation.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">sentShareName</code> or <code data-dev-comment-type="paramref">sentShareInvitationName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">sentShareName</code> or <code data-dev-comment-type="paramref">sentShareInvitationName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Analytics.Purview.Share.SentShareInvitationsClient.GetSentShareInvitationAsync(System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Share.SentShareInvitationsClient.GetSentShareInvitationAsync(System.String,System.String,Azure.RequestContext)
  name: GetSentShareInvitationAsync(String, String, RequestContext)
  fullName: Azure.Analytics.Purview.Share.SentShareInvitationsClient.GetSentShareInvitationAsync(String, String, RequestContext)
  nameWithType: SentShareInvitationsClient.GetSentShareInvitationAsync(String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> GetSentShareInvitationAsync (string sentShareName, string sentShareInvitationName, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetSentShareInvitationAsync : string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.GetSentShareInvitationAsync : string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function GetSentShareInvitationAsync (sentShareName As String, sentShareInvitationName As String, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: Get Invitation for a given share.
  remarks: >-
    <p>Get a sent share invitation</p><p>Below is the JSON schema for the response payload.</p><p>Response Body:</p><p>This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this. <details><summary>ApplicationInvitation</summary>Schema for <code data-dev-comment-type="c">ApplicationInvitation</code>: 


    ```

    {
                  invitationKind: Application, # Required. The types of invitations.
                  id: string, # Optional. The resource id of the resource.
                  name: string, # Optional. Name of the resource.
                  type: string, # Optional. Type of the resource.
                  properties: {
                    expirationDate: string (ISO 8601 Format), # Optional. The expiration date for the invitation
                    invitationId: string, # Optional. Id of the invitation
                    invitationStatus: "Pending" | "Accepted" | "Rejected", # Optional. Status of the invitation.
                    provisioningState: "Unknown" | "Succeeded" | "Creating" | "Deleting" | "Moving" | "Failed" | "SoftDeleting" | "SoftDeleted" | "SourceMoved" | "SourceDeleted" | "TargetMoved" | "TargetDeleted", # Optional. Provisioning status of the resource
                    respondedAt: string (ISO 8601 Format), # Optional. The time the recipient responded to the invitation.
                    senderEmail: string, # Optional. Email address of the sender.
                    senderName: string, # Optional. Name of the sender
                    senderTenantName: string, # Optional. Tenant name of the sender
                    sentAt: string (ISO 8601 Format), # Optional. Gets the time at which the invitation was sent.
                    shareKind: "InPlace", # Optional. Defines the supported types for share.
                    targetActiveDirectoryId: string, # Required. The target azure active directory id the invitation is sent to.
                    targetObjectId: string, # Required. The target object id in the azure active directory the invitation is sent to.
                  }, # Required. Properties of the application invitation type.
                }
    ```

     </details><details><summary>~+ 1 more JSON objects</summary><details><summary>UserInvitation</summary>Schema for <code data-dev-comment-type="c">UserInvitation</code>: 


    ```

    {
                  invitationKind: User, # Required. The types of invitations.
                  id: string, # Optional. The resource id of the resource.
                  name: string, # Optional. Name of the resource.
                  type: string, # Optional. Type of the resource.
                  properties: {
                    expirationDate: string (ISO 8601 Format), # Optional. The expiration date for the invitation
                    invitationId: string, # Optional. Id of the invitation
                    invitationStatus: "Pending" | "Accepted" | "Rejected", # Optional. Status of the invitation.
                    provisioningState: "Unknown" | "Succeeded" | "Creating" | "Deleting" | "Moving" | "Failed" | "SoftDeleting" | "SoftDeleted" | "SourceMoved" | "SourceDeleted" | "TargetMoved" | "TargetDeleted", # Optional. Provisioning status of the resource
                    respondedAt: string (ISO 8601 Format), # Optional. The time the recipient responded to the invitation.
                    senderEmail: string, # Optional. Email address of the sender.
                    senderName: string, # Optional. Name of the sender
                    senderTenantName: string, # Optional. Tenant name of the sender
                    sentAt: string (ISO 8601 Format), # Optional. Gets the time at which the invitation was sent.
                    shareKind: "InPlace", # Optional. Defines the supported types for share.
                    targetEmail: string, # Required. The receiver email for the invitation is being sent.
                  }, # Required. Properties of the user invitation type.
                }
    ```

     </details></details></p>
  examples: >-
    This sample shows how to call GetSentShareInvitationAsync with required parameters and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);


    Response response = await client.GetSentShareInvitationAsync("<sentShareName>", "<sentShareInvitationName>");


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("id").ToString());

    Console.WriteLine(result.GetProperty("name").ToString());

    Console.WriteLine(result.GetProperty("type").ToString());

    Console.WriteLine(result.GetProperty("invitationKind").ToString());

    ```
  metadata: {}
uid: Azure.Analytics.Purview.Share.SentShareInvitationsClient.GetSentShareInvitationAsync*
commentId: Overload:Azure.Analytics.Purview.Share.SentShareInvitationsClient.GetSentShareInvitationAsync
namespace: Azure.Analytics.Purview.Share
name: GetSentShareInvitationAsync
fullName: Azure.Analytics.Purview.Share.SentShareInvitationsClient.GetSentShareInvitationAsync
nameWithType: SentShareInvitationsClient.GetSentShareInvitationAsync
assembliesWithMoniker:
- value: Azure.Analytics.Purview.Share.dll
packagesWithMoniker:
- value: Azure.Analytics.Purview.Share v1.0.3-beta.20
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Purview.Share.SentShareInvitationsClient.GetSentShareInvitationAsync
  api_location:
  - Azure.Analytics.Purview.Share.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Purview.Share.SentShareInvitationsClient.GetSentShareInvitationAsync
  - Azure::Analytics::Purview::Share::SentShareInvitationsClient::GetSentShareInvitationAsync
  - GetSentShareInvitationAsync
  - SentShareInvitationsClient.GetSentShareInvitationAsync
  - SentShareInvitationsClient::GetSentShareInvitationAsync
  helpviewer_keywords:
  - SentShareInvitationsClient.GetSentShareInvitationAsync method [.NET]
  - GetSentShareInvitationAsync method [.NET], class SentShareInvitationsClient
  - SentShareInvitationsClient.GetSentShareInvitationAsync(String, String, RequestContext) method [.NET]
  - GetSentShareInvitationAsync(String, String, RequestContext) method [.NET], class SentShareInvitationsClient
  monikers:
  - azure-dotnet-preview
