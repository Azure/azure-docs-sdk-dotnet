### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>
    description: The response returned from the service.
  parameters:
  - namesWithMoniker:
    - value: topicName
    description: Topic Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventSubscriptionName
    description: Event Subscription Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: maxEvents
    description: Max Events count to be received. Minimum value is 1, while maximum value is 100 events. If not specified, the default value is 1.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: maxWaitTime
    description: Max wait time value for receive operation in Seconds. It is the time in seconds that the server approximately waits for the availability of an event and responds to the request. If an event is available, the broker responds immediately to the client. Minimum value is 10 seconds, while maximum value is 120 seconds. If not specified, the default value is 60 seconds.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">topicName</code> or <code data-dev-comment-type="paramref">eventSubscriptionName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">topicName</code> or <code data-dev-comment-type="paramref">eventSubscriptionName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReceiveCloudEvents(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.RequestContext)
  commentId: M:Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReceiveCloudEvents(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.RequestContext)
  name: ReceiveCloudEvents(String, String, Nullable<Int32>, Nullable<Int32>, RequestContext)
  fullName: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReceiveCloudEvents(String, String, Nullable<Int32>, Nullable<Int32>, RequestContext)
  nameWithType: EventGridClient.ReceiveCloudEvents(String, String, Nullable<Int32>, Nullable<Int32>, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response ReceiveCloudEvents (string topicName, string eventSubscriptionName, int? maxEvents, int? maxWaitTime, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member ReceiveCloudEvents : string * string * Nullable<int> * Nullable<int> * Azure.RequestContext -> Azure.Response

        override this.ReceiveCloudEvents : string * string * Nullable<int> * Nullable<int> * Azure.RequestContext -> Azure.Response
  - lang: vb
    values:
    - value: Public Overridable Function ReceiveCloudEvents (topicName As String, eventSubscriptionName As String, maxEvents As Nullable(Of Integer), maxWaitTime As Nullable(Of Integer), Optional context As RequestContext = Nothing) As Response
  monikers:
  - azure-dotnet-preview
  summary: >-
    [Protocol Method] Receive Batch of Cloud Events from the Event Subscription.

    <ul><li>

    This <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</a> allows explicit creation of the request and processing of the response for advanced scenarios.

    </li></ul>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.EventGrid.Namespaces.ReceiveResult?alt=Azure.Messaging.EventGrid.Namespaces.ReceiveResult&text=ReceiveResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: topicName
    description: Topic Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventSubscriptionName
    description: Event Subscription Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: maxEvents
    description: Max Events count to be received. Minimum value is 1, while maximum value is 100 events. If not specified, the default value is 1.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: maxWaitTime
    description: Max wait time value for receive operation in Seconds. It is the time in seconds that the server approximately waits for the availability of an event and responds to the request. If an event is available, the broker responds immediately to the client. Minimum value is 10 seconds, while maximum value is 120 seconds. If not specified, the default value is 60 seconds.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.TimeSpan?alt=System.TimeSpan&text=TimeSpan" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">topicName</code> or <code data-dev-comment-type="paramref">eventSubscriptionName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">topicName</code> or <code data-dev-comment-type="paramref">eventSubscriptionName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReceiveCloudEvents(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReceiveCloudEvents(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  name: ReceiveCloudEvents(String, String, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken)
  fullName: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReceiveCloudEvents(String, String, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken)
  nameWithType: EventGridClient.ReceiveCloudEvents(String, String, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response<Azure.Messaging.EventGrid.Namespaces.ReceiveResult> ReceiveCloudEvents (string topicName, string eventSubscriptionName, int? maxEvents = default, TimeSpan? maxWaitTime = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member ReceiveCloudEvents : string * string * Nullable<int> * Nullable<TimeSpan> * System.Threading.CancellationToken -> Azure.Response<Azure.Messaging.EventGrid.Namespaces.ReceiveResult>

        override this.ReceiveCloudEvents : string * string * Nullable<int> * Nullable<TimeSpan> * System.Threading.CancellationToken -> Azure.Response<Azure.Messaging.EventGrid.Namespaces.ReceiveResult>
  - lang: vb
    values:
    - value: Public Overridable Function ReceiveCloudEvents (topicName As String, eventSubscriptionName As String, Optional maxEvents As Nullable(Of Integer) = Nothing, Optional maxWaitTime As Nullable(Of TimeSpan) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReceiveResult)
  monikers:
  - azure-dotnet-preview
  summary: Receive Batch of Cloud Events from the Event Subscription.
  metadata: {}
uid: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReceiveCloudEvents*
commentId: Overload:Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReceiveCloudEvents
namespace: Azure.Messaging.EventGrid.Namespaces
name: ReceiveCloudEvents
fullName: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReceiveCloudEvents
nameWithType: EventGridClient.ReceiveCloudEvents
assembliesWithMoniker:
- value: Azure.Messaging.EventGrid.dll
packagesWithMoniker:
- value: Azure.Messaging.EventGrid v4.18.0-beta.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReceiveCloudEvents
  api_location:
  - Azure.Messaging.EventGrid.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReceiveCloudEvents
  - Azure::Messaging::EventGrid::Namespaces::EventGridClient::ReceiveCloudEvents
  - ReceiveCloudEvents
  - EventGridClient.ReceiveCloudEvents
  - EventGridClient::ReceiveCloudEvents
  helpviewer_keywords:
  - EventGridClient.ReceiveCloudEvents method [.NET]
  - ReceiveCloudEvents method [.NET], class EventGridClient
  - EventGridClient.ReceiveCloudEvents(String, String, Nullable<Int32>, Nullable<Int32>, RequestContext) method [.NET]
  - ReceiveCloudEvents(String, String, Nullable<Int32>, Nullable<Int32>, RequestContext) method [.NET], class EventGridClient
  - EventGridClient.ReceiveCloudEvents(String, String, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) method [.NET]
  - ReceiveCloudEvents(String, String, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) method [.NET], class EventGridClient
  monikers:
  - azure-dotnet-preview
