### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Core.TokenCredential?alt=Azure.Core.TokenCredential&text=TokenCredential" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: getToken
    description: A delegate that returns an <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref>.
    type: <xref href="System.Func`3?alt=System.Func&text=Func" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Core.TokenRequestContext?alt=Azure.Core.TokenRequestContext&text=TokenRequestContext" data-throw-if-not-resolved="True"/>,<xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>,<xref href="Azure.Core.AccessToken?alt=Azure.Core.AccessToken&text=AccessToken" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Azure.Core.DelegatedTokenCredential.Create(System.Func{Azure.Core.TokenRequestContext,System.Threading.CancellationToken,Azure.Core.AccessToken})
  commentId: M:Azure.Core.DelegatedTokenCredential.Create(System.Func{Azure.Core.TokenRequestContext,System.Threading.CancellationToken,Azure.Core.AccessToken})
  name: Create(Func<TokenRequestContext,CancellationToken,AccessToken>)
  fullName: Azure.Core.DelegatedTokenCredential.Create(Func<TokenRequestContext,CancellationToken,AccessToken>)
  nameWithType: DelegatedTokenCredential.Create(Func<TokenRequestContext,CancellationToken,AccessToken>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Azure.Core.TokenCredential Create (Func<Azure.Core.TokenRequestContext,System.Threading.CancellationToken,Azure.Core.AccessToken> getToken);
  - lang: fsharp
    values:
    - value: 'static member Create : Func<Azure.Core.TokenRequestContext, System.Threading.CancellationToken, Azure.Core.AccessToken> -> Azure.Core.TokenCredential'
  - lang: vb
    values:
    - value: Public Shared Function Create (getToken As Func(Of TokenRequestContext, CancellationToken, AccessToken)) As TokenCredential
  monikers:
  - azure-dotnet
  summary: Creates a static <xref data-throw-if-not-resolved="true" uid="Azure.Core.TokenCredential"></xref> that accepts delegates which will produce an <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref>.
  remarks: <p>Typically, the <xref data-throw-if-not-resolved="true" uid="Azure.Core.TokenCredential"></xref> created by this method is for use when you have already obtained an <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref> from some other source and need a <xref data-throw-if-not-resolved="true" uid="Azure.Core.TokenCredential"></xref> that will simply return that token. Because the static token can expire, the delegates offer a mechanism to handle <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref> renewal.</p>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Core.TokenCredential?alt=Azure.Core.TokenCredential&text=TokenCredential" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: getToken
    description: A delegate that returns an <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref>.
    type: <xref href="System.Func`3?alt=System.Func&text=Func" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Core.TokenRequestContext?alt=Azure.Core.TokenRequestContext&text=TokenRequestContext" data-throw-if-not-resolved="True"/>,<xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>,<xref href="Azure.Core.AccessToken?alt=Azure.Core.AccessToken&text=AccessToken" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: getTokenAsync
    description: A delegate that returns a <xref data-throw-if-not-resolved="true" uid="System.Threading.Tasks.ValueTask"></xref> of type <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref>.
    type: <xref href="System.Func`3?alt=System.Func&text=Func" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Core.TokenRequestContext?alt=Azure.Core.TokenRequestContext&text=TokenRequestContext" data-throw-if-not-resolved="True"/>,<xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>,<xref href="System.Threading.Tasks.ValueTask`1?alt=System.Threading.Tasks.ValueTask&text=ValueTask" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Core.AccessToken?alt=Azure.Core.AccessToken&text=AccessToken" data-throw-if-not-resolved="True"/>&gt;&gt;
  type: method
  uid: Azure.Core.DelegatedTokenCredential.Create(System.Func{Azure.Core.TokenRequestContext,System.Threading.CancellationToken,Azure.Core.AccessToken},System.Func{Azure.Core.TokenRequestContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask{Azure.Core.AccessToken}})
  commentId: M:Azure.Core.DelegatedTokenCredential.Create(System.Func{Azure.Core.TokenRequestContext,System.Threading.CancellationToken,Azure.Core.AccessToken},System.Func{Azure.Core.TokenRequestContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask{Azure.Core.AccessToken}})
  name: Create(Func<TokenRequestContext,CancellationToken,AccessToken>, Func<TokenRequestContext,CancellationToken,ValueTask<AccessToken>>)
  fullName: Azure.Core.DelegatedTokenCredential.Create(Func<TokenRequestContext,CancellationToken,AccessToken>, Func<TokenRequestContext,CancellationToken,ValueTask<AccessToken>>)
  nameWithType: DelegatedTokenCredential.Create(Func<TokenRequestContext,CancellationToken,AccessToken>, Func<TokenRequestContext,CancellationToken,ValueTask<AccessToken>>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Azure.Core.TokenCredential Create (Func<Azure.Core.TokenRequestContext,System.Threading.CancellationToken,Azure.Core.AccessToken> getToken, Func<Azure.Core.TokenRequestContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask<Azure.Core.AccessToken>> getTokenAsync);
  - lang: fsharp
    values:
    - value: 'static member Create : Func<Azure.Core.TokenRequestContext, System.Threading.CancellationToken, Azure.Core.AccessToken> * Func<Azure.Core.TokenRequestContext, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<Azure.Core.AccessToken>> -> Azure.Core.TokenCredential'
  - lang: vb
    values:
    - value: Public Shared Function Create (getToken As Func(Of TokenRequestContext, CancellationToken, AccessToken), getTokenAsync As Func(Of TokenRequestContext, CancellationToken, ValueTask(Of AccessToken))) As TokenCredential
  monikers:
  - azure-dotnet
  summary: Creates a static <xref data-throw-if-not-resolved="true" uid="Azure.Core.TokenCredential"></xref> that accepts delegates which will produce an <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref>.
  remarks: <p>Typically, the <xref data-throw-if-not-resolved="true" uid="Azure.Core.TokenCredential"></xref> created by this method is for use when you have already obtained an <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref> from some other source and need a <xref data-throw-if-not-resolved="true" uid="Azure.Core.TokenCredential"></xref> that will simply return that token. Because the static token can expire, the delegates offer a mechanism to handle <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref> renewal.</p>
  metadata: {}
uid: Azure.Core.DelegatedTokenCredential.Create*
commentId: Overload:Azure.Core.DelegatedTokenCredential.Create
namespace: Azure.Core
name: Create
fullName: Azure.Core.DelegatedTokenCredential.Create
nameWithType: DelegatedTokenCredential.Create
assembliesWithMoniker:
- value: Azure.Core.dll
packagesWithMoniker:
- value: Azure.Core v1.34.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.Core.DelegatedTokenCredential.Create
  api_location:
  - Azure.Core.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Core.DelegatedTokenCredential.Create
  - Azure::Core::DelegatedTokenCredential::Create
  - Create
  - DelegatedTokenCredential.Create
  - DelegatedTokenCredential::Create
  helpviewer_keywords:
  - DelegatedTokenCredential.Create method [.NET]
  - Create method [.NET], class DelegatedTokenCredential
  - DelegatedTokenCredential.Create(Func<TokenRequestContext,CancellationToken,AccessToken>) method [.NET]
  - Create(Func<TokenRequestContext,CancellationToken,AccessToken>) method [.NET], class DelegatedTokenCredential
  - DelegatedTokenCredential.Create(Func<TokenRequestContext,CancellationToken,AccessToken>, Func<TokenRequestContext,CancellationToken,ValueTask<AccessToken>>) method [.NET]
  - Create(Func<TokenRequestContext,CancellationToken,AccessToken>, Func<TokenRequestContext,CancellationToken,ValueTask<AccessToken>>) method [.NET], class DelegatedTokenCredential
  monikers:
  - azure-dotnet
