### YamlMime:NetType
type: class
inheritancesWithMoniker:
- values:
  - <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
constructors:
- uid: WrappedMessage.#ctor
  monikers:
  - azure-dotnet
properties:
- uid: WrappedMessage.Value
  monikers:
  - azure-dotnet
uid: WrappedMessage
commentId: T:WrappedMessage
name: WrappedMessage
fullName: WrappedMessage
nameWithType: WrappedMessage
assembliesWithMoniker:
- value: Microsoft.ServiceFabric.Services.Remoting.dll
packagesWithMoniker:
- value: Microsoft.ServiceFabric.Services.Remoting v6.1.1583
attributesWithMoniker:
- value: System.Runtime.Serialization.DataContractAttribute
syntaxWithMoniker:
- lang: csharp
  values:
  - value: >-
      [System.Runtime.Serialization.DataContract(Name="msgBodywrapped", Namespace="urn:ServiceFabric.Communication")]

      public abstract class WrappedMessage
- lang: fsharp
  values:
  - value: >-
      [<System.Runtime.Serialization.DataContract(Name="msgBodywrapped", Namespace="urn:ServiceFabric.Communication")>]

      type WrappedMessage = class
- lang: vb
  values:
  - value: Public MustInherit Class WrappedMessage
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
summary: This is a marker class indicating the remoting request / response is wrapped or not.
metadata:
  api_name:
  - WrappedMessage
  api_location:
  - Microsoft.ServiceFabric.Services.Remoting.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - WrappedMessage
  helpviewer_keywords:
  - WrappedMessage class [.NET]
  monikers:
  - azure-dotnet
