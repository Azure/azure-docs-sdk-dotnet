### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Operation?alt=Azure.Operation&text=Operation" data-throw-if-not-resolved="True"/>
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Operation"></xref> representing an asynchronous operation on the service.
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Completed"></xref> if the method should wait to return until the long-running operation has completed on the service; <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Started"></xref> if it should return after starting the operation. For more information on long-running operations, please see <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</a>.
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: sentShareName
    description: The name of the sent share.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: assetName
    description: The name of the asset.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">sentShareName</code> or <code data-dev-comment-type="paramref">assetName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">sentShareName</code> or <code data-dev-comment-type="paramref">assetName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Analytics.Purview.Share.AssetsClient.Delete(Azure.WaitUntil,System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Share.AssetsClient.Delete(Azure.WaitUntil,System.String,System.String,Azure.RequestContext)
  name: Delete(WaitUntil, String, String, RequestContext)
  fullName: Azure.Analytics.Purview.Share.AssetsClient.Delete(WaitUntil, String, String, RequestContext)
  nameWithType: AssetsClient.Delete(WaitUntil, String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Operation Delete (Azure.WaitUntil waitUntil, string sentShareName, string assetName, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member Delete : Azure.WaitUntil * string * string * Azure.RequestContext -> Azure.Operation

        override this.Delete : Azure.WaitUntil * string * string * Azure.RequestContext -> Azure.Operation
  - lang: vb
    values:
    - value: Public Overridable Function Delete (waitUntil As WaitUntil, sentShareName As String, assetName As String, Optional context As RequestContext = Nothing) As Operation
  monikers:
  - azure-dotnet-preview
  summary: Delete asset in a sentShare.
  remarks: Delete an asset on a sent share.
  examples: >-
    This sample shows how to call Delete with required parameters.


    ```

    var credential = new DefaultAzureCredential();

    var client = new AssetsClient("<https://my-service.azure.com>", credential);


    var operation = client.Delete(WaitUntil.Completed, "<sentShareName>", "<assetName>");


    var response = operation.WaitForCompletionResponse();

    Console.WriteLine(response.Status)

    ```
  metadata: {}
uid: Azure.Analytics.Purview.Share.AssetsClient.Delete*
commentId: Overload:Azure.Analytics.Purview.Share.AssetsClient.Delete
namespace: Azure.Analytics.Purview.Share
name: Delete
fullName: Azure.Analytics.Purview.Share.AssetsClient.Delete
nameWithType: AssetsClient.Delete
assembliesWithMoniker:
- value: Azure.Analytics.Purview.Share.dll
packagesWithMoniker:
- value: Azure.Analytics.Purview.Share v1.0.3-beta.20
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Purview.Share.AssetsClient.Delete
  api_location:
  - Azure.Analytics.Purview.Share.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Purview.Share.AssetsClient.Delete
  - Azure::Analytics::Purview::Share::AssetsClient::Delete
  - Delete
  - AssetsClient.Delete
  - AssetsClient::Delete
  helpviewer_keywords:
  - AssetsClient.Delete method [.NET]
  - Delete method [.NET], class AssetsClient
  - AssetsClient.Delete(WaitUntil, String, String, RequestContext) method [.NET]
  - Delete(WaitUntil, String, String, RequestContext) method [.NET], class AssetsClient
  monikers:
  - azure-dotnet-preview
