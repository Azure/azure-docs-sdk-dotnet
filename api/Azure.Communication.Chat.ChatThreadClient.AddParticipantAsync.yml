### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: participant
    description: Participant to add to a chat thread.
    type: <xref href="Azure.Communication.Chat.ChatParticipant?alt=Azure.Communication.Chat.ChatParticipant&text=ChatParticipant" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: The server returned an error. See <xref data-throw-if-not-resolved="true" uid="System.Exception.Message"></xref> for details returned from the server.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Communication.Chat.ChatThreadClient.AddParticipantAsync(Azure.Communication.Chat.ChatParticipant,System.Threading.CancellationToken)
  commentId: M:Azure.Communication.Chat.ChatThreadClient.AddParticipantAsync(Azure.Communication.Chat.ChatParticipant,System.Threading.CancellationToken)
  name: AddParticipantAsync(ChatParticipant, CancellationToken)
  fullName: Azure.Communication.Chat.ChatThreadClient.AddParticipantAsync(ChatParticipant, CancellationToken)
  nameWithType: ChatThreadClient.AddParticipantAsync(ChatParticipant, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> AddParticipantAsync (Azure.Communication.Chat.ChatParticipant participant, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member AddParticipantAsync : Azure.Communication.Chat.ChatParticipant * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>

        override this.AddParticipantAsync : Azure.Communication.Chat.ChatParticipant * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function AddParticipantAsync (participant As ChatParticipant, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  summary: Adds a participant to a thread asynchronously. If the participant already exist, no change occurs.
  metadata: {}
uid: Azure.Communication.Chat.ChatThreadClient.AddParticipantAsync*
commentId: Overload:Azure.Communication.Chat.ChatThreadClient.AddParticipantAsync
namespace: Azure.Communication.Chat
name: AddParticipantAsync
fullName: Azure.Communication.Chat.ChatThreadClient.AddParticipantAsync
nameWithType: ChatThreadClient.AddParticipantAsync
assembliesWithMoniker:
- value: Azure.Communication.Chat.dll
packagesWithMoniker:
- value: Azure.Communication.Chat v1.1.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.Communication.Chat.ChatThreadClient.AddParticipantAsync
  api_location:
  - Azure.Communication.Chat.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Communication.Chat.ChatThreadClient.AddParticipantAsync
  - Azure::Communication::Chat::ChatThreadClient::AddParticipantAsync
  - AddParticipantAsync
  - ChatThreadClient.AddParticipantAsync
  - ChatThreadClient::AddParticipantAsync
  helpviewer_keywords:
  - ChatThreadClient.AddParticipantAsync method [.NET]
  - AddParticipantAsync method [.NET], class ChatThreadClient
  - ChatThreadClient.AddParticipantAsync(ChatParticipant, CancellationToken) method [.NET]
  - AddParticipantAsync(ChatParticipant, CancellationToken) method [.NET], class ChatThreadClient
  monikers:
  - azure-dotnet
