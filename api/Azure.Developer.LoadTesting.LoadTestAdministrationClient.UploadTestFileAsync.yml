### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
      monikers:
      - azure-dotnet-preview
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: testId
    description: Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or hyphen characters.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fileName
    description: 'Unique name for test file with file extension like : App.jmx.'
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request. Details of the request body schema are in the Remarks section below.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fileType
    description: 'File type. Allowed values: "JMX_FILE" | "USER_PROPERTIES" | "ADDITIONAL_ARTIFACTS".'
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">testId</code>, <code data-dev-comment-type="paramref">fileName</code> or <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">testId</code> or <code data-dev-comment-type="paramref">fileName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Developer.LoadTesting.LoadTestAdministrationClient.UploadTestFileAsync(System.String,System.String,Azure.Core.RequestContent,System.String,Azure.RequestContext)
  commentId: M:Azure.Developer.LoadTesting.LoadTestAdministrationClient.UploadTestFileAsync(System.String,System.String,Azure.Core.RequestContent,System.String,Azure.RequestContext)
  name: UploadTestFileAsync(String, String, RequestContent, String, RequestContext)
  fullName: Azure.Developer.LoadTesting.LoadTestAdministrationClient.UploadTestFileAsync(String, String, RequestContent, String, RequestContext)
  nameWithType: LoadTestAdministrationClient.UploadTestFileAsync(String, String, RequestContent, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> UploadTestFileAsync (string testId, string fileName, Azure.Core.RequestContent content, string fileType = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member UploadTestFileAsync : string * string * Azure.Core.RequestContent * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.UploadTestFileAsync : string * string * Azure.Core.RequestContent * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function UploadTestFileAsync (testId As String, fileName As String, content As RequestContent, Optional fileType As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: Upload input file for a given test name. File size can't be more than 50 MB. Existing file with same name for the given test will be overwritten. File should be provided in the request body as application/octet-stream.
  remarks: >-
    <p>Below is the JSON schema for the response payload.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">FileInfo</code>: 


    ```

    {
      url: string, # Optional. File URL.
      fileName: string, # Optional. Name of the file.
      fileType: "JMX_FILE" | "USER_PROPERTIES" | "ADDITIONAL_ARTIFACTS", # Optional. File type
      expireDateTime: string (ISO 8601 Format), # Optional. Expiry time of the file (ISO 8601 literal format)
      validationStatus: "NOT_VALIDATED" | "VALIDATION_SUCCESS" | "VALIDATION_FAILURE" | "VALIDATION_INITIATED" | "VALIDATION_NOT_REQUIRED", # Optional. Validation status of the file
      validationFailureDetails: string, # Optional. Validation failure error details
    }

    ```

    </p>
  examples: >-
    This sample shows how to call UploadTestFileAsync with required parameters and request content, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new LoadTestAdministrationClient(endpoint, credential);


    var data = File.OpenRead("<filePath>");


    Response response = await client.UploadTestFileAsync("<testId>", "<fileName>", RequestContent.Create(data));


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.ToString());

    ```

    This sample shows how to call UploadTestFileAsync with all parameters and request content, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new LoadTestAdministrationClient(endpoint, credential);


    var data = File.OpenRead("<filePath>");


    Response response = await client.UploadTestFileAsync("<testId>", "<fileName>", RequestContent.Create(data), "<fileType>");


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("url").ToString());

    Console.WriteLine(result.GetProperty("fileName").ToString());

    Console.WriteLine(result.GetProperty("fileType").ToString());

    Console.WriteLine(result.GetProperty("expireDateTime").ToString());

    Console.WriteLine(result.GetProperty("validationStatus").ToString());

    Console.WriteLine(result.GetProperty("validationFailureDetails").ToString());

    ```
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Developer.LoadTesting.FileUploadResultOperation?alt=Azure.Developer.LoadTesting.FileUploadResultOperation&text=FileUploadResultOperation" data-throw-if-not-resolved="True"/>&gt;
      monikers:
      - azure-dotnet
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Developer.LoadTesting.FileUploadOperation?alt=Azure.Developer.LoadTesting.FileUploadOperation&text=FileUploadOperation" data-throw-if-not-resolved="True"/>&gt;
      monikers:
      - azure-dotnet-preview
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: Defines how to use the LRO, if passed WaitUntil.Completed then waits for complete file validation
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: testId
    description: Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or hyphen characters.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fileName
    description: 'Unique name for test file with file extension like : App.jmx.'
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request. Details of the request body schema are in the Remarks section below.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: timeSpan
    description: pollingInterval for poller class, default value or null value is treated as 5 secs
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.TimeSpan?alt=System.TimeSpan&text=TimeSpan" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: fileType
    description: 'File type. Allowed values: "JMX_FILE" | "USER_PROPERTIES" | "ADDITIONAL_ARTIFACTS".'
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">testId</code>, <code data-dev-comment-type="paramref">fileName</code> or <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">testId</code> or <code data-dev-comment-type="paramref">fileName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Developer.LoadTesting.LoadTestAdministrationClient.UploadTestFileAsync(Azure.WaitUntil,System.String,System.String,Azure.Core.RequestContent,System.Nullable{System.TimeSpan},System.String,Azure.RequestContext)
  commentId: M:Azure.Developer.LoadTesting.LoadTestAdministrationClient.UploadTestFileAsync(Azure.WaitUntil,System.String,System.String,Azure.Core.RequestContent,System.Nullable{System.TimeSpan},System.String,Azure.RequestContext)
  name: UploadTestFileAsync(WaitUntil, String, String, RequestContent, Nullable<TimeSpan>, String, RequestContext)
  fullName: Azure.Developer.LoadTesting.LoadTestAdministrationClient.UploadTestFileAsync(WaitUntil, String, String, RequestContent, Nullable<TimeSpan>, String, RequestContext)
  nameWithType: LoadTestAdministrationClient.UploadTestFileAsync(WaitUntil, String, String, RequestContent, Nullable<TimeSpan>, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Developer.LoadTesting.FileUploadResultOperation> UploadTestFileAsync (Azure.WaitUntil waitUntil, string testId, string fileName, Azure.Core.RequestContent content, TimeSpan? timeSpan = default, string fileType = default, Azure.RequestContext context = default);
      monikers:
      - azure-dotnet
    - value: public virtual System.Threading.Tasks.Task<Azure.Developer.LoadTesting.FileUploadOperation> UploadTestFileAsync (Azure.WaitUntil waitUntil, string testId, string fileName, Azure.Core.RequestContent content, TimeSpan? timeSpan = default, string fileType = default, Azure.RequestContext context = default);
      monikers:
      - azure-dotnet-preview
  - lang: fsharp
    values:
    - value: >-
        abstract member UploadTestFileAsync : Azure.WaitUntil * string * string * Azure.Core.RequestContent * Nullable<TimeSpan> * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Developer.LoadTesting.FileUploadResultOperation>

        override this.UploadTestFileAsync : Azure.WaitUntil * string * string * Azure.Core.RequestContent * Nullable<TimeSpan> * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Developer.LoadTesting.FileUploadResultOperation>
      monikers:
      - azure-dotnet
    - value: >-
        abstract member UploadTestFileAsync : Azure.WaitUntil * string * string * Azure.Core.RequestContent * Nullable<TimeSpan> * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Developer.LoadTesting.FileUploadOperation>

        override this.UploadTestFileAsync : Azure.WaitUntil * string * string * Azure.Core.RequestContent * Nullable<TimeSpan> * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Developer.LoadTesting.FileUploadOperation>
      monikers:
      - azure-dotnet-preview
  - lang: vb
    values:
    - value: Public Overridable Function UploadTestFileAsync (waitUntil As WaitUntil, testId As String, fileName As String, content As RequestContent, Optional timeSpan As Nullable(Of TimeSpan) = Nothing, Optional fileType As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of FileUploadResultOperation)
      monikers:
      - azure-dotnet
    - value: Public Overridable Function UploadTestFileAsync (waitUntil As WaitUntil, testId As String, fileName As String, content As RequestContent, Optional timeSpan As Nullable(Of TimeSpan) = Nothing, Optional fileType As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of FileUploadOperation)
      monikers:
      - azure-dotnet-preview
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Upload input file for a given test name. File size can't be more than 50 MB. Existing file with same name for the given test will be overwritten. File should be provided in the request body as application/octet-stream.
  metadata: {}
uid: Azure.Developer.LoadTesting.LoadTestAdministrationClient.UploadTestFileAsync*
commentId: Overload:Azure.Developer.LoadTesting.LoadTestAdministrationClient.UploadTestFileAsync
namespace: Azure.Developer.LoadTesting
name: UploadTestFileAsync
fullName: Azure.Developer.LoadTesting.LoadTestAdministrationClient.UploadTestFileAsync
nameWithType: LoadTestAdministrationClient.UploadTestFileAsync
assembliesWithMoniker:
- value: Azure.Developer.LoadTesting.dll
packagesWithMoniker:
- value: Azure.Developer.LoadTesting v1.0.0-beta.2
  monikers:
  - azure-dotnet-preview
- value: Azure.Developer.LoadTesting v1.0.1
  monikers:
  - azure-dotnet
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
- azure-dotnet
metadata:
  api_name:
  - Azure.Developer.LoadTesting.LoadTestAdministrationClient.UploadTestFileAsync
  api_location:
  - Azure.Developer.LoadTesting.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Developer.LoadTesting.LoadTestAdministrationClient.UploadTestFileAsync
  - Azure::Developer::LoadTesting::LoadTestAdministrationClient::UploadTestFileAsync
  - UploadTestFileAsync
  - LoadTestAdministrationClient.UploadTestFileAsync
  - LoadTestAdministrationClient::UploadTestFileAsync
  helpviewer_keywords:
  - LoadTestAdministrationClient.UploadTestFileAsync method [.NET]
  - UploadTestFileAsync method [.NET], class LoadTestAdministrationClient
  - LoadTestAdministrationClient.UploadTestFileAsync(String, String, RequestContent, String, RequestContext) method [.NET]
  - UploadTestFileAsync(String, String, RequestContent, String, RequestContext) method [.NET], class LoadTestAdministrationClient
  - LoadTestAdministrationClient.UploadTestFileAsync(WaitUntil, String, String, RequestContent, Nullable<TimeSpan>, String, RequestContext) method [.NET]
  - UploadTestFileAsync(WaitUntil, String, String, RequestContent, Nullable<TimeSpan>, String, RequestContext) method [.NET], class LoadTestAdministrationClient
  monikers:
  - azure-dotnet-preview
  - azure-dotnet
