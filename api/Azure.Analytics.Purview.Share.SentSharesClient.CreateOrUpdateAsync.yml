### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: sentShareName
    description: The name of the sent share.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request. Details of the request body schema are in the Remarks section below.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">sentShareName</code> or <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">sentShareName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Analytics.Purview.Share.SentSharesClient.CreateOrUpdateAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Share.SentSharesClient.CreateOrUpdateAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)
  name: CreateOrUpdateAsync(String, RequestContent, RequestContext)
  fullName: Azure.Analytics.Purview.Share.SentSharesClient.CreateOrUpdateAsync(String, RequestContent, RequestContext)
  nameWithType: SentSharesClient.CreateOrUpdateAsync(String, RequestContent, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> CreateOrUpdateAsync (string sentShareName, Azure.Core.RequestContent content, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member CreateOrUpdateAsync : string * Azure.Core.RequestContent * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.CreateOrUpdateAsync : string * Azure.Core.RequestContent * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function CreateOrUpdateAsync (sentShareName As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: Create a sent share in the given Purview account.
  remarks: >-
    <p>Create a sent share</p><p>Below is the JSON schema for the request and response payloads.</p><p>Request Body:</p><p><details><summary>InPlaceSentShare</summary>Schema for <code data-dev-comment-type="c">InPlaceSentShare</code>: 


    ```

    {
                  shareKind: InPlace, # Required. Defines the supported types for share.
                  id: string, # Optional. The resource id of the resource.
                  name: string, # Optional. Name of the resource.
                  type: string, # Optional. Type of the resource.
                  properties: {
                    collection: {
                      referenceName: string, # Required. Gets or sets the reference name.
                      type: string, # Required. Gets or sets the reference type property.
                    }, # Required. Reference to a Collection.
                    createdAt: string (ISO 8601 Format), # Optional. Time at which the share was created.
                    description: string, # Optional. Share description.
                    provisioningState: "Unknown" | "Succeeded" | "Creating" | "Deleting" | "Moving" | "Failed" | "SoftDeleting" | "SoftDeleted" | "SourceMoved" | "SourceDeleted" | "TargetMoved" | "TargetDeleted", # Optional. Provisioning status of the resource
                    senderEmail: string, # Optional. Email of the sender who created the sent share.
                    senderName: string, # Optional. Name of the sender who created the sent share.
                    senderTenantName: string, # Optional. Tenant name of the sender who created the sent share.
                  }, # Required. Properties of in place sent share.
                }
    ```

     </details></p><p>Response Body:</p><p><details><summary>InPlaceSentShare</summary>Schema for <code data-dev-comment-type="c">InPlaceSentShare</code>: 


    ```

    {
                  shareKind: InPlace, # Required. Defines the supported types for share.
                  id: string, # Optional. The resource id of the resource.
                  name: string, # Optional. Name of the resource.
                  type: string, # Optional. Type of the resource.
                  properties: {
                    collection: {
                      referenceName: string, # Required. Gets or sets the reference name.
                      type: string, # Required. Gets or sets the reference type property.
                    }, # Required. Reference to a Collection.
                    createdAt: string (ISO 8601 Format), # Optional. Time at which the share was created.
                    description: string, # Optional. Share description.
                    provisioningState: "Unknown" | "Succeeded" | "Creating" | "Deleting" | "Moving" | "Failed" | "SoftDeleting" | "SoftDeleted" | "SourceMoved" | "SourceDeleted" | "TargetMoved" | "TargetDeleted", # Optional. Provisioning status of the resource
                    senderEmail: string, # Optional. Email of the sender who created the sent share.
                    senderName: string, # Optional. Name of the sender who created the sent share.
                    senderTenantName: string, # Optional. Tenant name of the sender who created the sent share.
                  }, # Required. Properties of in place sent share.
                }
    ```

     </details></p>
  examples: >-
    This sample shows how to call CreateOrUpdateAsync with required parameters and request content, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var client = new SentSharesClient("<https://my-service.azure.com>", credential);


    var data = new {
        shareKind = "InPlace",
        properties = new {
            collection = new {
                referenceName = "<CollectionReferenceName>",
                type = "<CollectionType>",
            },
        },
    };


    Response response = await client.CreateOrUpdateAsync("<sentShareName>", RequestContent.Create(data));


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.ToString());

    ```

    This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var client = new SentSharesClient("<https://my-service.azure.com>", credential);


    var data = new {
        shareKind = "InPlace",
        properties = new {
            collection = new {
                referenceName = "<CollectionReferenceName>",
                type = "<CollectionType>",
            },
            description = "<InPlaceSentSharePropertiesDescription>",
        },
    };


    Response response = await client.CreateOrUpdateAsync("<sentShareName>", RequestContent.Create(data));


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("id").ToString());

    Console.WriteLine(result.GetProperty("name").ToString());

    Console.WriteLine(result.GetProperty("type").ToString());

    Console.WriteLine(result.GetProperty("shareKind").ToString());

    ```
  metadata: {}
uid: Azure.Analytics.Purview.Share.SentSharesClient.CreateOrUpdateAsync*
commentId: Overload:Azure.Analytics.Purview.Share.SentSharesClient.CreateOrUpdateAsync
namespace: Azure.Analytics.Purview.Share
name: CreateOrUpdateAsync
fullName: Azure.Analytics.Purview.Share.SentSharesClient.CreateOrUpdateAsync
nameWithType: SentSharesClient.CreateOrUpdateAsync
assembliesWithMoniker:
- value: Azure.Analytics.Purview.Share.dll
packagesWithMoniker:
- value: Azure.Analytics.Purview.Share v1.0.3-beta.20
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Purview.Share.SentSharesClient.CreateOrUpdateAsync
  api_location:
  - Azure.Analytics.Purview.Share.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Purview.Share.SentSharesClient.CreateOrUpdateAsync
  - Azure::Analytics::Purview::Share::SentSharesClient::CreateOrUpdateAsync
  - CreateOrUpdateAsync
  - SentSharesClient.CreateOrUpdateAsync
  - SentSharesClient::CreateOrUpdateAsync
  helpviewer_keywords:
  - SentSharesClient.CreateOrUpdateAsync method [.NET]
  - CreateOrUpdateAsync method [.NET], class SentSharesClient
  - SentSharesClient.CreateOrUpdateAsync(String, RequestContent, RequestContext) method [.NET]
  - CreateOrUpdateAsync(String, RequestContent, RequestContext) method [.NET], class SentSharesClient
  monikers:
  - azure-dotnet-preview
