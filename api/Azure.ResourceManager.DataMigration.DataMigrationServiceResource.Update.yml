### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.ResourceManager.ArmOperation`1?alt=Azure.ResourceManager.ArmOperation&text=ArmOperation" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.DataMigration.DataMigrationServiceResource?alt=Azure.ResourceManager.DataMigration.DataMigrationServiceResource&text=DataMigrationServiceResource" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Completed"></xref> if the method should wait to return until the long-running operation has completed on the service; <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Started"></xref> if it should return after starting the operation. For more information on long-running operations, please see <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</a>.
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: data
    description: Information about the service.
    type: <xref href="Azure.ResourceManager.DataMigration.DataMigrationServiceData?alt=Azure.ResourceManager.DataMigration.DataMigrationServiceData&text=DataMigrationServiceData" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">data</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.DataMigration.DataMigrationServiceResource.Update(Azure.WaitUntil,Azure.ResourceManager.DataMigration.DataMigrationServiceData,System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.DataMigration.DataMigrationServiceResource.Update(Azure.WaitUntil,Azure.ResourceManager.DataMigration.DataMigrationServiceData,System.Threading.CancellationToken)
  name: Update(WaitUntil, DataMigrationServiceData, CancellationToken)
  fullName: Azure.ResourceManager.DataMigration.DataMigrationServiceResource.Update(WaitUntil, DataMigrationServiceData, CancellationToken)
  nameWithType: DataMigrationServiceResource.Update(WaitUntil, DataMigrationServiceData, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.ResourceManager.ArmOperation<Azure.ResourceManager.DataMigration.DataMigrationServiceResource> Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataMigration.DataMigrationServiceData data, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member Update : Azure.WaitUntil * Azure.ResourceManager.DataMigration.DataMigrationServiceData * System.Threading.CancellationToken -> Azure.ResourceManager.ArmOperation<Azure.ResourceManager.DataMigration.DataMigrationServiceResource>

        override this.Update : Azure.WaitUntil * Azure.ResourceManager.DataMigration.DataMigrationServiceData * System.Threading.CancellationToken -> Azure.ResourceManager.ArmOperation<Azure.ResourceManager.DataMigration.DataMigrationServiceResource>
  - lang: vb
    values:
    - value: Public Overridable Function Update (waitUntil As WaitUntil, data As DataMigrationServiceData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataMigrationServiceResource)
  monikers:
  - azure-dotnet-preview
  summary: >-
    The services resource is the top-level resource that represents the Database Migration Service. The PATCH method updates an existing service. This method can change the kind, SKU, and network of the service, but if tasks are currently running (i.e. the service is busy), this will fail with 400 Bad Request ("ServiceIsBusy").

    <ul><li>Request Path/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}</li><li>Operation IdServices_Update</li></ul>
  metadata: {}
uid: Azure.ResourceManager.DataMigration.DataMigrationServiceResource.Update*
commentId: Overload:Azure.ResourceManager.DataMigration.DataMigrationServiceResource.Update
namespace: Azure.ResourceManager.DataMigration
name: Update
fullName: Azure.ResourceManager.DataMigration.DataMigrationServiceResource.Update
nameWithType: DataMigrationServiceResource.Update
assembliesWithMoniker:
- value: Azure.ResourceManager.DataMigration.dll
packagesWithMoniker:
- value: Azure.ResourceManager.DataMigration v1.0.0-beta.3
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.DataMigration.DataMigrationServiceResource.Update
  api_location:
  - Azure.ResourceManager.DataMigration.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.DataMigration.DataMigrationServiceResource.Update
  - Azure::ResourceManager::DataMigration::DataMigrationServiceResource::Update
  - Update
  - DataMigrationServiceResource.Update
  - DataMigrationServiceResource::Update
  helpviewer_keywords:
  - DataMigrationServiceResource.Update method [.NET]
  - Update method [.NET], class DataMigrationServiceResource
  - DataMigrationServiceResource.Update(WaitUntil, DataMigrationServiceData, CancellationToken) method [.NET]
  - Update(WaitUntil, DataMigrationServiceData, CancellationToken) method [.NET], class DataMigrationServiceResource
  monikers:
  - azure-dotnet-preview
