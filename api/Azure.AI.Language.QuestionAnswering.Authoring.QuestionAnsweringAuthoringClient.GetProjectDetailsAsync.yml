### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: projectName
    description: The name of the project to use.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">projectName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">projectName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.GetProjectDetailsAsync(System.String,Azure.RequestContext)
  commentId: M:Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.GetProjectDetailsAsync(System.String,Azure.RequestContext)
  name: GetProjectDetailsAsync(String, RequestContext)
  fullName: Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.GetProjectDetailsAsync(String, RequestContext)
  nameWithType: QuestionAnsweringAuthoringClient.GetProjectDetailsAsync(String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> GetProjectDetailsAsync (string projectName, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetProjectDetailsAsync : string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.GetProjectDetailsAsync : string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function GetProjectDetailsAsync (projectName As String, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  summary: Get the requested project metadata.
  remarks: >-
    <p>Below is the JSON schema for the response payload. Additional information can be found in the service REST API documentation: https://learn.microsoft.com/rest/api/cognitiveservices/questionanswering/question-answering-projects/get-project-details</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">ProjectMetadata</code>: 


    ```

    {
                  projectName: string, # Optional. Name of the project.
                  description: string, # Optional. Description of the project.
                  language: string, # Optional. Language of the text records. This is BCP-47 representation of a language. For example, use "en" for English; "es" for Spanish etc. If not set, use "en" for English as default.
                  multilingualResource: boolean, # Optional. Resource enabled for multiple languages across projects or not.
                  settings: {
                    defaultAnswer: string, # Optional. Default Answer response when no good match is found in the knowledge base.
                  }, # Optional. Configurable settings of the Project.
                  createdDateTime: string (ISO 8601 Format), # Optional. Project creation date-time.
                  lastModifiedDateTime: string (ISO 8601 Format), # Optional. Represents the project last modified date-time.
                  lastDeployedDateTime: string (ISO 8601 Format), # Optional. Represents the project last deployment date-time.
                }
    ```

    </p>
  examples: >-
    This sample shows how to call GetProjectDetailsAsync with required parameters and parse the result.


    ```

    var credential = new AzureKeyCredential("<key>");

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new QuestionAnsweringAuthoringClient(endpoint, credential);


    Response response = await client.GetProjectDetailsAsync("<projectName>");


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("projectName").ToString());

    Console.WriteLine(result.GetProperty("description").ToString());

    Console.WriteLine(result.GetProperty("language").ToString());

    Console.WriteLine(result.GetProperty("multilingualResource").ToString());

    Console.WriteLine(result.GetProperty("settings").GetProperty("defaultAnswer").ToString());

    Console.WriteLine(result.GetProperty("createdDateTime").ToString());

    Console.WriteLine(result.GetProperty("lastModifiedDateTime").ToString());

    Console.WriteLine(result.GetProperty("lastDeployedDateTime").ToString());

    ```
  metadata: {}
uid: Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.GetProjectDetailsAsync*
commentId: Overload:Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.GetProjectDetailsAsync
namespace: Azure.AI.Language.QuestionAnswering.Authoring
name: GetProjectDetailsAsync
fullName: Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.GetProjectDetailsAsync
nameWithType: QuestionAnsweringAuthoringClient.GetProjectDetailsAsync
assembliesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering.dll
packagesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering v1.1.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.GetProjectDetailsAsync
  api_location:
  - Azure.AI.Language.QuestionAnswering.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.GetProjectDetailsAsync
  - Azure::AI::Language::QuestionAnswering::Authoring::QuestionAnsweringAuthoringClient::GetProjectDetailsAsync
  - GetProjectDetailsAsync
  - QuestionAnsweringAuthoringClient.GetProjectDetailsAsync
  - QuestionAnsweringAuthoringClient::GetProjectDetailsAsync
  helpviewer_keywords:
  - QuestionAnsweringAuthoringClient.GetProjectDetailsAsync method [.NET]
  - GetProjectDetailsAsync method [.NET], class QuestionAnsweringAuthoringClient
  - QuestionAnsweringAuthoringClient.GetProjectDetailsAsync(String, RequestContext) method [.NET]
  - GetProjectDetailsAsync(String, RequestContext) method [.NET], class QuestionAnsweringAuthoringClient
  monikers:
  - azure-dotnet
