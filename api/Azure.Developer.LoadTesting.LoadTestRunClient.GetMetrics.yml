### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Pageable`1?alt=Azure.Pageable&text=Pageable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Pageable`1"></xref> from the service containing a list of <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> objects. Details of the body schema for each item in the collection are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: testRunId
    description: Unique name for the load test run, must contain only lower-case alphabetic, numeric, underscore or hyphen characters.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: metricName
      monikers:
      - azure-dotnet
    - value: metricname
      monikers:
      - azure-dotnet-preview
    description: Metric name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: metricNamespace
    description: Metric namespace to query metric definitions for.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: timespan
    description: The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request. Details of the request body schema are in the Remarks section below.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: aggregation
    description: The aggregation.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: interval
    description: 'The interval (i.e. timegrain) of the query. Allowed values: "PT5S" | "PT10S" | "PT1M" | "PT5M" | "PT1H".'
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">testRunId</code>, <code data-dev-comment-type="paramref">metricName</code>, <code data-dev-comment-type="paramref">metricNamespace</code> or <code data-dev-comment-type="paramref">timespan</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">testRunId</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Developer.LoadTesting.LoadTestRunClient.GetMetrics(System.String,System.String,System.String,System.String,Azure.Core.RequestContent,System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.Developer.LoadTesting.LoadTestRunClient.GetMetrics(System.String,System.String,System.String,System.String,Azure.Core.RequestContent,System.String,System.String,Azure.RequestContext)
  name: GetMetrics(String, String, String, String, RequestContent, String, String, RequestContext)
  fullName: Azure.Developer.LoadTesting.LoadTestRunClient.GetMetrics(String, String, String, String, RequestContent, String, String, RequestContext)
  nameWithType: LoadTestRunClient.GetMetrics(String, String, String, String, RequestContent, String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Pageable<BinaryData> GetMetrics (string testRunId, string metricName, string metricNamespace, string timespan, Azure.Core.RequestContent content = default, string aggregation = default, string interval = default, Azure.RequestContext context = default);
      monikers:
      - azure-dotnet
    - value: public virtual Azure.Pageable<BinaryData> GetMetrics (string testRunId, string metricname, string metricNamespace, string timespan, Azure.Core.RequestContent content, string aggregation = default, string interval = default, Azure.RequestContext context = default);
      monikers:
      - azure-dotnet-preview
  - lang: fsharp
    values:
    - value: >-
        abstract member GetMetrics : string * string * string * string * Azure.Core.RequestContent * string * string * Azure.RequestContext -> Azure.Pageable<BinaryData>

        override this.GetMetrics : string * string * string * string * Azure.Core.RequestContent * string * string * Azure.RequestContext -> Azure.Pageable<BinaryData>
      monikers:
      - azure-dotnet
    - value: >-
        abstract member GetMetrics : string * string * string * string * Azure.Core.RequestContent * string * string * Azure.RequestContext -> Azure.Pageable<BinaryData>

        override this.GetMetrics : string * string * string * string * Azure.Core.RequestContent * string * string * Azure.RequestContext -> Azure.Pageable<BinaryData>
      monikers:
      - azure-dotnet-preview
  - lang: vb
    values:
    - value: Public Overridable Function GetMetrics (testRunId As String, metricName As String, metricNamespace As String, timespan As String, Optional content As RequestContent = Nothing, Optional aggregation As String = Nothing, Optional interval As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)
      monikers:
      - azure-dotnet
    - value: Public Overridable Function GetMetrics (testRunId As String, metricname As String, metricNamespace As String, timespan As String, content As RequestContent, Optional aggregation As String = Nothing, Optional interval As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)
      monikers:
      - azure-dotnet-preview
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: List the metric values for a load     test run.
  remarks: >-
    <p>Below is the JSON schema for the request payload and one item in the pageable response.</p><p>Request Body:</p><p>Schema for <code data-dev-comment-type="c">MetricRequestPayload</code>: 


    ```

    {
      filters: [
        {
          name: string, # Optional. The dimension name
          values: [string], # Optional. The dimension values. Maximum values can be 20.
        }
      ], # Optional. Get metrics for specific dimension values. Example: Metric contains dimension like SamplerName, Error. To retrieve all the time series data where SamplerName is equals to HTTPRequest1 or HTTPRequest2, the DimensionFilter value will be {"SamplerName", ["HTTPRequest1", "HTTPRequest2"}
    }

    ```

    </p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">MetricsValue</code>: 


    ```

    {
      data: [
        {
          timestamp: string, # Optional. The timestamp for the metric value in ISO 8601 format.
          value: number, # Optional. The metric value.
        }
      ], # Optional. An array of data points representing the metric values.
      dimensionValues: [
        {
          name: string, # Optional. The name of the dimension.
          value: string, # Optional. The value of the dimension.
        }
      ], # Optional. The dimension values 
    }

    ```

    </p>
  examples: >-
    This sample shows how to call GetMetrics with required parameters and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new LoadTestRunClient(endpoint, credential);


    var data = new {};


    foreach (var data in client.GetMetrics("<testRunId>", "<metricname>", "<metricNamespace>", "<timespan>", RequestContent.Create(data)))

    {
        JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        Console.WriteLine(result.ToString());
    }

    ```

    This sample shows how to call GetMetrics with all parameters and request content, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new LoadTestRunClient(endpoint, credential);


    var data = new {
        filters = new[] {
            new {
                name = "<name>",
                values = new[] {
                    "<String>"
                },
            }
        },
    };


    foreach (var data in client.GetMetrics("<testRunId>", "<metricname>", "<metricNamespace>", "<timespan>", RequestContent.Create(data), "<aggregation>", "<interval>"))

    {
        JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        Console.WriteLine(result.GetProperty("data")[0].GetProperty("timestamp").ToString());
        Console.WriteLine(result.GetProperty("data")[0].GetProperty("value").ToString());
        Console.WriteLine(result.GetProperty("dimensionValues")[0].GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("dimensionValues")[0].GetProperty("value").ToString());
    }

    ```
  metadata: {}
uid: Azure.Developer.LoadTesting.LoadTestRunClient.GetMetrics*
commentId: Overload:Azure.Developer.LoadTesting.LoadTestRunClient.GetMetrics
namespace: Azure.Developer.LoadTesting
name: GetMetrics
fullName: Azure.Developer.LoadTesting.LoadTestRunClient.GetMetrics
nameWithType: LoadTestRunClient.GetMetrics
assembliesWithMoniker:
- value: Azure.Developer.LoadTesting.dll
packagesWithMoniker:
- value: Azure.Developer.LoadTesting v1.0.1
  monikers:
  - azure-dotnet
- value: Azure.Developer.LoadTesting v1.0.0-beta.2
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Developer.LoadTesting.LoadTestRunClient.GetMetrics
  api_location:
  - Azure.Developer.LoadTesting.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Developer.LoadTesting.LoadTestRunClient.GetMetrics
  - Azure::Developer::LoadTesting::LoadTestRunClient::GetMetrics
  - GetMetrics
  - LoadTestRunClient.GetMetrics
  - LoadTestRunClient::GetMetrics
  helpviewer_keywords:
  - LoadTestRunClient.GetMetrics method [.NET]
  - GetMetrics method [.NET], class LoadTestRunClient
  - LoadTestRunClient.GetMetrics(String, String, String, String, RequestContent, String, String, RequestContext) method [.NET]
  - GetMetrics(String, String, String, String, RequestContent, String, String, RequestContext) method [.NET], class LoadTestRunClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
