### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult?alt=Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult&text=DevCenterNameAvailabilityResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: subscriptionResource
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Resources.SubscriptionResource"></xref> instance the method will execute against.
    type: <xref href="Azure.ResourceManager.Resources.SubscriptionResource?alt=Azure.ResourceManager.Resources.SubscriptionResource&text=SubscriptionResource" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: The required parameters for checking if resource name is available.
    type: <xref href="Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent?alt=Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent&text=DevCenterNameAvailabilityContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.DevCenter.DevCenterExtensions.CheckDevCenterNameAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent,System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.DevCenter.DevCenterExtensions.CheckDevCenterNameAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent,System.Threading.CancellationToken)
  name: CheckDevCenterNameAvailability(SubscriptionResource, DevCenterNameAvailabilityContent, CancellationToken)
  fullName: Azure.ResourceManager.DevCenter.DevCenterExtensions.CheckDevCenterNameAvailability(SubscriptionResource, DevCenterNameAvailabilityContent, CancellationToken)
  nameWithType: DevCenterExtensions.CheckDevCenterNameAvailability(SubscriptionResource, DevCenterNameAvailabilityContent, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Azure.Response<Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult> CheckDevCenterNameAvailability (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member CheckDevCenterNameAvailability : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent * System.Threading.CancellationToken -> Azure.Response<Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function CheckDevCenterNameAvailability (subscriptionResource As SubscriptionResource, content As DevCenterNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevCenterNameAvailabilityResult)
  monikers:
  - azure-dotnet
  summary: >-
    Check the availability of name for resource

    <ul><li>Request Path/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/checkNameAvailability</li><li>Operation IdCheckNameAvailability_Execute</li></ul>
  metadata: {}
uid: Azure.ResourceManager.DevCenter.DevCenterExtensions.CheckDevCenterNameAvailability*
commentId: Overload:Azure.ResourceManager.DevCenter.DevCenterExtensions.CheckDevCenterNameAvailability
namespace: Azure.ResourceManager.DevCenter
name: CheckDevCenterNameAvailability
fullName: Azure.ResourceManager.DevCenter.DevCenterExtensions.CheckDevCenterNameAvailability
nameWithType: DevCenterExtensions.CheckDevCenterNameAvailability
assembliesWithMoniker:
- value: Azure.ResourceManager.DevCenter.dll
packagesWithMoniker:
- value: Azure.ResourceManager.DevCenter v1.0.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.ResourceManager.DevCenter.DevCenterExtensions.CheckDevCenterNameAvailability
  api_location:
  - Azure.ResourceManager.DevCenter.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.DevCenter.DevCenterExtensions.CheckDevCenterNameAvailability
  - Azure::ResourceManager::DevCenter::DevCenterExtensions::CheckDevCenterNameAvailability
  - CheckDevCenterNameAvailability
  - DevCenterExtensions.CheckDevCenterNameAvailability
  - DevCenterExtensions::CheckDevCenterNameAvailability
  helpviewer_keywords:
  - DevCenterExtensions.CheckDevCenterNameAvailability method [.NET]
  - CheckDevCenterNameAvailability method [.NET], class DevCenterExtensions
  - DevCenterExtensions.CheckDevCenterNameAvailability(SubscriptionResource, DevCenterNameAvailabilityContent, CancellationToken) extension method [.NET]
  - CheckDevCenterNameAvailability(SubscriptionResource, DevCenterNameAvailabilityContent, CancellationToken) extension method [.NET], class DevCenterExtensions
  monikers:
  - azure-dotnet
