### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.AsyncPageable`1?alt=Azure.AsyncPageable&text=AsyncPageable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.AsyncPageable`1"></xref> from the service containing a list of <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> objects. Details of the body schema for each item in the collection are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: projectName
    description: The name of the project to use.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: top
    description: The maximum number of resources to return from the collection.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: skip
    description: An offset into the collection of the first resource to be returned.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: maxpagesize
    description: The maximum number of resources to include in a single response.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">projectName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">projectName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.GetSourcesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.RequestContext)
  commentId: M:Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.GetSourcesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.RequestContext)
  name: GetSourcesAsync(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, RequestContext)
  fullName: Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.GetSourcesAsync(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, RequestContext)
  nameWithType: QuestionAnsweringProjectsClient.GetSourcesAsync(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.AsyncPageable<BinaryData> GetSourcesAsync (string projectName, int? top = default, int? skip = default, int? maxpagesize = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetSourcesAsync : string * Nullable<int> * Nullable<int> * Nullable<int> * Azure.RequestContext -> Azure.AsyncPageable<BinaryData>

        override this.GetSourcesAsync : string * Nullable<int> * Nullable<int> * Nullable<int> * Azure.RequestContext -> Azure.AsyncPageable<BinaryData>
  - lang: vb
    values:
    - value: Public Overridable Function GetSourcesAsync (projectName As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional maxpagesize As Nullable(Of Integer) = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)
  monikers:
  - azure-dotnet-preview
  summary: Gets all the sources of a project.
  remarks: >-
    <p>Gets all the sources of a project.</p><p>Below is the JSON schema for one item in the pageable response.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">QnaSourcesMetadata</code>: 


    ```

    {
                  displayName: string, # Optional. Friendly name of the Source.
                  source: string, # Optional. Unique source identifier. Name of the file if it's a 'file' source; otherwise, the complete URL if it's a 'url' source.
                  sourceUri: string, # Required. URI location for the file or url.
                  sourceKind: "file" | "url", # Required. Supported source types.
                  contentStructureKind: "unstructured", # Optional. Content structure type for sources.
                  lastUpdatedDateTime: string (ISO 8601 Format), # Optional. Date-time when the QnA was last updated.
                }
    ```

    </p>
  metadata: {}
uid: Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.GetSourcesAsync*
commentId: Overload:Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.GetSourcesAsync
namespace: Azure.AI.Language.QuestionAnswering.Projects
name: GetSourcesAsync
fullName: Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.GetSourcesAsync
nameWithType: QuestionAnsweringProjectsClient.GetSourcesAsync
assembliesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering.dll
packagesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering v1.1.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.GetSourcesAsync
  api_location:
  - Azure.AI.Language.QuestionAnswering.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.GetSourcesAsync
  - Azure::AI::Language::QuestionAnswering::Projects::QuestionAnsweringProjectsClient::GetSourcesAsync
  - GetSourcesAsync
  - QuestionAnsweringProjectsClient.GetSourcesAsync
  - QuestionAnsweringProjectsClient::GetSourcesAsync
  helpviewer_keywords:
  - QuestionAnsweringProjectsClient.GetSourcesAsync method [.NET]
  - GetSourcesAsync method [.NET], class QuestionAnsweringProjectsClient
  - QuestionAnsweringProjectsClient.GetSourcesAsync(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, RequestContext) method [.NET]
  - GetSourcesAsync(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, RequestContext) method [.NET], class QuestionAnsweringProjectsClient
  monikers:
  - azure-dotnet-preview
