### YamlMime:NetType
type: class
inheritancesWithMoniker:
- values:
  - <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
derivedClassesWithMoniker:
- value: Azure.ResourceManager.Chaos.Models.SimpleFilter
constructors:
- uid: Azure.ResourceManager.Chaos.Models.Filter.#ctor
  monikers:
  - azure-dotnet-preview
uid: Azure.ResourceManager.Chaos.Models.Filter
commentId: T:Azure.ResourceManager.Chaos.Models.Filter
namespace: Azure.ResourceManager.Chaos.Models
name: Filter
fullName: Azure.ResourceManager.Chaos.Models.Filter
nameWithType: Azure.ResourceManager.Chaos.Models.Filter
assembliesWithMoniker:
- value: Azure.ResourceManager.Chaos.dll
packagesWithMoniker:
- value: Azure.ResourceManager.Chaos v1.0.0-beta.4
syntaxWithMoniker:
- lang: csharp
  values:
  - value: public abstract class Filter
- lang: fsharp
  values:
  - value: type Filter = class
- lang: vb
  values:
  - value: Public MustInherit Class Filter
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
summary: >-
  Model that represents available filter types that can be applied to a targets list.

  Please note <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Chaos.Models.Filter"></xref> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.

  The available derived classes include <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Chaos.Models.SimpleFilter"></xref>.
metadata:
  api_name:
  - Azure.ResourceManager.Chaos.Models.Filter
  api_location:
  - Azure.ResourceManager.Chaos.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.Chaos.Models.Filter
  - Azure::ResourceManager::Chaos::Models::Filter
  - Filter
  helpviewer_keywords:
  - Azure.ResourceManager.Chaos.Models.Filter class [.NET]
  monikers:
  - azure-dotnet-preview
