### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Operation`1?alt=Azure.Operation&text=Operation" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Operation"></xref> representing an asynchronous operation on the service.
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Completed"></xref> if the method should wait to return until the long-running operation has completed on the service; <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Started"></xref> if it should return after starting the operation. For more information on long-running operations, please see <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</a>.
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: sentShareId
    description: Id of the sent share.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">sentShareId</code> or <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">sentShareId</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Analytics.Purview.Sharing.SentSharesClient.CreateOrReplaceSentShareAsync(Azure.WaitUntil,System.String,Azure.Core.RequestContent,Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Sharing.SentSharesClient.CreateOrReplaceSentShareAsync(Azure.WaitUntil,System.String,Azure.Core.RequestContent,Azure.RequestContext)
  name: CreateOrReplaceSentShareAsync(WaitUntil, String, RequestContent, RequestContext)
  fullName: Azure.Analytics.Purview.Sharing.SentSharesClient.CreateOrReplaceSentShareAsync(WaitUntil, String, RequestContent, RequestContext)
  nameWithType: SentSharesClient.CreateOrReplaceSentShareAsync(WaitUntil, String, RequestContent, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Operation<BinaryData>> CreateOrReplaceSentShareAsync (Azure.WaitUntil waitUntil, string sentShareId, Azure.Core.RequestContent content, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member CreateOrReplaceSentShareAsync : Azure.WaitUntil * string * Azure.Core.RequestContent * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Operation<BinaryData>>

        override this.CreateOrReplaceSentShareAsync : Azure.WaitUntil * string * Azure.Core.RequestContent * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Operation<BinaryData>>
  - lang: vb
    values:
    - value: Public Overridable Function CreateOrReplaceSentShareAsync (waitUntil As WaitUntil, sentShareId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Operation(Of BinaryData))
  monikers:
  - azure-dotnet-preview
  summary: >-
    [Protocol Method] Create or replace a sent share.

    <ul><li>

    This <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</a> allows explicit creation of the request and processing of the response for advanced scenarios.

    </li></ul>
  remarks: >-
    <p>Create or replace a sent share</p><p>Below is the JSON schema for the request and response payloads.</p><p>Request Body:</p><p><details><summary>InPlaceSentShare</summary>Schema for <code data-dev-comment-type="c">InPlaceSentShare</code>: 


    ```

    {
      properties: {
        artifact: {
          storeKind: "AdlsGen2Account" | "BlobAccount", # Required. The types of asset.
          storeReference: {
            referenceName: string, # Optional. Reference name for resource associated with the sink or artifact.
            type: "ArmResourceReference", # Optional. Defines the type of resource being shared
          }, # Required. A Store Reference for an artifact or sink.
        }, # Required. A class for sent share artifact.
        createdAt: string (ISO 8601 Format), # Optional. Time at which the sent share was created. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)
        dependsOn: [Guid], # Optional. List of shares on which the sent share depends.
        description: string, # Optional. Sent share description.
        displayName: string, # Required. The name of the sent share
        senderEmail: string, # Optional. Email of the sender who created the sent share.
        senderName: string, # Optional. Name of the sender who created the sent share.
        senderTenantName: string, # Optional. Tenant name of the sender who created the sent share.
        state: "Unknown" | "Succeeded" | "Creating" | "Deleting" | "Moving" | "Failed", # Optional. State of the resource
      }, # Required. Properties for InPlace sent share.
      shareKind: InPlace, # Required. Defines the supported types for share.
      id: string, # Optional. The unique id of the resource.
      type: string, # Optional. Type of the resource.
    }

    ```

     </details></p><p>Response Body:</p><p><details><summary>InPlaceSentShare</summary>Schema for <code data-dev-comment-type="c">InPlaceSentShare</code>: 


    ```

    {
      properties: {
        artifact: {
          storeKind: "AdlsGen2Account" | "BlobAccount", # Required. The types of asset.
          storeReference: {
            referenceName: string, # Optional. Reference name for resource associated with the sink or artifact.
            type: "ArmResourceReference", # Optional. Defines the type of resource being shared
          }, # Required. A Store Reference for an artifact or sink.
        }, # Required. A class for sent share artifact.
        createdAt: string (ISO 8601 Format), # Optional. Time at which the sent share was created. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)
        dependsOn: [Guid], # Optional. List of shares on which the sent share depends.
        description: string, # Optional. Sent share description.
        displayName: string, # Required. The name of the sent share
        senderEmail: string, # Optional. Email of the sender who created the sent share.
        senderName: string, # Optional. Name of the sender who created the sent share.
        senderTenantName: string, # Optional. Tenant name of the sender who created the sent share.
        state: "Unknown" | "Succeeded" | "Creating" | "Deleting" | "Moving" | "Failed", # Optional. State of the resource
      }, # Required. Properties for InPlace sent share.
      shareKind: InPlace, # Required. Defines the supported types for share.
      id: string, # Optional. The unique id of the resource.
      type: string, # Optional. Type of the resource.
    }

    ```

     </details></p>
  examples: >-
    This sample shows how to call CreateOrReplaceSentShareAsync with required parameters and request content, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new SentSharesClient(endpoint, credential);


    var data = new {
        properties = new {
            artifact = new {
                properties = new {
                    paths = new[] {
                        new {
                            containerName = "<containerName>",
                        }
                    },
                },
                storeKind = "AdlsGen2Account",
                storeReference = new {},
            },
            displayName = "<displayName>",
        },
        shareKind = "InPlace",
    };


    var operation = await client.CreateOrReplaceSentShareAsync(WaitUntil.Completed, "<sentShareId>", RequestContent.Create(data));


    BinaryData responseData = operation.Value;

    JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;

    Console.WriteLine(result.GetProperty("shareKind").ToString());

    Console.WriteLine(result.ToString());

    ```

    This sample shows how to call CreateOrReplaceSentShareAsync with all parameters and request content, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new SentSharesClient(endpoint, credential);


    var data = new {
        properties = new {
            artifact = new {
                properties = new {
                    paths = new[] {
                        new {
                            containerName = "<containerName>",
                            receiverPath = "<receiverPath>",
                            senderPath = "<senderPath>",
                        }
                    },
                },
                storeKind = "AdlsGen2Account",
                storeReference = new {
                    referenceName = "<referenceName>",
                    type = "ArmResourceReference",
                },
            },
            description = "<description>",
            displayName = "<displayName>",
        },
        shareKind = "InPlace",
    };


    var operation = await client.CreateOrReplaceSentShareAsync(WaitUntil.Completed, "<sentShareId>", RequestContent.Create(data));


    BinaryData responseData = operation.Value;

    JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;

    Console.WriteLine(result.GetProperty("shareKind").ToString());

    Console.WriteLine(result.GetProperty("id").ToString());

    Console.WriteLine(result.GetProperty("type").ToString());

    ```
  metadata: {}
uid: Azure.Analytics.Purview.Sharing.SentSharesClient.CreateOrReplaceSentShareAsync*
commentId: Overload:Azure.Analytics.Purview.Sharing.SentSharesClient.CreateOrReplaceSentShareAsync
namespace: Azure.Analytics.Purview.Sharing
name: CreateOrReplaceSentShareAsync
fullName: Azure.Analytics.Purview.Sharing.SentSharesClient.CreateOrReplaceSentShareAsync
nameWithType: SentSharesClient.CreateOrReplaceSentShareAsync
assembliesWithMoniker:
- value: Azure.Analytics.Purview.Sharing.dll
packagesWithMoniker:
- value: Azure.Analytics.Purview.Sharing v1.0.0-beta.3
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Purview.Sharing.SentSharesClient.CreateOrReplaceSentShareAsync
  api_location:
  - Azure.Analytics.Purview.Sharing.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Purview.Sharing.SentSharesClient.CreateOrReplaceSentShareAsync
  - Azure::Analytics::Purview::Sharing::SentSharesClient::CreateOrReplaceSentShareAsync
  - CreateOrReplaceSentShareAsync
  - SentSharesClient.CreateOrReplaceSentShareAsync
  - SentSharesClient::CreateOrReplaceSentShareAsync
  helpviewer_keywords:
  - SentSharesClient.CreateOrReplaceSentShareAsync method [.NET]
  - CreateOrReplaceSentShareAsync method [.NET], class SentSharesClient
  - SentSharesClient.CreateOrReplaceSentShareAsync(WaitUntil, String, RequestContent, RequestContext) method [.NET]
  - CreateOrReplaceSentShareAsync(WaitUntil, String, RequestContent, RequestContext) method [.NET], class SentSharesClient
  monikers:
  - azure-dotnet-preview
