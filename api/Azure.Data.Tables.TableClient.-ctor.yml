### YamlMime:NetMember
type: constructor
members:
- type: constructor
  uid: Azure.Data.Tables.TableClient.#ctor
  commentId: M:Azure.Data.Tables.TableClient.#ctor
  name: TableClient()
  fullName: Azure.Data.Tables.TableClient.TableClient()
  nameWithType: TableClient.TableClient()
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: protected TableClient ();
  - lang: vb
    values:
    - value: Protected Sub New ()
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient"></xref> class for mocking.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: connectionString
    description: >-
      A connection string includes the authentication information

      required for your application to access data in an Azure Table

      account at runtime.


      For more information,

      <a href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">

      Configure Azure Storage connection strings</a>.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: tableName
    description: The name of the table with which this client instance will interact.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">connectionString</code> or <code data-dev-comment-type="paramref">tableName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">connectionString</code> is invalid.
    type: <xref href="System.InvalidOperationException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Data.Tables.TableClient.#ctor(System.String,System.String)
  commentId: M:Azure.Data.Tables.TableClient.#ctor(System.String,System.String)
  name: TableClient(String, String)
  fullName: Azure.Data.Tables.TableClient.TableClient(String, String)
  nameWithType: TableClient.TableClient(String, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TableClient (string connectionString, string tableName);
  - lang: fsharp
    values:
    - value: 'new Azure.Data.Tables.TableClient : string * string -> Azure.Data.Tables.TableClient'
  - lang: vb
    values:
    - value: Public Sub New (connectionString As String, tableName As String)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient"></xref> using the specified connection string.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: endpoint
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.Uri"></xref> referencing the table service account.

      This is likely to be similar to "https://{account_name}.table.core.windows.net/?{sas_token}" or

      "https://{account_name}.table.cosmos.azure.com?{sas_token}".
    type: <xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
    type: <xref href="Azure.Data.Tables.TableClientOptions?alt=Azure.Data.Tables.TableClientOptions&text=TableClientOptions" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">endpoint</code> does not start with 'https'.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Data.Tables.TableClient.#ctor(System.Uri,Azure.Data.Tables.TableClientOptions)
  commentId: M:Azure.Data.Tables.TableClient.#ctor(System.Uri,Azure.Data.Tables.TableClientOptions)
  name: TableClient(Uri, TableClientOptions)
  fullName: Azure.Data.Tables.TableClient.TableClient(Uri, TableClientOptions)
  nameWithType: TableClient.TableClient(Uri, TableClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TableClient (Uri endpoint, Azure.Data.Tables.TableClientOptions options = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Data.Tables.TableClient : Uri * Azure.Data.Tables.TableClientOptions -> Azure.Data.Tables.TableClient'
  - lang: vb
    values:
    - value: Public Sub New (endpoint As Uri, Optional options As TableClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient"></xref> using the specified <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.Uri"></xref> which contains a SAS token.

    See <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.GetSasBuilder(Azure.Data.Tables.Sas.TableSasPermissions,System.DateTimeOffset)"></xref> for creating a SAS token.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: connectionString
    description: >-
      A connection string includes the authentication information

      required for your application to access data in an Azure Storage

      account at runtime.


      For more information,

      <a href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">

      Configure Azure Storage connection strings</a>.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: tableName
    description: The name of the table with which this client instance will interact.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
    type: <xref href="Azure.Data.Tables.TableClientOptions?alt=Azure.Data.Tables.TableClientOptions&text=TableClientOptions" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">tableName</code> is an empty string.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">connectionString</code> or <code data-dev-comment-type="paramref">tableName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">connectionString</code> is invalid.
    type: <xref href="System.InvalidOperationException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Data.Tables.TableClient.#ctor(System.String,System.String,Azure.Data.Tables.TableClientOptions)
  commentId: M:Azure.Data.Tables.TableClient.#ctor(System.String,System.String,Azure.Data.Tables.TableClientOptions)
  name: TableClient(String, String, TableClientOptions)
  fullName: Azure.Data.Tables.TableClient.TableClient(String, String, TableClientOptions)
  nameWithType: TableClient.TableClient(String, String, TableClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TableClient (string connectionString, string tableName, Azure.Data.Tables.TableClientOptions options = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Data.Tables.TableClient : string * string * Azure.Data.Tables.TableClientOptions -> Azure.Data.Tables.TableClient'
  - lang: vb
    values:
    - value: Public Sub New (connectionString As String, tableName As String, Optional options As TableClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableServiceClient"></xref>.

    Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient"></xref> using the specified connection string.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: endpoint
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.Uri"></xref> referencing the table service account.

      This is likely to be similar to "https://{account_name}.table.core.windows.net"

      or "https://{account_name}.table.cosmos.azure.com".
    type: <xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: credential
    description: The shared access signature credential used to sign requests.
    type: <xref href="Azure.AzureSasCredential?alt=Azure.AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
    type: <xref href="Azure.Data.Tables.TableClientOptions?alt=Azure.Data.Tables.TableClientOptions&text=TableClientOptions" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">endpoint</code> does not start with 'https'.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">credential</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Data.Tables.TableClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Data.Tables.TableClientOptions)
  commentId: M:Azure.Data.Tables.TableClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Data.Tables.TableClientOptions)
  name: TableClient(Uri, AzureSasCredential, TableClientOptions)
  fullName: Azure.Data.Tables.TableClient.TableClient(Uri, AzureSasCredential, TableClientOptions)
  nameWithType: TableClient.TableClient(Uri, AzureSasCredential, TableClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TableClient (Uri endpoint, Azure.AzureSasCredential credential, Azure.Data.Tables.TableClientOptions options = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Data.Tables.TableClient : Uri * Azure.AzureSasCredential * Azure.Data.Tables.TableClientOptions -> Azure.Data.Tables.TableClient'
  - lang: vb
    values:
    - value: Public Sub New (endpoint As Uri, credential As AzureSasCredential, Optional options As TableClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient"></xref> using the specified <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.Uri"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.AzureSasCredential"></xref>.

    See <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.GetSasBuilder(Azure.Data.Tables.Sas.TableSasPermissions,System.DateTimeOffset)"></xref> for creating a SAS token.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: endpoint
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.Uri"></xref> referencing the table service account.

      This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
    type: <xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: tableName
    description: The name of the table with which this client instance will interact.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: credential
    description: The shared key credential used to sign requests.
    type: <xref href="Azure.Data.Tables.TableSharedKeyCredential?alt=Azure.Data.Tables.TableSharedKeyCredential&text=TableSharedKeyCredential" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">tableName</code> is an empty string.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">tableName</code> or <code data-dev-comment-type="paramref">credential</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Data.Tables.TableSharedKeyCredential)
  commentId: M:Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Data.Tables.TableSharedKeyCredential)
  name: TableClient(Uri, String, TableSharedKeyCredential)
  fullName: Azure.Data.Tables.TableClient.TableClient(Uri, String, TableSharedKeyCredential)
  nameWithType: TableClient.TableClient(Uri, String, TableSharedKeyCredential)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TableClient (Uri endpoint, string tableName, Azure.Data.Tables.TableSharedKeyCredential credential);
  - lang: fsharp
    values:
    - value: 'new Azure.Data.Tables.TableClient : Uri * string * Azure.Data.Tables.TableSharedKeyCredential -> Azure.Data.Tables.TableClient'
  - lang: vb
    values:
    - value: Public Sub New (endpoint As Uri, tableName As String, credential As TableSharedKeyCredential)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient"></xref> using the specified table service <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.Uri"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableSharedKeyCredential"></xref>.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: endpoint
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.Uri"></xref> referencing the table service account.

      This is likely to be similar to "https://{account_name}.table.core.windows.net"

      or "https://{account_name}.table.cosmos.azure.com".
    type: <xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: tableName
    description: The name of the table with which this client instance will interact.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: tokenCredential
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Core.TokenCredential"></xref> used to authorize requests.
    type: <xref href="Azure.Core.TokenCredential?alt=Azure.Core.TokenCredential&text=TokenCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
    type: <xref href="Azure.Data.Tables.TableClientOptions?alt=Azure.Data.Tables.TableClientOptions&text=TableClientOptions" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">endpoint</code> does not start with 'https'. or <code data-dev-comment-type="paramref">tableName</code> is an empty string.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">tableName</code>, <code data-dev-comment-type="paramref">endpoint</code>, or <code data-dev-comment-type="paramref">tokenCredential</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Data.Tables.TableClientOptions)
  commentId: M:Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Data.Tables.TableClientOptions)
  name: TableClient(Uri, String, TokenCredential, TableClientOptions)
  fullName: Azure.Data.Tables.TableClient.TableClient(Uri, String, TokenCredential, TableClientOptions)
  nameWithType: TableClient.TableClient(Uri, String, TokenCredential, TableClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TableClient (Uri endpoint, string tableName, Azure.Core.TokenCredential tokenCredential, Azure.Data.Tables.TableClientOptions options = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Data.Tables.TableClient : Uri * string * Azure.Core.TokenCredential * Azure.Data.Tables.TableClientOptions -> Azure.Data.Tables.TableClient'
  - lang: vb
    values:
    - value: Public Sub New (endpoint As Uri, tableName As String, tokenCredential As TokenCredential, Optional options As TableClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient"></xref> using the specified <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.Uri"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Core.TokenCredential"></xref>.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: endpoint
    description: >-
      A <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.Uri"></xref> referencing the table service account.

      This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
    type: <xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: tableName
    description: The name of the table with which this client instance will interact.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: credential
    description: The shared key credential used to sign requests.
    type: <xref href="Azure.Data.Tables.TableSharedKeyCredential?alt=Azure.Data.Tables.TableSharedKeyCredential&text=TableSharedKeyCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
    type: <xref href="Azure.Data.Tables.TableClientOptions?alt=Azure.Data.Tables.TableClientOptions&text=TableClientOptions" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">tableName</code> is an empty string.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">tableName</code> or <code data-dev-comment-type="paramref">credential</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Data.Tables.TableSharedKeyCredential,Azure.Data.Tables.TableClientOptions)
  commentId: M:Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Data.Tables.TableSharedKeyCredential,Azure.Data.Tables.TableClientOptions)
  name: TableClient(Uri, String, TableSharedKeyCredential, TableClientOptions)
  fullName: Azure.Data.Tables.TableClient.TableClient(Uri, String, TableSharedKeyCredential, TableClientOptions)
  nameWithType: TableClient.TableClient(Uri, String, TableSharedKeyCredential, TableClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TableClient (Uri endpoint, string tableName, Azure.Data.Tables.TableSharedKeyCredential credential, Azure.Data.Tables.TableClientOptions options = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Data.Tables.TableClient : Uri * string * Azure.Data.Tables.TableSharedKeyCredential * Azure.Data.Tables.TableClientOptions -> Azure.Data.Tables.TableClient'
  - lang: vb
    values:
    - value: Public Sub New (endpoint As Uri, tableName As String, credential As TableSharedKeyCredential, Optional options As TableClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient"></xref> using the specified table service <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableClient.Uri"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableSharedKeyCredential"></xref>.
  metadata: {}
uid: Azure.Data.Tables.TableClient.#ctor*
commentId: Overload:Azure.Data.Tables.TableClient.#ctor
namespace: Azure.Data.Tables
name: TableClient
fullName: Azure.Data.Tables.TableClient.TableClient
nameWithType: TableClient.TableClient
assembliesWithMoniker:
- value: Azure.Data.Tables.dll
packagesWithMoniker:
- value: Azure.Data.Tables v12.8.0
  monikers:
  - azure-dotnet
- value: Azure.Data.Tables v12.7.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Data.Tables.TableClient..ctor
  api_location:
  - Azure.Data.Tables.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Data.Tables.TableClient.#ctor
  - Azure::Data::Tables::TableClient::#ctor
  - '#ctor'
  - TableClient.#ctor
  - TableClient::#ctor
  helpviewer_keywords:
  - TableClient class [.NET], constructors
  - TableClient() class [.NET], constructors
  - TableClient(String, String) class [.NET], constructors
  - TableClient(Uri, TableClientOptions) class [.NET], constructors
  - TableClient(String, String, TableClientOptions) class [.NET], constructors
  - TableClient(Uri, AzureSasCredential, TableClientOptions) class [.NET], constructors
  - TableClient(Uri, String, TableSharedKeyCredential) class [.NET], constructors
  - TableClient(Uri, String, TokenCredential, TableClientOptions) class [.NET], constructors
  - TableClient(Uri, String, TableSharedKeyCredential, TableClientOptions) class [.NET], constructors
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
