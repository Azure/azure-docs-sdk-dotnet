### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Operation`1?alt=Azure.Operation&text=Operation" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Operation`1"></xref> from the service that will contain a <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> object once the asynchronous operation on the service has completed. Details of the body schema for the operation's final value are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Completed"></xref> if the method should wait to return until the long-running operation has completed on the service; <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Started"></xref> if it should return after starting the operation. For more information on long-running operations, please see <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</a>.
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: projectName
    description: The name of the project to use.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: deploymentName
    description: The name of the specific deployment of the project to use.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">projectName</code> or <code data-dev-comment-type="paramref">deploymentName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">projectName</code> or <code data-dev-comment-type="paramref">deploymentName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.DeployProjectAsync(Azure.WaitUntil,System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.DeployProjectAsync(Azure.WaitUntil,System.String,System.String,Azure.RequestContext)
  name: DeployProjectAsync(WaitUntil, String, String, RequestContext)
  fullName: Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.DeployProjectAsync(WaitUntil, String, String, RequestContext)
  nameWithType: QuestionAnsweringProjectsClient.DeployProjectAsync(WaitUntil, String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Operation<BinaryData>> DeployProjectAsync (Azure.WaitUntil waitUntil, string projectName, string deploymentName, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DeployProjectAsync : Azure.WaitUntil * string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Operation<BinaryData>>

        override this.DeployProjectAsync : Azure.WaitUntil * string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Operation<BinaryData>>
  - lang: vb
    values:
    - value: Public Overridable Function DeployProjectAsync (waitUntil As WaitUntil, projectName As String, deploymentName As String, Optional context As RequestContext = Nothing) As Task(Of Operation(Of BinaryData))
  monikers:
  - azure-dotnet-preview
  summary: Deploy project to production.
  remarks: >-
    <p>Deploy project to production.</p><p>Below is the JSON schema for the response payload.</p><p>Response Body:</p><p><details><summary>ExportJobState</summary>Schema for <code data-dev-comment-type="c">ExportJobState</code>: 


    ```

    {
                  resultUrl: string, # Required. URL to download the result of the Export Job.
                  createdDateTime: string (ISO 8601 Format), # Required.
                  expirationDateTime: string (ISO 8601 Format), # Optional.
                  jobId: string, # Required.
                  lastUpdatedDateTime: string (ISO 8601 Format), # Required.
                  status: "notStarted" | "running" | "succeeded" | "failed" | "cancelled" | "cancelling" | "partiallyCompleted", # Required. Job Status.
                  errors: [
                    {
                      code: "InvalidRequest" | "InvalidArgument" | "Unauthorized" | "Forbidden" | "NotFound" | "ProjectNotFound" | "OperationNotFound" | "AzureCognitiveSearchNotFound" | "AzureCognitiveSearchIndexNotFound" | "TooManyRequests" | "AzureCognitiveSearchThrottling" | "AzureCognitiveSearchIndexLimitReached" | "InternalServerError" | "ServiceUnavailable", # Required. One of a server-defined set of error codes.
                      message: string, # Required. A human-readable representation of the error.
                      target: string, # Optional. The target of the error.
                      details: [Error], # Optional. An array of details about specific errors that led to this reported error.
                      innererror: {
                        code: "InvalidRequest" | "InvalidParameterValue" | "KnowledgeBaseNotFound" | "AzureCognitiveSearchNotFound" | "AzureCognitiveSearchThrottling" | "ExtractionFailure", # Required. One of a server-defined set of error codes.
                        message: string, # Required. Error message.
                        details: Dictionary<string, string>, # Optional. Error details.
                        target: string, # Optional. Error target.
                        innererror: InnerErrorModel, # Optional. An object containing more specific information than the current object about the error.
                      }, # Optional. An object containing more specific information than the current object about the error.
                    }
                  ], # Optional.
                }
    ```

     </details></p>
  metadata: {}
uid: Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.DeployProjectAsync*
commentId: Overload:Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.DeployProjectAsync
namespace: Azure.AI.Language.QuestionAnswering.Projects
name: DeployProjectAsync
fullName: Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.DeployProjectAsync
nameWithType: QuestionAnsweringProjectsClient.DeployProjectAsync
assembliesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering.dll
packagesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering v1.1.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.DeployProjectAsync
  api_location:
  - Azure.AI.Language.QuestionAnswering.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.Language.QuestionAnswering.Projects.QuestionAnsweringProjectsClient.DeployProjectAsync
  - Azure::AI::Language::QuestionAnswering::Projects::QuestionAnsweringProjectsClient::DeployProjectAsync
  - DeployProjectAsync
  - QuestionAnsweringProjectsClient.DeployProjectAsync
  - QuestionAnsweringProjectsClient::DeployProjectAsync
  helpviewer_keywords:
  - QuestionAnsweringProjectsClient.DeployProjectAsync method [.NET]
  - DeployProjectAsync method [.NET], class QuestionAnsweringProjectsClient
  - QuestionAnsweringProjectsClient.DeployProjectAsync(WaitUntil, String, String, RequestContext) method [.NET]
  - DeployProjectAsync(WaitUntil, String, String, RequestContext) method [.NET], class QuestionAnsweringProjectsClient
  monikers:
  - azure-dotnet-preview
