### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse?alt=Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse&text=CheckPrincipalAccessResponse" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: subject
    description: Subject details.
    type: <xref href="Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo?alt=Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo&text=SubjectInfo" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: actions
    description: List of actions.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Analytics.Synapse.AccessControl.Models.RequiredAction?alt=Azure.Analytics.Synapse.AccessControl.Models.RequiredAction&text=RequiredAction" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: scope
    description: Scope at which the check access is done.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccess(Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo,System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.AccessControl.Models.RequiredAction},System.String,System.Threading.CancellationToken)
  commentId: M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccess(Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo,System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.AccessControl.Models.RequiredAction},System.String,System.Threading.CancellationToken)
  name: CheckPrincipalAccess(SubjectInfo, IEnumerable<RequiredAction>, String, CancellationToken)
  fullName: Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccess(SubjectInfo, IEnumerable<RequiredAction>, String, CancellationToken)
  nameWithType: RoleAssignmentsClient.CheckPrincipalAccess(SubjectInfo, IEnumerable<RequiredAction>, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response<Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse> CheckPrincipalAccess (Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo subject, System.Collections.Generic.IEnumerable<Azure.Analytics.Synapse.AccessControl.Models.RequiredAction> actions, string scope, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member CheckPrincipalAccess : Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo * seq<Azure.Analytics.Synapse.AccessControl.Models.RequiredAction> * string * System.Threading.CancellationToken -> Azure.Response<Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse>

        override this.CheckPrincipalAccess : Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo * seq<Azure.Analytics.Synapse.AccessControl.Models.RequiredAction> * string * System.Threading.CancellationToken -> Azure.Response<Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse>
  - lang: vb
    values:
    - value: Public Overridable Function CheckPrincipalAccess (subject As SubjectInfo, actions As IEnumerable(Of RequiredAction), scope As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CheckPrincipalAccessResponse)
  monikers:
  - azure-dotnet-preview
  summary: Check if the given principalId has access to perform list of actions at a given scope.
  metadata: {}
uid: Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccess*
commentId: Overload:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccess
namespace: Azure.Analytics.Synapse.AccessControl
name: CheckPrincipalAccess
fullName: Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccess
nameWithType: RoleAssignmentsClient.CheckPrincipalAccess
assembliesWithMoniker:
- value: Azure.Analytics.Synapse.AccessControl.dll
packagesWithMoniker:
- value: Azure.Analytics.Synapse.AccessControl v1.0.0-preview.5
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccess
  api_location:
  - Azure.Analytics.Synapse.AccessControl.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccess
  - Azure::Analytics::Synapse::AccessControl::RoleAssignmentsClient::CheckPrincipalAccess
  - CheckPrincipalAccess
  - RoleAssignmentsClient.CheckPrincipalAccess
  - RoleAssignmentsClient::CheckPrincipalAccess
  helpviewer_keywords:
  - RoleAssignmentsClient.CheckPrincipalAccess method [.NET]
  - CheckPrincipalAccess method [.NET], class RoleAssignmentsClient
  - RoleAssignmentsClient.CheckPrincipalAccess(SubjectInfo, IEnumerable<RequiredAction>, String, CancellationToken) method [.NET]
  - CheckPrincipalAccess(SubjectInfo, IEnumerable<RequiredAction>, String, CancellationToken) method [.NET], class RoleAssignmentsClient
  monikers:
  - azure-dotnet-preview
