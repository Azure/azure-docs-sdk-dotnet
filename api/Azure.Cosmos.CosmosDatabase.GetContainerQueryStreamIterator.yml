### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Collections.Generic.IAsyncEnumerable`1?alt=System.Collections.Generic.IAsyncEnumerable&text=IAsyncEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: An iterator to go through the containers
  parameters:
  - namesWithMoniker:
    - value: queryDefinition
    description: The cosmos SQL query definition.
    type: <xref href="Azure.Cosmos.QueryDefinition?alt=Azure.Cosmos.QueryDefinition&text=QueryDefinition" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: continuationToken
    description: The continuation token in the Azure Cosmos DB service.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: requestOptions
    description: (Optional) The options for the container request <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.QueryRequestOptions"></xref>
    type: <xref href="Azure.Cosmos.QueryRequestOptions?alt=Azure.Cosmos.QueryRequestOptions&text=QueryRequestOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: (Optional) <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> representing request cancellation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator(Azure.Cosmos.QueryDefinition,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator(Azure.Cosmos.QueryDefinition,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  name: GetContainerQueryStreamIterator(QueryDefinition, String, QueryRequestOptions, CancellationToken)
  fullName: Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator(QueryDefinition, String, QueryRequestOptions, CancellationToken)
  nameWithType: CosmosDatabase.GetContainerQueryStreamIterator(QueryDefinition, String, QueryRequestOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public abstract System.Collections.Generic.IAsyncEnumerable<Azure.Response> GetContainerQueryStreamIterator (Azure.Cosmos.QueryDefinition queryDefinition, string continuationToken = default, Azure.Cosmos.QueryRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'abstract member GetContainerQueryStreamIterator : Azure.Cosmos.QueryDefinition * string * Azure.Cosmos.QueryRequestOptions * System.Threading.CancellationToken -> System.Collections.Generic.IAsyncEnumerable<Azure.Response>'
  - lang: vb
    values:
    - value: Public MustOverride Function GetContainerQueryStreamIterator (queryDefinition As QueryDefinition, Optional continuationToken As String = Nothing, Optional requestOptions As QueryRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: >-
    This method creates a query for containers under an database using a SQL statement. It returns a FeedIterator.

    For more information on preparing SQL statements with parameterized values, please see <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.QueryDefinition"></xref> overload.
  examples: >-
    This create the stream feed iterator for containers with queryDefinition as input.


    ```csharp

    string queryText = "SELECT * FROM c where c.id like '%testId%'";

    QueryDefinition queryDefinition = new QueryDefinition(queryText);

    await foreach(Response response in this.cosmosDatabase.GetContainerQueryStreamIterator(queryDefinition))

    {
        using (StreamReader sr = new StreamReader(response.Content))
        using (JsonTextReader jtr = new JsonTextReader(sr))
        {
            JObject result = JObject.Load(jtr);
        }
    }

    ```
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Collections.Generic.IAsyncEnumerable`1?alt=System.Collections.Generic.IAsyncEnumerable&text=IAsyncEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: An iterator to go through the containers
  parameters:
  - namesWithMoniker:
    - value: queryText
    description: The cosmos SQL query text.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: continuationToken
    description: The continuation token in the Azure Cosmos DB service.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: requestOptions
    description: (Optional) The options for the container request <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.QueryRequestOptions"></xref>
    type: <xref href="Azure.Cosmos.QueryRequestOptions?alt=Azure.Cosmos.QueryRequestOptions&text=QueryRequestOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: (Optional) <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> representing request cancellation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator(System.String,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator(System.String,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  name: GetContainerQueryStreamIterator(String, String, QueryRequestOptions, CancellationToken)
  fullName: Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator(String, String, QueryRequestOptions, CancellationToken)
  nameWithType: CosmosDatabase.GetContainerQueryStreamIterator(String, String, QueryRequestOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public abstract System.Collections.Generic.IAsyncEnumerable<Azure.Response> GetContainerQueryStreamIterator (string queryText = default, string continuationToken = default, Azure.Cosmos.QueryRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'abstract member GetContainerQueryStreamIterator : string * string * Azure.Cosmos.QueryRequestOptions * System.Threading.CancellationToken -> System.Collections.Generic.IAsyncEnumerable<Azure.Response>'
  - lang: vb
    values:
    - value: Public MustOverride Function GetContainerQueryStreamIterator (Optional queryText As String = Nothing, Optional continuationToken As String = Nothing, Optional requestOptions As QueryRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: >-
    This method creates a query for containers under an database using a SQL statement. It returns a FeedIterator.

    For more information on preparing SQL statements with parameterized values, please see <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.QueryDefinition"></xref> overload.
  examples: >-
    1. This create the stream feed iterator for containers with queryText as input.


    ```csharp

    string queryText = "SELECT * FROM c where c.id like '%testId%'";

    await foreach (Response response in this.cosmosDatabase.GetContainerQueryStreamIterator(queryText))

    {


    }

    ```


    2. This create the stream feed iterator for containers without queryText, retrieving all container.


    ```csharp

    await foreach (Response response in this.cosmosDatabase.GetContainerQueryStreamIterator())

    {


    }

    ```
  metadata: {}
uid: Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator*
commentId: Overload:Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator
namespace: Azure.Cosmos
name: GetContainerQueryStreamIterator
fullName: Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator
nameWithType: CosmosDatabase.GetContainerQueryStreamIterator
assembliesWithMoniker:
- value: Azure.Cosmos.dll
packagesWithMoniker:
- value: Azure.Cosmos v4.0.0-preview3
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator
  api_location:
  - Azure.Cosmos.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator
  - Azure::Cosmos::CosmosDatabase::GetContainerQueryStreamIterator
  - GetContainerQueryStreamIterator
  - CosmosDatabase.GetContainerQueryStreamIterator
  - CosmosDatabase::GetContainerQueryStreamIterator
  helpviewer_keywords:
  - CosmosDatabase.GetContainerQueryStreamIterator method [.NET]
  - GetContainerQueryStreamIterator method [.NET], class CosmosDatabase
  - CosmosDatabase.GetContainerQueryStreamIterator(QueryDefinition, String, QueryRequestOptions, CancellationToken) method [.NET]
  - GetContainerQueryStreamIterator(QueryDefinition, String, QueryRequestOptions, CancellationToken) method [.NET], class CosmosDatabase
  - CosmosDatabase.GetContainerQueryStreamIterator(String, String, QueryRequestOptions, CancellationToken) method [.NET]
  - GetContainerQueryStreamIterator(String, String, QueryRequestOptions, CancellationToken) method [.NET], class CosmosDatabase
  monikers:
  - azure-dotnet-preview
