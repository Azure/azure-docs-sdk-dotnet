### YamlMime:NetMember
type: method
members:
- parameters:
  - namesWithMoniker:
    - value: name
    description: The name of parameter.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: value
    description: The value of parameter.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Core.RequestUriBuilder.AppendQuery(System.String,System.String)
  commentId: M:Azure.Core.RequestUriBuilder.AppendQuery(System.String,System.String)
  name: AppendQuery(String, String)
  fullName: Azure.Core.RequestUriBuilder.AppendQuery(String, String)
  nameWithType: RequestUriBuilder.AppendQuery(String, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public void AppendQuery (string name, string value);
  - lang: fsharp
    values:
    - value: 'member this.AppendQuery : string * string -> unit'
  - lang: vb
    values:
    - value: Public Sub AppendQuery (name As String, value As String)
  monikers:
  - azure-dotnet
  summary: Appends a query parameter adding separator if required. Escapes the value.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: name
    description: The name of parameter.
    type: <xref href="System.ReadOnlySpan`1?alt=System.ReadOnlySpan&text=ReadOnlySpan" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Char?alt=System.Char&text=Char" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: value
    description: The value of parameter.
    type: <xref href="System.ReadOnlySpan`1?alt=System.ReadOnlySpan&text=ReadOnlySpan" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Char?alt=System.Char&text=Char" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: escapeValue
    description: Whether value should be escaped.
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Core.RequestUriBuilder.AppendQuery(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)
  commentId: M:Azure.Core.RequestUriBuilder.AppendQuery(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)
  name: AppendQuery(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Boolean)
  fullName: Azure.Core.RequestUriBuilder.AppendQuery(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Boolean)
  nameWithType: RequestUriBuilder.AppendQuery(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public void AppendQuery (ReadOnlySpan<char> name, ReadOnlySpan<char> value, bool escapeValue);
  - lang: fsharp
    values:
    - value: 'member this.AppendQuery : ReadOnlySpan<char> * ReadOnlySpan<char> * bool -> unit'
  - lang: vb
    values:
    - value: Public Sub AppendQuery (name As ReadOnlySpan(Of Char), value As ReadOnlySpan(Of Char), escapeValue As Boolean)
  monikers:
  - azure-dotnet
  summary: Appends a query parameter adding separator if required.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: name
    description: The name of parameter.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: value
    description: The value of parameter.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: escapeValue
    description: Whether value should be escaped.
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Core.RequestUriBuilder.AppendQuery(System.String,System.String,System.Boolean)
  commentId: M:Azure.Core.RequestUriBuilder.AppendQuery(System.String,System.String,System.Boolean)
  name: AppendQuery(String, String, Boolean)
  fullName: Azure.Core.RequestUriBuilder.AppendQuery(String, String, Boolean)
  nameWithType: RequestUriBuilder.AppendQuery(String, String, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public void AppendQuery (string name, string value, bool escapeValue);
  - lang: fsharp
    values:
    - value: 'member this.AppendQuery : string * string * bool -> unit'
  - lang: vb
    values:
    - value: Public Sub AppendQuery (name As String, value As String, escapeValue As Boolean)
  monikers:
  - azure-dotnet
  summary: Appends a query parameter adding separator if required.
  metadata: {}
uid: Azure.Core.RequestUriBuilder.AppendQuery*
commentId: Overload:Azure.Core.RequestUriBuilder.AppendQuery
namespace: Azure.Core
name: AppendQuery
fullName: Azure.Core.RequestUriBuilder.AppendQuery
nameWithType: RequestUriBuilder.AppendQuery
assembliesWithMoniker:
- value: Azure.Core.dll
packagesWithMoniker:
- value: Azure.Core v1.34.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.Core.RequestUriBuilder.AppendQuery
  api_location:
  - Azure.Core.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Core.RequestUriBuilder.AppendQuery
  - Azure::Core::RequestUriBuilder::AppendQuery
  - AppendQuery
  - RequestUriBuilder.AppendQuery
  - RequestUriBuilder::AppendQuery
  helpviewer_keywords:
  - RequestUriBuilder.AppendQuery method [.NET]
  - AppendQuery method [.NET], class RequestUriBuilder
  - RequestUriBuilder.AppendQuery(String, String) method [.NET]
  - AppendQuery(String, String) method [.NET], class RequestUriBuilder
  - RequestUriBuilder.AppendQuery(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Boolean) method [.NET]
  - AppendQuery(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Boolean) method [.NET], class RequestUriBuilder
  - RequestUriBuilder.AppendQuery(String, String, Boolean) method [.NET]
  - AppendQuery(String, String, Boolean) method [.NET], class RequestUriBuilder
  monikers:
  - azure-dotnet
