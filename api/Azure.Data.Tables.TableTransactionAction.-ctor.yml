### YamlMime:NetMember
type: constructor
members:
- parameters:
  - namesWithMoniker:
    - value: actionType
    description: The operation type to be applied to the <code data-dev-comment-type="paramref">entity</code>
    type: <xref href="Azure.Data.Tables.TableTransactionActionType?alt=Azure.Data.Tables.TableTransactionActionType&text=TableTransactionActionType" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: entity
    description: The table entity to which the <code data-dev-comment-type="paramref">actionType</code> will be applied.
    type: <xref href="Azure.Data.Tables.ITableEntity?alt=Azure.Data.Tables.ITableEntity&text=ITableEntity" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Data.Tables.TableTransactionAction.#ctor(Azure.Data.Tables.TableTransactionActionType,Azure.Data.Tables.ITableEntity)
  commentId: M:Azure.Data.Tables.TableTransactionAction.#ctor(Azure.Data.Tables.TableTransactionActionType,Azure.Data.Tables.ITableEntity)
  name: TableTransactionAction(TableTransactionActionType, ITableEntity)
  fullName: Azure.Data.Tables.TableTransactionAction.TableTransactionAction(TableTransactionActionType, ITableEntity)
  nameWithType: TableTransactionAction.TableTransactionAction(TableTransactionActionType, ITableEntity)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TableTransactionAction (Azure.Data.Tables.TableTransactionActionType actionType, Azure.Data.Tables.ITableEntity entity);
  - lang: fsharp
    values:
    - value: 'new Azure.Data.Tables.TableTransactionAction : Azure.Data.Tables.TableTransactionActionType * Azure.Data.Tables.ITableEntity -> Azure.Data.Tables.TableTransactionAction'
  - lang: vb
    values:
    - value: Public Sub New (actionType As TableTransactionActionType, entity As ITableEntity)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableTransactionAction"></xref>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: actionType
    description: The operation type to be applied to the <code data-dev-comment-type="paramref">entity</code>
    type: <xref href="Azure.Data.Tables.TableTransactionActionType?alt=Azure.Data.Tables.TableTransactionActionType&text=TableTransactionActionType" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: entity
    description: The table entity to which the <code data-dev-comment-type="paramref">actionType</code> will be applied.
    type: <xref href="Azure.Data.Tables.ITableEntity?alt=Azure.Data.Tables.ITableEntity&text=ITableEntity" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: etag
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableTransactionAction.ETag"></xref> to apply to this action.
    type: <xref href="Azure.ETag?alt=Azure.ETag&text=ETag" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Data.Tables.TableTransactionAction.#ctor(Azure.Data.Tables.TableTransactionActionType,Azure.Data.Tables.ITableEntity,Azure.ETag)
  commentId: M:Azure.Data.Tables.TableTransactionAction.#ctor(Azure.Data.Tables.TableTransactionActionType,Azure.Data.Tables.ITableEntity,Azure.ETag)
  name: TableTransactionAction(TableTransactionActionType, ITableEntity, ETag)
  fullName: Azure.Data.Tables.TableTransactionAction.TableTransactionAction(TableTransactionActionType, ITableEntity, ETag)
  nameWithType: TableTransactionAction.TableTransactionAction(TableTransactionActionType, ITableEntity, ETag)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TableTransactionAction (Azure.Data.Tables.TableTransactionActionType actionType, Azure.Data.Tables.ITableEntity entity, Azure.ETag etag = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Data.Tables.TableTransactionAction : Azure.Data.Tables.TableTransactionActionType * Azure.Data.Tables.ITableEntity * Azure.ETag -> Azure.Data.Tables.TableTransactionAction'
  - lang: vb
    values:
    - value: Public Sub New (actionType As TableTransactionActionType, entity As ITableEntity, Optional etag As ETag = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableTransactionAction"></xref>
  metadata: {}
uid: Azure.Data.Tables.TableTransactionAction.#ctor*
commentId: Overload:Azure.Data.Tables.TableTransactionAction.#ctor
namespace: Azure.Data.Tables
name: TableTransactionAction
fullName: Azure.Data.Tables.TableTransactionAction.TableTransactionAction
nameWithType: TableTransactionAction.TableTransactionAction
assembliesWithMoniker:
- value: Azure.Data.Tables.dll
packagesWithMoniker:
- value: Azure.Data.Tables v12.8.0
  monikers:
  - azure-dotnet
- value: Azure.Data.Tables v12.7.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Data.Tables.TableTransactionAction..ctor
  api_location:
  - Azure.Data.Tables.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Data.Tables.TableTransactionAction.#ctor
  - Azure::Data::Tables::TableTransactionAction::#ctor
  - '#ctor'
  - TableTransactionAction.#ctor
  - TableTransactionAction::#ctor
  helpviewer_keywords:
  - TableTransactionAction class [.NET], constructors
  - TableTransactionAction(TableTransactionActionType, ITableEntity) class [.NET], constructors
  - TableTransactionAction(TableTransactionActionType, ITableEntity, ETag) class [.NET], constructors
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
