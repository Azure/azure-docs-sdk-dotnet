### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Maps.Search.Models.MapsQueryType?alt=Azure.Maps.Search.Models.MapsQueryType&text=MapsQueryType" data-throw-if-not-resolved="True"/>
  type: property
  uid: Azure.Maps.Search.Models.MapsQueryType.Global
  commentId: P:Azure.Maps.Search.Models.MapsQueryType.Global
  name: Global
  fullName: Azure.Maps.Search.Models.MapsQueryType.Global
  nameWithType: MapsQueryType.Global
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Azure.Maps.Search.Models.MapsQueryType Global { get; }
  - lang: fsharp
    values:
    - value: 'static member Global : Azure.Maps.Search.Models.MapsQueryType'
  - lang: vb
    values:
    - value: Public Shared ReadOnly Property Global As MapsQueryType
  monikers:
  - azure-dotnet-preview
  summary: Search was performed globally, without biasing to a certain latitude and longitude, and no defined radius.
  metadata: {}
uid: Azure.Maps.Search.Models.MapsQueryType.Global*
commentId: Overload:Azure.Maps.Search.Models.MapsQueryType.Global
namespace: Azure.Maps.Search.Models
name: Global
fullName: Azure.Maps.Search.Models.MapsQueryType.Global
nameWithType: MapsQueryType.Global
assembliesWithMoniker:
- value: Azure.Maps.Search.dll
packagesWithMoniker:
- value: Azure.Maps.Search v1.0.0-beta.4
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Maps.Search.Models.MapsQueryType.Global
  - Azure.Maps.Search.Models.MapsQueryType.get_Global
  api_location:
  - Azure.Maps.Search.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Maps.Search.Models.MapsQueryType.Global
  - Azure::Maps::Search::Models::MapsQueryType::Global
  - Global
  - MapsQueryType.Global
  - MapsQueryType::Global
  helpviewer_keywords:
  - MapsQueryType.Global property [.NET]
  - Global property [.NET], struct MapsQueryType
  monikers:
  - azure-dotnet-preview
