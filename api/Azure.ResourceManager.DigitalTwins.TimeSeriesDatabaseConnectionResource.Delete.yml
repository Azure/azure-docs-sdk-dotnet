### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.ResourceManager.ArmOperation`1?alt=Azure.ResourceManager.ArmOperation&text=ArmOperation" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource?alt=Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource&text=TimeSeriesDatabaseConnectionResource" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Completed"></xref> if the method should wait to return until the long-running operation has completed on the service; <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Started"></xref> if it should return after starting the operation. For more information on long-running operations, please see <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</a>.
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)
  name: Delete(WaitUntil, CancellationToken)
  fullName: Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource.Delete(WaitUntil, CancellationToken)
  nameWithType: TimeSeriesDatabaseConnectionResource.Delete(WaitUntil, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.ResourceManager.ArmOperation<Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource> Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: >-
        abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -> Azure.ResourceManager.ArmOperation<Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource>

        override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -> Azure.ResourceManager.ArmOperation<Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource>
  - lang: vb
    values:
    - value: Public Overridable Function Delete (waitUntil As WaitUntil, cancellationToken As CancellationToken) As ArmOperation(Of TimeSeriesDatabaseConnectionResource)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Delete a time series database connection.

    <ul><li>Request Path/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/timeSeriesDatabaseConnections/{timeSeriesDatabaseConnectionName}</li><li>Operation IdTimeSeriesDatabaseConnections_Delete</li></ul>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.ResourceManager.ArmOperation`1?alt=Azure.ResourceManager.ArmOperation&text=ArmOperation" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource?alt=Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource&text=TimeSeriesDatabaseConnectionResource" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Completed"></xref> if the method should wait to return until the long-running operation has completed on the service; <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Started"></xref> if it should return after starting the operation. For more information on long-running operations, please see <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</a>.
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cleanupConnectionArtifacts
    description: Specifies whether or not to attempt to clean up artifacts that were created in order to establish a connection to the time series database. This is a best-effort attempt that will fail if appropriate permissions are not in place. Setting this to 'true' does not delete any recorded data.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.DigitalTwins.Models.CleanupConnectionArtifact?alt=Azure.ResourceManager.DigitalTwins.Models.CleanupConnectionArtifact&text=CleanupConnectionArtifact" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource.Delete(Azure.WaitUntil,System.Nullable{Azure.ResourceManager.DigitalTwins.Models.CleanupConnectionArtifact},System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource.Delete(Azure.WaitUntil,System.Nullable{Azure.ResourceManager.DigitalTwins.Models.CleanupConnectionArtifact},System.Threading.CancellationToken)
  name: Delete(WaitUntil, Nullable<CleanupConnectionArtifact>, CancellationToken)
  fullName: Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource.Delete(WaitUntil, Nullable<CleanupConnectionArtifact>, CancellationToken)
  nameWithType: TimeSeriesDatabaseConnectionResource.Delete(WaitUntil, Nullable<CleanupConnectionArtifact>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.ResourceManager.ArmOperation<Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource> Delete (Azure.WaitUntil waitUntil, Azure.ResourceManager.DigitalTwins.Models.CleanupConnectionArtifact? cleanupConnectionArtifacts = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member Delete : Azure.WaitUntil * Nullable<Azure.ResourceManager.DigitalTwins.Models.CleanupConnectionArtifact> * System.Threading.CancellationToken -> Azure.ResourceManager.ArmOperation<Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource>

        override this.Delete : Azure.WaitUntil * Nullable<Azure.ResourceManager.DigitalTwins.Models.CleanupConnectionArtifact> * System.Threading.CancellationToken -> Azure.ResourceManager.ArmOperation<Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource>
  - lang: vb
    values:
    - value: Public Overridable Function Delete (waitUntil As WaitUntil, Optional cleanupConnectionArtifacts As Nullable(Of CleanupConnectionArtifact) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of TimeSeriesDatabaseConnectionResource)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Delete a time series database connection.

    <ul><li>Request Path/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/timeSeriesDatabaseConnections/{timeSeriesDatabaseConnectionName}</li><li>Operation IdTimeSeriesDatabaseConnections_Delete</li></ul>
  metadata: {}
uid: Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource.Delete*
commentId: Overload:Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource.Delete
namespace: Azure.ResourceManager.DigitalTwins
name: Delete
fullName: Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource.Delete
nameWithType: TimeSeriesDatabaseConnectionResource.Delete
assembliesWithMoniker:
- value: Azure.ResourceManager.DigitalTwins.dll
packagesWithMoniker:
- value: Azure.ResourceManager.DigitalTwins v1.2.0
  monikers:
  - azure-dotnet
- value: Azure.ResourceManager.DigitalTwins v1.3.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource.Delete
  api_location:
  - Azure.ResourceManager.DigitalTwins.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.DigitalTwins.TimeSeriesDatabaseConnectionResource.Delete
  - Azure::ResourceManager::DigitalTwins::TimeSeriesDatabaseConnectionResource::Delete
  - Delete
  - TimeSeriesDatabaseConnectionResource.Delete
  - TimeSeriesDatabaseConnectionResource::Delete
  helpviewer_keywords:
  - TimeSeriesDatabaseConnectionResource.Delete method [.NET]
  - Delete method [.NET], class TimeSeriesDatabaseConnectionResource
  - TimeSeriesDatabaseConnectionResource.Delete(WaitUntil, CancellationToken) method [.NET]
  - Delete(WaitUntil, CancellationToken) method [.NET], class TimeSeriesDatabaseConnectionResource
  - TimeSeriesDatabaseConnectionResource.Delete(WaitUntil, Nullable<CleanupConnectionArtifact>, CancellationToken) method [.NET]
  - Delete(WaitUntil, Nullable<CleanupConnectionArtifact>, CancellationToken) method [.NET], class TimeSeriesDatabaseConnectionResource
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
