### YamlMime:NetMember
type: constructor
members:
- parameters:
  - namesWithMoniker:
    - value: endpoint
    description: The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com).
    type: <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: marketplaceID
    description: The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2).
    type: <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: sellerID
    description: The Amazon seller ID.
    type: <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: accessKeyId
    description: The access key id used to access data.
    type: <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">endpoint</code>, <code data-dev-comment-type="paramref">marketplaceID</code>, <code data-dev-comment-type="paramref">sellerID</code> or <code data-dev-comment-type="paramref">accessKeyId</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Analytics.Synapse.Artifacts.Models.AmazonMWSLinkedService.#ctor(System.Object,System.Object,System.Object,System.Object)
  commentId: M:Azure.Analytics.Synapse.Artifacts.Models.AmazonMWSLinkedService.#ctor(System.Object,System.Object,System.Object,System.Object)
  name: AmazonMWSLinkedService(Object, Object, Object, Object)
  fullName: Azure.Analytics.Synapse.Artifacts.Models.AmazonMWSLinkedService.AmazonMWSLinkedService(Object, Object, Object, Object)
  nameWithType: AmazonMWSLinkedService.AmazonMWSLinkedService(Object, Object, Object, Object)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public AmazonMWSLinkedService (object endpoint, object marketplaceID, object sellerID, object accessKeyId);
  - lang: fsharp
    values:
    - value: 'new Azure.Analytics.Synapse.Artifacts.Models.AmazonMWSLinkedService : obj * obj * obj * obj -> Azure.Analytics.Synapse.Artifacts.Models.AmazonMWSLinkedService'
  - lang: vb
    values:
    - value: Public Sub New (endpoint As Object, marketplaceID As Object, sellerID As Object, accessKeyId As Object)
  monikers:
  - azure-dotnet-preview
  summary: Initializes a new instance of AmazonMWSLinkedService.
  metadata: {}
uid: Azure.Analytics.Synapse.Artifacts.Models.AmazonMWSLinkedService.#ctor*
commentId: Overload:Azure.Analytics.Synapse.Artifacts.Models.AmazonMWSLinkedService.#ctor
namespace: Azure.Analytics.Synapse.Artifacts.Models
name: AmazonMWSLinkedService
fullName: Azure.Analytics.Synapse.Artifacts.Models.AmazonMWSLinkedService.AmazonMWSLinkedService
nameWithType: AmazonMWSLinkedService.AmazonMWSLinkedService
assembliesWithMoniker:
- value: Azure.Analytics.Synapse.Artifacts.dll
packagesWithMoniker:
- value: Azure.Analytics.Synapse.Artifacts v1.0.0-preview.17
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Synapse.Artifacts.Models.AmazonMWSLinkedService..ctor
  api_location:
  - Azure.Analytics.Synapse.Artifacts.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Synapse.Artifacts.Models.AmazonMWSLinkedService.#ctor
  - Azure::Analytics::Synapse::Artifacts::Models::AmazonMWSLinkedService::#ctor
  - '#ctor'
  - AmazonMWSLinkedService.#ctor
  - AmazonMWSLinkedService::#ctor
  helpviewer_keywords:
  - AmazonMWSLinkedService class [.NET], constructors
  - AmazonMWSLinkedService(Object, Object, Object, Object) class [.NET], constructors
  monikers:
  - azure-dotnet-preview
