### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Collections.Generic.IReadOnlyList`1?alt=System.Collections.Generic.IReadOnlyList&text=IReadOnlyList" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule?alt=Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&text=RoleManagementPolicyRule" data-throw-if-not-resolved="True"/>&gt;
  type: property
  uid: Azure.ResourceManager.Authorization.RoleManagementPolicyData.EffectiveRules
  commentId: P:Azure.ResourceManager.Authorization.RoleManagementPolicyData.EffectiveRules
  name: EffectiveRules
  fullName: Azure.ResourceManager.Authorization.RoleManagementPolicyData.EffectiveRules
  nameWithType: RoleManagementPolicyData.EffectiveRules
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Collections.Generic.IReadOnlyList<Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule> EffectiveRules { get; }
  - lang: fsharp
    values:
    - value: 'member this.EffectiveRules : System.Collections.Generic.IReadOnlyList<Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule>'
  - lang: vb
    values:
    - value: Public ReadOnly Property EffectiveRules As IReadOnlyList(Of RoleManagementPolicyRule)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    The readonly computed rule applied to the policy.

    Please note <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule"></xref> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.

    The available derived classes include <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule"></xref>.
  metadata: {}
uid: Azure.ResourceManager.Authorization.RoleManagementPolicyData.EffectiveRules*
commentId: Overload:Azure.ResourceManager.Authorization.RoleManagementPolicyData.EffectiveRules
namespace: Azure.ResourceManager.Authorization
name: EffectiveRules
fullName: Azure.ResourceManager.Authorization.RoleManagementPolicyData.EffectiveRules
nameWithType: RoleManagementPolicyData.EffectiveRules
assembliesWithMoniker:
- value: Azure.ResourceManager.Authorization.dll
packagesWithMoniker:
- value: Azure.ResourceManager.Authorization v1.0.1
  monikers:
  - azure-dotnet
- value: Azure.ResourceManager.Authorization v1.1.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.Authorization.RoleManagementPolicyData.EffectiveRules
  - Azure.ResourceManager.Authorization.RoleManagementPolicyData.get_EffectiveRules
  api_location:
  - Azure.ResourceManager.Authorization.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.Authorization.RoleManagementPolicyData.EffectiveRules
  - Azure::ResourceManager::Authorization::RoleManagementPolicyData::EffectiveRules
  - EffectiveRules
  - RoleManagementPolicyData.EffectiveRules
  - RoleManagementPolicyData::EffectiveRules
  helpviewer_keywords:
  - RoleManagementPolicyData.EffectiveRules property [.NET]
  - EffectiveRules property [.NET], class RoleManagementPolicyData
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
