### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: devBoxName
    description: The name of a Dev Box.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: userId
    description: The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">devBoxName</code> or <code data-dev-comment-type="paramref">userId</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">devBoxName</code> or <code data-dev-comment-type="paramref">userId</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Developer.DevCenter.DevBoxesClient.GetRemoteConnectionAsync(System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.Developer.DevCenter.DevBoxesClient.GetRemoteConnectionAsync(System.String,System.String,Azure.RequestContext)
  name: GetRemoteConnectionAsync(String, String, RequestContext)
  fullName: Azure.Developer.DevCenter.DevBoxesClient.GetRemoteConnectionAsync(String, String, RequestContext)
  nameWithType: DevBoxesClient.GetRemoteConnectionAsync(String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> GetRemoteConnectionAsync (string devBoxName, string userId = "me", Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetRemoteConnectionAsync : string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.GetRemoteConnectionAsync : string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function GetRemoteConnectionAsync (devBoxName As String, Optional userId As String = "me", Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: Gets RDP Connection info.
  remarks: >-
    <p>Below is the JSON schema for the response payload.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">RemoteConnection</code>: 


    ```

    {
      webUrl: string, # Optional. URL to open a browser based RDP session
      rdpConnectionUrl: string, # Optional. Link to open a Remote Desktop session
    }

    ```

    </p>
  examples: >-
    This sample shows how to call GetRemoteConnectionAsync with required parameters and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DevBoxesClient(endpoint, "<projectName>", credential);


    Response response = await client.GetRemoteConnectionAsync("<devBoxName>");


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.ToString());

    ```

    This sample shows how to call GetRemoteConnectionAsync with all parameters, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DevBoxesClient(endpoint, "<projectName>", credential);


    Response response = await client.GetRemoteConnectionAsync("<devBoxName>", <me>);


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("webUrl").ToString());

    Console.WriteLine(result.GetProperty("rdpConnectionUrl").ToString());

    ```
  metadata: {}
uid: Azure.Developer.DevCenter.DevBoxesClient.GetRemoteConnectionAsync*
commentId: Overload:Azure.Developer.DevCenter.DevBoxesClient.GetRemoteConnectionAsync
namespace: Azure.Developer.DevCenter
name: GetRemoteConnectionAsync
fullName: Azure.Developer.DevCenter.DevBoxesClient.GetRemoteConnectionAsync
nameWithType: DevBoxesClient.GetRemoteConnectionAsync
assembliesWithMoniker:
- value: Azure.Developer.DevCenter.dll
packagesWithMoniker:
- value: Azure.Developer.DevCenter v1.0.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Developer.DevCenter.DevBoxesClient.GetRemoteConnectionAsync
  api_location:
  - Azure.Developer.DevCenter.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Developer.DevCenter.DevBoxesClient.GetRemoteConnectionAsync
  - Azure::Developer::DevCenter::DevBoxesClient::GetRemoteConnectionAsync
  - GetRemoteConnectionAsync
  - DevBoxesClient.GetRemoteConnectionAsync
  - DevBoxesClient::GetRemoteConnectionAsync
  helpviewer_keywords:
  - DevBoxesClient.GetRemoteConnectionAsync method [.NET]
  - GetRemoteConnectionAsync method [.NET], class DevBoxesClient
  - DevBoxesClient.GetRemoteConnectionAsync(String, String, RequestContext) method [.NET]
  - GetRemoteConnectionAsync(String, String, RequestContext) method [.NET], class DevBoxesClient
  monikers:
  - azure-dotnet-preview
