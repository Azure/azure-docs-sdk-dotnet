### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: connectionId
    description: The connection Id.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: Options specifying the cancellation token, controlling error reporting, etc.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.ConnectionExistsAsync(System.String,Azure.RequestContext)
  commentId: M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.ConnectionExistsAsync(System.String,Azure.RequestContext)
  name: ConnectionExistsAsync(String, RequestContext)
  fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.ConnectionExistsAsync(String, RequestContext)
  nameWithType: WebPubSubServiceClient.ConnectionExistsAsync(String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<bool>> ConnectionExistsAsync (string connectionId, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member ConnectionExistsAsync : string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response<bool>>

        override this.ConnectionExistsAsync : string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response<bool>>
  - lang: vb
    values:
    - value: Public Overridable Function ConnectionExistsAsync (connectionId As String, Optional context As RequestContext = Nothing) As Task(Of Response(Of Boolean))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Check if the connection with the given connectionId exists.
  metadata: {}
uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.ConnectionExistsAsync*
commentId: Overload:Azure.Messaging.WebPubSub.WebPubSubServiceClient.ConnectionExistsAsync
namespace: Azure.Messaging.WebPubSub
name: ConnectionExistsAsync
fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.ConnectionExistsAsync
nameWithType: WebPubSubServiceClient.ConnectionExistsAsync
assembliesWithMoniker:
- value: Azure.Messaging.WebPubSub.dll
packagesWithMoniker:
- value: Azure.Messaging.WebPubSub v1.3.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.WebPubSub v1.1.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.WebPubSub.WebPubSubServiceClient.ConnectionExistsAsync
  api_location:
  - Azure.Messaging.WebPubSub.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.WebPubSub.WebPubSubServiceClient.ConnectionExistsAsync
  - Azure::Messaging::WebPubSub::WebPubSubServiceClient::ConnectionExistsAsync
  - ConnectionExistsAsync
  - WebPubSubServiceClient.ConnectionExistsAsync
  - WebPubSubServiceClient::ConnectionExistsAsync
  helpviewer_keywords:
  - WebPubSubServiceClient.ConnectionExistsAsync method [.NET]
  - ConnectionExistsAsync method [.NET], class WebPubSubServiceClient
  - WebPubSubServiceClient.ConnectionExistsAsync(String, RequestContext) method [.NET]
  - ConnectionExistsAsync(String, RequestContext) method [.NET], class WebPubSubServiceClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
