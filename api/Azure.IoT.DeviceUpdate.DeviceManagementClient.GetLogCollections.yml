### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Pageable`1?alt=Azure.Pageable&text=Pageable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Pageable`1"></xref> from the service containing a list of <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> objects. Details of the body schema for each item in the collection are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetLogCollections(Azure.RequestContext)
  commentId: M:Azure.IoT.DeviceUpdate.DeviceManagementClient.GetLogCollections(Azure.RequestContext)
  name: GetLogCollections(RequestContext)
  fullName: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetLogCollections(RequestContext)
  nameWithType: DeviceManagementClient.GetLogCollections(RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Pageable<BinaryData> GetLogCollections (Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetLogCollections : Azure.RequestContext -> Azure.Pageable<BinaryData>

        override this.GetLogCollections : Azure.RequestContext -> Azure.Pageable<BinaryData>
  - lang: vb
    values:
    - value: Public Overridable Function GetLogCollections (Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Get all device diagnostics log collections.
  remarks: >-
    <p>Below is the JSON schema for one item in the pageable response.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">LogCollectionListValue</code>: 


    ```

    {
                  operationId: string, # Optional. The log collection id.
                  deviceList: [
                    {
                      deviceId: string, # Required. Device Id
                      moduleId: string, # Optional. Module Id
                    }
                  ], # Required. Array of Device Update agent ids
                  description: string, # Optional. Description of the diagnostics operation.
                  createdDateTime: string, # Optional. The timestamp when the operation was created.
                  lastActionDateTime: string, # Optional. A timestamp for when the current state was entered.
                  status: "NotStarted" | "Running" | "Succeeded" | "Failed", # Optional. Operation status.
                }
    ```

    </p>
  examples: >-
    This sample shows how to call GetLogCollections and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DeviceManagementClient(endpoint, "<instanceId>", credential);


    foreach (var data in client.GetLogCollections())

    {
        JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        Console.WriteLine(result.GetProperty("operationId").ToString());
        Console.WriteLine(result.GetProperty("deviceList")[0].GetProperty("deviceId").ToString());
        Console.WriteLine(result.GetProperty("deviceList")[0].GetProperty("moduleId").ToString());
        Console.WriteLine(result.GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("createdDateTime").ToString());
        Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
        Console.WriteLine(result.GetProperty("status").ToString());
    }

    ```
  metadata: {}
uid: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetLogCollections*
commentId: Overload:Azure.IoT.DeviceUpdate.DeviceManagementClient.GetLogCollections
namespace: Azure.IoT.DeviceUpdate
name: GetLogCollections
fullName: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetLogCollections
nameWithType: DeviceManagementClient.GetLogCollections
assembliesWithMoniker:
- value: Azure.IoT.DeviceUpdate.dll
packagesWithMoniker:
- value: Azure.IoT.DeviceUpdate v1.0.0
  monikers:
  - azure-dotnet
- value: Azure.IoT.DeviceUpdate v1.0.0-beta.4
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.IoT.DeviceUpdate.DeviceManagementClient.GetLogCollections
  api_location:
  - Azure.IoT.DeviceUpdate.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.IoT.DeviceUpdate.DeviceManagementClient.GetLogCollections
  - Azure::IoT::DeviceUpdate::DeviceManagementClient::GetLogCollections
  - GetLogCollections
  - DeviceManagementClient.GetLogCollections
  - DeviceManagementClient::GetLogCollections
  helpviewer_keywords:
  - DeviceManagementClient.GetLogCollections method [.NET]
  - GetLogCollections method [.NET], class DeviceManagementClient
  - DeviceManagementClient.GetLogCollections(RequestContext) method [.NET]
  - GetLogCollections(RequestContext) method [.NET], class DeviceManagementClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
