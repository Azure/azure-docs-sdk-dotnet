### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Operation`1?alt=Azure.Operation&text=Operation" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Operation"></xref> representing an asynchronous operation on the service.
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Completed"></xref> if the method should wait to return until the long-running operation has completed on the service; <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Started"></xref> if it should return after starting the operation. For more information on long-running operations, please see <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</a>.
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: projectName
    description: The name of the project to use.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: jobId
    description: The job ID.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">projectName</code> or <code data-dev-comment-type="paramref">jobId</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">projectName</code> or <code data-dev-comment-type="paramref">jobId</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.CancelTrainingJobAsync(Azure.WaitUntil,System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.CancelTrainingJobAsync(Azure.WaitUntil,System.String,System.String,Azure.RequestContext)
  name: CancelTrainingJobAsync(WaitUntil, String, String, RequestContext)
  fullName: Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.CancelTrainingJobAsync(WaitUntil, String, String, RequestContext)
  nameWithType: ConversationAuthoringClient.CancelTrainingJobAsync(WaitUntil, String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Operation<BinaryData>> CancelTrainingJobAsync (Azure.WaitUntil waitUntil, string projectName, string jobId, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member CancelTrainingJobAsync : Azure.WaitUntil * string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Operation<BinaryData>>

        override this.CancelTrainingJobAsync : Azure.WaitUntil * string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Operation<BinaryData>>
  - lang: vb
    values:
    - value: Public Overridable Function CancelTrainingJobAsync (waitUntil As WaitUntil, projectName As String, jobId As String, Optional context As RequestContext = Nothing) As Task(Of Operation(Of BinaryData))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    [Protocol Method] Triggers a cancellation for a running training job.

    <ul><li>

    This <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</a> allows explicit creation of the request and processing of the response for advanced scenarios.

    </li></ul>
  remarks: '<p>Additional information can be found in the service REST API documentation: https://learn.microsoft.com/rest/api/language/2023-04-01/conversational-analysis-authoring/cancel-training-job</p>'
  examples: >-
    This sample shows how to call CancelTrainingJobAsync with required parameters and parse the result.


    ```

    var credential = new AzureKeyCredential("<key>");

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new ConversationAuthoringClient(endpoint, credential);


    var operation = await client.CancelTrainingJobAsync(WaitUntil.Completed, "<projectName>", "<jobId>");


    BinaryData responseData = operation.Value;

    JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;

    Console.WriteLine(result.GetProperty("result").GetProperty("modelLabel").ToString());

    Console.WriteLine(result.GetProperty("result").GetProperty("trainingConfigVersion").ToString());

    Console.WriteLine(result.GetProperty("result").GetProperty("trainingMode").ToString());

    Console.WriteLine(result.GetProperty("result").GetProperty("trainingStatus").GetProperty("percentComplete").ToString());

    Console.WriteLine(result.GetProperty("result").GetProperty("trainingStatus").GetProperty("startDateTime").ToString());

    Console.WriteLine(result.GetProperty("result").GetProperty("trainingStatus").GetProperty("endDateTime").ToString());

    Console.WriteLine(result.GetProperty("result").GetProperty("trainingStatus").GetProperty("status").ToString());

    Console.WriteLine(result.GetProperty("result").GetProperty("evaluationStatus").GetProperty("percentComplete").ToString());

    Console.WriteLine(result.GetProperty("result").GetProperty("evaluationStatus").GetProperty("startDateTime").ToString());

    Console.WriteLine(result.GetProperty("result").GetProperty("evaluationStatus").GetProperty("endDateTime").ToString());

    Console.WriteLine(result.GetProperty("result").GetProperty("evaluationStatus").GetProperty("status").ToString());

    Console.WriteLine(result.GetProperty("result").GetProperty("estimatedEndDateTime").ToString());

    Console.WriteLine(result.GetProperty("jobId").ToString());

    Console.WriteLine(result.GetProperty("createdDateTime").ToString());

    Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());

    Console.WriteLine(result.GetProperty("expirationDateTime").ToString());

    Console.WriteLine(result.GetProperty("status").ToString());

    Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());

    Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("message").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("details").GetProperty("<test>").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("target").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("message").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("details").GetProperty("<test>").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("target").ToString());

    ```
  metadata: {}
uid: Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.CancelTrainingJobAsync*
commentId: Overload:Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.CancelTrainingJobAsync
namespace: Azure.AI.Language.Conversations.Authoring
name: CancelTrainingJobAsync
fullName: Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.CancelTrainingJobAsync
nameWithType: ConversationAuthoringClient.CancelTrainingJobAsync
assembliesWithMoniker:
- value: Azure.AI.Language.Conversations.dll
packagesWithMoniker:
- value: Azure.AI.Language.Conversations v1.1.0
  monikers:
  - azure-dotnet
- value: Azure.AI.Language.Conversations v1.1.0-beta.2
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.CancelTrainingJobAsync
  api_location:
  - Azure.AI.Language.Conversations.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.CancelTrainingJobAsync
  - Azure::AI::Language::Conversations::Authoring::ConversationAuthoringClient::CancelTrainingJobAsync
  - CancelTrainingJobAsync
  - ConversationAuthoringClient.CancelTrainingJobAsync
  - ConversationAuthoringClient::CancelTrainingJobAsync
  helpviewer_keywords:
  - ConversationAuthoringClient.CancelTrainingJobAsync method [.NET]
  - CancelTrainingJobAsync method [.NET], class ConversationAuthoringClient
  - ConversationAuthoringClient.CancelTrainingJobAsync(WaitUntil, String, String, RequestContext) method [.NET]
  - CancelTrainingJobAsync(WaitUntil, String, String, RequestContext) method [.NET], class ConversationAuthoringClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
