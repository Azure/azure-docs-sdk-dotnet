### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: cloudEvent
    description: The set of events to be published to Event Grid.
    type: <xref href="Azure.Messaging.CloudEvent?alt=Azure.Messaging.CloudEvent&text=CloudEvent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: channelName
    description: The partner topic channel to publish the event to.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional cancellation token instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(Azure.Messaging.CloudEvent,System.String,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(Azure.Messaging.CloudEvent,System.String,System.Threading.CancellationToken)
  name: SendEventAsync(CloudEvent, String, CancellationToken)
  fullName: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(CloudEvent, String, CancellationToken)
  nameWithType: EventGridPublisherClient.SendEventAsync(CloudEvent, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> SendEventAsync (Azure.Messaging.CloudEvent cloudEvent, string channelName, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SendEventAsync : Azure.Messaging.CloudEvent * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>

        override this.SendEventAsync : Azure.Messaging.CloudEvent * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function SendEventAsync (cloudEvent As CloudEvent, channelName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Publishes a CloudEvent to an Event Grid topic.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: customEvent
    description: A custom schema event to be published to Event Grid.
    type: <xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional cancellation token instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(System.BinaryData,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(System.BinaryData,System.Threading.CancellationToken)
  name: SendEventAsync(BinaryData, CancellationToken)
  fullName: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(BinaryData, CancellationToken)
  nameWithType: EventGridPublisherClient.SendEventAsync(BinaryData, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> SendEventAsync (BinaryData customEvent, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SendEventAsync : BinaryData * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>

        override this.SendEventAsync : BinaryData * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function SendEventAsync (customEvent As BinaryData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Publishes a set of custom schema events to an Event Grid topic.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: cloudEvent
    description: The set of events to be published to Event Grid.
    type: <xref href="Azure.Messaging.CloudEvent?alt=Azure.Messaging.CloudEvent&text=CloudEvent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional cancellation token instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(Azure.Messaging.CloudEvent,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(Azure.Messaging.CloudEvent,System.Threading.CancellationToken)
  name: SendEventAsync(CloudEvent, CancellationToken)
  fullName: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(CloudEvent, CancellationToken)
  nameWithType: EventGridPublisherClient.SendEventAsync(CloudEvent, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> SendEventAsync (Azure.Messaging.CloudEvent cloudEvent, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SendEventAsync : Azure.Messaging.CloudEvent * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>

        override this.SendEventAsync : Azure.Messaging.CloudEvent * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function SendEventAsync (cloudEvent As CloudEvent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Publishes a CloudEvent to an Event Grid topic.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: eventGridEvent
    description: The event to be published to Event Grid.
    type: <xref href="Azure.Messaging.EventGrid.EventGridEvent?alt=Azure.Messaging.EventGrid.EventGridEvent&text=EventGridEvent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional cancellation token instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(Azure.Messaging.EventGrid.EventGridEvent,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(Azure.Messaging.EventGrid.EventGridEvent,System.Threading.CancellationToken)
  name: SendEventAsync(EventGridEvent, CancellationToken)
  fullName: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync(EventGridEvent, CancellationToken)
  nameWithType: EventGridPublisherClient.SendEventAsync(EventGridEvent, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> SendEventAsync (Azure.Messaging.EventGrid.EventGridEvent eventGridEvent, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SendEventAsync : Azure.Messaging.EventGrid.EventGridEvent * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>

        override this.SendEventAsync : Azure.Messaging.EventGrid.EventGridEvent * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function SendEventAsync (eventGridEvent As EventGridEvent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Publishes a set of EventGridEvents to an Event Grid topic.
  metadata: {}
uid: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync*
commentId: Overload:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync
namespace: Azure.Messaging.EventGrid
name: SendEventAsync
fullName: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync
nameWithType: EventGridPublisherClient.SendEventAsync
assembliesWithMoniker:
- value: Azure.Messaging.EventGrid.dll
packagesWithMoniker:
- value: Azure.Messaging.EventGrid v4.17.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventGrid v4.18.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync
  api_location:
  - Azure.Messaging.EventGrid.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventAsync
  - Azure::Messaging::EventGrid::EventGridPublisherClient::SendEventAsync
  - SendEventAsync
  - EventGridPublisherClient.SendEventAsync
  - EventGridPublisherClient::SendEventAsync
  helpviewer_keywords:
  - EventGridPublisherClient.SendEventAsync method [.NET]
  - SendEventAsync method [.NET], class EventGridPublisherClient
  - EventGridPublisherClient.SendEventAsync(CloudEvent, String, CancellationToken) method [.NET]
  - SendEventAsync(CloudEvent, String, CancellationToken) method [.NET], class EventGridPublisherClient
  - EventGridPublisherClient.SendEventAsync(BinaryData, CancellationToken) method [.NET]
  - SendEventAsync(BinaryData, CancellationToken) method [.NET], class EventGridPublisherClient
  - EventGridPublisherClient.SendEventAsync(CloudEvent, CancellationToken) method [.NET]
  - SendEventAsync(CloudEvent, CancellationToken) method [.NET], class EventGridPublisherClient
  - EventGridPublisherClient.SendEventAsync(EventGridEvent, CancellationToken) method [.NET]
  - SendEventAsync(EventGridEvent, CancellationToken) method [.NET], class EventGridPublisherClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
