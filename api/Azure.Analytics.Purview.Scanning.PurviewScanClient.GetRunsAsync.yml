### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.AsyncPageable`1?alt=Azure.AsyncPageable&text=AsyncPageable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: options
    description: The request options.
    type: <xref href="Azure.RequestOptions?alt=Azure.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Analytics.Purview.Scanning.PurviewScanClient.GetRunsAsync(Azure.RequestOptions)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewScanClient.GetRunsAsync(Azure.RequestOptions)
  name: GetRunsAsync(RequestOptions)
  fullName: Azure.Analytics.Purview.Scanning.PurviewScanClient.GetRunsAsync(RequestOptions)
  nameWithType: PurviewScanClient.GetRunsAsync(RequestOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.AsyncPageable<BinaryData> GetRunsAsync (Azure.RequestOptions options);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetRunsAsync : Azure.RequestOptions -> Azure.AsyncPageable<BinaryData>

        override this.GetRunsAsync : Azure.RequestOptions -> Azure.AsyncPageable<BinaryData>
  - lang: vb
    values:
    - value: Public Overridable Function GetRunsAsync (options As RequestOptions) As AsyncPageable(Of BinaryData)
  monikers:
  - azure-dotnet-preview
  summary: Lists the scan history of a scan.
  remarks: >-
    <p>Schema for <code data-dev-comment-type="c">Response Body</code>: 


    ```

    {
                  value: [
                    {
                      parentId: string,
                      id: string,
                      resourceId: string,
                      status: string,
                      assetsDiscovered: number,
                      assetsClassified: number,
                      diagnostics: {
                        notifications: [
                          {
                            message: string,
                            code: number
                          }
                        ],
                        exceptionCountMap: Dictionary<string, number>
                      },
                      startTime: string (ISO 8601 Format),
                      queuedTime: string (ISO 8601 Format),
                      pipelineStartTime: string (ISO 8601 Format),
                      endTime: string (ISO 8601 Format),
                      scanRulesetVersion: number,
                      scanRulesetType: "Custom" | "System",
                      scanLevelType: "Full" | "Incremental",
                      errorMessage: string,
                      error: {
                        code: string,
                        message: string,
                        target: string,
                        details: [
                          {
                            code: string,
                            message: string,
                            target: string,
                            details: [ErrorModel]
                          }
                        ]
                      },
                      runType: string,
                      dataSourceType: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
                    }
                  ],
                  nextLink: string,
                  count: number
                }
    ```

     Schema for <code data-dev-comment-type="c">Response Error</code>: 


    ```

    {
                  error: {
                    code: string,
                    message: string,
                    target: string,
                    details: [
                      {
                        code: string,
                        message: string,
                        target: string,
                        details: [ErrorModel]
                      }
                    ]
                  }
                }
    ```

    </p>
  metadata: {}
uid: Azure.Analytics.Purview.Scanning.PurviewScanClient.GetRunsAsync*
commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewScanClient.GetRunsAsync
namespace: Azure.Analytics.Purview.Scanning
name: GetRunsAsync
fullName: Azure.Analytics.Purview.Scanning.PurviewScanClient.GetRunsAsync
nameWithType: PurviewScanClient.GetRunsAsync
assembliesWithMoniker:
- value: Azure.Analytics.Purview.Scanning.dll
packagesWithMoniker:
- value: Azure.Analytics.Purview.Scanning v1.0.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Purview.Scanning.PurviewScanClient.GetRunsAsync
  api_location:
  - Azure.Analytics.Purview.Scanning.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Purview.Scanning.PurviewScanClient.GetRunsAsync
  - Azure::Analytics::Purview::Scanning::PurviewScanClient::GetRunsAsync
  - GetRunsAsync
  - PurviewScanClient.GetRunsAsync
  - PurviewScanClient::GetRunsAsync
  helpviewer_keywords:
  - PurviewScanClient.GetRunsAsync method [.NET]
  - GetRunsAsync method [.NET], class PurviewScanClient
  - PurviewScanClient.GetRunsAsync(RequestOptions) method [.NET]
  - GetRunsAsync(RequestOptions) method [.NET], class PurviewScanClient
  monikers:
  - azure-dotnet-preview
