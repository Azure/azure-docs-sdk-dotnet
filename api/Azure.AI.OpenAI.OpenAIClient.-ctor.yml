### YamlMime:NetMember
type: constructor
members:
- type: constructor
  uid: Azure.AI.OpenAI.OpenAIClient.#ctor
  commentId: M:Azure.AI.OpenAI.OpenAIClient.#ctor
  name: OpenAIClient()
  fullName: Azure.AI.OpenAI.OpenAIClient.OpenAIClient()
  nameWithType: OpenAIClient.OpenAIClient()
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: protected OpenAIClient ();
  - lang: vb
    values:
    - value: Protected Sub New ()
  monikers:
  - azure-dotnet-preview
  summary: Initializes a new instance of OpenAIClient for mocking.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: openAIApiKey
    description: The API key to use when connecting to the non-Azure OpenAI endpoint.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">openAIApiKey</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.AI.OpenAI.OpenAIClient.#ctor(System.String)
  commentId: M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.String)
  name: OpenAIClient(String)
  fullName: Azure.AI.OpenAI.OpenAIClient.OpenAIClient(String)
  nameWithType: OpenAIClient.OpenAIClient(String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public OpenAIClient (string openAIApiKey);
  - lang: fsharp
    values:
    - value: 'new Azure.AI.OpenAI.OpenAIClient : string -> Azure.AI.OpenAI.OpenAIClient'
  - lang: vb
    values:
    - value: Public Sub New (openAIApiKey As String)
  monikers:
  - azure-dotnet-preview
  summary: Initializes a instance of OpenAIClient for use with the non-Azure OpenAI endpoint.
  remarks: <p><xref data-throw-if-not-resolved="true" uid="Azure.AI.OpenAI.OpenAIClient"></xref> objects initialized with this constructor can only be used with the non-Azure OpenAI inference endpoint. To use <xref data-throw-if-not-resolved="true" uid="Azure.AI.OpenAI.OpenAIClient"></xref> with an Azure OpenAI resource, use a constructor that accepts a resource URI and Azure authentication credential, instead.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: openAIApiKey
    description: The API key to use when connecting to the non-Azure OpenAI endpoint.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: The options for configuring the client.
    type: <xref href="Azure.AI.OpenAI.OpenAIClientOptions?alt=Azure.AI.OpenAI.OpenAIClientOptions&text=OpenAIClientOptions" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">openAIApiKey</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.AI.OpenAI.OpenAIClient.#ctor(System.String,Azure.AI.OpenAI.OpenAIClientOptions)
  commentId: M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.String,Azure.AI.OpenAI.OpenAIClientOptions)
  name: OpenAIClient(String, OpenAIClientOptions)
  fullName: Azure.AI.OpenAI.OpenAIClient.OpenAIClient(String, OpenAIClientOptions)
  nameWithType: OpenAIClient.OpenAIClient(String, OpenAIClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public OpenAIClient (string openAIApiKey, Azure.AI.OpenAI.OpenAIClientOptions options);
  - lang: fsharp
    values:
    - value: 'new Azure.AI.OpenAI.OpenAIClient : string * Azure.AI.OpenAI.OpenAIClientOptions -> Azure.AI.OpenAI.OpenAIClient'
  - lang: vb
    values:
    - value: Public Sub New (openAIApiKey As String, options As OpenAIClientOptions)
  monikers:
  - azure-dotnet-preview
  summary: Initializes a instance of OpenAIClient for use with the non-Azure OpenAI endpoint.
  remarks: <p><xref data-throw-if-not-resolved="true" uid="Azure.AI.OpenAI.OpenAIClient"></xref> objects initialized with this constructor can only be used with the non-Azure OpenAI inference endpoint. To use <xref data-throw-if-not-resolved="true" uid="Azure.AI.OpenAI.OpenAIClient"></xref> with an Azure OpenAI resource, use a constructor that accepts a resource URI and Azure authentication credential, instead.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: endpoint
    description: >-
      The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.

      This should include protocol and hostname. An example could be:

      https://my-resource.openai.azure.com .
    type: <xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: keyCredential
    description: A key credential used to authenticate to an Azure OpenAI resource.
    type: <xref href="Azure.AzureKeyCredential?alt=Azure.AzureKeyCredential&text=AzureKeyCredential" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">endpoint</code> or <code data-dev-comment-type="paramref">keyCredential</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.AzureKeyCredential)
  commentId: M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.AzureKeyCredential)
  name: OpenAIClient(Uri, AzureKeyCredential)
  fullName: Azure.AI.OpenAI.OpenAIClient.OpenAIClient(Uri, AzureKeyCredential)
  nameWithType: OpenAIClient.OpenAIClient(Uri, AzureKeyCredential)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public OpenAIClient (Uri endpoint, Azure.AzureKeyCredential keyCredential);
  - lang: fsharp
    values:
    - value: 'new Azure.AI.OpenAI.OpenAIClient : Uri * Azure.AzureKeyCredential -> Azure.AI.OpenAI.OpenAIClient'
  - lang: vb
    values:
    - value: Public Sub New (endpoint As Uri, keyCredential As AzureKeyCredential)
  monikers:
  - azure-dotnet-preview
  summary: Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
  remarks: <p><xref data-throw-if-not-resolved="true" uid="Azure.AI.OpenAI.OpenAIClient"></xref> objects initialized with this constructor can only be used with Azure OpenAI resources. To use <xref data-throw-if-not-resolved="true" uid="Azure.AI.OpenAI.OpenAIClient"></xref> with the non-Azure OpenAI inference endpoint, use a constructor that accepts a non-Azure OpenAI API key, instead.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: endpoint
    description: >-
      <param name="endpoint">
            The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.
            This should include protocol and hostname. An example could be:
            https://my-resource.openai.azure.com .
      </param>
    type: <xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: tokenCredential
    description: A token credential used to authenticate with an Azure OpenAI resource.
    type: <xref href="Azure.Core.TokenCredential?alt=Azure.Core.TokenCredential&text=TokenCredential" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">endpoint</code> or <code data-dev-comment-type="paramref">tokenCredential</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.Core.TokenCredential)
  commentId: M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.Core.TokenCredential)
  name: OpenAIClient(Uri, TokenCredential)
  fullName: Azure.AI.OpenAI.OpenAIClient.OpenAIClient(Uri, TokenCredential)
  nameWithType: OpenAIClient.OpenAIClient(Uri, TokenCredential)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public OpenAIClient (Uri endpoint, Azure.Core.TokenCredential tokenCredential);
  - lang: fsharp
    values:
    - value: 'new Azure.AI.OpenAI.OpenAIClient : Uri * Azure.Core.TokenCredential -> Azure.AI.OpenAI.OpenAIClient'
  - lang: vb
    values:
    - value: Public Sub New (endpoint As Uri, tokenCredential As TokenCredential)
  monikers:
  - azure-dotnet-preview
  summary: >-
    <summary>
          Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
    </summary>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: endpoint
    description: >-
      The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.

      This should include protocol and hostname. An example could be:

      https://my-resource.openai.azure.com .
    type: <xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: keyCredential
    description: A key credential used to authenticate to an Azure OpenAI resource.
    type: <xref href="Azure.AzureKeyCredential?alt=Azure.AzureKeyCredential&text=AzureKeyCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: The options for configuring the client.
    type: <xref href="Azure.AI.OpenAI.OpenAIClientOptions?alt=Azure.AI.OpenAI.OpenAIClientOptions&text=OpenAIClientOptions" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">endpoint</code> or <code data-dev-comment-type="paramref">keyCredential</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.OpenAI.OpenAIClientOptions)
  commentId: M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.OpenAI.OpenAIClientOptions)
  name: OpenAIClient(Uri, AzureKeyCredential, OpenAIClientOptions)
  fullName: Azure.AI.OpenAI.OpenAIClient.OpenAIClient(Uri, AzureKeyCredential, OpenAIClientOptions)
  nameWithType: OpenAIClient.OpenAIClient(Uri, AzureKeyCredential, OpenAIClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public OpenAIClient (Uri endpoint, Azure.AzureKeyCredential keyCredential, Azure.AI.OpenAI.OpenAIClientOptions options);
  - lang: fsharp
    values:
    - value: 'new Azure.AI.OpenAI.OpenAIClient : Uri * Azure.AzureKeyCredential * Azure.AI.OpenAI.OpenAIClientOptions -> Azure.AI.OpenAI.OpenAIClient'
  - lang: vb
    values:
    - value: Public Sub New (endpoint As Uri, keyCredential As AzureKeyCredential, options As OpenAIClientOptions)
  monikers:
  - azure-dotnet-preview
  summary: Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
  remarks: <p><xref data-throw-if-not-resolved="true" uid="Azure.AI.OpenAI.OpenAIClient"></xref> objects initialized with this constructor can only be used with Azure OpenAI resources. To use <xref data-throw-if-not-resolved="true" uid="Azure.AI.OpenAI.OpenAIClient"></xref> with the non-Azure OpenAI inference endpoint, use a constructor that accepts a non-Azure OpenAI API key, instead.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: endpoint
    description: >-
      <param name="endpoint">
            The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.
            This should include protocol and hostname. An example could be:
            https://my-resource.openai.azure.com .
      </param>
    type: <xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: tokenCredential
    description: A token credential used to authenticate with an Azure OpenAI resource.
    type: <xref href="Azure.Core.TokenCredential?alt=Azure.Core.TokenCredential&text=TokenCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: <param name="options"> The options for configuring the client. </param>
    type: <xref href="Azure.AI.OpenAI.OpenAIClientOptions?alt=Azure.AI.OpenAI.OpenAIClientOptions&text=OpenAIClientOptions" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">endpoint</code> or <code data-dev-comment-type="paramref">tokenCredential</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.AI.OpenAI.OpenAIClientOptions)
  commentId: M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.AI.OpenAI.OpenAIClientOptions)
  name: OpenAIClient(Uri, TokenCredential, OpenAIClientOptions)
  fullName: Azure.AI.OpenAI.OpenAIClient.OpenAIClient(Uri, TokenCredential, OpenAIClientOptions)
  nameWithType: OpenAIClient.OpenAIClient(Uri, TokenCredential, OpenAIClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public OpenAIClient (Uri endpoint, Azure.Core.TokenCredential tokenCredential, Azure.AI.OpenAI.OpenAIClientOptions options);
  - lang: fsharp
    values:
    - value: 'new Azure.AI.OpenAI.OpenAIClient : Uri * Azure.Core.TokenCredential * Azure.AI.OpenAI.OpenAIClientOptions -> Azure.AI.OpenAI.OpenAIClient'
  - lang: vb
    values:
    - value: Public Sub New (endpoint As Uri, tokenCredential As TokenCredential, options As OpenAIClientOptions)
  monikers:
  - azure-dotnet-preview
  summary: >-
    <summary>
          Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
    </summary>
  metadata: {}
uid: Azure.AI.OpenAI.OpenAIClient.#ctor*
commentId: Overload:Azure.AI.OpenAI.OpenAIClient.#ctor
namespace: Azure.AI.OpenAI
name: OpenAIClient
fullName: Azure.AI.OpenAI.OpenAIClient.OpenAIClient
nameWithType: OpenAIClient.OpenAIClient
assembliesWithMoniker:
- value: Azure.AI.OpenAI.dll
packagesWithMoniker:
- value: Azure.AI.OpenAI v1.0.0-beta.6
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.AI.OpenAI.OpenAIClient..ctor
  api_location:
  - Azure.AI.OpenAI.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.OpenAI.OpenAIClient.#ctor
  - Azure::AI::OpenAI::OpenAIClient::#ctor
  - '#ctor'
  - OpenAIClient.#ctor
  - OpenAIClient::#ctor
  helpviewer_keywords:
  - OpenAIClient class [.NET], constructors
  - OpenAIClient() class [.NET], constructors
  - OpenAIClient(String) class [.NET], constructors
  - OpenAIClient(String, OpenAIClientOptions) class [.NET], constructors
  - OpenAIClient(Uri, AzureKeyCredential) class [.NET], constructors
  - OpenAIClient(Uri, TokenCredential) class [.NET], constructors
  - OpenAIClient(Uri, AzureKeyCredential, OpenAIClientOptions) class [.NET], constructors
  - OpenAIClient(Uri, TokenCredential, OpenAIClientOptions) class [.NET], constructors
  monikers:
  - azure-dotnet-preview
