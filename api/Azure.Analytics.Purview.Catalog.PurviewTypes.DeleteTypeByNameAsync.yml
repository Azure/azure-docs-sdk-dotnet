### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: name
    description: The name of the type.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors on the request on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">name</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">name</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Analytics.Purview.Catalog.PurviewTypes.DeleteTypeByNameAsync(System.String,Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Catalog.PurviewTypes.DeleteTypeByNameAsync(System.String,Azure.RequestContext)
  name: DeleteTypeByNameAsync(String, RequestContext)
  fullName: Azure.Analytics.Purview.Catalog.PurviewTypes.DeleteTypeByNameAsync(String, RequestContext)
  nameWithType: PurviewTypes.DeleteTypeByNameAsync(String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> DeleteTypeByNameAsync (string name, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DeleteTypeByNameAsync : string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.DeleteTypeByNameAsync : string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function DeleteTypeByNameAsync (name As String, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: Delete API for type identified by its name.
  remarks: >-
    <p>Schema for <code data-dev-comment-type="c">Response Error</code>: 


    ```

    {
                  requestId: string,
                  errorCode: string,
                  errorMessage: string
                }
    ```

    </p>
  metadata: {}
uid: Azure.Analytics.Purview.Catalog.PurviewTypes.DeleteTypeByNameAsync*
commentId: Overload:Azure.Analytics.Purview.Catalog.PurviewTypes.DeleteTypeByNameAsync
namespace: Azure.Analytics.Purview.Catalog
name: DeleteTypeByNameAsync
fullName: Azure.Analytics.Purview.Catalog.PurviewTypes.DeleteTypeByNameAsync
nameWithType: PurviewTypes.DeleteTypeByNameAsync
assembliesWithMoniker:
- value: Azure.Analytics.Purview.Catalog.dll
packagesWithMoniker:
- value: Azure.Analytics.Purview.Catalog v1.0.0-beta.4
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Purview.Catalog.PurviewTypes.DeleteTypeByNameAsync
  api_location:
  - Azure.Analytics.Purview.Catalog.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Purview.Catalog.PurviewTypes.DeleteTypeByNameAsync
  - Azure::Analytics::Purview::Catalog::PurviewTypes::DeleteTypeByNameAsync
  - DeleteTypeByNameAsync
  - PurviewTypes.DeleteTypeByNameAsync
  - PurviewTypes::DeleteTypeByNameAsync
  helpviewer_keywords:
  - PurviewTypes.DeleteTypeByNameAsync method [.NET]
  - DeleteTypeByNameAsync method [.NET], class PurviewTypes
  - PurviewTypes.DeleteTypeByNameAsync(String, RequestContext) method [.NET]
  - DeleteTypeByNameAsync(String, RequestContext) method [.NET], class PurviewTypes
  monikers:
  - azure-dotnet-preview
