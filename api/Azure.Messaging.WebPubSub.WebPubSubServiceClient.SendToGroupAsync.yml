### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The response returned from the service.
  parameters:
  - namesWithMoniker:
    - value: group
    description: Target group name, which length should be greater than 0 and less than 1025.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request. Details of the request body schema are in the Remarks section below.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: contentType
    description: 'Upload file type. Allowed values: "application/json" | "application/octet-stream" | "text/plain".'
    type: <xref href="Azure.Core.ContentType?alt=Azure.Core.ContentType&text=ContentType" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: excluded
    description: Excluded connection Ids.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">group</code> or <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">group</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)
  commentId: M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)
  name: SendToGroupAsync(String, RequestContent, ContentType, IEnumerable<String>, RequestContext)
  fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync(String, RequestContent, ContentType, IEnumerable<String>, RequestContext)
  nameWithType: WebPubSubServiceClient.SendToGroupAsync(String, RequestContent, ContentType, IEnumerable<String>, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> SendToGroupAsync (string group, Azure.Core.RequestContent content, Azure.Core.ContentType contentType, System.Collections.Generic.IEnumerable<string> excluded, Azure.RequestContext context);
      monikers:
      - azure-dotnet
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> SendToGroupAsync (string group, Azure.Core.RequestContent content, Azure.Core.ContentType contentType, System.Collections.Generic.IEnumerable<string> excluded = default, Azure.RequestContext context = default);
      monikers:
      - azure-dotnet-preview
  - lang: fsharp
    values:
    - value: >-
        abstract member SendToGroupAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * seq<string> * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.SendToGroupAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * seq<string> * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function SendToGroupAsync (group As String, content As RequestContent, contentType As ContentType, excluded As IEnumerable(Of String), context As RequestContext) As Task(Of Response)
      monikers:
      - azure-dotnet
    - value: Public Overridable Function SendToGroupAsync (group As String, content As RequestContent, contentType As ContentType, Optional excluded As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)
      monikers:
      - azure-dotnet-preview
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Send content inside request body to a group of connections.
  remarks: >-
    <p>Schema for <code data-dev-comment-type="c">Response Error</code>: 


    ```

    {
                  code: string,
                  message: string,
                  target: string,
                  details: [ErrorDetail],
                  inner: {
                    code: string,
                    inner: InnerError
                  }
                }
    ```

    </p>
  examples: >-
    This sample shows how to call SendToGroupAsync with required parameters and request content.


    ```

    var client = new WebPubSubServiceClient("<https://my-service.azure.com>", "<hub>");


    var data = File.OpenRead("<filePath>");


    Response response = await client.SendToGroupAsync("<group>", RequestContent.Create(data), ContentType.ApplicationOctetStream);

    Console.WriteLine(response.Status);

    ```

    This sample shows how to call SendToGroupAsync with all parameters and request content.


    ```

    var client = new WebPubSubServiceClient("<https://my-service.azure.com>", "<hub>");


    var data = File.OpenRead("<filePath>");


    Response response = await client.SendToGroupAsync("<group>", RequestContent.Create(data), ContentType.ApplicationOctetStream, new String[]{"<excluded>"});

    Console.WriteLine(response.Status);

    ```
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The response returned from the service.
  parameters:
  - namesWithMoniker:
    - value: group
    description: Target group name, which length should be greater than 0 and less than 1025.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request. Details of the request body schema are in the Remarks section below.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: contentType
    description: 'Upload file type. Allowed values: "application/json" | "application/octet-stream" | "text/plain".'
    type: <xref href="Azure.Core.ContentType?alt=Azure.Core.ContentType&text=ContentType" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: excluded
    description: Excluded connection Ids.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: filter
    description: Following OData filter syntax to filter out the subscribers receiving the messages.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">group</code> or <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">group</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,System.Collections.Generic.IEnumerable{System.String},System.String,Azure.RequestContext)
  commentId: M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,System.Collections.Generic.IEnumerable{System.String},System.String,Azure.RequestContext)
  name: SendToGroupAsync(String, RequestContent, ContentType, IEnumerable<String>, String, RequestContext)
  fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync(String, RequestContent, ContentType, IEnumerable<String>, String, RequestContext)
  nameWithType: WebPubSubServiceClient.SendToGroupAsync(String, RequestContent, ContentType, IEnumerable<String>, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> SendToGroupAsync (string group, Azure.Core.RequestContent content, Azure.Core.ContentType contentType, System.Collections.Generic.IEnumerable<string> excluded = default, string filter = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SendToGroupAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * seq<string> * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.SendToGroupAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * seq<string> * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function SendToGroupAsync (group As String, content As RequestContent, contentType As ContentType, Optional excluded As IEnumerable(Of String) = Nothing, Optional filter As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  summary: Send content inside request body to a group of connections.
  examples: >-
    This sample shows how to call SendToGroupAsync with required parameters and request content.


    ```

    var client = new WebPubSubServiceClient("<https://my-service.azure.com>", "<hub>");


    var data = File.OpenRead("<filePath>");


    Response response = await client.SendToGroupAsync("<group>", RequestContent.Create(data), ContentType.ApplicationOctetStream);

    Console.WriteLine(response.Status);

    ```

    This sample shows how to call SendToGroupAsync with all parameters and request content.


    ```

    var client = new WebPubSubServiceClient("<https://my-service.azure.com>", "<hub>");


    var data = File.OpenRead("<filePath>");


    Response response = await client.SendToGroupAsync("<group>", RequestContent.Create(data), ContentType.ApplicationOctetStream, new String[]{"<excluded>"}, "<filter>");

    Console.WriteLine(response.Status);

    ```
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: A <xref data-throw-if-not-resolved="true" uid="Azure.Response"></xref> if successful.
  parameters:
  - namesWithMoniker:
    - value: group
    description: Target group name, which length should be greater than 0 and less than 1025.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: contentType
    description: Defaults to ContentType.PlainText.
    type: <xref href="Azure.Core.ContentType?alt=Azure.Core.ContentType&text=ContentType" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync(System.String,System.String,Azure.Core.ContentType)
  commentId: M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync(System.String,System.String,Azure.Core.ContentType)
  name: SendToGroupAsync(String, String, ContentType)
  fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync(String, String, ContentType)
  nameWithType: WebPubSubServiceClient.SendToGroupAsync(String, String, ContentType)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> SendToGroupAsync (string group, string content, Azure.Core.ContentType contentType = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SendToGroupAsync : string * string * Azure.Core.ContentType -> System.Threading.Tasks.Task<Azure.Response>

        override this.SendToGroupAsync : string * string * Azure.Core.ContentType -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function SendToGroupAsync (group As String, content As String, Optional contentType As ContentType = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Send message to a group of connections.
  metadata: {}
uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync*
commentId: Overload:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync
namespace: Azure.Messaging.WebPubSub
name: SendToGroupAsync
fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync
nameWithType: WebPubSubServiceClient.SendToGroupAsync
assembliesWithMoniker:
- value: Azure.Messaging.WebPubSub.dll
packagesWithMoniker:
- value: Azure.Messaging.WebPubSub v1.3.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.WebPubSub v1.1.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync
  api_location:
  - Azure.Messaging.WebPubSub.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync
  - Azure::Messaging::WebPubSub::WebPubSubServiceClient::SendToGroupAsync
  - SendToGroupAsync
  - WebPubSubServiceClient.SendToGroupAsync
  - WebPubSubServiceClient::SendToGroupAsync
  helpviewer_keywords:
  - WebPubSubServiceClient.SendToGroupAsync method [.NET]
  - SendToGroupAsync method [.NET], class WebPubSubServiceClient
  - WebPubSubServiceClient.SendToGroupAsync(String, RequestContent, ContentType, IEnumerable<String>, RequestContext) method [.NET]
  - SendToGroupAsync(String, RequestContent, ContentType, IEnumerable<String>, RequestContext) method [.NET], class WebPubSubServiceClient
  - WebPubSubServiceClient.SendToGroupAsync(String, RequestContent, ContentType, IEnumerable<String>, String, RequestContext) method [.NET]
  - SendToGroupAsync(String, RequestContent, ContentType, IEnumerable<String>, String, RequestContext) method [.NET], class WebPubSubServiceClient
  - WebPubSubServiceClient.SendToGroupAsync(String, String, ContentType) method [.NET]
  - SendToGroupAsync(String, String, ContentType) method [.NET], class WebPubSubServiceClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
