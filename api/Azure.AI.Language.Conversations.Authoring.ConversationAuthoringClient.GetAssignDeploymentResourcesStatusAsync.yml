### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: projectName
    description: The name of the project to use.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: jobId
    description: The job ID.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">projectName</code> or <code data-dev-comment-type="paramref">jobId</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">projectName</code> or <code data-dev-comment-type="paramref">jobId</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync(System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync(System.String,System.String,Azure.RequestContext)
  name: GetAssignDeploymentResourcesStatusAsync(String, String, RequestContext)
  fullName: Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync(String, String, RequestContext)
  nameWithType: ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync(String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> GetAssignDeploymentResourcesStatusAsync (string projectName, string jobId, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetAssignDeploymentResourcesStatusAsync : string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.GetAssignDeploymentResourcesStatusAsync : string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function GetAssignDeploymentResourcesStatusAsync (projectName As String, jobId As String, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: Gets the status of an existing assign deployment resources job.
  remarks: >-
    <p>Below is the JSON schema for the response payload. Additional information can be found in the service REST API documentation: https://learn.microsoft.com/rest/api/language/2022-10-01-preview/conversational-analysis-authoring/get-assign-deployment-resources-status</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">DeploymentResourcesJobState</code>: 


    ```

    {
      jobId: string, # Required. The job ID.
      createdDateTime: string (ISO 8601 Format), # Required. The creation date time of the job.
      lastUpdatedDateTime: string (ISO 8601 Format), # Required. The last date time the job was updated.
      expirationDateTime: string (ISO 8601 Format), # Optional. The expiration date time of the job.
      status: "notStarted" | "running" | "succeeded" | "failed" | "cancelled" | "cancelling" | "partiallyCompleted", # Required. The job status.
      warnings: [
        {
          code: string, # Required. The warning code.
          message: string, # Required. The warning message.
        }
      ], # Optional. The warnings that were encountered while executing the job.
      errors: [
        {
          code: "InvalidRequest" | "InvalidArgument" | "Unauthorized" | "Forbidden" | "NotFound" | "ProjectNotFound" | "OperationNotFound" | "AzureCognitiveSearchNotFound" | "AzureCognitiveSearchIndexNotFound" | "TooManyRequests" | "AzureCognitiveSearchThrottling" | "AzureCognitiveSearchIndexLimitReached" | "InternalServerError" | "ServiceUnavailable" | "Timeout" | "QuotaExceeded" | "Conflict" | "Warning", # Required. One of a server-defined set of error codes.
          message: string, # Required. A human-readable representation of the error.
          target: string, # Optional. The target of the error.
          details: [Error], # Optional. An array of details about specific errors that led to this reported error.
          innererror: {
            code: "InvalidRequest" | "InvalidParameterValue" | "KnowledgeBaseNotFound" | "AzureCognitiveSearchNotFound" | "AzureCognitiveSearchThrottling" | "ExtractionFailure" | "InvalidRequestBodyFormat" | "EmptyRequest" | "MissingInputDocuments" | "InvalidDocument" | "ModelVersionIncorrect" | "InvalidDocumentBatch" | "UnsupportedLanguageCode" | "InvalidCountryHint", # Required. One of a server-defined set of error codes.
            message: string, # Required. Error message.
            details: Dictionary<string, string>, # Optional. Error details.
            target: string, # Optional. Error target.
            innererror: InnerErrorModel, # Optional. An object containing more specific information than the current object about the error.
          }, # Optional. An object containing more specific information than the current object about the error.
        }
      ], # Optional. The errors encountered while executing the job.
    }

    ```

    </p>
  examples: >-
    This sample shows how to call GetAssignDeploymentResourcesStatusAsync with required parameters and parse the result.


    ```

    var credential = new AzureKeyCredential("<key>");

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new ConversationAuthoringClient(endpoint, credential);


    Response response = await client.GetAssignDeploymentResourcesStatusAsync("<projectName>", "<jobId>");


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("jobId").ToString());

    Console.WriteLine(result.GetProperty("createdDateTime").ToString());

    Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());

    Console.WriteLine(result.GetProperty("expirationDateTime").ToString());

    Console.WriteLine(result.GetProperty("status").ToString());

    Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());

    Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("message").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("details").GetProperty("<test>").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("target").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("message").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("details").GetProperty("<test>").ToString());

    Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("target").ToString());

    ```
  metadata: {}
uid: Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync*
commentId: Overload:Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync
namespace: Azure.AI.Language.Conversations.Authoring
name: GetAssignDeploymentResourcesStatusAsync
fullName: Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync
nameWithType: ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync
assembliesWithMoniker:
- value: Azure.AI.Language.Conversations.dll
packagesWithMoniker:
- value: Azure.AI.Language.Conversations v1.1.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync
  api_location:
  - Azure.AI.Language.Conversations.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.Language.Conversations.Authoring.ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync
  - Azure::AI::Language::Conversations::Authoring::ConversationAuthoringClient::GetAssignDeploymentResourcesStatusAsync
  - GetAssignDeploymentResourcesStatusAsync
  - ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync
  - ConversationAuthoringClient::GetAssignDeploymentResourcesStatusAsync
  helpviewer_keywords:
  - ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync method [.NET]
  - GetAssignDeploymentResourcesStatusAsync method [.NET], class ConversationAuthoringClient
  - ConversationAuthoringClient.GetAssignDeploymentResourcesStatusAsync(String, String, RequestContext) method [.NET]
  - GetAssignDeploymentResourcesStatusAsync(String, String, RequestContext) method [.NET], class ConversationAuthoringClient
  monikers:
  - azure-dotnet-preview
