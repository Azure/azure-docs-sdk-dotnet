### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Messaging.CloudEvent?alt=Azure.Messaging.CloudEvent&text=CloudEvent" data-throw-if-not-resolved="True"/>
    description: A <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.CloudEvent"></xref>.
  parameters:
  - namesWithMoniker:
    - value: json
    description: An instance of <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> containing the JSON for the CloudEvent.
    type: <xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: skipValidation
    description: >-
      Set to <code data-dev-comment-type="langword">true</code> to allow missing or invalid properties to still parse into a CloudEvent.
                  In particular, by setting strict to <code data-dev-comment-type="langword">true</code>, the source, id, specversion and type properties are no longer required
                  to be present in the JSON. Additionally, the casing requirements of the extension attribute names are relaxed.
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">json</code> contained multiple events. <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.CloudEvent.ParseMany(System.BinaryData,System.Boolean)"></xref> should be used instead.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.CloudEvent.Parse(System.BinaryData,System.Boolean)
  commentId: M:Azure.Messaging.CloudEvent.Parse(System.BinaryData,System.Boolean)
  name: Parse(BinaryData, Boolean)
  fullName: Azure.Messaging.CloudEvent.Parse(BinaryData, Boolean)
  nameWithType: CloudEvent.Parse(BinaryData, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Azure.Messaging.CloudEvent? Parse (BinaryData json, bool skipValidation = false);
  - lang: fsharp
    values:
    - value: 'static member Parse : BinaryData * bool -> Azure.Messaging.CloudEvent'
  - lang: vb
    values:
    - value: Public Shared Function Parse (json As BinaryData, Optional skipValidation As Boolean = false) As CloudEvent
  monikers:
  - azure-dotnet
  summary: >-
    Given a single JSON-encoded event, parses the event envelope and returns a <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.CloudEvent"></xref>.

    If the specified event is not valid JSON an exception is thrown.

    By default, if the event is missing required properties, an exception is thrown though this can be relaxed

    by setting the <code data-dev-comment-type="paramref">skipValidation</code> parameter.
  metadata: {}
uid: Azure.Messaging.CloudEvent.Parse*
commentId: Overload:Azure.Messaging.CloudEvent.Parse
namespace: Azure.Messaging
name: Parse
fullName: Azure.Messaging.CloudEvent.Parse
nameWithType: CloudEvent.Parse
assembliesWithMoniker:
- value: Azure.Core.dll
packagesWithMoniker:
- value: Azure.Core v1.34.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.Messaging.CloudEvent.Parse
  api_location:
  - Azure.Core.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.CloudEvent.Parse
  - Azure::Messaging::CloudEvent::Parse
  - Parse
  - CloudEvent.Parse
  - CloudEvent::Parse
  helpviewer_keywords:
  - CloudEvent.Parse method [.NET]
  - Parse method [.NET], class CloudEvent
  - CloudEvent.Parse(BinaryData, Boolean) method [.NET]
  - Parse(BinaryData, Boolean) method [.NET], class CloudEvent
  monikers:
  - azure-dotnet
