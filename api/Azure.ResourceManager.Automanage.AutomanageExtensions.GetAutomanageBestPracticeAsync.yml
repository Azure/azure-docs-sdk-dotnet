### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.Automanage.AutomanageBestPracticeResource?alt=Azure.ResourceManager.Automanage.AutomanageBestPracticeResource&text=AutomanageBestPracticeResource" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: tenantResource
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Resources.TenantResource"></xref> instance the method will execute against.
    type: <xref href="Azure.ResourceManager.Resources.TenantResource?alt=Azure.ResourceManager.Resources.TenantResource&text=TenantResource" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: bestPracticeName
    description: The Automanage best practice name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">bestPracticeName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">bestPracticeName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.Automanage.AutomanageExtensions.GetAutomanageBestPracticeAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.Automanage.AutomanageExtensions.GetAutomanageBestPracticeAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)
  name: GetAutomanageBestPracticeAsync(TenantResource, String, CancellationToken)
  fullName: Azure.ResourceManager.Automanage.AutomanageExtensions.GetAutomanageBestPracticeAsync(TenantResource, String, CancellationToken)
  nameWithType: AutomanageExtensions.GetAutomanageBestPracticeAsync(TenantResource, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.Automanage.AutomanageBestPracticeResource>> GetAutomanageBestPracticeAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string bestPracticeName, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetAutomanageBestPracticeAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.Automanage.AutomanageBestPracticeResource>>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetAutomanageBestPracticeAsync (tenantResource As TenantResource, bestPracticeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomanageBestPracticeResource))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Get information about a Automanage best practice

    <ul><li>Request Path/providers/Microsoft.Automanage/bestPractices/{bestPracticeName}</li><li>Operation IdBestPractices_Get</li></ul>
  metadata: {}
uid: Azure.ResourceManager.Automanage.AutomanageExtensions.GetAutomanageBestPracticeAsync*
commentId: Overload:Azure.ResourceManager.Automanage.AutomanageExtensions.GetAutomanageBestPracticeAsync
namespace: Azure.ResourceManager.Automanage
name: GetAutomanageBestPracticeAsync
fullName: Azure.ResourceManager.Automanage.AutomanageExtensions.GetAutomanageBestPracticeAsync
nameWithType: AutomanageExtensions.GetAutomanageBestPracticeAsync
assembliesWithMoniker:
- value: Azure.ResourceManager.Automanage.dll
packagesWithMoniker:
- value: Azure.ResourceManager.Automanage v1.0.0
  monikers:
  - azure-dotnet
- value: Azure.ResourceManager.Automanage v1.1.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.Automanage.AutomanageExtensions.GetAutomanageBestPracticeAsync
  api_location:
  - Azure.ResourceManager.Automanage.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.Automanage.AutomanageExtensions.GetAutomanageBestPracticeAsync
  - Azure::ResourceManager::Automanage::AutomanageExtensions::GetAutomanageBestPracticeAsync
  - GetAutomanageBestPracticeAsync
  - AutomanageExtensions.GetAutomanageBestPracticeAsync
  - AutomanageExtensions::GetAutomanageBestPracticeAsync
  helpviewer_keywords:
  - AutomanageExtensions.GetAutomanageBestPracticeAsync method [.NET]
  - GetAutomanageBestPracticeAsync method [.NET], class AutomanageExtensions
  - AutomanageExtensions.GetAutomanageBestPracticeAsync(TenantResource, String, CancellationToken) extension method [.NET]
  - GetAutomanageBestPracticeAsync(TenantResource, String, CancellationToken) extension method [.NET], class AutomanageExtensions
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
