### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
    description: >-
      <code data-dev-comment-type="c">true</code> if current inner <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Spatial.Geometry"></xref> is fully contained inside <code data-dev-comment-type="paramref">outer</code><xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Spatial.Geometry"></xref>.

      <code data-dev-comment-type="c">false</code> otherwise.
  parameters:
  - namesWithMoniker:
    - value: outer
    description: Outer <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Spatial.Geometry"></xref>.
    type: <xref href="Azure.Cosmos.Spatial.Geometry?alt=Azure.Cosmos.Spatial.Geometry&text=Geometry" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Cosmos.Spatial.Geometry.Within(Azure.Cosmos.Spatial.Geometry)
  commentId: M:Azure.Cosmos.Spatial.Geometry.Within(Azure.Cosmos.Spatial.Geometry)
  name: Within(Geometry)
  fullName: Azure.Cosmos.Spatial.Geometry.Within(Geometry)
  nameWithType: Geometry.Within(Geometry)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public bool Within (Azure.Cosmos.Spatial.Geometry outer);
  - lang: fsharp
    values:
    - value: 'member this.Within : Azure.Cosmos.Spatial.Geometry -> bool'
  - lang: vb
    values:
    - value: Public Function Within (outer As Geometry) As Boolean
  monikers:
  - azure-dotnet-preview
  summary: Determines if current inner <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Spatial.Geometry"></xref> is fully contained inside <code data-dev-comment-type="paramref">outer</code><xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Spatial.Geometry"></xref> in the Azure Cosmos DB service.
  remarks: Currently this function supports current geometry of type <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Spatial.GeometryType.Point"></xref> and outer geometry of type <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Spatial.GeometryType.Polygon"></xref>.
  examples: >-
    ```

    Polygon polygon = new Polygon(
           new[]
           {
                new Position(10, 10),
                new Position(30, 10),
                new Position(30, 30),
                new Position(10, 30),
                new Position(10, 10)
           });
    var withinQuery = documents.Where(document => document.Location.Within(polygon));

    ```
  metadata: {}
uid: Azure.Cosmos.Spatial.Geometry.Within*
commentId: Overload:Azure.Cosmos.Spatial.Geometry.Within
namespace: Azure.Cosmos.Spatial
name: Within
fullName: Azure.Cosmos.Spatial.Geometry.Within
nameWithType: Geometry.Within
assembliesWithMoniker:
- value: Azure.Cosmos.dll
packagesWithMoniker:
- value: Azure.Cosmos v4.0.0-preview3
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Cosmos.Spatial.Geometry.Within
  api_location:
  - Azure.Cosmos.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Cosmos.Spatial.Geometry.Within
  - Azure::Cosmos::Spatial::Geometry::Within
  - Within
  - Geometry.Within
  - Geometry::Within
  helpviewer_keywords:
  - Geometry.Within method [.NET]
  - Within method [.NET], class Geometry
  - Geometry.Within(Geometry) method [.NET]
  - Within(Geometry) method [.NET], class Geometry
  monikers:
  - azure-dotnet-preview
