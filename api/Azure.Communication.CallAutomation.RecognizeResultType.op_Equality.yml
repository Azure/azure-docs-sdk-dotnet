### YamlMime:NetMember
type: operator
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: left
    type: <xref href="Azure.Communication.CallAutomation.RecognizeResultType?alt=Azure.Communication.CallAutomation.RecognizeResultType&text=RecognizeResultType" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: right
    type: <xref href="Azure.Communication.CallAutomation.RecognizeResultType?alt=Azure.Communication.CallAutomation.RecognizeResultType&text=RecognizeResultType" data-throw-if-not-resolved="True"/>
  type: operator
  uid: Azure.Communication.CallAutomation.RecognizeResultType.op_Equality(Azure.Communication.CallAutomation.RecognizeResultType,Azure.Communication.CallAutomation.RecognizeResultType)
  commentId: M:Azure.Communication.CallAutomation.RecognizeResultType.op_Equality(Azure.Communication.CallAutomation.RecognizeResultType,Azure.Communication.CallAutomation.RecognizeResultType)
  name: Equality(RecognizeResultType, RecognizeResultType)
  fullName: Azure.Communication.CallAutomation.RecognizeResultType.Equality(RecognizeResultType, RecognizeResultType)
  nameWithType: RecognizeResultType.Equality(RecognizeResultType, RecognizeResultType)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static bool operator == (Azure.Communication.CallAutomation.RecognizeResultType left, Azure.Communication.CallAutomation.RecognizeResultType right);
  - lang: fsharp
    values:
    - value: 'static member ( = ) : Azure.Communication.CallAutomation.RecognizeResultType * Azure.Communication.CallAutomation.RecognizeResultType -> bool'
  - lang: vb
    values:
    - value: Public Shared Operator == (left As RecognizeResultType, right As RecognizeResultType) As Boolean
  monikers:
  - azure-dotnet
  summary: Determines if two <xref data-throw-if-not-resolved="true" uid="Azure.Communication.CallAutomation.RecognizeResultType"></xref> values are the same.
  metadata: {}
uid: Azure.Communication.CallAutomation.RecognizeResultType.op_Equality*
commentId: Overload:Azure.Communication.CallAutomation.RecognizeResultType.op_Equality
namespace: Azure.Communication.CallAutomation
name: Equality
fullName: Azure.Communication.CallAutomation.RecognizeResultType.Equality
nameWithType: RecognizeResultType.Equality
assembliesWithMoniker:
- value: Azure.Communication.CallAutomation.dll
packagesWithMoniker:
- value: Azure.Communication.CallAutomation v1.0.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.Communication.CallAutomation.RecognizeResultType.Equality
  - Azure.Communication.CallAutomation.RecognizeResultType.op_Equality
  api_location:
  - Azure.Communication.CallAutomation.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Communication.CallAutomation.RecognizeResultType.op_Equality
  - Azure::Communication::CallAutomation::RecognizeResultType::op_Equality
  - op_Equality
  - RecognizeResultType.op_Equality
  - RecognizeResultType::op_Equality
  helpviewer_keywords:
  - RecognizeResultType.Equality operator [.NET]
  - Equality operator [.NET], struct RecognizeResultType
  - RecognizeResultType.Equality(RecognizeResultType, RecognizeResultType) operator [.NET]
  - Equality(RecognizeResultType, RecognizeResultType) operator [.NET], struct RecognizeResultType
  monikers:
  - azure-dotnet
