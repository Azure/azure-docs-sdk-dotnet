### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Analytics.Synapse.Artifacts.Models.DatasetLocation?alt=Azure.Analytics.Synapse.Artifacts.Models.DatasetLocation&text=DatasetLocation" data-throw-if-not-resolved="True"/>
  type: property
  uid: Azure.Analytics.Synapse.Artifacts.Models.ParquetDataset.Location
  commentId: P:Azure.Analytics.Synapse.Artifacts.Models.ParquetDataset.Location
  name: Location
  fullName: Azure.Analytics.Synapse.Artifacts.Models.ParquetDataset.Location
  nameWithType: ParquetDataset.Location
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public Azure.Analytics.Synapse.Artifacts.Models.DatasetLocation Location { get; set; }
  - lang: fsharp
    values:
    - value: 'member this.Location : Azure.Analytics.Synapse.Artifacts.Models.DatasetLocation with get, set'
  - lang: vb
    values:
    - value: Public Property Location As DatasetLocation
  monikers:
  - azure-dotnet-preview
  summary: >-
    The location of the parquet storage.

    Please note <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.DatasetLocation"></xref> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.

    The available derived classes include <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.AmazonS3Location"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.AzureBlobFSLocation"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.AzureBlobStorageLocation"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.AzureDataLakeStoreLocation"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.AzureFileStorageLocation"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.FileServerLocation"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.FtpServerLocation"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.GoogleCloudStorageLocation"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.HdfsLocation"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.HttpServerLocation"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.SftpLocation"></xref>.
  metadata: {}
uid: Azure.Analytics.Synapse.Artifacts.Models.ParquetDataset.Location*
commentId: Overload:Azure.Analytics.Synapse.Artifacts.Models.ParquetDataset.Location
namespace: Azure.Analytics.Synapse.Artifacts.Models
name: Location
fullName: Azure.Analytics.Synapse.Artifacts.Models.ParquetDataset.Location
nameWithType: ParquetDataset.Location
assembliesWithMoniker:
- value: Azure.Analytics.Synapse.Artifacts.dll
packagesWithMoniker:
- value: Azure.Analytics.Synapse.Artifacts v1.0.0-preview.17
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Synapse.Artifacts.Models.ParquetDataset.Location
  - Azure.Analytics.Synapse.Artifacts.Models.ParquetDataset.get_Location
  - Azure.Analytics.Synapse.Artifacts.Models.ParquetDataset.set_Location
  api_location:
  - Azure.Analytics.Synapse.Artifacts.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Synapse.Artifacts.Models.ParquetDataset.Location
  - Azure::Analytics::Synapse::Artifacts::Models::ParquetDataset::Location
  - Location
  - ParquetDataset.Location
  - ParquetDataset::Location
  helpviewer_keywords:
  - ParquetDataset.Location property [.NET]
  - Location property [.NET], class ParquetDataset
  monikers:
  - azure-dotnet-preview
