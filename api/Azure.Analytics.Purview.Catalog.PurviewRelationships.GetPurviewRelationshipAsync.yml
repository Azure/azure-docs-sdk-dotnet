### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: guid
    description: The globally unique identifier of the relationship.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: extendedInfo
    description: Limits whether includes extended information.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors on the request on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">guid</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">guid</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Analytics.Purview.Catalog.PurviewRelationships.GetPurviewRelationshipAsync(System.String,System.Nullable{System.Boolean},Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Catalog.PurviewRelationships.GetPurviewRelationshipAsync(System.String,System.Nullable{System.Boolean},Azure.RequestContext)
  name: GetPurviewRelationshipAsync(String, Nullable<Boolean>, RequestContext)
  fullName: Azure.Analytics.Purview.Catalog.PurviewRelationships.GetPurviewRelationshipAsync(String, Nullable<Boolean>, RequestContext)
  nameWithType: PurviewRelationships.GetPurviewRelationshipAsync(String, Nullable<Boolean>, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> GetPurviewRelationshipAsync (string guid, bool? extendedInfo = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetPurviewRelationshipAsync : string * Nullable<bool> * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.GetPurviewRelationshipAsync : string * Nullable<bool> * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function GetPurviewRelationshipAsync (guid As String, Optional extendedInfo As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: Get relationship information between entities by its GUID.
  remarks: >-
    <p>Schema for <code data-dev-comment-type="c">Response Body</code>: 


    ```

    {
                  referredEntities: Dictionary<string, AtlasEntityHeader>,
                  relationship: {
                    attributes: Dictionary<string, AnyObject>,
                    typeName: string,
                    lastModifiedTS: string,
                    createTime: number,
                    createdBy: string,
                    end1: {
                      guid: string,
                      typeName: string,
                      uniqueAttributes: Dictionary<string, AnyObject>
                    },
                    end2: AtlasObjectId,
                    guid: string,
                    homeId: string,
                    label: string,
                    provenanceType: number,
                    status: "ACTIVE" | "DELETED",
                    updateTime: number,
                    updatedBy: string,
                    version: number
                  }
                }
    ```

     Schema for <code data-dev-comment-type="c">Response Error</code>: 


    ```

    {
                  requestId: string,
                  errorCode: string,
                  errorMessage: string
                }
    ```

    </p>
  metadata: {}
uid: Azure.Analytics.Purview.Catalog.PurviewRelationships.GetPurviewRelationshipAsync*
commentId: Overload:Azure.Analytics.Purview.Catalog.PurviewRelationships.GetPurviewRelationshipAsync
namespace: Azure.Analytics.Purview.Catalog
name: GetPurviewRelationshipAsync
fullName: Azure.Analytics.Purview.Catalog.PurviewRelationships.GetPurviewRelationshipAsync
nameWithType: PurviewRelationships.GetPurviewRelationshipAsync
assembliesWithMoniker:
- value: Azure.Analytics.Purview.Catalog.dll
packagesWithMoniker:
- value: Azure.Analytics.Purview.Catalog v1.0.0-beta.4
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Purview.Catalog.PurviewRelationships.GetPurviewRelationshipAsync
  api_location:
  - Azure.Analytics.Purview.Catalog.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Purview.Catalog.PurviewRelationships.GetPurviewRelationshipAsync
  - Azure::Analytics::Purview::Catalog::PurviewRelationships::GetPurviewRelationshipAsync
  - GetPurviewRelationshipAsync
  - PurviewRelationships.GetPurviewRelationshipAsync
  - PurviewRelationships::GetPurviewRelationshipAsync
  helpviewer_keywords:
  - PurviewRelationships.GetPurviewRelationshipAsync method [.NET]
  - GetPurviewRelationshipAsync method [.NET], class PurviewRelationships
  - PurviewRelationships.GetPurviewRelationshipAsync(String, Nullable<Boolean>, RequestContext) method [.NET]
  - GetPurviewRelationshipAsync(String, Nullable<Boolean>, RequestContext) method [.NET], class PurviewRelationships
  monikers:
  - azure-dotnet-preview
