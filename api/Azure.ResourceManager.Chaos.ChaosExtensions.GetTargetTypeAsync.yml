### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.Chaos.TargetTypeResource?alt=Azure.ResourceManager.Chaos.TargetTypeResource&text=TargetTypeResource" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: subscriptionResource
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Resources.SubscriptionResource"></xref> instance the method will execute against.
    type: <xref href="Azure.ResourceManager.Resources.SubscriptionResource?alt=Azure.ResourceManager.Resources.SubscriptionResource&text=SubscriptionResource" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: locationName
    description: String that represents a Location resource name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: targetTypeName
    description: String that represents a Target Type resource name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">locationName</code> or <code data-dev-comment-type="paramref">targetTypeName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">locationName</code> or <code data-dev-comment-type="paramref">targetTypeName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)
  name: GetTargetTypeAsync(SubscriptionResource, String, String, CancellationToken)
  fullName: Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeAsync(SubscriptionResource, String, String, CancellationToken)
  nameWithType: ChaosExtensions.GetTargetTypeAsync(SubscriptionResource, String, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.Chaos.TargetTypeResource>> GetTargetTypeAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string targetTypeName, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetTargetTypeAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.Chaos.TargetTypeResource>>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetTargetTypeAsync (subscriptionResource As SubscriptionResource, locationName As String, targetTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TargetTypeResource))
  monikers:
  - azure-dotnet-preview
  summary: >-
    Get a Target Type resources for given location.

    <ul><li>Request Path/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/locations/{locationName}/targetTypes/{targetTypeName}</li><li>Operation IdTargetTypes_Get</li></ul>
  metadata: {}
uid: Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeAsync*
commentId: Overload:Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeAsync
namespace: Azure.ResourceManager.Chaos
name: GetTargetTypeAsync
fullName: Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeAsync
nameWithType: ChaosExtensions.GetTargetTypeAsync
assembliesWithMoniker:
- value: Azure.ResourceManager.Chaos.dll
packagesWithMoniker:
- value: Azure.ResourceManager.Chaos v1.0.0-beta.4
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeAsync
  api_location:
  - Azure.ResourceManager.Chaos.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeAsync
  - Azure::ResourceManager::Chaos::ChaosExtensions::GetTargetTypeAsync
  - GetTargetTypeAsync
  - ChaosExtensions.GetTargetTypeAsync
  - ChaosExtensions::GetTargetTypeAsync
  helpviewer_keywords:
  - ChaosExtensions.GetTargetTypeAsync method [.NET]
  - GetTargetTypeAsync method [.NET], class ChaosExtensions
  - ChaosExtensions.GetTargetTypeAsync(SubscriptionResource, String, String, CancellationToken) extension method [.NET]
  - GetTargetTypeAsync(SubscriptionResource, String, String, CancellationToken) extension method [.NET], class ChaosExtensions
  monikers:
  - azure-dotnet-preview
