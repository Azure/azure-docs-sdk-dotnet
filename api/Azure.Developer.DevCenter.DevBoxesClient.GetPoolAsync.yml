### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: poolName
    description: The name of a pool of Dev Boxes.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">poolName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">poolName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Developer.DevCenter.DevBoxesClient.GetPoolAsync(System.String,Azure.RequestContext)
  commentId: M:Azure.Developer.DevCenter.DevBoxesClient.GetPoolAsync(System.String,Azure.RequestContext)
  name: GetPoolAsync(String, RequestContext)
  fullName: Azure.Developer.DevCenter.DevBoxesClient.GetPoolAsync(String, RequestContext)
  nameWithType: DevBoxesClient.GetPoolAsync(String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> GetPoolAsync (string poolName, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetPoolAsync : string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.GetPoolAsync : string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function GetPoolAsync (poolName As String, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: Gets a pool.
  remarks: >-
    <p>Below is the JSON schema for the response payload.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">Pool</code>: 


    ```

    {
      name: string, # Optional. Pool name
      location: string, # Optional. Azure region where Dev Boxes in the pool are located
      osType: "Windows", # Optional. The operating system type of Dev Boxes in this pool
      hardwareProfile: {
        skuName: string, # Optional. The name of the SKU
        vCPUs: number, # Optional. The number of vCPUs available for the Dev Box.
        memoryGB: number, # Optional. The amount of memory available for the Dev Box.
      }, # Optional. Hardware settings for the Dev Boxes created in this pool
      hibernateSupport: "Disabled" | "Enabled", # Optional. Indicates whether hibernate is enabled/disabled or unknown.
      storageProfile: {
        osDisk: {
          diskSizeGB: number, # Optional. The size of the OS Disk in gigabytes.
        }, # Optional. Settings for the operating system disk.
      }, # Optional. Storage settings for Dev Box created in this pool
      imageReference: {
        name: string, # Optional. The name of the image used.
        version: string, # Optional. The version of the image.
        operatingSystem: string, # Optional. The operating system of the image.
        osBuildNumber: string, # Optional. The operating system build number of the image.
        publishedDate: string (ISO 8601 Format), # Optional. The datetime that the backing image version was published.
      }, # Optional. Image settings for Dev Boxes create in this pool
      localAdministrator: "Enabled" | "Disabled", # Optional. Indicates whether owners of Dev Boxes in this pool are local administrators on the Dev Boxes.
    }

    ```

    </p>
  examples: >-
    This sample shows how to call GetPoolAsync with required parameters and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DevBoxesClient(endpoint, "<projectName>", credential);


    Response response = await client.GetPoolAsync("<poolName>");


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("name").ToString());

    Console.WriteLine(result.GetProperty("location").ToString());

    Console.WriteLine(result.GetProperty("osType").ToString());

    Console.WriteLine(result.GetProperty("hardwareProfile").GetProperty("skuName").ToString());

    Console.WriteLine(result.GetProperty("hardwareProfile").GetProperty("vCPUs").ToString());

    Console.WriteLine(result.GetProperty("hardwareProfile").GetProperty("memoryGB").ToString());

    Console.WriteLine(result.GetProperty("hibernateSupport").ToString());

    Console.WriteLine(result.GetProperty("storageProfile").GetProperty("osDisk").GetProperty("diskSizeGB").ToString());

    Console.WriteLine(result.GetProperty("imageReference").GetProperty("name").ToString());

    Console.WriteLine(result.GetProperty("imageReference").GetProperty("version").ToString());

    Console.WriteLine(result.GetProperty("imageReference").GetProperty("operatingSystem").ToString());

    Console.WriteLine(result.GetProperty("imageReference").GetProperty("osBuildNumber").ToString());

    Console.WriteLine(result.GetProperty("imageReference").GetProperty("publishedDate").ToString());

    Console.WriteLine(result.GetProperty("localAdministrator").ToString());

    ```
  metadata: {}
uid: Azure.Developer.DevCenter.DevBoxesClient.GetPoolAsync*
commentId: Overload:Azure.Developer.DevCenter.DevBoxesClient.GetPoolAsync
namespace: Azure.Developer.DevCenter
name: GetPoolAsync
fullName: Azure.Developer.DevCenter.DevBoxesClient.GetPoolAsync
nameWithType: DevBoxesClient.GetPoolAsync
assembliesWithMoniker:
- value: Azure.Developer.DevCenter.dll
packagesWithMoniker:
- value: Azure.Developer.DevCenter v1.0.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Developer.DevCenter.DevBoxesClient.GetPoolAsync
  api_location:
  - Azure.Developer.DevCenter.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Developer.DevCenter.DevBoxesClient.GetPoolAsync
  - Azure::Developer::DevCenter::DevBoxesClient::GetPoolAsync
  - GetPoolAsync
  - DevBoxesClient.GetPoolAsync
  - DevBoxesClient::GetPoolAsync
  helpviewer_keywords:
  - DevBoxesClient.GetPoolAsync method [.NET]
  - GetPoolAsync method [.NET], class DevBoxesClient
  - DevBoxesClient.GetPoolAsync(String, RequestContext) method [.NET]
  - GetPoolAsync(String, RequestContext) method [.NET], class DevBoxesClient
  monikers:
  - azure-dotnet-preview
