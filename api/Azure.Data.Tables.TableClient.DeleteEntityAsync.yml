### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Response"></xref> indicating the result of the operation.
  parameters:
  - namesWithMoniker:
    - value: partitionKey
    description: The partitionKey that identifies the table entity.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: rowKey
    description: The rowKey that identifies the table entity.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: ifMatch
    description: >-
      The If-Match value to be used for optimistic concurrency.

      If <xref data-throw-if-not-resolved="true" uid="Azure.ETag.All"></xref> is specified, the operation will be executed unconditionally.

      If the <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.ITableEntity.ETag"></xref> value is specified, the operation will fail with a status of 412 (Precondition Failed)

      if the <xref data-throw-if-not-resolved="true" uid="Azure.ETag"></xref> value of the entity in the table does not match.

      The default is to delete unconditionally.
    type: <xref href="Azure.ETag?alt=Azure.ETag&text=ETag" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> controlling the request lifetime.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: The server returned an error. See <xref data-throw-if-not-resolved="true" uid="System.Exception.Message"></xref> for details returned from the server.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Data.Tables.TableClient.DeleteEntityAsync(System.String,System.String,Azure.ETag,System.Threading.CancellationToken)
  commentId: M:Azure.Data.Tables.TableClient.DeleteEntityAsync(System.String,System.String,Azure.ETag,System.Threading.CancellationToken)
  name: DeleteEntityAsync(String, String, ETag, CancellationToken)
  fullName: Azure.Data.Tables.TableClient.DeleteEntityAsync(String, String, ETag, CancellationToken)
  nameWithType: TableClient.DeleteEntityAsync(String, String, ETag, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> DeleteEntityAsync (string partitionKey, string rowKey, Azure.ETag ifMatch = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DeleteEntityAsync : string * string * Azure.ETag * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>

        override this.DeleteEntityAsync : string * string * Azure.ETag * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function DeleteEntityAsync (partitionKey As String, rowKey As String, Optional ifMatch As ETag = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Deletes the specified table entity.
  remarks: 'Note: This method should not fail because the entity does not exist, however if delete operations are submitted in a <xref data-throw-if-not-resolved="true" uid="Azure.Data.Tables.TableTransactionAction"></xref>, the transaction will fail if the entity does not exist.'
  metadata: {}
uid: Azure.Data.Tables.TableClient.DeleteEntityAsync*
commentId: Overload:Azure.Data.Tables.TableClient.DeleteEntityAsync
namespace: Azure.Data.Tables
name: DeleteEntityAsync
fullName: Azure.Data.Tables.TableClient.DeleteEntityAsync
nameWithType: TableClient.DeleteEntityAsync
assembliesWithMoniker:
- value: Azure.Data.Tables.dll
packagesWithMoniker:
- value: Azure.Data.Tables v12.8.0
  monikers:
  - azure-dotnet
- value: Azure.Data.Tables v12.7.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Data.Tables.TableClient.DeleteEntityAsync
  api_location:
  - Azure.Data.Tables.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Data.Tables.TableClient.DeleteEntityAsync
  - Azure::Data::Tables::TableClient::DeleteEntityAsync
  - DeleteEntityAsync
  - TableClient.DeleteEntityAsync
  - TableClient::DeleteEntityAsync
  helpviewer_keywords:
  - TableClient.DeleteEntityAsync method [.NET]
  - DeleteEntityAsync method [.NET], class TableClient
  - TableClient.DeleteEntityAsync(String, String, ETag, CancellationToken) method [.NET]
  - DeleteEntityAsync(String, String, ETag, CancellationToken) method [.NET], class TableClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
