### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Cosmos.Scripts.TriggerProperties?alt=Azure.Cosmos.Scripts.TriggerProperties&text=TriggerProperties" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.Tasks.Task"></xref> containing a <xref data-throw-if-not-resolved="true" uid="Azure.Response`1"></xref> which wraps a <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Scripts.TriggerProperties"></xref> containing the updated resource record.
  parameters:
  - namesWithMoniker:
    - value: triggerProperties
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Scripts.TriggerProperties"></xref> object.
    type: <xref href="Azure.Cosmos.Scripts.TriggerProperties?alt=Azure.Cosmos.Scripts.TriggerProperties&text=TriggerProperties" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: requestOptions
    description: (Optional) The options for the trigger request <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.RequestOptions"></xref>
    type: <xref href="Azure.Cosmos.RequestOptions?alt=Azure.Cosmos.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: (Optional) <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> representing request cancellation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: If <code data-dev-comment-type="paramref">triggerProperties</code> is not set.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Cosmos.Scripts.CosmosScripts.ReplaceTriggerAsync(Azure.Cosmos.Scripts.TriggerProperties,Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Cosmos.Scripts.CosmosScripts.ReplaceTriggerAsync(Azure.Cosmos.Scripts.TriggerProperties,Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  name: ReplaceTriggerAsync(TriggerProperties, RequestOptions, CancellationToken)
  fullName: Azure.Cosmos.Scripts.CosmosScripts.ReplaceTriggerAsync(TriggerProperties, RequestOptions, CancellationToken)
  nameWithType: CosmosScripts.ReplaceTriggerAsync(TriggerProperties, RequestOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public abstract System.Threading.Tasks.Task<Azure.Response<Azure.Cosmos.Scripts.TriggerProperties>> ReplaceTriggerAsync (Azure.Cosmos.Scripts.TriggerProperties triggerProperties, Azure.Cosmos.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'abstract member ReplaceTriggerAsync : Azure.Cosmos.Scripts.TriggerProperties * Azure.Cosmos.RequestOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Cosmos.Scripts.TriggerProperties>>'
  - lang: vb
    values:
    - value: Public MustOverride Function ReplaceTriggerAsync (triggerProperties As TriggerProperties, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TriggerProperties))
  monikers:
  - azure-dotnet-preview
  summary: Replaces a <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Scripts.TriggerProperties"></xref> in the Azure Cosmos service as an asynchronous operation.
  examples: >-
    This examples replaces an existing trigger.


    ```csharp

    TriggerProperties triggerProperties = new TriggerProperties

    {
        Id = "testTriggerId",
        Body = @"function AddTax() {
            var item = getContext().getRequest().getBody();

            // Validate/calculate the tax.
            item.tax = item.cost* .15;

            // Update the request -- this is what is going to be inserted.
            getContext().getRequest().setBody(item);
        }",
        TriggerOperation = TriggerOperation.All,
        TriggerType = TriggerType.Post
    };


    CosmosScripts scripts = this.container.Scripts;

    Response<TriggerProperties> response = await scripts.ReplaceTriggerAsync(triggerSettigs);

    ```
  metadata: {}
uid: Azure.Cosmos.Scripts.CosmosScripts.ReplaceTriggerAsync*
commentId: Overload:Azure.Cosmos.Scripts.CosmosScripts.ReplaceTriggerAsync
namespace: Azure.Cosmos.Scripts
name: ReplaceTriggerAsync
fullName: Azure.Cosmos.Scripts.CosmosScripts.ReplaceTriggerAsync
nameWithType: CosmosScripts.ReplaceTriggerAsync
assembliesWithMoniker:
- value: Azure.Cosmos.dll
packagesWithMoniker:
- value: Azure.Cosmos v4.0.0-preview3
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Cosmos.Scripts.CosmosScripts.ReplaceTriggerAsync
  api_location:
  - Azure.Cosmos.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Cosmos.Scripts.CosmosScripts.ReplaceTriggerAsync
  - Azure::Cosmos::Scripts::CosmosScripts::ReplaceTriggerAsync
  - ReplaceTriggerAsync
  - CosmosScripts.ReplaceTriggerAsync
  - CosmosScripts::ReplaceTriggerAsync
  helpviewer_keywords:
  - CosmosScripts.ReplaceTriggerAsync method [.NET]
  - ReplaceTriggerAsync method [.NET], class CosmosScripts
  - CosmosScripts.ReplaceTriggerAsync(TriggerProperties, RequestOptions, CancellationToken) method [.NET]
  - ReplaceTriggerAsync(TriggerProperties, RequestOptions, CancellationToken) method [.NET], class CosmosScripts
  monikers:
  - azure-dotnet-preview
