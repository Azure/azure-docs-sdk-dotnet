### YamlMime:NetMember
type: constructor
members:
- parameters:
  - namesWithMoniker:
    - value: name
    description: Activity name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: items
    description: Input array on which filter should be applied.
    type: <xref href="Azure.Analytics.Synapse.Artifacts.Models.Expression?alt=Azure.Analytics.Synapse.Artifacts.Models.Expression&text=Expression" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: condition
    description: Condition to be used for filtering the input.
    type: <xref href="Azure.Analytics.Synapse.Artifacts.Models.Expression?alt=Azure.Analytics.Synapse.Artifacts.Models.Expression&text=Expression" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">name</code>, <code data-dev-comment-type="paramref">items</code> or <code data-dev-comment-type="paramref">condition</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Analytics.Synapse.Artifacts.Models.FilterActivity.#ctor(System.String,Azure.Analytics.Synapse.Artifacts.Models.Expression,Azure.Analytics.Synapse.Artifacts.Models.Expression)
  commentId: M:Azure.Analytics.Synapse.Artifacts.Models.FilterActivity.#ctor(System.String,Azure.Analytics.Synapse.Artifacts.Models.Expression,Azure.Analytics.Synapse.Artifacts.Models.Expression)
  name: FilterActivity(String, Expression, Expression)
  fullName: Azure.Analytics.Synapse.Artifacts.Models.FilterActivity.FilterActivity(String, Expression, Expression)
  nameWithType: FilterActivity.FilterActivity(String, Expression, Expression)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public FilterActivity (string name, Azure.Analytics.Synapse.Artifacts.Models.Expression items, Azure.Analytics.Synapse.Artifacts.Models.Expression condition);
  - lang: fsharp
    values:
    - value: 'new Azure.Analytics.Synapse.Artifacts.Models.FilterActivity : string * Azure.Analytics.Synapse.Artifacts.Models.Expression * Azure.Analytics.Synapse.Artifacts.Models.Expression -> Azure.Analytics.Synapse.Artifacts.Models.FilterActivity'
  - lang: vb
    values:
    - value: Public Sub New (name As String, items As Expression, condition As Expression)
  monikers:
  - azure-dotnet-preview
  summary: Initializes a new instance of FilterActivity.
  metadata: {}
uid: Azure.Analytics.Synapse.Artifacts.Models.FilterActivity.#ctor*
commentId: Overload:Azure.Analytics.Synapse.Artifacts.Models.FilterActivity.#ctor
namespace: Azure.Analytics.Synapse.Artifacts.Models
name: FilterActivity
fullName: Azure.Analytics.Synapse.Artifacts.Models.FilterActivity.FilterActivity
nameWithType: FilterActivity.FilterActivity
assembliesWithMoniker:
- value: Azure.Analytics.Synapse.Artifacts.dll
packagesWithMoniker:
- value: Azure.Analytics.Synapse.Artifacts v1.0.0-preview.17
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Synapse.Artifacts.Models.FilterActivity..ctor
  api_location:
  - Azure.Analytics.Synapse.Artifacts.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Synapse.Artifacts.Models.FilterActivity.#ctor
  - Azure::Analytics::Synapse::Artifacts::Models::FilterActivity::#ctor
  - '#ctor'
  - FilterActivity.#ctor
  - FilterActivity::#ctor
  helpviewer_keywords:
  - FilterActivity class [.NET], constructors
  - FilterActivity(String, Expression, Expression) class [.NET], constructors
  monikers:
  - azure-dotnet-preview
