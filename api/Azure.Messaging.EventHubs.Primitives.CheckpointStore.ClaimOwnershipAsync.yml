### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership?alt=Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&text=EventProcessorPartitionOwnership" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: The set of ownership records for the partitions that were successfully claimed; this is expected to be the <code data-dev-comment-type="paramref">desiredOwnership</code> or a subset of those partitions.
  parameters:
  - namesWithMoniker:
    - value: desiredOwnership
    description: The set of partition ownership desired by the event processor instance; this is the set of partitions that it will attempt to request responsibility for processing.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership?alt=Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&text=EventProcessorPartitionOwnership" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the processing.  This is most likely to occur when the processor is shutting down.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventHubs.Primitives.CheckpointStore.ClaimOwnershipAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventHubs.Primitives.CheckpointStore.ClaimOwnershipAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership},System.Threading.CancellationToken)
  name: ClaimOwnershipAsync(IEnumerable<EventProcessorPartitionOwnership>, CancellationToken)
  fullName: Azure.Messaging.EventHubs.Primitives.CheckpointStore.ClaimOwnershipAsync(IEnumerable<EventProcessorPartitionOwnership>, CancellationToken)
  nameWithType: CheckpointStore.ClaimOwnershipAsync(IEnumerable<EventProcessorPartitionOwnership>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public abstract System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership>> ClaimOwnershipAsync (System.Collections.Generic.IEnumerable<Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership> desiredOwnership, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'abstract member ClaimOwnershipAsync : seq<Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<seq<Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership>>'
  - lang: vb
    values:
    - value: Public MustOverride Function ClaimOwnershipAsync (desiredOwnership As IEnumerable(Of EventProcessorPartitionOwnership), cancellationToken As CancellationToken) As Task(Of IEnumerable(Of EventProcessorPartitionOwnership))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Attempts to claim ownership of the specified partitions for processing.  This operation is used by

    load balancing to enable distributing the responsibility for processing partitions for an

    Event Hub and consumer group pairing amongst the active event processors.
  metadata: {}
uid: Azure.Messaging.EventHubs.Primitives.CheckpointStore.ClaimOwnershipAsync*
commentId: Overload:Azure.Messaging.EventHubs.Primitives.CheckpointStore.ClaimOwnershipAsync
namespace: Azure.Messaging.EventHubs.Primitives
name: ClaimOwnershipAsync
fullName: Azure.Messaging.EventHubs.Primitives.CheckpointStore.ClaimOwnershipAsync
nameWithType: CheckpointStore.ClaimOwnershipAsync
assembliesWithMoniker:
- value: Azure.Messaging.EventHubs.dll
packagesWithMoniker:
- value: Azure.Messaging.EventHubs v5.9.2
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventHubs v5.7.0-beta.5
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventHubs.Primitives.CheckpointStore.ClaimOwnershipAsync
  api_location:
  - Azure.Messaging.EventHubs.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventHubs.Primitives.CheckpointStore.ClaimOwnershipAsync
  - Azure::Messaging::EventHubs::Primitives::CheckpointStore::ClaimOwnershipAsync
  - ClaimOwnershipAsync
  - CheckpointStore.ClaimOwnershipAsync
  - CheckpointStore::ClaimOwnershipAsync
  helpviewer_keywords:
  - CheckpointStore.ClaimOwnershipAsync method [.NET]
  - ClaimOwnershipAsync method [.NET], class CheckpointStore
  - CheckpointStore.ClaimOwnershipAsync(IEnumerable<EventProcessorPartitionOwnership>, CancellationToken) method [.NET]
  - ClaimOwnershipAsync(IEnumerable<EventProcessorPartitionOwnership>, CancellationToken) method [.NET], class CheckpointStore
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
