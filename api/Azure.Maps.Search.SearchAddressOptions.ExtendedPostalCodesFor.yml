### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Maps.Search.SearchIndex?alt=Azure.Maps.Search.SearchIndex&text=SearchIndex" data-throw-if-not-resolved="True"/>&gt;
  type: property
  uid: Azure.Maps.Search.SearchAddressOptions.ExtendedPostalCodesFor
  commentId: P:Azure.Maps.Search.SearchAddressOptions.ExtendedPostalCodesFor
  name: ExtendedPostalCodesFor
  fullName: Azure.Maps.Search.SearchAddressOptions.ExtendedPostalCodesFor
  nameWithType: SearchAddressOptions.ExtendedPostalCodesFor
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Collections.Generic.IEnumerable<Azure.Maps.Search.SearchIndex> ExtendedPostalCodesFor { get; set; }
  - lang: fsharp
    values:
    - value: 'member this.ExtendedPostalCodesFor : seq<Azure.Maps.Search.SearchIndex> with get, set'
  - lang: vb
    values:
    - value: Public Property ExtendedPostalCodesFor As IEnumerable(Of SearchIndex)
  monikers:
  - azure-dotnet-preview
  summary: >-
    Indexes for which extended postal codes should be included in the results.

    Available indexes are:

    <ul><li><code data-dev-comment-type="c">Addr</code> - Address ranges </li><li><code data-dev-comment-type="c">Geo</code> - Geographies </li><li><code data-dev-comment-type="c">PAD</code> - Point Addresses </li><li><code data-dev-comment-type="c">POI</code> - Points of Interest </li><li><code data-dev-comment-type="c">Str</code> - Streets </li><li><code data-dev-comment-type="c">XStr</code> - Cross Streets (intersections) </li></ul>

    Value should be a comma separated list of index types (in any order) or <code data-dev-comment-type="c">null</code> for no indexes.

    By default extended postal codes are included for all indexes except Geo. Extended postal code lists for geographies can be quite long so they have to be explicitly requested when needed.
  metadata: {}
uid: Azure.Maps.Search.SearchAddressOptions.ExtendedPostalCodesFor*
commentId: Overload:Azure.Maps.Search.SearchAddressOptions.ExtendedPostalCodesFor
namespace: Azure.Maps.Search
name: ExtendedPostalCodesFor
fullName: Azure.Maps.Search.SearchAddressOptions.ExtendedPostalCodesFor
nameWithType: SearchAddressOptions.ExtendedPostalCodesFor
assembliesWithMoniker:
- value: Azure.Maps.Search.dll
packagesWithMoniker:
- value: Azure.Maps.Search v1.0.0-beta.4
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Maps.Search.SearchAddressOptions.ExtendedPostalCodesFor
  - Azure.Maps.Search.SearchAddressOptions.get_ExtendedPostalCodesFor
  - Azure.Maps.Search.SearchAddressOptions.set_ExtendedPostalCodesFor
  api_location:
  - Azure.Maps.Search.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Maps.Search.SearchAddressOptions.ExtendedPostalCodesFor
  - Azure::Maps::Search::SearchAddressOptions::ExtendedPostalCodesFor
  - ExtendedPostalCodesFor
  - SearchAddressOptions.ExtendedPostalCodesFor
  - SearchAddressOptions::ExtendedPostalCodesFor
  helpviewer_keywords:
  - SearchAddressOptions.ExtendedPostalCodesFor property [.NET]
  - ExtendedPostalCodesFor property [.NET], class SearchAddressOptions
  monikers:
  - azure-dotnet-preview
