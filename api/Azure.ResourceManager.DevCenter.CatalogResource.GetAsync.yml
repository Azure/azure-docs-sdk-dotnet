### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.DevCenter.CatalogResource?alt=Azure.ResourceManager.DevCenter.CatalogResource&text=CatalogResource" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.DevCenter.CatalogResource.GetAsync(System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.DevCenter.CatalogResource.GetAsync(System.Threading.CancellationToken)
  name: GetAsync(CancellationToken)
  fullName: Azure.ResourceManager.DevCenter.CatalogResource.GetAsync(CancellationToken)
  nameWithType: CatalogResource.GetAsync(CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.DevCenter.CatalogResource>> GetAsync (System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetAsync : System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.DevCenter.CatalogResource>>

        override this.GetAsync : System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.DevCenter.CatalogResource>>
  - lang: vb
    values:
    - value: Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CatalogResource))
  monikers:
  - azure-dotnet-preview
  summary: >-
    Gets a catalog

    <ul><li>Request Path/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}</li><li>Operation IdCatalogs_Get</li></ul>
  metadata: {}
uid: Azure.ResourceManager.DevCenter.CatalogResource.GetAsync*
commentId: Overload:Azure.ResourceManager.DevCenter.CatalogResource.GetAsync
namespace: Azure.ResourceManager.DevCenter
name: GetAsync
fullName: Azure.ResourceManager.DevCenter.CatalogResource.GetAsync
nameWithType: CatalogResource.GetAsync
assembliesWithMoniker:
- value: Azure.ResourceManager.DevCenter.dll
packagesWithMoniker:
- value: Azure.ResourceManager.DevCenter v1.0.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.DevCenter.CatalogResource.GetAsync
  api_location:
  - Azure.ResourceManager.DevCenter.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.DevCenter.CatalogResource.GetAsync
  - Azure::ResourceManager::DevCenter::CatalogResource::GetAsync
  - GetAsync
  - CatalogResource.GetAsync
  - CatalogResource::GetAsync
  helpviewer_keywords:
  - CatalogResource.GetAsync method [.NET]
  - GetAsync method [.NET], class CatalogResource
  - CatalogResource.GetAsync(CancellationToken) method [.NET]
  - GetAsync(CancellationToken) method [.NET], class CatalogResource
  monikers:
  - azure-dotnet-preview
