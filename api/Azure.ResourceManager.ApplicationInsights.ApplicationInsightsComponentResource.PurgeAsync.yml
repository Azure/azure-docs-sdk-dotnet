### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeResponse?alt=Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeResponse&text=ComponentPurgeResponse" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: body
    description: Describes the body of a request to purge data in a single table of an Application Insights component.
    type: <xref href="Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeBody?alt=Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeBody&text=ComponentPurgeBody" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">body</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource.PurgeAsync(Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeBody,System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource.PurgeAsync(Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeBody,System.Threading.CancellationToken)
  name: PurgeAsync(ComponentPurgeBody, CancellationToken)
  fullName: Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource.PurgeAsync(ComponentPurgeBody, CancellationToken)
  nameWithType: ApplicationInsightsComponentResource.PurgeAsync(ComponentPurgeBody, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeResponse>> PurgeAsync (Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeBody body, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member PurgeAsync : Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeBody * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeResponse>>

        override this.PurgeAsync : Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeBody * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.ApplicationInsights.Models.ComponentPurgeResponse>>
  - lang: vb
    values:
    - value: Public Overridable Function PurgeAsync (body As ComponentPurgeBody, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ComponentPurgeResponse))
  monikers:
  - azure-dotnet-preview
  summary: >-
    Purges data in an Application Insights component by a set of user-defined filters.


    In order to manage system resources, purge requests are throttled at 50 requests per hour. You should batch the execution of purge requests by sending a single command whose predicate includes all user identities that require purging. Use the in operator to specify multiple identities. You should run the query prior to using for a purge request to verify that the results are expected.

    Note: this operation is intended for Classic resources, for  workspace-based Application Insights resource please run purge operation (directly on the workspace)(https://docs.microsoft.com/en-us/rest/api/loganalytics/workspace-purge/purge) , scoped to specific resource id.

    <ul><li>Request Path/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/purge</li><li>Operation IdComponents_Purge</li></ul>
  metadata: {}
uid: Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource.PurgeAsync*
commentId: Overload:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource.PurgeAsync
namespace: Azure.ResourceManager.ApplicationInsights
name: PurgeAsync
fullName: Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource.PurgeAsync
nameWithType: ApplicationInsightsComponentResource.PurgeAsync
assembliesWithMoniker:
- value: Azure.ResourceManager.ApplicationInsights.dll
packagesWithMoniker:
- value: Azure.ResourceManager.ApplicationInsights v1.0.0-beta.3
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource.PurgeAsync
  api_location:
  - Azure.ResourceManager.ApplicationInsights.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource.PurgeAsync
  - Azure::ResourceManager::ApplicationInsights::ApplicationInsightsComponentResource::PurgeAsync
  - PurgeAsync
  - ApplicationInsightsComponentResource.PurgeAsync
  - ApplicationInsightsComponentResource::PurgeAsync
  helpviewer_keywords:
  - ApplicationInsightsComponentResource.PurgeAsync method [.NET]
  - PurgeAsync method [.NET], class ApplicationInsightsComponentResource
  - ApplicationInsightsComponentResource.PurgeAsync(ComponentPurgeBody, CancellationToken) method [.NET]
  - PurgeAsync(ComponentPurgeBody, CancellationToken) method [.NET], class ApplicationInsightsComponentResource
  monikers:
  - azure-dotnet-preview
