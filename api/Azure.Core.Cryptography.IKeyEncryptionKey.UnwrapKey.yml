### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Byte?alt=System.Byte&text=Byte" data-throw-if-not-resolved="True"/>[]
    description: The decrypted key bytes.
  parameters:
  - namesWithMoniker:
    - value: algorithm
    description: The key wrap algorithm which was used to encrypt the specified encrypted key.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: encryptedKey
    description: The encrypted key to be decrypted.
    type: <xref href="System.ReadOnlyMemory`1?alt=System.ReadOnlyMemory&text=ReadOnlyMemory" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Byte?alt=System.Byte&text=Byte" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> controlling the request lifetime.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  commentId: M:Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: UnwrapKey(String, ReadOnlyMemory<Byte>, CancellationToken)
  fullName: Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey(String, ReadOnlyMemory<Byte>, CancellationToken)
  nameWithType: IKeyEncryptionKey.UnwrapKey(String, ReadOnlyMemory<Byte>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public byte[] UnwrapKey (string algorithm, ReadOnlyMemory<byte> encryptedKey, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'abstract member UnwrapKey : string * ReadOnlyMemory<byte> * System.Threading.CancellationToken -> byte[]'
  - lang: vb
    values:
    - value: Public Function UnwrapKey (algorithm As String, encryptedKey As ReadOnlyMemory(Of Byte), Optional cancellationToken As CancellationToken = Nothing) As Byte()
  monikers:
  - azure-dotnet
  summary: Decrypts the specified encrypted key using the specified algorithm.
  metadata: {}
uid: Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey*
commentId: Overload:Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey
namespace: Azure.Core.Cryptography
name: UnwrapKey
fullName: Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey
nameWithType: IKeyEncryptionKey.UnwrapKey
assembliesWithMoniker:
- value: Azure.Core.dll
packagesWithMoniker:
- value: Azure.Core v1.34.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey
  api_location:
  - Azure.Core.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey
  - Azure::Core::Cryptography::IKeyEncryptionKey::UnwrapKey
  - UnwrapKey
  - IKeyEncryptionKey.UnwrapKey
  - IKeyEncryptionKey::UnwrapKey
  helpviewer_keywords:
  - IKeyEncryptionKey.UnwrapKey method [.NET]
  - UnwrapKey method [.NET], interface IKeyEncryptionKey
  - IKeyEncryptionKey.UnwrapKey(String, ReadOnlyMemory<Byte>, CancellationToken) method [.NET]
  - UnwrapKey(String, ReadOnlyMemory<Byte>, CancellationToken) method [.NET], interface IKeyEncryptionKey
  monikers:
  - azure-dotnet
