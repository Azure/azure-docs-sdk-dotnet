### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Pageable`1?alt=Azure.Pageable&text=Pageable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Pageable`1"></xref> from the service containing a list of <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> objects. Details of the body schema for each item in the collection are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: search
    description: Request updates matching a free-text search expression.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: filter
    description: Optional to filter updates by isDeployable property.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetUpdates(System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetUpdates(System.String,System.String,Azure.RequestContext)
  name: GetUpdates(String, String, RequestContext)
  fullName: Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetUpdates(String, String, RequestContext)
  nameWithType: DeviceUpdateClient.GetUpdates(String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Pageable<BinaryData> GetUpdates (string search = default, string filter = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetUpdates : string * string * Azure.RequestContext -> Azure.Pageable<BinaryData>

        override this.GetUpdates : string * string * Azure.RequestContext -> Azure.Pageable<BinaryData>
  - lang: vb
    values:
    - value: Public Overridable Function GetUpdates (Optional search As String = Nothing, Optional filter As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Get a list of all updates that have been imported to Device Update for IoT Hub.
  remarks: >-
    <p>Below is the JSON schema for one item in the pageable response.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">UpdateListValue</code>: 


    ```

    {
                  updateId: {
                    provider: string, # Required. Update provider.
                    name: string, # Required. Update name.
                    version: string, # Required. Update version.
                  }, # Required. Update identity.
                  description: string, # Optional. Update description specified by creator.
                  friendlyName: string, # Optional. Friendly update name specified by importer.
                  isDeployable: boolean, # Optional. Whether the update can be deployed to a device on its own.
                  updateType: string, # Optional. Update type. Deprecated in latest import manifest schema.
                  installedCriteria: string, # Optional. String interpreted by Device Update client to determine if the update is installed on the device. Deprecated in latest import manifest schema.
                  compatibility: [Dictionary<string, string>], # Required. List of update compatibility information.
                  instructions: {
                    steps: [
                      {
                        type: "Inline" | "Reference", # Optional. Step type.
                        description: string, # Optional. Step description.
                        handler: string, # Optional. Identity of handler that will execute this step. Required if step type is inline.
                        handlerProperties: AnyObject, # Optional. Parameters to be passed to handler during execution.
                        files: [string], # Optional. Collection of file names to be passed to handler during execution. Required if step type is inline.
                        updateId: UpdateId, # Optional. Referenced child update identity.  Required if step type is reference.
                      }
                    ], # Required. Collection of installation steps.
                  }, # Optional. Update install instructions.
                  referencedBy: [UpdateId], # Optional. List of update identities that reference this update.
                  scanResult: string, # Optional. Update aggregate scan result (calculated from payload file scan results).
                  manifestVersion: string, # Required. Schema version of manifest used to import the update.
                  importedDateTime: string (ISO 8601 Format), # Required. Date and time in UTC when the update was imported.
                  createdDateTime: string (ISO 8601 Format), # Required. Date and time in UTC when the update was created.
                  etag: string, # Optional. Update ETag.
                }
    ```

    </p>
  examples: >-
    This sample shows how to call GetUpdates and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DeviceUpdateClient(endpoint, "<instanceId>", credential);


    foreach (var data in client.GetUpdates())

    {
        JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        Console.WriteLine(result.GetProperty("updateId").GetProperty("provider").ToString());
        Console.WriteLine(result.GetProperty("updateId").GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("updateId").GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("compatibility")[0].GetProperty("<test>").ToString());
        Console.WriteLine(result.GetProperty("manifestVersion").ToString());
        Console.WriteLine(result.GetProperty("importedDateTime").ToString());
        Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    }

    ```

    This sample shows how to call GetUpdates with all parameters, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DeviceUpdateClient(endpoint, "<instanceId>", credential);


    foreach (var data in client.GetUpdates("<search>", "<filter>"))

    {
        JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        Console.WriteLine(result.GetProperty("updateId").GetProperty("provider").ToString());
        Console.WriteLine(result.GetProperty("updateId").GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("updateId").GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("friendlyName").ToString());
        Console.WriteLine(result.GetProperty("isDeployable").ToString());
        Console.WriteLine(result.GetProperty("updateType").ToString());
        Console.WriteLine(result.GetProperty("installedCriteria").ToString());
        Console.WriteLine(result.GetProperty("compatibility")[0].GetProperty("<test>").ToString());
        Console.WriteLine(result.GetProperty("instructions").GetProperty("steps")[0].GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("instructions").GetProperty("steps")[0].GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("instructions").GetProperty("steps")[0].GetProperty("handler").ToString());
        Console.WriteLine(result.GetProperty("instructions").GetProperty("steps")[0].GetProperty("handlerProperties").ToString());
        Console.WriteLine(result.GetProperty("instructions").GetProperty("steps")[0].GetProperty("files")[0].ToString());
        Console.WriteLine(result.GetProperty("instructions").GetProperty("steps")[0].GetProperty("updateId").GetProperty("provider").ToString());
        Console.WriteLine(result.GetProperty("instructions").GetProperty("steps")[0].GetProperty("updateId").GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("instructions").GetProperty("steps")[0].GetProperty("updateId").GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("referencedBy")[0].GetProperty("provider").ToString());
        Console.WriteLine(result.GetProperty("referencedBy")[0].GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("referencedBy")[0].GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("scanResult").ToString());
        Console.WriteLine(result.GetProperty("manifestVersion").ToString());
        Console.WriteLine(result.GetProperty("importedDateTime").ToString());
        Console.WriteLine(result.GetProperty("createdDateTime").ToString());
        Console.WriteLine(result.GetProperty("etag").ToString());
    }

    ```
  metadata: {}
uid: Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetUpdates*
commentId: Overload:Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetUpdates
namespace: Azure.IoT.DeviceUpdate
name: GetUpdates
fullName: Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetUpdates
nameWithType: DeviceUpdateClient.GetUpdates
assembliesWithMoniker:
- value: Azure.IoT.DeviceUpdate.dll
packagesWithMoniker:
- value: Azure.IoT.DeviceUpdate v1.0.0
  monikers:
  - azure-dotnet
- value: Azure.IoT.DeviceUpdate v1.0.0-beta.4
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetUpdates
  api_location:
  - Azure.IoT.DeviceUpdate.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetUpdates
  - Azure::IoT::DeviceUpdate::DeviceUpdateClient::GetUpdates
  - GetUpdates
  - DeviceUpdateClient.GetUpdates
  - DeviceUpdateClient::GetUpdates
  helpviewer_keywords:
  - DeviceUpdateClient.GetUpdates method [.NET]
  - GetUpdates method [.NET], class DeviceUpdateClient
  - DeviceUpdateClient.GetUpdates(String, String, RequestContext) method [.NET]
  - GetUpdates(String, String, RequestContext) method [.NET], class DeviceUpdateClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
