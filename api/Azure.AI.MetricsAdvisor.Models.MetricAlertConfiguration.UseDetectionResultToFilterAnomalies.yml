### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>&gt;
  type: property
  uid: Azure.AI.MetricsAdvisor.Models.MetricAlertConfiguration.UseDetectionResultToFilterAnomalies
  commentId: P:Azure.AI.MetricsAdvisor.Models.MetricAlertConfiguration.UseDetectionResultToFilterAnomalies
  name: UseDetectionResultToFilterAnomalies
  fullName: Azure.AI.MetricsAdvisor.Models.MetricAlertConfiguration.UseDetectionResultToFilterAnomalies
  nameWithType: MetricAlertConfiguration.UseDetectionResultToFilterAnomalies
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public bool? UseDetectionResultToFilterAnomalies { get; set; }
  - lang: fsharp
    values:
    - value: 'member this.UseDetectionResultToFilterAnomalies : Nullable<bool> with get, set'
  - lang: vb
    values:
    - value: Public Property UseDetectionResultToFilterAnomalies As Nullable(Of Boolean)
  monikers:
  - azure-dotnet
  summary: >-
    If set to <code data-dev-comment-type="c">true</code>, this <xref data-throw-if-not-resolved="true" uid="Azure.AI.MetricsAdvisor.Models.MetricAlertConfiguration"></xref> cannot be used to add anomalies

    to an alert directly. Instead, it will only be used as a filter to its containing

    <xref data-throw-if-not-resolved="true" uid="Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration"></xref>, filtering out anomalies that shouldn't be added to the alert.

    If an anomaly does not satisfy the conditions set by this configuration, it can't be added to the

    alert. Defaults to <code data-dev-comment-type="c">false</code>.
  remarks: <p>Be aware that, if you set this property to <code data-dev-comment-type="c">true</code> and have no other configurations in <xref data-throw-if-not-resolved="true" uid="Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration.MetricAlertConfigurations"></xref>, alerts will never be triggered.</p>
  metadata: {}
uid: Azure.AI.MetricsAdvisor.Models.MetricAlertConfiguration.UseDetectionResultToFilterAnomalies*
commentId: Overload:Azure.AI.MetricsAdvisor.Models.MetricAlertConfiguration.UseDetectionResultToFilterAnomalies
namespace: Azure.AI.MetricsAdvisor.Models
name: UseDetectionResultToFilterAnomalies
fullName: Azure.AI.MetricsAdvisor.Models.MetricAlertConfiguration.UseDetectionResultToFilterAnomalies
nameWithType: MetricAlertConfiguration.UseDetectionResultToFilterAnomalies
assembliesWithMoniker:
- value: Azure.AI.MetricsAdvisor.dll
packagesWithMoniker:
- value: Azure.AI.MetricsAdvisor v1.1.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.AI.MetricsAdvisor.Models.MetricAlertConfiguration.UseDetectionResultToFilterAnomalies
  - Azure.AI.MetricsAdvisor.Models.MetricAlertConfiguration.get_UseDetectionResultToFilterAnomalies
  - Azure.AI.MetricsAdvisor.Models.MetricAlertConfiguration.set_UseDetectionResultToFilterAnomalies
  api_location:
  - Azure.AI.MetricsAdvisor.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.MetricsAdvisor.Models.MetricAlertConfiguration.UseDetectionResultToFilterAnomalies
  - Azure::AI::MetricsAdvisor::Models::MetricAlertConfiguration::UseDetectionResultToFilterAnomalies
  - UseDetectionResultToFilterAnomalies
  - MetricAlertConfiguration.UseDetectionResultToFilterAnomalies
  - MetricAlertConfiguration::UseDetectionResultToFilterAnomalies
  helpviewer_keywords:
  - MetricAlertConfiguration.UseDetectionResultToFilterAnomalies property [.NET]
  - UseDetectionResultToFilterAnomalies property [.NET], class MetricAlertConfiguration
  monikers:
  - azure-dotnet
