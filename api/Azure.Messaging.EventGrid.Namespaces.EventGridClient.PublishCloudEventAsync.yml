### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.EventGrid.Namespaces.PublishResult?alt=Azure.Messaging.EventGrid.Namespaces.PublishResult&text=PublishResult" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: topicName
    description: Topic Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: event
    description: Single Cloud Event being published.
    type: <xref href="Azure.Messaging.CloudEvent?alt=Azure.Messaging.CloudEvent&text=CloudEvent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">topicName</code> or <code data-dev-comment-type="paramref">event</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">topicName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.Namespaces.EventGridClient.PublishCloudEventAsync(System.String,Azure.Messaging.CloudEvent,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.Namespaces.EventGridClient.PublishCloudEventAsync(System.String,Azure.Messaging.CloudEvent,System.Threading.CancellationToken)
  name: PublishCloudEventAsync(String, CloudEvent, CancellationToken)
  fullName: Azure.Messaging.EventGrid.Namespaces.EventGridClient.PublishCloudEventAsync(String, CloudEvent, CancellationToken)
  nameWithType: EventGridClient.PublishCloudEventAsync(String, CloudEvent, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.Messaging.EventGrid.Namespaces.PublishResult>> PublishCloudEventAsync (string topicName, Azure.Messaging.CloudEvent event, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member PublishCloudEventAsync : string * Azure.Messaging.CloudEvent * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Messaging.EventGrid.Namespaces.PublishResult>>

        override this.PublishCloudEventAsync : string * Azure.Messaging.CloudEvent * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Messaging.EventGrid.Namespaces.PublishResult>>
  - lang: vb
    values:
    - value: Public Overridable Function PublishCloudEventAsync (topicName As String, event As CloudEvent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PublishResult))
  monikers:
  - azure-dotnet-preview
  summary: 'Publish Single Cloud Event to namespace topic. In case of success, the server responds with an HTTP 200 status code with an empty JSON object in response. Otherwise, the server can return various error codes. For example, 401: which indicates authorization failure, 403: which indicates quota exceeded or message is too large, 410: which indicates that specific topic is not found, 400: for bad request, and 500: for internal server error.'
  metadata: {}
uid: Azure.Messaging.EventGrid.Namespaces.EventGridClient.PublishCloudEventAsync*
commentId: Overload:Azure.Messaging.EventGrid.Namespaces.EventGridClient.PublishCloudEventAsync
namespace: Azure.Messaging.EventGrid.Namespaces
name: PublishCloudEventAsync
fullName: Azure.Messaging.EventGrid.Namespaces.EventGridClient.PublishCloudEventAsync
nameWithType: EventGridClient.PublishCloudEventAsync
assembliesWithMoniker:
- value: Azure.Messaging.EventGrid.dll
packagesWithMoniker:
- value: Azure.Messaging.EventGrid v4.18.0-beta.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventGrid.Namespaces.EventGridClient.PublishCloudEventAsync
  api_location:
  - Azure.Messaging.EventGrid.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventGrid.Namespaces.EventGridClient.PublishCloudEventAsync
  - Azure::Messaging::EventGrid::Namespaces::EventGridClient::PublishCloudEventAsync
  - PublishCloudEventAsync
  - EventGridClient.PublishCloudEventAsync
  - EventGridClient::PublishCloudEventAsync
  helpviewer_keywords:
  - EventGridClient.PublishCloudEventAsync method [.NET]
  - PublishCloudEventAsync method [.NET], class EventGridClient
  - EventGridClient.PublishCloudEventAsync(String, CloudEvent, CancellationToken) method [.NET]
  - PublishCloudEventAsync(String, CloudEvent, CancellationToken) method [.NET], class EventGridClient
  monikers:
  - azure-dotnet-preview
