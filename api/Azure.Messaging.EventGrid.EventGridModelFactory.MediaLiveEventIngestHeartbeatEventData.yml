### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Messaging.EventGrid.SystemEvents.MediaLiveEventIngestHeartbeatEventData?alt=Azure.Messaging.EventGrid.SystemEvents.MediaLiveEventIngestHeartbeatEventData&text=MediaLiveEventIngestHeartbeatEventData" data-throw-if-not-resolved="True"/>
    description: A new <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventGrid.SystemEvents.MediaLiveEventIngestHeartbeatEventData"></xref> instance for mocking.
  parameters:
  - namesWithMoniker:
    - value: trackType
    description: Gets the type of the track (Audio / Video).
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: trackName
    description: Gets the track name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: transcriptionLanguage
    description: Gets the Live Transcription language.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: transcriptionState
    description: Gets the Live Transcription state.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: bitrate
    description: Gets the bitrate of the track.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int64?alt=System.Int64&text=Int64" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: incomingBitrate
    description: Gets the incoming bitrate.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int64?alt=System.Int64&text=Int64" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: ingestDriftValue
    description: Gets the track ingest drift value.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: lastFragmentArrivalTime
    description: Gets the arrival UTC time of the last fragment.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.DateTimeOffset?alt=System.DateTimeOffset&text=DateTimeOffset" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: lastTimestamp
    description: Gets the last timestamp.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: timescale
    description: Gets the timescale of the last timestamp.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: overlapCount
    description: Gets the fragment Overlap count.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int64?alt=System.Int64&text=Int64" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: discontinuityCount
    description: Gets the fragment Discontinuity count.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int64?alt=System.Int64&text=Int64" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: nonincreasingCount
    description: Gets Non increasing count.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int64?alt=System.Int64&text=Int64" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: unexpectedBitrate
    description: Gets a value indicating whether unexpected bitrate is present or not.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: state
    description: Gets the state of the live event.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: healthy
    description: Gets a value indicating whether preview is healthy or not.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Azure.Messaging.EventGrid.EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData(System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean})
  commentId: M:Azure.Messaging.EventGrid.EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData(System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean})
  name: >-
    MediaLiveEventIngestHeartbeatEventData(String, String, String,

     String, Nullable<Int64>, Nullable<Int64>, Nullable<Int32>, Nullable<DateTimeOffset>,

     String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>,

     Nullable<Boolean>, String, Nullable<Boolean>)
  fullName: Azure.Messaging.EventGrid.EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData(String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int32>, Nullable<DateTimeOffset>, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>, String, Nullable<Boolean>)
  nameWithType: EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData(String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int32>, Nullable<DateTimeOffset>, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>, String, Nullable<Boolean>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Azure.Messaging.EventGrid.SystemEvents.MediaLiveEventIngestHeartbeatEventData MediaLiveEventIngestHeartbeatEventData (string trackType = default, string trackName = default, string transcriptionLanguage = default, string transcriptionState = default, long? bitrate = default, long? incomingBitrate = default, int? ingestDriftValue = default, DateTimeOffset? lastFragmentArrivalTime = default, string lastTimestamp = default, string timescale = default, long? overlapCount = default, long? discontinuityCount = default, long? nonincreasingCount = default, bool? unexpectedBitrate = default, string state = default, bool? healthy = default);
  - lang: fsharp
    values:
    - value: 'static member MediaLiveEventIngestHeartbeatEventData : string * string * string * string * Nullable<int64> * Nullable<int64> * Nullable<int> * Nullable<DateTimeOffset> * string * string * Nullable<int64> * Nullable<int64> * Nullable<int64> * Nullable<bool> * string * Nullable<bool> -> Azure.Messaging.EventGrid.SystemEvents.MediaLiveEventIngestHeartbeatEventData'
  - lang: vb
    values:
    - value: Public Shared Function MediaLiveEventIngestHeartbeatEventData (Optional trackType As String = Nothing, Optional trackName As String = Nothing, Optional transcriptionLanguage As String = Nothing, Optional transcriptionState As String = Nothing, Optional bitrate As Nullable(Of Long) = Nothing, Optional incomingBitrate As Nullable(Of Long) = Nothing, Optional ingestDriftValue As Nullable(Of Integer) = Nothing, Optional lastFragmentArrivalTime As Nullable(Of DateTimeOffset) = Nothing, Optional lastTimestamp As String = Nothing, Optional timescale As String = Nothing, Optional overlapCount As Nullable(Of Long) = Nothing, Optional discontinuityCount As Nullable(Of Long) = Nothing, Optional nonincreasingCount As Nullable(Of Long) = Nothing, Optional unexpectedBitrate As Nullable(Of Boolean) = Nothing, Optional state As String = Nothing, Optional healthy As Nullable(Of Boolean) = Nothing) As MediaLiveEventIngestHeartbeatEventData
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of MediaLiveEventIngestHeartbeatEventData.
  metadata: {}
uid: Azure.Messaging.EventGrid.EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData*
commentId: Overload:Azure.Messaging.EventGrid.EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData
namespace: Azure.Messaging.EventGrid
name: MediaLiveEventIngestHeartbeatEventData
fullName: Azure.Messaging.EventGrid.EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData
nameWithType: EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData
assembliesWithMoniker:
- value: Azure.Messaging.EventGrid.dll
packagesWithMoniker:
- value: Azure.Messaging.EventGrid v4.17.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventGrid v4.18.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventGrid.EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData
  api_location:
  - Azure.Messaging.EventGrid.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventGrid.EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData
  - Azure::Messaging::EventGrid::EventGridModelFactory::MediaLiveEventIngestHeartbeatEventData
  - MediaLiveEventIngestHeartbeatEventData
  - EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData
  - EventGridModelFactory::MediaLiveEventIngestHeartbeatEventData
  helpviewer_keywords:
  - EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData method [.NET]
  - MediaLiveEventIngestHeartbeatEventData method [.NET], class EventGridModelFactory
  - EventGridModelFactory.MediaLiveEventIngestHeartbeatEventData(String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int32>, Nullable<DateTimeOffset>, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>, String, Nullable<Boolean>) method [.NET]
  - MediaLiveEventIngestHeartbeatEventData(String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int32>, Nullable<DateTimeOffset>, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>, String, Nullable<Boolean>) method [.NET], class EventGridModelFactory
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
