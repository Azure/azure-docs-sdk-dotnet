### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Maps.Routing.Models.GetRouteMatrixOperation?alt=Azure.Maps.Routing.Models.GetRouteMatrixOperation&text=GetRouteMatrixOperation" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: If the method should wait to return until the long-running operation has completed on the service; <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Started"></xref> if it should return after starting the operation.
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: The route direction options.
    type: <xref href="Azure.Maps.Routing.RouteMatrixOptions?alt=Azure.Maps.Routing.RouteMatrixOptions&text=RouteMatrixOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">options</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Maps.Routing.MapsRoutingClient.GetRouteMatrixAsync(Azure.WaitUntil,Azure.Maps.Routing.RouteMatrixOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Maps.Routing.MapsRoutingClient.GetRouteMatrixAsync(Azure.WaitUntil,Azure.Maps.Routing.RouteMatrixOptions,System.Threading.CancellationToken)
  name: GetRouteMatrixAsync(WaitUntil, RouteMatrixOptions, CancellationToken)
  fullName: Azure.Maps.Routing.MapsRoutingClient.GetRouteMatrixAsync(WaitUntil, RouteMatrixOptions, CancellationToken)
  nameWithType: MapsRoutingClient.GetRouteMatrixAsync(WaitUntil, RouteMatrixOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Maps.Routing.Models.GetRouteMatrixOperation> GetRouteMatrixAsync (Azure.WaitUntil waitUntil, Azure.Maps.Routing.RouteMatrixOptions options, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetRouteMatrixAsync : Azure.WaitUntil * Azure.Maps.Routing.RouteMatrixOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Maps.Routing.Models.GetRouteMatrixOperation>

        override this.GetRouteMatrixAsync : Azure.WaitUntil * Azure.Maps.Routing.RouteMatrixOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Maps.Routing.Models.GetRouteMatrixOperation>
  - lang: vb
    values:
    - value: Public Overridable Function GetRouteMatrixAsync (waitUntil As WaitUntil, options As RouteMatrixOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of GetRouteMatrixOperation)
  monikers:
  - azure-dotnet-preview
  summary: >-
    The Matrix Routing service allows calculation of a matrix of route summaries for a set of routes defined by origin and destination locations by using an asynchronous (async) or synchronous (sync) request.

    For every given origin, the service calculates the cost of routing from that origin to every given destination. The set of origins and the set of destinations can be thought of as the column and row headers of a table and each cell in the table contains the costs of routing from the origin to the destination for that cell.

    For each route, the travel times and distances are returned. You can use the computed costs to determine which detailed routes to calculate using the Route Directions API.

    The maximum size of a matrix for async request is <code data-dev-comment-type="c">700</code> (the number of origins multiplied by the number of destinations).
  metadata: {}
uid: Azure.Maps.Routing.MapsRoutingClient.GetRouteMatrixAsync*
commentId: Overload:Azure.Maps.Routing.MapsRoutingClient.GetRouteMatrixAsync
namespace: Azure.Maps.Routing
name: GetRouteMatrixAsync
fullName: Azure.Maps.Routing.MapsRoutingClient.GetRouteMatrixAsync
nameWithType: MapsRoutingClient.GetRouteMatrixAsync
assembliesWithMoniker:
- value: Azure.Maps.Routing.dll
packagesWithMoniker:
- value: Azure.Maps.Routing v1.0.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Maps.Routing.MapsRoutingClient.GetRouteMatrixAsync
  api_location:
  - Azure.Maps.Routing.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Maps.Routing.MapsRoutingClient.GetRouteMatrixAsync
  - Azure::Maps::Routing::MapsRoutingClient::GetRouteMatrixAsync
  - GetRouteMatrixAsync
  - MapsRoutingClient.GetRouteMatrixAsync
  - MapsRoutingClient::GetRouteMatrixAsync
  helpviewer_keywords:
  - MapsRoutingClient.GetRouteMatrixAsync method [.NET]
  - GetRouteMatrixAsync method [.NET], class MapsRoutingClient
  - MapsRoutingClient.GetRouteMatrixAsync(WaitUntil, RouteMatrixOptions, CancellationToken) method [.NET]
  - GetRouteMatrixAsync(WaitUntil, RouteMatrixOptions, CancellationToken) method [.NET], class MapsRoutingClient
  monikers:
  - azure-dotnet-preview
