### YamlMime:NetMember
type: constructor
members:
- parameters:
  - namesWithMoniker:
    - value: url
    description: 'The url to connect Quickbase source. Type: string (or Expression with resultType string).'
    type: <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: userToken
    description: >-
      The user token for the Quickbase source.

      Please note <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.SecretBase"></xref> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.

      The available derived classes include <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.AzureKeyVaultSecretReference"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.SecureString"></xref>.
    type: <xref href="Azure.Analytics.Synapse.Artifacts.Models.SecretBase?alt=Azure.Analytics.Synapse.Artifacts.Models.SecretBase&text=SecretBase" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">url</code> or <code data-dev-comment-type="paramref">userToken</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.#ctor(System.Object,Azure.Analytics.Synapse.Artifacts.Models.SecretBase)
  commentId: M:Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.#ctor(System.Object,Azure.Analytics.Synapse.Artifacts.Models.SecretBase)
  name: QuickbaseLinkedService(Object, SecretBase)
  fullName: Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.QuickbaseLinkedService(Object, SecretBase)
  nameWithType: QuickbaseLinkedService.QuickbaseLinkedService(Object, SecretBase)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public QuickbaseLinkedService (object url, Azure.Analytics.Synapse.Artifacts.Models.SecretBase userToken);
  - lang: fsharp
    values:
    - value: 'new Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService : obj * Azure.Analytics.Synapse.Artifacts.Models.SecretBase -> Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService'
  - lang: vb
    values:
    - value: Public Sub New (url As Object, userToken As SecretBase)
  monikers:
  - azure-dotnet-preview
  summary: Initializes a new instance of QuickbaseLinkedService.
  metadata: {}
uid: Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.#ctor*
commentId: Overload:Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.#ctor
namespace: Azure.Analytics.Synapse.Artifacts.Models
name: QuickbaseLinkedService
fullName: Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.QuickbaseLinkedService
nameWithType: QuickbaseLinkedService.QuickbaseLinkedService
assembliesWithMoniker:
- value: Azure.Analytics.Synapse.Artifacts.dll
packagesWithMoniker:
- value: Azure.Analytics.Synapse.Artifacts v1.0.0-preview.17
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService..ctor
  api_location:
  - Azure.Analytics.Synapse.Artifacts.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.#ctor
  - Azure::Analytics::Synapse::Artifacts::Models::QuickbaseLinkedService::#ctor
  - '#ctor'
  - QuickbaseLinkedService.#ctor
  - QuickbaseLinkedService::#ctor
  helpviewer_keywords:
  - QuickbaseLinkedService class [.NET], constructors
  - QuickbaseLinkedService(Object, SecretBase) class [.NET], constructors
  monikers:
  - azure-dotnet-preview
