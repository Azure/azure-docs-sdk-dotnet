### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.AsyncPageable`1?alt=Azure.AsyncPageable&text=AsyncPageable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.AsyncPageable`1"></xref> from the service containing a list of <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> objects. Details of the body schema for each item in the collection are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: skip
    description: The number of result items to skip.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: maxCount
    description: The number of result items to return.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.RequestContext)
  commentId: M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.RequestContext)
  name: GetMultivariateModelsAsync(Nullable<Int32>, Nullable<Int32>, RequestContext)
  fullName: Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync(Nullable<Int32>, Nullable<Int32>, RequestContext)
  nameWithType: AnomalyDetectorClient.GetMultivariateModelsAsync(Nullable<Int32>, Nullable<Int32>, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.AsyncPageable<BinaryData> GetMultivariateModelsAsync (int? skip, int? maxCount, Azure.RequestContext context);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetMultivariateModelsAsync : Nullable<int> * Nullable<int> * Azure.RequestContext -> Azure.AsyncPageable<BinaryData>

        override this.GetMultivariateModelsAsync : Nullable<int> * Nullable<int> * Azure.RequestContext -> Azure.AsyncPageable<BinaryData>
  - lang: vb
    values:
    - value: Public Overridable Function GetMultivariateModelsAsync (skip As Nullable(Of Integer), maxCount As Nullable(Of Integer), context As RequestContext) As AsyncPageable(Of BinaryData)
  monikers:
  - azure-dotnet-preview
  summary: >-
    [Protocol Method] List Multivariate Models

    <ul><li>

    This <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</a> allows explicit creation of the request and processing of the response for advanced scenarios.

    </li><li>

    Please try the simpler <xref data-throw-if-not-resolved="true" uid="Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)"></xref> convenience overload with strongly typed models first.

    </li></ul>
  remarks: >-
    <p>List models of a resource.</p><p>Below is the JSON schema for one item in the pageable response.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">Array</code>: 


    ```

    {
      modelId: string, # Required.
      createdTime: string (date & time), # Required.
      lastUpdatedTime: string (date & time), # Required.
      modelInfo: {
        dataSource: string, # Required.
        dataSchema: "OneTable" | "MultiTable", # Optional.
        startTime: string (date & time), # Required.
        endTime: string (date & time), # Required.
        displayName: string, # Optional.
        slidingWindow: number, # Optional.
        alignPolicy: {
          alignMode: "Inner" | "Outer", # Optional.
          fillNAMethod: "Previous" | "Subsequent" | "Linear" | "Zero" | "Fixed", # Optional.
          paddingValue: number, # Optional.
        }, # Optional.
        status: "CREATED" | "RUNNING" | "READY" | "FAILED", # Optional.
        errors: [ErrorResponse], # Optional.
        diagnosticsInfo: {
          modelState: {
            epochIds: [number], # Optional.
            trainLosses: [number], # Optional.
            validationLosses: [number], # Optional.
            latenciesInSeconds: [number], # Optional.
          }, # Optional.
          variableStates: [VariableState], # Optional.
        }, # Optional.
      }, # Optional.
    }

    ```

    </p>
  examples: >-
    This sample shows how to call GetMultivariateModelsAsync with required parameters and parse the result.


    ```

    var credential = new AzureKeyCredential("<key>");

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new AnomalyDetectorClient(endpoint, credential);


    await foreach (var item in client.GetMultivariateModelsAsync(1234, 1234, new RequestContext()))

    {
        JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
        Console.WriteLine(result.GetProperty("modelId").ToString());
        Console.WriteLine(result.GetProperty("createdTime").ToString());
        Console.WriteLine(result.GetProperty("lastUpdatedTime").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("dataSource").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("dataSchema").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("startTime").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("endTime").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("displayName").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("slidingWindow").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("alignPolicy").GetProperty("alignMode").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("alignPolicy").GetProperty("fillNAMethod").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("alignPolicy").GetProperty("paddingValue").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("status").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("errors")[0].GetProperty("code").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("errors")[0].GetProperty("message").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("diagnosticsInfo").GetProperty("modelState").GetProperty("epochIds")[0].ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("diagnosticsInfo").GetProperty("modelState").GetProperty("trainLosses")[0].ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("diagnosticsInfo").GetProperty("modelState").GetProperty("validationLosses")[0].ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("diagnosticsInfo").GetProperty("modelState").GetProperty("latenciesInSeconds")[0].ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("diagnosticsInfo").GetProperty("variableStates")[0].GetProperty("variable").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("diagnosticsInfo").GetProperty("variableStates")[0].GetProperty("filledNARatio").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("diagnosticsInfo").GetProperty("variableStates")[0].GetProperty("effectiveCount").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("diagnosticsInfo").GetProperty("variableStates")[0].GetProperty("firstTimestamp").ToString());
        Console.WriteLine(result.GetProperty("modelInfo").GetProperty("diagnosticsInfo").GetProperty("variableStates")[0].GetProperty("lastTimestamp").ToString());
    }

    ```
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.AsyncPageable`1?alt=Azure.AsyncPageable&text=AsyncPageable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.AnomalyDetector.AnomalyDetectionModel?alt=Azure.AI.AnomalyDetector.AnomalyDetectionModel&text=AnomalyDetectionModel" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: skip
    description: The number of result items to skip.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: maxCount
    description: The number of result items to return.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)
  name: GetMultivariateModelsAsync(Nullable<Int32>, Nullable<Int32>, CancellationToken)
  fullName: Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync(Nullable<Int32>, Nullable<Int32>, CancellationToken)
  nameWithType: AnomalyDetectorClient.GetMultivariateModelsAsync(Nullable<Int32>, Nullable<Int32>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.AsyncPageable<Azure.AI.AnomalyDetector.AnomalyDetectionModel> GetMultivariateModelsAsync (int? skip = default, int? maxCount = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetMultivariateModelsAsync : Nullable<int> * Nullable<int> * System.Threading.CancellationToken -> Azure.AsyncPageable<Azure.AI.AnomalyDetector.AnomalyDetectionModel>

        override this.GetMultivariateModelsAsync : Nullable<int> * Nullable<int> * System.Threading.CancellationToken -> Azure.AsyncPageable<Azure.AI.AnomalyDetector.AnomalyDetectionModel>
  - lang: vb
    values:
    - value: Public Overridable Function GetMultivariateModelsAsync (Optional skip As Nullable(Of Integer) = Nothing, Optional maxCount As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AnomalyDetectionModel)
  monikers:
  - azure-dotnet-preview
  summary: List Multivariate Models.
  remarks: List models of a resource.
  examples: >-
    This sample shows how to call GetMultivariateModelsAsync with required parameters.


    ```

    var credential = new AzureKeyCredential("<key>");

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new AnomalyDetectorClient(endpoint, credential);


    await foreach (var item in client.GetMultivariateModelsAsync(1234, 1234))

    {

    }

    ```
  metadata: {}
uid: Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync*
commentId: Overload:Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync
namespace: Azure.AI.AnomalyDetector
name: GetMultivariateModelsAsync
fullName: Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync
nameWithType: AnomalyDetectorClient.GetMultivariateModelsAsync
assembliesWithMoniker:
- value: Azure.AI.AnomalyDetector.dll
packagesWithMoniker:
- value: Azure.AI.AnomalyDetector v3.0.0-preview.7
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync
  api_location:
  - Azure.AI.AnomalyDetector.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelsAsync
  - Azure::AI::AnomalyDetector::AnomalyDetectorClient::GetMultivariateModelsAsync
  - GetMultivariateModelsAsync
  - AnomalyDetectorClient.GetMultivariateModelsAsync
  - AnomalyDetectorClient::GetMultivariateModelsAsync
  helpviewer_keywords:
  - AnomalyDetectorClient.GetMultivariateModelsAsync method [.NET]
  - GetMultivariateModelsAsync method [.NET], class AnomalyDetectorClient
  - AnomalyDetectorClient.GetMultivariateModelsAsync(Nullable<Int32>, Nullable<Int32>, RequestContext) method [.NET]
  - GetMultivariateModelsAsync(Nullable<Int32>, Nullable<Int32>, RequestContext) method [.NET], class AnomalyDetectorClient
  - AnomalyDetectorClient.GetMultivariateModelsAsync(Nullable<Int32>, Nullable<Int32>, CancellationToken) method [.NET]
  - GetMultivariateModelsAsync(Nullable<Int32>, Nullable<Int32>, CancellationToken) method [.NET], class AnomalyDetectorClient
  monikers:
  - azure-dotnet-preview
