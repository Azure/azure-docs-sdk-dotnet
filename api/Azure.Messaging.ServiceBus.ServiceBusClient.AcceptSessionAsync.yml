### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver?alt=Azure.Messaging.ServiceBus.ServiceBusSessionReceiver&text=ServiceBusSessionReceiver" data-throw-if-not-resolved="True"/>&gt;
    description: A <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver"></xref> scoped to the specified queue and a specific session.
  parameters:
  - namesWithMoniker:
    - value: queueName
    description: The session-enabled queue to create a <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver"></xref> for.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: sessionId
    description: Gets or sets a session ID to scope the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver"></xref> to.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: >-
      The set of <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions"></xref> to use for configuring the
                   <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver"></xref>.
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions?alt=Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions&text=ServiceBusSessionReceiverOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: >-
      The <code data-dev-comment-type="paramref">sessionId</code> corresponds to a session that is currently locked by another receiver.

      The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionCannotBeLocked"></xref> in this case.
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusException?alt=Azure.Messaging.ServiceBus.ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.ServiceBus.ServiceBusClient.AcceptSessionAsync(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.ServiceBus.ServiceBusClient.AcceptSessionAsync(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions,System.Threading.CancellationToken)
  name: AcceptSessionAsync(String, String, ServiceBusSessionReceiverOptions, CancellationToken)
  fullName: Azure.Messaging.ServiceBus.ServiceBusClient.AcceptSessionAsync(String, String, ServiceBusSessionReceiverOptions, CancellationToken)
  nameWithType: ServiceBusClient.AcceptSessionAsync(String, String, ServiceBusSessionReceiverOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Messaging.ServiceBus.ServiceBusSessionReceiver> AcceptSessionAsync (string queueName, string sessionId, Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions options = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member AcceptSessionAsync : string * string * Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Messaging.ServiceBus.ServiceBusSessionReceiver>

        override this.AcceptSessionAsync : string * string * Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Messaging.ServiceBus.ServiceBusSessionReceiver>
  - lang: vb
    values:
    - value: Public Overridable Function AcceptSessionAsync (queueName As String, sessionId As String, Optional options As ServiceBusSessionReceiverOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ServiceBusSessionReceiver)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Creates a <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver"></xref> instance that can be used for receiving

    and settling messages from a session-enabled queue by accepting a specific session. The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiveMode"></xref> can be specified in

    the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiverOptions"></xref> to configure how messages are received.

    The default value is <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock"></xref>.
  remarks: <p>Because this is establishing a session lock, this method performs a service call. If the sessionId parameter is null, and there are no available messages in the queue, this will throw a <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException"></xref> with <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> of <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.ServiceTimeout"></xref>.</p>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver?alt=Azure.Messaging.ServiceBus.ServiceBusSessionReceiver&text=ServiceBusSessionReceiver" data-throw-if-not-resolved="True"/>&gt;
    description: A <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver"></xref> scoped to the specified queue and a specific session.
  parameters:
  - namesWithMoniker:
    - value: topicName
    description: The topic to create a <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver"></xref> for.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: subscriptionName
    description: The session-enabled subscription to create a <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver"></xref> for.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: sessionId
    description: Gets or sets a session ID to scope the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver"></xref> to.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: >-
      The set of <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions"></xref> to use for configuring the
                   <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver"></xref>.
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions?alt=Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions&text=ServiceBusSessionReceiverOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: >-
      The <code data-dev-comment-type="paramref">sessionId</code> corresponds to a session that is currently locked by another receiver.

      The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionCannotBeLocked"></xref> in this case.
    type: <xref href="Azure.Messaging.ServiceBus.ServiceBusException?alt=Azure.Messaging.ServiceBus.ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.ServiceBus.ServiceBusClient.AcceptSessionAsync(System.String,System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.ServiceBus.ServiceBusClient.AcceptSessionAsync(System.String,System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions,System.Threading.CancellationToken)
  name: AcceptSessionAsync(String, String, String, ServiceBusSessionReceiverOptions, CancellationToken)
  fullName: Azure.Messaging.ServiceBus.ServiceBusClient.AcceptSessionAsync(String, String, String, ServiceBusSessionReceiverOptions, CancellationToken)
  nameWithType: ServiceBusClient.AcceptSessionAsync(String, String, String, ServiceBusSessionReceiverOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Messaging.ServiceBus.ServiceBusSessionReceiver> AcceptSessionAsync (string topicName, string subscriptionName, string sessionId, Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions options = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member AcceptSessionAsync : string * string * string * Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Messaging.ServiceBus.ServiceBusSessionReceiver>

        override this.AcceptSessionAsync : string * string * string * Azure.Messaging.ServiceBus.ServiceBusSessionReceiverOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Messaging.ServiceBus.ServiceBusSessionReceiver>
  - lang: vb
    values:
    - value: Public Overridable Function AcceptSessionAsync (topicName As String, subscriptionName As String, sessionId As String, Optional options As ServiceBusSessionReceiverOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ServiceBusSessionReceiver)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Creates a <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver"></xref> instance that can be used for receiving

    and settling messages from a session-enabled subscription by accepting a specific session. The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiveMode"></xref> can be specified in

    the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiverOptions"></xref> to configure how messages are received.

    The default value is <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock"></xref>.
  remarks: <p>Because this is establishing a session lock, this method performs a service call. If the sessionId parameter is null, and there are no available messages in the queue, this will throw a <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException"></xref> with <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusException.Reason"></xref> of <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusFailureReason.ServiceTimeout"></xref>.</p>
  metadata: {}
uid: Azure.Messaging.ServiceBus.ServiceBusClient.AcceptSessionAsync*
commentId: Overload:Azure.Messaging.ServiceBus.ServiceBusClient.AcceptSessionAsync
namespace: Azure.Messaging.ServiceBus
name: AcceptSessionAsync
fullName: Azure.Messaging.ServiceBus.ServiceBusClient.AcceptSessionAsync
nameWithType: ServiceBusClient.AcceptSessionAsync
assembliesWithMoniker:
- value: Azure.Messaging.ServiceBus.dll
packagesWithMoniker:
- value: Azure.Messaging.ServiceBus v7.15.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.ServiceBus v7.11.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.ServiceBus.ServiceBusClient.AcceptSessionAsync
  api_location:
  - Azure.Messaging.ServiceBus.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.ServiceBus.ServiceBusClient.AcceptSessionAsync
  - Azure::Messaging::ServiceBus::ServiceBusClient::AcceptSessionAsync
  - AcceptSessionAsync
  - ServiceBusClient.AcceptSessionAsync
  - ServiceBusClient::AcceptSessionAsync
  helpviewer_keywords:
  - ServiceBusClient.AcceptSessionAsync method [.NET]
  - AcceptSessionAsync method [.NET], class ServiceBusClient
  - ServiceBusClient.AcceptSessionAsync(String, String, ServiceBusSessionReceiverOptions, CancellationToken) method [.NET]
  - AcceptSessionAsync(String, String, ServiceBusSessionReceiverOptions, CancellationToken) method [.NET], class ServiceBusClient
  - ServiceBusClient.AcceptSessionAsync(String, String, String, ServiceBusSessionReceiverOptions, CancellationToken) method [.NET]
  - AcceptSessionAsync(String, String, String, ServiceBusSessionReceiverOptions, CancellationToken) method [.NET], class ServiceBusClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
