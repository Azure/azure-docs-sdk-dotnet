### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>
  type: property
  uid: Azure.ResourceManager.DataFactory.Models.AzureDatabricksLinkedService.NewClusterNumOfWorker
  commentId: P:Azure.ResourceManager.DataFactory.Models.AzureDatabricksLinkedService.NewClusterNumOfWorker
  name: NewClusterNumOfWorker
  fullName: Azure.ResourceManager.DataFactory.Models.AzureDatabricksLinkedService.NewClusterNumOfWorker
  nameWithType: AzureDatabricksLinkedService.NewClusterNumOfWorker
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public BinaryData NewClusterNumOfWorker { get; set; }
  - lang: fsharp
    values:
    - value: 'member this.NewClusterNumOfWorker : BinaryData with get, set'
  - lang: vb
    values:
    - value: Public Property NewClusterNumOfWorker As BinaryData
  monikers:
  - azure-dotnet-preview
  summary: >-
    If not using an existing interactive cluster, this specifies the number of worker nodes to use for the new job cluster or instance pool. For new job clusters, this a string-formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 (min) to 10 (max). For instance pools, this is a string-formatted Int32, and can only specify a fixed number of worker nodes, such as '2'. Required if newClusterVersion is specified. Type: string (or Expression with resultType string).

    <p>

    To assign an object to this property use <xref data-throw-if-not-resolved="true" uid="System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)"></xref>.

    </p><p>

    To assign an already formated json string to this property use <xref data-throw-if-not-resolved="true" uid="System.BinaryData.FromString(System.String)"></xref>.

    </p><p>

    Examples:

    <ul><li>BinaryData.FromObjectAsJson("foo")Creates a payload of "foo".</li><li>BinaryData.FromString("\"foo\"")Creates a payload of "foo".</li><li>BinaryData.FromObjectAsJson(new { key = "value" })Creates a payload of { "key": "value" }.</li><li>BinaryData.FromString("{\"key\": \"value\"}")Creates a payload of { "key": "value" }.</li></ul></p>
  metadata: {}
uid: Azure.ResourceManager.DataFactory.Models.AzureDatabricksLinkedService.NewClusterNumOfWorker*
commentId: Overload:Azure.ResourceManager.DataFactory.Models.AzureDatabricksLinkedService.NewClusterNumOfWorker
namespace: Azure.ResourceManager.DataFactory.Models
name: NewClusterNumOfWorker
fullName: Azure.ResourceManager.DataFactory.Models.AzureDatabricksLinkedService.NewClusterNumOfWorker
nameWithType: AzureDatabricksLinkedService.NewClusterNumOfWorker
assembliesWithMoniker:
- value: Azure.ResourceManager.DataFactory.dll
packagesWithMoniker:
- value: Azure.ResourceManager.DataFactory v1.0.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.DataFactory.Models.AzureDatabricksLinkedService.NewClusterNumOfWorker
  - Azure.ResourceManager.DataFactory.Models.AzureDatabricksLinkedService.get_NewClusterNumOfWorker
  - Azure.ResourceManager.DataFactory.Models.AzureDatabricksLinkedService.set_NewClusterNumOfWorker
  api_location:
  - Azure.ResourceManager.DataFactory.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.DataFactory.Models.AzureDatabricksLinkedService.NewClusterNumOfWorker
  - Azure::ResourceManager::DataFactory::Models::AzureDatabricksLinkedService::NewClusterNumOfWorker
  - NewClusterNumOfWorker
  - AzureDatabricksLinkedService.NewClusterNumOfWorker
  - AzureDatabricksLinkedService::NewClusterNumOfWorker
  helpviewer_keywords:
  - AzureDatabricksLinkedService.NewClusterNumOfWorker property [.NET]
  - NewClusterNumOfWorker property [.NET], class AzureDatabricksLinkedService
  monikers:
  - azure-dotnet-preview
