### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.Language.QuestionAnswering.AnswersResult?alt=Azure.AI.Language.QuestionAnswering.AnswersResult&text=AnswersResult" data-throw-if-not-resolved="True"/>&gt;
    description: An <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.AnswersResult"></xref> containing answers from the knowledge base to the specified question.
  parameters:
  - namesWithMoniker:
    - value: qnaId
    description: The exact QnA ID to fetch from the knowledge base.
    type: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: project
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject"></xref> to query.
    type: <xref href="Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject?alt=Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject&text=QuestionAnsweringProject" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: Optional <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.AnswersOptions"></xref> with additional query options.
    type: <xref href="Azure.AI.Language.QuestionAnswering.AnswersOptions?alt=Azure.AI.Language.QuestionAnswering.AnswersOptions&text=AnswersOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to cancel the request.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">project</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: The service returned an error. The exception contains details of the service error.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers(System.Int32,Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject,Azure.AI.Language.QuestionAnswering.AnswersOptions,System.Threading.CancellationToken)
  commentId: M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers(System.Int32,Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject,Azure.AI.Language.QuestionAnswering.AnswersOptions,System.Threading.CancellationToken)
  name: GetAnswers(Int32, QuestionAnsweringProject, AnswersOptions, CancellationToken)
  fullName: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers(Int32, QuestionAnsweringProject, AnswersOptions, CancellationToken)
  nameWithType: QuestionAnsweringClient.GetAnswers(Int32, QuestionAnsweringProject, AnswersOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersResult> GetAnswers (int qnaId, Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject project, Azure.AI.Language.QuestionAnswering.AnswersOptions options = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetAnswers : int * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -> Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersResult>

        override this.GetAnswers : int * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -> Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersResult>
  - lang: vb
    values:
    - value: Public Overridable Function GetAnswers (qnaId As Integer, project As QuestionAnsweringProject, Optional options As AnswersOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnswersResult)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Gets the specified QnA.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.Language.QuestionAnswering.AnswersResult?alt=Azure.AI.Language.QuestionAnswering.AnswersResult&text=AnswersResult" data-throw-if-not-resolved="True"/>&gt;
    description: An <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.AnswersResult"></xref> containing answers from the knowledge base to the specified question.
  parameters:
  - namesWithMoniker:
    - value: question
    description: The question to ask of the knowledge base.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: project
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject"></xref> to query.
    type: <xref href="Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject?alt=Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject&text=QuestionAnsweringProject" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: Optional <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.AnswersOptions"></xref> with additional query options.
    type: <xref href="Azure.AI.Language.QuestionAnswering.AnswersOptions?alt=Azure.AI.Language.QuestionAnswering.AnswersOptions&text=AnswersOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to cancel the request.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">question</code> is an empty string.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">question</code> or <code data-dev-comment-type="paramref">project</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: The service returned an error. The exception contains details of the service error.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers(System.String,Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject,Azure.AI.Language.QuestionAnswering.AnswersOptions,System.Threading.CancellationToken)
  commentId: M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers(System.String,Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject,Azure.AI.Language.QuestionAnswering.AnswersOptions,System.Threading.CancellationToken)
  name: GetAnswers(String, QuestionAnsweringProject, AnswersOptions, CancellationToken)
  fullName: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers(String, QuestionAnsweringProject, AnswersOptions, CancellationToken)
  nameWithType: QuestionAnsweringClient.GetAnswers(String, QuestionAnsweringProject, AnswersOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersResult> GetAnswers (string question, Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject project, Azure.AI.Language.QuestionAnswering.AnswersOptions options = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetAnswers : string * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -> Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersResult>

        override this.GetAnswers : string * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -> Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersResult>
  - lang: vb
    values:
    - value: Public Overridable Function GetAnswers (question As String, project As QuestionAnsweringProject, Optional options As AnswersOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnswersResult)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Answers the specified question using your knowledge base.
  metadata: {}
uid: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers*
commentId: Overload:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers
namespace: Azure.AI.Language.QuestionAnswering
name: GetAnswers
fullName: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers
nameWithType: QuestionAnsweringClient.GetAnswers
assembliesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering.dll
packagesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering v1.1.0
  monikers:
  - azure-dotnet
- value: Azure.AI.Language.QuestionAnswering v1.1.0-beta.2
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers
  api_location:
  - Azure.AI.Language.QuestionAnswering.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers
  - Azure::AI::Language::QuestionAnswering::QuestionAnsweringClient::GetAnswers
  - GetAnswers
  - QuestionAnsweringClient.GetAnswers
  - QuestionAnsweringClient::GetAnswers
  helpviewer_keywords:
  - QuestionAnsweringClient.GetAnswers method [.NET]
  - GetAnswers method [.NET], class QuestionAnsweringClient
  - QuestionAnsweringClient.GetAnswers(Int32, QuestionAnsweringProject, AnswersOptions, CancellationToken) method [.NET]
  - GetAnswers(Int32, QuestionAnsweringProject, AnswersOptions, CancellationToken) method [.NET], class QuestionAnsweringClient
  - QuestionAnsweringClient.GetAnswers(String, QuestionAnsweringProject, AnswersOptions, CancellationToken) method [.NET]
  - GetAnswers(String, QuestionAnsweringProject, AnswersOptions, CancellationToken) method [.NET], class QuestionAnsweringClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
