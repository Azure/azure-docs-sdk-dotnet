### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Analytics.Synapse.Artifacts.Models.SecretBase?alt=Azure.Analytics.Synapse.Artifacts.Models.SecretBase&text=SecretBase" data-throw-if-not-resolved="True"/>
  type: property
  uid: Azure.Analytics.Synapse.Artifacts.Models.CommonDataServiceForAppsLinkedService.ServicePrincipalCredential
  commentId: P:Azure.Analytics.Synapse.Artifacts.Models.CommonDataServiceForAppsLinkedService.ServicePrincipalCredential
  name: ServicePrincipalCredential
  fullName: Azure.Analytics.Synapse.Artifacts.Models.CommonDataServiceForAppsLinkedService.ServicePrincipalCredential
  nameWithType: CommonDataServiceForAppsLinkedService.ServicePrincipalCredential
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public Azure.Analytics.Synapse.Artifacts.Models.SecretBase ServicePrincipalCredential { get; set; }
  - lang: fsharp
    values:
    - value: 'member this.ServicePrincipalCredential : Azure.Analytics.Synapse.Artifacts.Models.SecretBase with get, set'
  - lang: vb
    values:
    - value: Public Property ServicePrincipalCredential As SecretBase
  monikers:
  - azure-dotnet-preview
  summary: >-
    The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference.

    Please note <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.SecretBase"></xref> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.

    The available derived classes include <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.AzureKeyVaultSecretReference"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Analytics.Synapse.Artifacts.Models.SecureString"></xref>.
  metadata: {}
uid: Azure.Analytics.Synapse.Artifacts.Models.CommonDataServiceForAppsLinkedService.ServicePrincipalCredential*
commentId: Overload:Azure.Analytics.Synapse.Artifacts.Models.CommonDataServiceForAppsLinkedService.ServicePrincipalCredential
namespace: Azure.Analytics.Synapse.Artifacts.Models
name: ServicePrincipalCredential
fullName: Azure.Analytics.Synapse.Artifacts.Models.CommonDataServiceForAppsLinkedService.ServicePrincipalCredential
nameWithType: CommonDataServiceForAppsLinkedService.ServicePrincipalCredential
assembliesWithMoniker:
- value: Azure.Analytics.Synapse.Artifacts.dll
packagesWithMoniker:
- value: Azure.Analytics.Synapse.Artifacts v1.0.0-preview.17
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Synapse.Artifacts.Models.CommonDataServiceForAppsLinkedService.ServicePrincipalCredential
  - Azure.Analytics.Synapse.Artifacts.Models.CommonDataServiceForAppsLinkedService.get_ServicePrincipalCredential
  - Azure.Analytics.Synapse.Artifacts.Models.CommonDataServiceForAppsLinkedService.set_ServicePrincipalCredential
  api_location:
  - Azure.Analytics.Synapse.Artifacts.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Synapse.Artifacts.Models.CommonDataServiceForAppsLinkedService.ServicePrincipalCredential
  - Azure::Analytics::Synapse::Artifacts::Models::CommonDataServiceForAppsLinkedService::ServicePrincipalCredential
  - ServicePrincipalCredential
  - CommonDataServiceForAppsLinkedService.ServicePrincipalCredential
  - CommonDataServiceForAppsLinkedService::ServicePrincipalCredential
  helpviewer_keywords:
  - CommonDataServiceForAppsLinkedService.ServicePrincipalCredential property [.NET]
  - ServicePrincipalCredential property [.NET], class CommonDataServiceForAppsLinkedService
  monikers:
  - azure-dotnet-preview
