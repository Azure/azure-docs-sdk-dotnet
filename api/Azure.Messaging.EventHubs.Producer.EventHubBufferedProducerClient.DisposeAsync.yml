### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.ValueTask?alt=System.Threading.Tasks.ValueTask&text=ValueTask" data-throw-if-not-resolved="True"/>
    description: A task to be resolved on when the operation has completed.
  implementsWithMoniker:
  - value: <xref href="System.IAsyncDisposable.DisposeAsync" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync
  name: DisposeAsync()
  fullName: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync()
  nameWithType: EventHubBufferedProducerClient.DisposeAsync()
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.ValueTask DisposeAsync ();
  - lang: fsharp
    values:
    - value: >-
        abstract member DisposeAsync : unit -> System.Threading.Tasks.ValueTask

        override this.DisposeAsync : unit -> System.Threading.Tasks.ValueTask
  - lang: vb
    values:
    - value: Public Overridable Function DisposeAsync () As ValueTask
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Closes the producer and performs the tasks needed to clean up all the resources used by the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient"></xref>.
  remarks: <p>Calling this method will also invoke <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.FlushInternalAsync(System.Threading.CancellationToken)"></xref>, which will attempt to publish any events that are still pending, and finish any active sending.  It will also automatically unregister the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync"></xref> handlers.</p><p>This method is identical to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.CloseAsync(System.Boolean,System.Threading.CancellationToken)"></xref> and either can be used to send pending events and clean up resources.</p>
  metadata: {}
uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync*
commentId: Overload:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync
namespace: Azure.Messaging.EventHubs.Producer
name: DisposeAsync
fullName: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync
nameWithType: EventHubBufferedProducerClient.DisposeAsync
assembliesWithMoniker:
- value: Azure.Messaging.EventHubs.dll
packagesWithMoniker:
- value: Azure.Messaging.EventHubs v5.9.2
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventHubs v5.7.0-beta.5
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync
  api_location:
  - Azure.Messaging.EventHubs.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync
  - Azure::Messaging::EventHubs::Producer::EventHubBufferedProducerClient::DisposeAsync
  - DisposeAsync
  - EventHubBufferedProducerClient.DisposeAsync
  - EventHubBufferedProducerClient::DisposeAsync
  helpviewer_keywords:
  - EventHubBufferedProducerClient.DisposeAsync method [.NET]
  - DisposeAsync method [.NET], class EventHubBufferedProducerClient
  - EventHubBufferedProducerClient.DisposeAsync() method [.NET]
  - DisposeAsync() method [.NET], class EventHubBufferedProducerClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
