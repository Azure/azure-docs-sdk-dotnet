### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Collections.Generic.IReadOnlyList`1?alt=System.Collections.Generic.IReadOnlyList&text=IReadOnlyList" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage?alt=Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: An <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IReadOnlyList`1"></xref> of messages that were peeked.
  parameters:
  - namesWithMoniker:
    - value: maxMessages
    description: The maximum number of messages that will be fetched.
    type: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fromSequenceNumber
    description: >-
      An optional sequence number from where to peek the
                   message. This corresponds to the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.SequenceNumber"></xref>.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int64?alt=System.Int64&text=Int64" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: >-
      An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel
                   the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.ServiceBus.ProcessorReceiveActions.PeekMessagesAsync(System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.ServiceBus.ProcessorReceiveActions.PeekMessagesAsync(System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)
  name: PeekMessagesAsync(Int32, Nullable<Int64>, CancellationToken)
  fullName: Azure.Messaging.ServiceBus.ProcessorReceiveActions.PeekMessagesAsync(Int32, Nullable<Int64>, CancellationToken)
  nameWithType: ProcessorReceiveActions.PeekMessagesAsync(Int32, Nullable<Int64>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Azure.Messaging.ServiceBus.ServiceBusReceivedMessage>> PeekMessagesAsync (int maxMessages, long? fromSequenceNumber = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member PeekMessagesAsync : int * Nullable<int64> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Azure.Messaging.ServiceBus.ServiceBusReceivedMessage>>

        override this.PeekMessagesAsync : int * Nullable<int64> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Azure.Messaging.ServiceBus.ServiceBusReceivedMessage>>
  - lang: vb
    values:
    - value: Public Overridable Function PeekMessagesAsync (maxMessages As Integer, Optional fromSequenceNumber As Nullable(Of Long) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IReadOnlyList(Of ServiceBusReceivedMessage))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  remarks: <p>Unlike a received message, a peeked message will not have a lock token associated with it, and hence it cannot be Completed/Abandoned/Deferred/Deadlettered/Renewed. Also, unlike <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMessageAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)"></xref>, this method will fetch even Deferred messages (but not Deadlettered messages).</p>
  metadata: {}
uid: Azure.Messaging.ServiceBus.ProcessorReceiveActions.PeekMessagesAsync*
commentId: Overload:Azure.Messaging.ServiceBus.ProcessorReceiveActions.PeekMessagesAsync
namespace: Azure.Messaging.ServiceBus
name: PeekMessagesAsync
fullName: Azure.Messaging.ServiceBus.ProcessorReceiveActions.PeekMessagesAsync
nameWithType: ProcessorReceiveActions.PeekMessagesAsync
assembliesWithMoniker:
- value: Azure.Messaging.ServiceBus.dll
packagesWithMoniker:
- value: Azure.Messaging.ServiceBus v7.15.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.ServiceBus v7.11.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.ServiceBus.ProcessorReceiveActions.PeekMessagesAsync
  api_location:
  - Azure.Messaging.ServiceBus.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.ServiceBus.ProcessorReceiveActions.PeekMessagesAsync
  - Azure::Messaging::ServiceBus::ProcessorReceiveActions::PeekMessagesAsync
  - PeekMessagesAsync
  - ProcessorReceiveActions.PeekMessagesAsync
  - ProcessorReceiveActions::PeekMessagesAsync
  helpviewer_keywords:
  - ProcessorReceiveActions.PeekMessagesAsync method [.NET]
  - PeekMessagesAsync method [.NET], class ProcessorReceiveActions
  - ProcessorReceiveActions.PeekMessagesAsync(Int32, Nullable<Int64>, CancellationToken) method [.NET]
  - PeekMessagesAsync(Int32, Nullable<Int64>, CancellationToken) method [.NET], class ProcessorReceiveActions
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
