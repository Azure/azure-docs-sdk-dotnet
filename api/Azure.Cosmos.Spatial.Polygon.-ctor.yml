### YamlMime:NetMember
type: constructor
members:
- parameters:
  - namesWithMoniker:
    - value: rings
    description: >-
      <p>
        Polygon rings.
      </p>

      <p>
        First ring is external ring. Following rings define 'holes' in the polygon.
      </p>
    type: <xref href="System.Collections.Generic.IList`1?alt=System.Collections.Generic.IList&text=IList" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Cosmos.Spatial.LinearRing?alt=Azure.Cosmos.Spatial.LinearRing&text=LinearRing" data-throw-if-not-resolved="True"/>&gt;
  type: constructor
  uid: Azure.Cosmos.Spatial.Polygon.#ctor(System.Collections.Generic.IList{Azure.Cosmos.Spatial.LinearRing})
  commentId: M:Azure.Cosmos.Spatial.Polygon.#ctor(System.Collections.Generic.IList{Azure.Cosmos.Spatial.LinearRing})
  name: Polygon(IList<LinearRing>)
  fullName: Azure.Cosmos.Spatial.Polygon.Polygon(IList<LinearRing>)
  nameWithType: Polygon.Polygon(IList<LinearRing>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public Polygon (System.Collections.Generic.IList<Azure.Cosmos.Spatial.LinearRing> rings);
  - lang: fsharp
    values:
    - value: 'new Azure.Cosmos.Spatial.Polygon : System.Collections.Generic.IList<Azure.Cosmos.Spatial.LinearRing> -> Azure.Cosmos.Spatial.Polygon'
  - lang: vb
    values:
    - value: Public Sub New (rings As IList(Of LinearRing))
  monikers:
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Spatial.Polygon"></xref> class in the Azure Cosmos DB service.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: externalRingPositions
    description: External polygon ring coordinates.
    type: <xref href="System.Collections.Generic.IList`1?alt=System.Collections.Generic.IList&text=IList" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Cosmos.Spatial.Position?alt=Azure.Cosmos.Spatial.Position&text=Position" data-throw-if-not-resolved="True"/>&gt;
  type: constructor
  uid: Azure.Cosmos.Spatial.Polygon.#ctor(System.Collections.Generic.IList{Azure.Cosmos.Spatial.Position})
  commentId: M:Azure.Cosmos.Spatial.Polygon.#ctor(System.Collections.Generic.IList{Azure.Cosmos.Spatial.Position})
  name: Polygon(IList<Position>)
  fullName: Azure.Cosmos.Spatial.Polygon.Polygon(IList<Position>)
  nameWithType: Polygon.Polygon(IList<Position>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public Polygon (System.Collections.Generic.IList<Azure.Cosmos.Spatial.Position> externalRingPositions);
  - lang: fsharp
    values:
    - value: 'new Azure.Cosmos.Spatial.Polygon : System.Collections.Generic.IList<Azure.Cosmos.Spatial.Position> -> Azure.Cosmos.Spatial.Polygon'
  - lang: vb
    values:
    - value: Public Sub New (externalRingPositions As IList(Of Position))
  monikers:
  - azure-dotnet-preview
  summary: >-
    Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Spatial.Polygon"></xref> class,

    from external ring (the polygon contains no holes) in the Azure Cosmos DB service.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: rings
    description: Polygon rings.
    type: <xref href="System.Collections.Generic.IList`1?alt=System.Collections.Generic.IList&text=IList" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Cosmos.Spatial.LinearRing?alt=Azure.Cosmos.Spatial.LinearRing&text=LinearRing" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: geometryParams
    description: Additional geometry parameters.
    type: <xref href="Azure.Cosmos.Spatial.GeometryParams?alt=Azure.Cosmos.Spatial.GeometryParams&text=GeometryParams" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Cosmos.Spatial.Polygon.#ctor(System.Collections.Generic.IList{Azure.Cosmos.Spatial.LinearRing},Azure.Cosmos.Spatial.GeometryParams)
  commentId: M:Azure.Cosmos.Spatial.Polygon.#ctor(System.Collections.Generic.IList{Azure.Cosmos.Spatial.LinearRing},Azure.Cosmos.Spatial.GeometryParams)
  name: Polygon(IList<LinearRing>, GeometryParams)
  fullName: Azure.Cosmos.Spatial.Polygon.Polygon(IList<LinearRing>, GeometryParams)
  nameWithType: Polygon.Polygon(IList<LinearRing>, GeometryParams)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public Polygon (System.Collections.Generic.IList<Azure.Cosmos.Spatial.LinearRing> rings, Azure.Cosmos.Spatial.GeometryParams geometryParams);
  - lang: fsharp
    values:
    - value: 'new Azure.Cosmos.Spatial.Polygon : System.Collections.Generic.IList<Azure.Cosmos.Spatial.LinearRing> * Azure.Cosmos.Spatial.GeometryParams -> Azure.Cosmos.Spatial.Polygon'
  - lang: vb
    values:
    - value: Public Sub New (rings As IList(Of LinearRing), geometryParams As GeometryParams)
  monikers:
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.Spatial.Polygon"></xref> class in the Azure Cosmos DB service.
  metadata: {}
uid: Azure.Cosmos.Spatial.Polygon.#ctor*
commentId: Overload:Azure.Cosmos.Spatial.Polygon.#ctor
namespace: Azure.Cosmos.Spatial
name: Polygon
fullName: Azure.Cosmos.Spatial.Polygon.Polygon
nameWithType: Polygon.Polygon
assembliesWithMoniker:
- value: Azure.Cosmos.dll
packagesWithMoniker:
- value: Azure.Cosmos v4.0.0-preview3
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Cosmos.Spatial.Polygon..ctor
  api_location:
  - Azure.Cosmos.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Cosmos.Spatial.Polygon.#ctor
  - Azure::Cosmos::Spatial::Polygon::#ctor
  - '#ctor'
  - Polygon.#ctor
  - Polygon::#ctor
  helpviewer_keywords:
  - Polygon class [.NET], constructors
  - Polygon(IList<LinearRing>) class [.NET], constructors
  - Polygon(IList<Position>) class [.NET], constructors
  - Polygon(IList<LinearRing>, GeometryParams) class [.NET], constructors
  monikers:
  - azure-dotnet-preview
