### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request. Details of the request body schema are in the Remarks section below.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: repeatabilityRequestId
    description: If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Analytics.Purview.Share.EmailRegistrationClient.Activate(Azure.Core.RequestContent,System.String,Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Share.EmailRegistrationClient.Activate(Azure.Core.RequestContent,System.String,Azure.RequestContext)
  name: Activate(RequestContent, String, RequestContext)
  fullName: Azure.Analytics.Purview.Share.EmailRegistrationClient.Activate(RequestContent, String, RequestContext)
  nameWithType: EmailRegistrationClient.Activate(RequestContent, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response Activate (Azure.Core.RequestContent content, string repeatabilityRequestId = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member Activate : Azure.Core.RequestContent * string * Azure.RequestContext -> Azure.Response

        override this.Activate : Azure.Core.RequestContent * string * Azure.RequestContext -> Azure.Response
  - lang: vb
    values:
    - value: Public Overridable Function Activate (content As RequestContent, Optional repeatabilityRequestId As String = Nothing, Optional context As RequestContext = Nothing) As Response
  monikers:
  - azure-dotnet-preview
  summary: Activates the tenant and email combination using the activation code received.
  remarks: >-
    <p>Activates the email registration for current tenant</p><p>Below is the JSON schema for the request and response payloads.</p><p>Request Body:</p><p>Schema for <code data-dev-comment-type="c">TenantEmailRegistration</code>: 


    ```

    {
                  id: string, # Optional. The resource id of the resource.
                  name: string, # Optional. Name of the resource.
                  type: string, # Optional. Type of the resource.
                  properties: {
                    activationCode: string, # Required. Activation code for the registration.
                    activationExpiration: string (ISO 8601 Format), # Optional. Date of the activation expiration.
                    email: string, # Optional. The email to register.
                    registrationStatus: "ActivationPending" | "Activated" | "ActivationAttemptsExhausted", # Optional. Defines the supported types for registration.
                    tenantId: string, # Optional. The tenant id to register.
                  }, # Optional. Tenant email registration property bag.
                }
    ```

    </p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">TenantEmailRegistration</code>: 


    ```

    {
                  id: string, # Optional. The resource id of the resource.
                  name: string, # Optional. Name of the resource.
                  type: string, # Optional. Type of the resource.
                  properties: {
                    activationCode: string, # Required. Activation code for the registration.
                    activationExpiration: string (ISO 8601 Format), # Optional. Date of the activation expiration.
                    email: string, # Optional. The email to register.
                    registrationStatus: "ActivationPending" | "Activated" | "ActivationAttemptsExhausted", # Optional. Defines the supported types for registration.
                    tenantId: string, # Optional. The tenant id to register.
                  }, # Optional. Tenant email registration property bag.
                }
    ```

    </p>
  examples: >-
    This sample shows how to call Activate with required parameters and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var client = new EmailRegistrationClient("<https://my-service.azure.com>", credential);


    var data = new {};


    Response response = client.Activate(RequestContent.Create(data));


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.ToString());

    ```

    This sample shows how to call Activate with all parameters and request content, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var client = new EmailRegistrationClient("<https://my-service.azure.com>", credential);


    var data = new {
        properties = new {
            activationCode = "<TenantEmailRegistrationPropertiesActivationCode>",
        },
    };


    Response response = client.Activate(RequestContent.Create(data), "<repeatabilityRequestId>");


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("id").ToString());

    Console.WriteLine(result.GetProperty("name").ToString());

    Console.WriteLine(result.GetProperty("type").ToString());

    Console.WriteLine(result.GetProperty("properties").GetProperty("activationCode").ToString());

    Console.WriteLine(result.GetProperty("properties").GetProperty("activationExpiration").ToString());

    Console.WriteLine(result.GetProperty("properties").GetProperty("email").ToString());

    Console.WriteLine(result.GetProperty("properties").GetProperty("registrationStatus").ToString());

    Console.WriteLine(result.GetProperty("properties").GetProperty("tenantId").ToString());

    ```
  metadata: {}
uid: Azure.Analytics.Purview.Share.EmailRegistrationClient.Activate*
commentId: Overload:Azure.Analytics.Purview.Share.EmailRegistrationClient.Activate
namespace: Azure.Analytics.Purview.Share
name: Activate
fullName: Azure.Analytics.Purview.Share.EmailRegistrationClient.Activate
nameWithType: EmailRegistrationClient.Activate
assembliesWithMoniker:
- value: Azure.Analytics.Purview.Share.dll
packagesWithMoniker:
- value: Azure.Analytics.Purview.Share v1.0.3-beta.20
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Purview.Share.EmailRegistrationClient.Activate
  api_location:
  - Azure.Analytics.Purview.Share.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Purview.Share.EmailRegistrationClient.Activate
  - Azure::Analytics::Purview::Share::EmailRegistrationClient::Activate
  - Activate
  - EmailRegistrationClient.Activate
  - EmailRegistrationClient::Activate
  helpviewer_keywords:
  - EmailRegistrationClient.Activate method [.NET]
  - Activate method [.NET], class EmailRegistrationClient
  - EmailRegistrationClient.Activate(RequestContent, String, RequestContext) method [.NET]
  - Activate(RequestContent, String, RequestContext) method [.NET], class EmailRegistrationClient
  monikers:
  - azure-dotnet-preview
