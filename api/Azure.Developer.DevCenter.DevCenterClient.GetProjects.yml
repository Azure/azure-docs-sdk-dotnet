### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Pageable`1?alt=Azure.Pageable&text=Pageable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Pageable`1"></xref> from the service containing a list of <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> objects. Details of the body schema for each item in the collection are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: filter
    description: An OData filter clause to apply to the operation.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: maxCount
    description: "The maximum number of resources to return from the operation. Example: 'top=10'."
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Developer.DevCenter.DevCenterClient.GetProjects(System.String,System.Nullable{System.Int32},Azure.RequestContext)
  commentId: M:Azure.Developer.DevCenter.DevCenterClient.GetProjects(System.String,System.Nullable{System.Int32},Azure.RequestContext)
  name: GetProjects(String, Nullable<Int32>, RequestContext)
  fullName: Azure.Developer.DevCenter.DevCenterClient.GetProjects(String, Nullable<Int32>, RequestContext)
  nameWithType: DevCenterClient.GetProjects(String, Nullable<Int32>, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Pageable<BinaryData> GetProjects (string filter = default, int? maxCount = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetProjects : string * Nullable<int> * Azure.RequestContext -> Azure.Pageable<BinaryData>

        override this.GetProjects : string * Nullable<int> * Azure.RequestContext -> Azure.Pageable<BinaryData>
  - lang: vb
    values:
    - value: Public Overridable Function GetProjects (Optional filter As String = Nothing, Optional maxCount As Nullable(Of Integer) = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)
  monikers:
  - azure-dotnet-preview
  summary: Lists all projects.
  remarks: >-
    <p>Below is the JSON schema for one item in the pageable response.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">ProjectListResultValue</code>: 


    ```

    {
      name: string, # Optional. Name of the project
      description: string, # Optional. Description of the project.
    }

    ```

    </p>
  examples: >-
    This sample shows how to call GetProjects and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DevCenterClient(endpoint, credential);


    foreach (var data in client.GetProjects())

    {
        JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        Console.WriteLine(result.ToString());
    }

    ```

    This sample shows how to call GetProjects with all parameters, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DevCenterClient(endpoint, credential);


    foreach (var data in client.GetProjects("<filter>", 1234))

    {
        JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("description").ToString());
    }

    ```
  metadata: {}
uid: Azure.Developer.DevCenter.DevCenterClient.GetProjects*
commentId: Overload:Azure.Developer.DevCenter.DevCenterClient.GetProjects
namespace: Azure.Developer.DevCenter
name: GetProjects
fullName: Azure.Developer.DevCenter.DevCenterClient.GetProjects
nameWithType: DevCenterClient.GetProjects
assembliesWithMoniker:
- value: Azure.Developer.DevCenter.dll
packagesWithMoniker:
- value: Azure.Developer.DevCenter v1.0.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Developer.DevCenter.DevCenterClient.GetProjects
  api_location:
  - Azure.Developer.DevCenter.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Developer.DevCenter.DevCenterClient.GetProjects
  - Azure::Developer::DevCenter::DevCenterClient::GetProjects
  - GetProjects
  - DevCenterClient.GetProjects
  - DevCenterClient::GetProjects
  helpviewer_keywords:
  - DevCenterClient.GetProjects method [.NET]
  - GetProjects method [.NET], class DevCenterClient
  - DevCenterClient.GetProjects(String, Nullable<Int32>, RequestContext) method [.NET]
  - GetProjects(String, Nullable<Int32>, RequestContext) method [.NET], class DevCenterClient
  monikers:
  - azure-dotnet-preview
