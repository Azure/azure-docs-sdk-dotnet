### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
    description: >-
      The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount"></xref> is a control that developers can use to help tune performance for the specific

      needs of an application, given its expected size of events, throughput needs, and expected scenarios for using

      Event Hubs.
  exceptions:
  - description: Occurs when the requested count is less than 1.
    type: <xref href="System.ArgumentOutOfRangeException" data-throw-if-not-resolved="True"/>
  type: property
  uid: Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount
  commentId: P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount
  name: CacheEventCount
  fullName: Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount
  nameWithType: ReadEventOptions.CacheEventCount
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public int CacheEventCount { get; set; }
  - lang: fsharp
    values:
    - value: 'member this.CacheEventCount : int with get, set'
  - lang: vb
    values:
    - value: Public Property CacheEventCount As Integer
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    The maximum number of events that will be read from the Event Hubs service and held in a local memory

    cache when reading is active and events are being emitted to an enumerator for processing.
  remarks: <p>The size of this cache has an influence on the efficiency of reading events from the Event Hubs service.  The larger the size of the cache, the more efficiently service operations can be buffered in the background to improve throughput.  This comes at the cost of additional memory use and potentially increases network I/O.</p><p>For scenarios where the size of events is small and many events are flowing through the system, using a larger <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Consumer.ReadEventOptions.PrefetchCount"></xref> may help improve throughput.  For scenarios where the size of events is larger or when processing of events is expected to be a heavier and slower operation, using a smaller size <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Consumer.ReadEventOptions.PrefetchCount"></xref> may help manage resource use without incurring a non-trivial cost to throughput.</p><p>Regardless of the values, it is generally recommended that the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Consumer.ReadEventOptions.PrefetchCount"></xref> be at least 2-3 times as large as the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount"></xref> to allow for efficient buffering of service operations.</p>
  metadata: {}
uid: Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount*
commentId: Overload:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount
namespace: Azure.Messaging.EventHubs.Consumer
name: CacheEventCount
fullName: Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount
nameWithType: ReadEventOptions.CacheEventCount
assembliesWithMoniker:
- value: Azure.Messaging.EventHubs.dll
packagesWithMoniker:
- value: Azure.Messaging.EventHubs v5.9.2
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventHubs v5.7.0-beta.5
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount
  - Azure.Messaging.EventHubs.Consumer.ReadEventOptions.get_CacheEventCount
  - Azure.Messaging.EventHubs.Consumer.ReadEventOptions.set_CacheEventCount
  api_location:
  - Azure.Messaging.EventHubs.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventHubs.Consumer.ReadEventOptions.CacheEventCount
  - Azure::Messaging::EventHubs::Consumer::ReadEventOptions::CacheEventCount
  - CacheEventCount
  - ReadEventOptions.CacheEventCount
  - ReadEventOptions::CacheEventCount
  helpviewer_keywords:
  - ReadEventOptions.CacheEventCount property [.NET]
  - CacheEventCount property [.NET], class ReadEventOptions
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
