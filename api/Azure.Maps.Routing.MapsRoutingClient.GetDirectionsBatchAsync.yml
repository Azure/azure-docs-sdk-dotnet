### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Maps.Routing.Models.GetDirectionsOperation?alt=Azure.Maps.Routing.Models.GetDirectionsOperation&text=GetDirectionsOperation" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: If the method should wait to return until the long-running operation has completed on the service; <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Started"></xref> if it should return after starting the operation. For more information on long-running operations, please see <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</a>.
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: queries
    description: The list of route directions queries/requests to process. The list can contain a max of 700 queries for async and must contain at least 1 query.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Maps.Routing.RouteDirectionQuery?alt=Azure.Maps.Routing.RouteDirectionQuery&text=RouteDirectionQuery" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">queries</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Maps.Routing.MapsRoutingClient.GetDirectionsBatchAsync(Azure.WaitUntil,System.Collections.Generic.IEnumerable{Azure.Maps.Routing.RouteDirectionQuery},System.Threading.CancellationToken)
  commentId: M:Azure.Maps.Routing.MapsRoutingClient.GetDirectionsBatchAsync(Azure.WaitUntil,System.Collections.Generic.IEnumerable{Azure.Maps.Routing.RouteDirectionQuery},System.Threading.CancellationToken)
  name: GetDirectionsBatchAsync(WaitUntil, IEnumerable<RouteDirectionQuery>, CancellationToken)
  fullName: Azure.Maps.Routing.MapsRoutingClient.GetDirectionsBatchAsync(WaitUntil, IEnumerable<RouteDirectionQuery>, CancellationToken)
  nameWithType: MapsRoutingClient.GetDirectionsBatchAsync(WaitUntil, IEnumerable<RouteDirectionQuery>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Maps.Routing.Models.GetDirectionsOperation> GetDirectionsBatchAsync (Azure.WaitUntil waitUntil, System.Collections.Generic.IEnumerable<Azure.Maps.Routing.RouteDirectionQuery> queries, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetDirectionsBatchAsync : Azure.WaitUntil * seq<Azure.Maps.Routing.RouteDirectionQuery> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Maps.Routing.Models.GetDirectionsOperation>

        override this.GetDirectionsBatchAsync : Azure.WaitUntil * seq<Azure.Maps.Routing.RouteDirectionQuery> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Maps.Routing.Models.GetDirectionsOperation>
  - lang: vb
    values:
    - value: Public Overridable Function GetDirectionsBatchAsync (waitUntil As WaitUntil, queries As IEnumerable(Of RouteDirectionQuery), Optional cancellationToken As CancellationToken = Nothing) As Task(Of GetDirectionsOperation)
  monikers:
  - azure-dotnet-preview
  summary: >-
    The Route Directions Batch API sends batches of queries to <a href="https://docs.microsoft.com/rest/api/maps/route/getroutedirections">Route Directions API</a> using just a single API call.

    TThis Route Directions Batch API will run asynchronously (async) and it allows caller to batch up to <code data-dev-comment-type="c">700</code> queries.
  metadata: {}
uid: Azure.Maps.Routing.MapsRoutingClient.GetDirectionsBatchAsync*
commentId: Overload:Azure.Maps.Routing.MapsRoutingClient.GetDirectionsBatchAsync
namespace: Azure.Maps.Routing
name: GetDirectionsBatchAsync
fullName: Azure.Maps.Routing.MapsRoutingClient.GetDirectionsBatchAsync
nameWithType: MapsRoutingClient.GetDirectionsBatchAsync
assembliesWithMoniker:
- value: Azure.Maps.Routing.dll
packagesWithMoniker:
- value: Azure.Maps.Routing v1.0.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Maps.Routing.MapsRoutingClient.GetDirectionsBatchAsync
  api_location:
  - Azure.Maps.Routing.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Maps.Routing.MapsRoutingClient.GetDirectionsBatchAsync
  - Azure::Maps::Routing::MapsRoutingClient::GetDirectionsBatchAsync
  - GetDirectionsBatchAsync
  - MapsRoutingClient.GetDirectionsBatchAsync
  - MapsRoutingClient::GetDirectionsBatchAsync
  helpviewer_keywords:
  - MapsRoutingClient.GetDirectionsBatchAsync method [.NET]
  - GetDirectionsBatchAsync method [.NET], class MapsRoutingClient
  - MapsRoutingClient.GetDirectionsBatchAsync(WaitUntil, IEnumerable<RouteDirectionQuery>, CancellationToken) method [.NET]
  - GetDirectionsBatchAsync(WaitUntil, IEnumerable<RouteDirectionQuery>, CancellationToken) method [.NET], class MapsRoutingClient
  monikers:
  - azure-dotnet-preview
