### YamlMime:NetMember
type: constructor
members:
- type: constructor
  uid: Azure.Identity.ClientCertificateCredential.#ctor
  commentId: M:Azure.Identity.ClientCertificateCredential.#ctor
  name: ClientCertificateCredential()
  fullName: Azure.Identity.ClientCertificateCredential.ClientCertificateCredential()
  nameWithType: ClientCertificateCredential.ClientCertificateCredential()
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: protected ClientCertificateCredential ();
  - lang: vb
    values:
    - value: Protected Sub New ()
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Protected constructor for mocking.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: tenantId
    description: The Azure Active Directory tenant (directory) Id of the service principal.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientId
    description: The client (application) ID of the service principal
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientCertificate
    description: The authentication X509 Certificate of the service principal
    type: <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2?alt=System.Security.Cryptography.X509Certificates.X509Certificate2&text=X509Certificate2" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  name: ClientCertificateCredential(String, String, X509Certificate2)
  fullName: Azure.Identity.ClientCertificateCredential.ClientCertificateCredential(String, String, X509Certificate2)
  nameWithType: ClientCertificateCredential.ClientCertificateCredential(String, String, X509Certificate2)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public ClientCertificateCredential (string tenantId, string clientId, System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate);
  - lang: fsharp
    values:
    - value: 'new Azure.Identity.ClientCertificateCredential : string * string * System.Security.Cryptography.X509Certificates.X509Certificate2 -> Azure.Identity.ClientCertificateCredential'
  - lang: vb
    values:
    - value: Public Sub New (tenantId As String, clientId As String, clientCertificate As X509Certificate2)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Creates an instance of the ClientCertificateCredential with the details needed to authenticate against Azure Active Directory with the specified certificate.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: tenantId
    description: The Azure Active Directory tenant (directory) Id of the service principal.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientId
    description: The client (application) ID of the service principal
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientCertificatePath
    description: The path to a file which contains both the client certificate and private key.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.String)
  commentId: M:Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.String)
  name: ClientCertificateCredential(String, String, String)
  fullName: Azure.Identity.ClientCertificateCredential.ClientCertificateCredential(String, String, String)
  nameWithType: ClientCertificateCredential.ClientCertificateCredential(String, String, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public ClientCertificateCredential (string tenantId, string clientId, string clientCertificatePath);
  - lang: fsharp
    values:
    - value: 'new Azure.Identity.ClientCertificateCredential : string * string * string -> Azure.Identity.ClientCertificateCredential'
  - lang: vb
    values:
    - value: Public Sub New (tenantId As String, clientId As String, clientCertificatePath As String)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Creates an instance of the ClientCertificateCredential with the details needed to authenticate against Azure Active Directory with the specified certificate.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: tenantId
    description: The Azure Active Directory tenant (directory) Id of the service principal.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientId
    description: The client (application) ID of the service principal
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientCertificate
    description: The authentication X509 Certificate of the service principal
    type: <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2?alt=System.Security.Cryptography.X509Certificates.X509Certificate2&text=X509Certificate2" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: Options that allow to configure the management of the requests sent to the Azure Active Directory service.
    type: <xref href="Azure.Identity.ClientCertificateCredentialOptions?alt=Azure.Identity.ClientCertificateCredentialOptions&text=ClientCertificateCredentialOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Azure.Identity.ClientCertificateCredentialOptions)
  commentId: M:Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Azure.Identity.ClientCertificateCredentialOptions)
  name: ClientCertificateCredential(String, String, X509Certificate2, ClientCertificateCredentialOptions)
  fullName: Azure.Identity.ClientCertificateCredential.ClientCertificateCredential(String, String, X509Certificate2, ClientCertificateCredentialOptions)
  nameWithType: ClientCertificateCredential.ClientCertificateCredential(String, String, X509Certificate2, ClientCertificateCredentialOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public ClientCertificateCredential (string tenantId, string clientId, System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate, Azure.Identity.ClientCertificateCredentialOptions options);
  - lang: fsharp
    values:
    - value: 'new Azure.Identity.ClientCertificateCredential : string * string * System.Security.Cryptography.X509Certificates.X509Certificate2 * Azure.Identity.ClientCertificateCredentialOptions -> Azure.Identity.ClientCertificateCredential'
  - lang: vb
    values:
    - value: Public Sub New (tenantId As String, clientId As String, clientCertificate As X509Certificate2, options As ClientCertificateCredentialOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Creates an instance of the ClientCertificateCredential with the details needed to authenticate against Azure Active Directory with the specified certificate.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: tenantId
    description: The Azure Active Directory tenant (directory) Id of the service principal.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientId
    description: The client (application) ID of the service principal
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientCertificatePath
    description: The path to a file which contains both the client certificate and private key.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: Options that allow to configure the management of the requests sent to the Azure Active Directory service.
    type: <xref href="Azure.Identity.ClientCertificateCredentialOptions?alt=Azure.Identity.ClientCertificateCredentialOptions&text=ClientCertificateCredentialOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.String,Azure.Identity.ClientCertificateCredentialOptions)
  commentId: M:Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.String,Azure.Identity.ClientCertificateCredentialOptions)
  name: ClientCertificateCredential(String, String, String, ClientCertificateCredentialOptions)
  fullName: Azure.Identity.ClientCertificateCredential.ClientCertificateCredential(String, String, String, ClientCertificateCredentialOptions)
  nameWithType: ClientCertificateCredential.ClientCertificateCredential(String, String, String, ClientCertificateCredentialOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public ClientCertificateCredential (string tenantId, string clientId, string clientCertificatePath, Azure.Identity.ClientCertificateCredentialOptions options);
  - lang: fsharp
    values:
    - value: 'new Azure.Identity.ClientCertificateCredential : string * string * string * Azure.Identity.ClientCertificateCredentialOptions -> Azure.Identity.ClientCertificateCredential'
  - lang: vb
    values:
    - value: Public Sub New (tenantId As String, clientId As String, clientCertificatePath As String, options As ClientCertificateCredentialOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Creates an instance of the ClientCertificateCredential with the details needed to authenticate against Azure Active Directory with the specified certificate.
  metadata: {}
uid: Azure.Identity.ClientCertificateCredential.#ctor*
commentId: Overload:Azure.Identity.ClientCertificateCredential.#ctor
namespace: Azure.Identity
name: ClientCertificateCredential
fullName: Azure.Identity.ClientCertificateCredential.ClientCertificateCredential
nameWithType: ClientCertificateCredential.ClientCertificateCredential
assembliesWithMoniker:
- value: Azure.Identity.dll
packagesWithMoniker:
- value: Azure.Identity v1.9.0
  monikers:
  - azure-dotnet
- value: Azure.Identity v1.10.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Identity.ClientCertificateCredential..ctor
  api_location:
  - Azure.Identity.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Identity.ClientCertificateCredential.#ctor
  - Azure::Identity::ClientCertificateCredential::#ctor
  - '#ctor'
  - ClientCertificateCredential.#ctor
  - ClientCertificateCredential::#ctor
  helpviewer_keywords:
  - ClientCertificateCredential class [.NET], constructors
  - ClientCertificateCredential() class [.NET], constructors
  - ClientCertificateCredential(String, String, X509Certificate2) class [.NET], constructors
  - ClientCertificateCredential(String, String, String) class [.NET], constructors
  - ClientCertificateCredential(String, String, X509Certificate2, ClientCertificateCredentialOptions) class [.NET], constructors
  - ClientCertificateCredential(String, String, String, ClientCertificateCredentialOptions) class [.NET], constructors
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
