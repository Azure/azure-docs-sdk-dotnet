### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Collections.Generic.IAsyncEnumerable`1?alt=System.Collections.Generic.IAsyncEnumerable&text=IAsyncEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.EventHubs.Consumer.PartitionEvent?alt=Azure.Messaging.EventHubs.Consumer.PartitionEvent&text=PartitionEvent" data-throw-if-not-resolved="True"/>&gt;
    description: An <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IAsyncEnumerable`1"></xref> to be used for iterating over events in the partition.
  parameters:
  - namesWithMoniker:
    - value: partitionId
    description: The identifier of the Event Hub partition from which events will be received.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: startingPosition
    description: The position within the partition where the consumer should begin reading events.
    type: <xref href="Azure.Messaging.EventHubs.Consumer.EventPosition?alt=Azure.Messaging.EventHubs.Consumer.EventPosition&text=EventPosition" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: >-
      Occurs when an <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"></xref> is unable to read from the requested Event Hub partition due to another reader having

      asserted exclusive ownership.  In this case, the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventHubsException.FailureReason"></xref> will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventHubsException.FailureReason.ConsumerDisconnected"></xref>.
    type: <xref href="Azure.Messaging.EventHubs.EventHubsException?alt=Azure.Messaging.EventHubs.EventHubsException&text=EventHubsException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,System.Threading.CancellationToken)
  name: ReadEventsFromPartitionAsync(String, EventPosition, CancellationToken)
  fullName: Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(String, EventPosition, CancellationToken)
  nameWithType: EventHubConsumerClient.ReadEventsFromPartitionAsync(String, EventPosition, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Collections.Generic.IAsyncEnumerable<Azure.Messaging.EventHubs.Consumer.PartitionEvent> ReadEventsFromPartitionAsync (string partitionId, Azure.Messaging.EventHubs.Consumer.EventPosition startingPosition, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member ReadEventsFromPartitionAsync : string * Azure.Messaging.EventHubs.Consumer.EventPosition * System.Threading.CancellationToken -> System.Collections.Generic.IAsyncEnumerable<Azure.Messaging.EventHubs.Consumer.PartitionEvent>

        override this.ReadEventsFromPartitionAsync : string * Azure.Messaging.EventHubs.Consumer.EventPosition * System.Threading.CancellationToken -> System.Collections.Generic.IAsyncEnumerable<Azure.Messaging.EventHubs.Consumer.PartitionEvent>
  - lang: vb
    values:
    - value: Public Overridable Function ReadEventsFromPartitionAsync (partitionId As String, startingPosition As EventPosition, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of PartitionEvent)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  seeAlso: >+
    - <xref:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String%2cAzure.Messaging.EventHubs.Consumer.EventPosition%2cAzure.Messaging.EventHubs.Consumer.ReadEventOptions%2cSystem.Threading.CancellationToken)>

  summary: >-
    Reads events from the requested partition as an asynchronous enumerable, allowing events to be iterated as they

    become available on the partition, waiting as necessary should there be no events available.


    This enumerator may block for an indeterminate amount of time for an <code data-dev-comment-type="c">await</code> if events are not available on the partition, requiring

    cancellation via the <code data-dev-comment-type="paramref">cancellationToken</code> to be requested in order to return control.  It is recommended to call the overload

    which accepts a set of options for configuring read behavior for scenarios where a more deterministic maximum waiting period is desired.
  remarks: <p>Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to process, rather than competing for them.</p>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Collections.Generic.IAsyncEnumerable`1?alt=System.Collections.Generic.IAsyncEnumerable&text=IAsyncEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.EventHubs.Consumer.PartitionEvent?alt=Azure.Messaging.EventHubs.Consumer.PartitionEvent&text=PartitionEvent" data-throw-if-not-resolved="True"/>&gt;
    description: An <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IAsyncEnumerable`1"></xref> to be used for iterating over events in the partition.
  parameters:
  - namesWithMoniker:
    - value: partitionId
    description: The identifier of the Event Hub partition from which events will be received.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: startingPosition
    description: The position within the partition where the consumer should begin reading events.
    type: <xref href="Azure.Messaging.EventHubs.Consumer.EventPosition?alt=Azure.Messaging.EventHubs.Consumer.EventPosition&text=EventPosition" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: readOptions
    description: The set of options to use for configuring read behavior; if not specified the defaults will be used.
    type: <xref href="Azure.Messaging.EventHubs.Consumer.ReadEventOptions?alt=Azure.Messaging.EventHubs.Consumer.ReadEventOptions&text=ReadEventOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: >-
      Occurs when an <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"></xref> is unable to read from the requested Event Hub partition due to another reader having

      asserted exclusive ownership.  In this case, the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventHubsException.FailureReason"></xref> will be set to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventHubsException.FailureReason.ConsumerDisconnected"></xref>.
    type: <xref href="Azure.Messaging.EventHubs.EventHubsException?alt=Azure.Messaging.EventHubs.EventHubsException&text=EventHubsException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)
  name: ReadEventsFromPartitionAsync(String, EventPosition, ReadEventOptions, CancellationToken)
  fullName: Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(String, EventPosition, ReadEventOptions, CancellationToken)
  nameWithType: EventHubConsumerClient.ReadEventsFromPartitionAsync(String, EventPosition, ReadEventOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Collections.Generic.IAsyncEnumerable<Azure.Messaging.EventHubs.Consumer.PartitionEvent> ReadEventsFromPartitionAsync (string partitionId, Azure.Messaging.EventHubs.Consumer.EventPosition startingPosition, Azure.Messaging.EventHubs.Consumer.ReadEventOptions readOptions, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member ReadEventsFromPartitionAsync : string * Azure.Messaging.EventHubs.Consumer.EventPosition * Azure.Messaging.EventHubs.Consumer.ReadEventOptions * System.Threading.CancellationToken -> System.Collections.Generic.IAsyncEnumerable<Azure.Messaging.EventHubs.Consumer.PartitionEvent>

        override this.ReadEventsFromPartitionAsync : string * Azure.Messaging.EventHubs.Consumer.EventPosition * Azure.Messaging.EventHubs.Consumer.ReadEventOptions * System.Threading.CancellationToken -> System.Collections.Generic.IAsyncEnumerable<Azure.Messaging.EventHubs.Consumer.PartitionEvent>
  - lang: vb
    values:
    - value: Public Overridable Function ReadEventsFromPartitionAsync (partitionId As String, startingPosition As EventPosition, readOptions As ReadEventOptions, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of PartitionEvent)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  seeAlso: >+
    - <xref:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String%2cAzure.Messaging.EventHubs.Consumer.EventPosition%2cSystem.Threading.CancellationToken)>

  summary: >-
    Reads events from the requested partition as an asynchronous enumerable, allowing events to be iterated as they

    become available on the partition, waiting as necessary should there be no events available.


    This enumerator may block for an indeterminate amount of time for an <code data-dev-comment-type="c">await</code> if events are not available on the partition, requiring

    cancellation via the <code data-dev-comment-type="paramref">cancellationToken</code> to be requested in order to return control.  It is recommended to set the

    <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Consumer.ReadEventOptions.MaximumWaitTime"></xref> for scenarios where a more deterministic maximum waiting period is desired.
  remarks: <p>Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to process, rather than competing for them.</p>
  metadata: {}
uid: Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync*
commentId: Overload:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync
namespace: Azure.Messaging.EventHubs.Consumer
name: ReadEventsFromPartitionAsync
fullName: Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync
nameWithType: EventHubConsumerClient.ReadEventsFromPartitionAsync
assembliesWithMoniker:
- value: Azure.Messaging.EventHubs.dll
packagesWithMoniker:
- value: Azure.Messaging.EventHubs v5.9.2
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventHubs v5.7.0-beta.5
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync
  api_location:
  - Azure.Messaging.EventHubs.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync
  - Azure::Messaging::EventHubs::Consumer::EventHubConsumerClient::ReadEventsFromPartitionAsync
  - ReadEventsFromPartitionAsync
  - EventHubConsumerClient.ReadEventsFromPartitionAsync
  - EventHubConsumerClient::ReadEventsFromPartitionAsync
  helpviewer_keywords:
  - EventHubConsumerClient.ReadEventsFromPartitionAsync method [.NET]
  - ReadEventsFromPartitionAsync method [.NET], class EventHubConsumerClient
  - EventHubConsumerClient.ReadEventsFromPartitionAsync(String, EventPosition, CancellationToken) method [.NET]
  - ReadEventsFromPartitionAsync(String, EventPosition, CancellationToken) method [.NET], class EventHubConsumerClient
  - EventHubConsumerClient.ReadEventsFromPartitionAsync(String, EventPosition, ReadEventOptions, CancellationToken) method [.NET]
  - ReadEventsFromPartitionAsync(String, EventPosition, ReadEventOptions, CancellationToken) method [.NET], class EventHubConsumerClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
