### YamlMime:NetType
type: class
inheritancesWithMoniker:
- values:
  - <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
methods:
- uid: Azure.Core.MultipartResponse.Parse(Azure.Response,System.Boolean,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
- uid: Azure.Core.MultipartResponse.ParseAsync(Azure.Response,System.Boolean,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
uid: Azure.Core.MultipartResponse
commentId: T:Azure.Core.MultipartResponse
namespace: Azure.Core
name: MultipartResponse
fullName: Azure.Core.MultipartResponse
nameWithType: Azure.Core.MultipartResponse
assembliesWithMoniker:
- value: Azure.Core.dll
packagesWithMoniker:
- value: Azure.Core v1.34.0
syntaxWithMoniker:
- lang: csharp
  values:
  - value: public static class MultipartResponse
- lang: fsharp
  values:
  - value: type MultipartResponse = class
- lang: vb
  values:
  - value: Public Module MultipartResponse
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
summary: >-
  Provides support for creating and parsing multipart/mixed content.

  This is implementing a couple of layered standards as mentioned at

  https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch and

  https://docs.microsoft.com/en-us/rest/api/storageservices/performing-entity-group-transactions

  including https://www.odata.org/documentation/odata-version-3-0/batch-processing/

  and https://www.ietf.org/rfc/rfc2046.txt.
metadata:
  api_name:
  - Azure.Core.MultipartResponse
  api_location:
  - Azure.Core.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Core.MultipartResponse
  - Azure::Core::MultipartResponse
  - MultipartResponse
  helpviewer_keywords:
  - Azure.Core.MultipartResponse class [.NET]
  monikers:
  - azure-dotnet
