### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Core.AccessToken?alt=Azure.Core.AccessToken&text=AccessToken" data-throw-if-not-resolved="True"/>
    description: A valid <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref>.
  parameters:
  - namesWithMoniker:
    - value: requestContext
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Core.TokenRequestContext"></xref> with authentication information.
    type: <xref href="Azure.Core.TokenRequestContext?alt=Azure.Core.TokenRequestContext&text=TokenRequestContext" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)
  commentId: M:Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)
  name: GetToken(TokenRequestContext, CancellationToken)
  fullName: Azure.Core.TokenCredential.GetToken(TokenRequestContext, CancellationToken)
  nameWithType: TokenCredential.GetToken(TokenRequestContext, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public abstract Azure.Core.AccessToken GetToken (Azure.Core.TokenRequestContext requestContext, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'abstract member GetToken : Azure.Core.TokenRequestContext * System.Threading.CancellationToken -> Azure.Core.AccessToken'
  - lang: vb
    values:
    - value: Public MustOverride Function GetToken (requestContext As TokenRequestContext, cancellationToken As CancellationToken) As AccessToken
  monikers:
  - azure-dotnet
  summary: Gets an <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref> for the specified set of scopes.
  remarks: 'Caching and management of the lifespan for the <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref> is considered the responsibility of the caller: each call should request a fresh token being requested.'
  metadata: {}
uid: Azure.Core.TokenCredential.GetToken*
commentId: Overload:Azure.Core.TokenCredential.GetToken
namespace: Azure.Core
name: GetToken
fullName: Azure.Core.TokenCredential.GetToken
nameWithType: TokenCredential.GetToken
assembliesWithMoniker:
- value: Azure.Core.dll
packagesWithMoniker:
- value: Azure.Core v1.34.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.Core.TokenCredential.GetToken
  api_location:
  - Azure.Core.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Core.TokenCredential.GetToken
  - Azure::Core::TokenCredential::GetToken
  - GetToken
  - TokenCredential.GetToken
  - TokenCredential::GetToken
  helpviewer_keywords:
  - TokenCredential.GetToken method [.NET]
  - GetToken method [.NET], class TokenCredential
  - TokenCredential.GetToken(TokenRequestContext, CancellationToken) method [.NET]
  - GetToken(TokenRequestContext, CancellationToken) method [.NET], class TokenCredential
  monikers:
  - azure-dotnet
