### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="OpenTelemetry.Metrics.MeterProviderBuilder?alt=OpenTelemetry.Metrics.MeterProviderBuilder&text=MeterProviderBuilder" data-throw-if-not-resolved="True"/>
    description: The instance of <xref data-throw-if-not-resolved="true" uid="OpenTelemetry.Metrics.MeterProviderBuilder"></xref> to chain the calls.
  parameters:
  - namesWithMoniker:
    - value: builder
    description: <xref data-throw-if-not-resolved="true" uid="OpenTelemetry.Metrics.MeterProviderBuilder"></xref> builder to use.
    type: <xref href="OpenTelemetry.Metrics.MeterProviderBuilder?alt=OpenTelemetry.Metrics.MeterProviderBuilder&text=MeterProviderBuilder" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: configure
    description: Exporter configuration options.
    type: <xref href="System.Action`1?alt=System.Action&text=Action" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions?alt=Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions&text=AzureMonitorExporterOptions" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: credential
    description: >-
      An Azure <xref data-throw-if-not-resolved="true" uid="Azure.Core.TokenCredential"></xref> capable of providing an OAuth token.

      Note: if a credential is provided to both <xref data-throw-if-not-resolved="true" uid="Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions"></xref> and this parameter,

      the Options will take precedence.
    type: <xref href="Azure.Core.TokenCredential?alt=Azure.Core.TokenCredential&text=TokenCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: name
    description: Name which is used when retrieving options.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter(OpenTelemetry.Metrics.MeterProviderBuilder,System.Action{Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions},Azure.Core.TokenCredential,System.String)
  commentId: M:Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter(OpenTelemetry.Metrics.MeterProviderBuilder,System.Action{Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions},Azure.Core.TokenCredential,System.String)
  name: AddAzureMonitorMetricExporter(MeterProviderBuilder, Action<AzureMonitorExporterOptions>, TokenCredential, String)
  fullName: Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter(MeterProviderBuilder, Action<AzureMonitorExporterOptions>, TokenCredential, String)
  nameWithType: AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter(MeterProviderBuilder, Action<AzureMonitorExporterOptions>, TokenCredential, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static OpenTelemetry.Metrics.MeterProviderBuilder AddAzureMonitorMetricExporter (this OpenTelemetry.Metrics.MeterProviderBuilder builder, Action<Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions>? configure = default, Azure.Core.TokenCredential? credential = default, string? name = default);
  - lang: fsharp
    values:
    - value: 'static member AddAzureMonitorMetricExporter : OpenTelemetry.Metrics.MeterProviderBuilder * Action<Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions> * Azure.Core.TokenCredential * string -> OpenTelemetry.Metrics.MeterProviderBuilder'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function AddAzureMonitorMetricExporter (builder As MeterProviderBuilder, Optional configure As Action(Of AzureMonitorExporterOptions) = Nothing, Optional credential As TokenCredential = Nothing, Optional name As String = Nothing) As MeterProviderBuilder
  monikers:
  - azure-dotnet-preview
  summary: Adds Azure Monitor Metric exporter.
  metadata: {}
uid: Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter*
commentId: Overload:Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter
namespace: Azure.Monitor.OpenTelemetry.Exporter
name: AddAzureMonitorMetricExporter
fullName: Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter
nameWithType: AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter
assembliesWithMoniker:
- value: Azure.Monitor.OpenTelemetry.Exporter.dll
packagesWithMoniker:
- value: Azure.Monitor.OpenTelemetry.Exporter v1.0.0-beta.13
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter
  api_location:
  - Azure.Monitor.OpenTelemetry.Exporter.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter
  - Azure::Monitor::OpenTelemetry::Exporter::AzureMonitorExporterMetricExtensions::AddAzureMonitorMetricExporter
  - AddAzureMonitorMetricExporter
  - AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter
  - AzureMonitorExporterMetricExtensions::AddAzureMonitorMetricExporter
  helpviewer_keywords:
  - AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter method [.NET]
  - AddAzureMonitorMetricExporter method [.NET], class AzureMonitorExporterMetricExtensions
  - AzureMonitorExporterMetricExtensions.AddAzureMonitorMetricExporter(MeterProviderBuilder, Action<AzureMonitorExporterOptions>, TokenCredential, String) extension method [.NET]
  - AddAzureMonitorMetricExporter(MeterProviderBuilder, Action<AzureMonitorExporterOptions>, TokenCredential, String) extension method [.NET], class AzureMonitorExporterMetricExtensions
  monikers:
  - azure-dotnet-preview
