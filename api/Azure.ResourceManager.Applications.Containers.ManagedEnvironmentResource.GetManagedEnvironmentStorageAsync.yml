### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.Applications.Containers.ManagedEnvironmentStorageResource?alt=Azure.ResourceManager.Applications.Containers.ManagedEnvironmentStorageResource&text=ManagedEnvironmentStorageResource" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: storageName
    description: Name of the storage.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">storageName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">storageName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.Applications.Containers.ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.Applications.Containers.ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync(System.String,System.Threading.CancellationToken)
  name: GetManagedEnvironmentStorageAsync(String, CancellationToken)
  fullName: Azure.ResourceManager.Applications.Containers.ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync(String, CancellationToken)
  nameWithType: ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync(String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.Applications.Containers.ManagedEnvironmentStorageResource>> GetManagedEnvironmentStorageAsync (string storageName, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetManagedEnvironmentStorageAsync : string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.Applications.Containers.ManagedEnvironmentStorageResource>>

        override this.GetManagedEnvironmentStorageAsync : string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.Applications.Containers.ManagedEnvironmentStorageResource>>
  - lang: vb
    values:
    - value: Public Overridable Function GetManagedEnvironmentStorageAsync (storageName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedEnvironmentStorageResource))
  monikers:
  - azure-dotnet-preview
  summary: >-
    Get storage for a managedEnvironment.

    Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/storages/{storageName}

    Operation Id: ManagedEnvironmentsStorages_Get
  metadata: {}
uid: Azure.ResourceManager.Applications.Containers.ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync*
commentId: Overload:Azure.ResourceManager.Applications.Containers.ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync
namespace: Azure.ResourceManager.Applications.Containers
name: GetManagedEnvironmentStorageAsync
fullName: Azure.ResourceManager.Applications.Containers.ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync
nameWithType: ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync
assembliesWithMoniker:
- value: Azure.ResourceManager.Applications.Containers.dll
packagesWithMoniker:
- value: Azure.ResourceManager.Applications.Containers v1.0.0-beta.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.Applications.Containers.ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync
  api_location:
  - Azure.ResourceManager.Applications.Containers.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.Applications.Containers.ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync
  - Azure::ResourceManager::Applications::Containers::ManagedEnvironmentResource::GetManagedEnvironmentStorageAsync
  - GetManagedEnvironmentStorageAsync
  - ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync
  - ManagedEnvironmentResource::GetManagedEnvironmentStorageAsync
  helpviewer_keywords:
  - ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync method [.NET]
  - GetManagedEnvironmentStorageAsync method [.NET], class ManagedEnvironmentResource
  - ManagedEnvironmentResource.GetManagedEnvironmentStorageAsync(String, CancellationToken) method [.NET]
  - GetManagedEnvironmentStorageAsync(String, CancellationToken) method [.NET], class ManagedEnvironmentResource
  monikers:
  - azure-dotnet-preview
