### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Operation`1?alt=Azure.Operation&text=Operation" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Operation`1"></xref> from the service that will contain a <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> object once the asynchronous operation on the service has completed. Details of the body schema for the operation's final value are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Completed"></xref> if the method should wait to return until the long-running operation has completed on the service; <xref data-throw-if-not-resolved="true" uid="Azure.WaitUntil.Started"></xref> if it should return after starting the operation. For more information on long-running operations, please see <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</a>.
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: projectName
    description: The name of the project to use.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: deploymentName
    description: The name of the specific deployment of the project to use.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">projectName</code> or <code data-dev-comment-type="paramref">deploymentName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">projectName</code> or <code data-dev-comment-type="paramref">deploymentName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.DeployProject(Azure.WaitUntil,System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.DeployProject(Azure.WaitUntil,System.String,System.String,Azure.RequestContext)
  name: DeployProject(WaitUntil, String, String, RequestContext)
  fullName: Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.DeployProject(WaitUntil, String, String, RequestContext)
  nameWithType: QuestionAnsweringAuthoringClient.DeployProject(WaitUntil, String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Operation<BinaryData> DeployProject (Azure.WaitUntil waitUntil, string projectName, string deploymentName, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DeployProject : Azure.WaitUntil * string * string * Azure.RequestContext -> Azure.Operation<BinaryData>

        override this.DeployProject : Azure.WaitUntil * string * string * Azure.RequestContext -> Azure.Operation<BinaryData>
  - lang: vb
    values:
    - value: Public Overridable Function DeployProject (waitUntil As WaitUntil, projectName As String, deploymentName As String, Optional context As RequestContext = Nothing) As Operation(Of BinaryData)
  monikers:
  - azure-dotnet
  summary: Deploy project to production.
  remarks: >-
    <p>Below is the JSON schema for the response payload. Additional information can be found in the service REST API documentation: https://learn.microsoft.com/rest/api/cognitiveservices/questionanswering/question-answering-projects/deploy-project</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">ProjectDeployment</code>: 


    ```

    {
                  deploymentName: string, # Optional. Name of the deployment.
                  lastDeployedDateTime: string (ISO 8601 Format), # Optional. Represents the project last deployment date-time.
                }
    ```

    </p>
  examples: >-
    This sample shows how to call DeployProject with required parameters and parse the result.


    ```

    var credential = new AzureKeyCredential("<key>");

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new QuestionAnsweringAuthoringClient(endpoint, credential);


    var operation = client.DeployProject(WaitUntil.Completed, "<projectName>", "<deploymentName>");


    BinaryData data = operation.WaitForCompletion();

    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;

    Console.WriteLine(result.GetProperty("deploymentName").ToString());

    Console.WriteLine(result.GetProperty("lastDeployedDateTime").ToString());

    ```
  metadata: {}
uid: Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.DeployProject*
commentId: Overload:Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.DeployProject
namespace: Azure.AI.Language.QuestionAnswering.Authoring
name: DeployProject
fullName: Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.DeployProject
nameWithType: QuestionAnsweringAuthoringClient.DeployProject
assembliesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering.dll
packagesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering v1.1.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.DeployProject
  api_location:
  - Azure.AI.Language.QuestionAnswering.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.Language.QuestionAnswering.Authoring.QuestionAnsweringAuthoringClient.DeployProject
  - Azure::AI::Language::QuestionAnswering::Authoring::QuestionAnsweringAuthoringClient::DeployProject
  - DeployProject
  - QuestionAnsweringAuthoringClient.DeployProject
  - QuestionAnsweringAuthoringClient::DeployProject
  helpviewer_keywords:
  - QuestionAnsweringAuthoringClient.DeployProject method [.NET]
  - DeployProject method [.NET], class QuestionAnsweringAuthoringClient
  - QuestionAnsweringAuthoringClient.DeployProject(WaitUntil, String, String, RequestContext) method [.NET]
  - DeployProject(WaitUntil, String, String, RequestContext) method [.NET], class QuestionAnsweringAuthoringClient
  monikers:
  - azure-dotnet
