### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Collections.Generic.IReadOnlyList`1?alt=System.Collections.Generic.IReadOnlyList&text=IReadOnlyList" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Core.GeoJson.GeoLinearRing?alt=Azure.Core.GeoJson.GeoLinearRing&text=GeoLinearRing" data-throw-if-not-resolved="True"/>&gt;
  type: property
  uid: Azure.Core.GeoJson.GeoPolygon.Rings
  commentId: P:Azure.Core.GeoJson.GeoPolygon.Rings
  name: Rings
  fullName: Azure.Core.GeoJson.GeoPolygon.Rings
  nameWithType: GeoPolygon.Rings
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Collections.Generic.IReadOnlyList<Azure.Core.GeoJson.GeoLinearRing> Rings { get; }
  - lang: fsharp
    values:
    - value: 'member this.Rings : System.Collections.Generic.IReadOnlyList<Azure.Core.GeoJson.GeoLinearRing>'
  - lang: vb
    values:
    - value: Public ReadOnly Property Rings As IReadOnlyList(Of GeoLinearRing)
  monikers:
  - azure-dotnet
  summary: Gets a set of rings that form the polygon.
  metadata: {}
uid: Azure.Core.GeoJson.GeoPolygon.Rings*
commentId: Overload:Azure.Core.GeoJson.GeoPolygon.Rings
namespace: Azure.Core.GeoJson
name: Rings
fullName: Azure.Core.GeoJson.GeoPolygon.Rings
nameWithType: GeoPolygon.Rings
assembliesWithMoniker:
- value: Azure.Core.dll
packagesWithMoniker:
- value: Azure.Core v1.34.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.Core.GeoJson.GeoPolygon.Rings
  - Azure.Core.GeoJson.GeoPolygon.get_Rings
  api_location:
  - Azure.Core.Experimental.dll
  - Azure.Core.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Core.GeoJson.GeoPolygon.Rings
  - Azure::Core::GeoJson::GeoPolygon::Rings
  - Rings
  - GeoPolygon.Rings
  - GeoPolygon::Rings
  helpviewer_keywords:
  - GeoPolygon.Rings property [.NET]
  - Rings property [.NET], class GeoPolygon
  monikers:
  - azure-dotnet
