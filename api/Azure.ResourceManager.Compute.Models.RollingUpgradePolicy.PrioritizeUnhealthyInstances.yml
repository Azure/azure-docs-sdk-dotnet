### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>&gt;
  type: property
  uid: Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PrioritizeUnhealthyInstances
  commentId: P:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PrioritizeUnhealthyInstances
  name: PrioritizeUnhealthyInstances
  fullName: Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PrioritizeUnhealthyInstances
  nameWithType: RollingUpgradePolicy.PrioritizeUnhealthyInstances
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public bool? PrioritizeUnhealthyInstances { get; set; }
  - lang: fsharp
    values:
    - value: 'member this.PrioritizeUnhealthyInstances : Nullable<bool> with get, set'
  - lang: vb
    values:
    - value: Public Property PrioritizeUnhealthyInstances As Nullable(Of Boolean)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Upgrade all unhealthy instances in a scale set before any healthy instances.
  metadata: {}
uid: Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PrioritizeUnhealthyInstances*
commentId: Overload:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PrioritizeUnhealthyInstances
namespace: Azure.ResourceManager.Compute.Models
name: PrioritizeUnhealthyInstances
fullName: Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PrioritizeUnhealthyInstances
nameWithType: RollingUpgradePolicy.PrioritizeUnhealthyInstances
assembliesWithMoniker:
- value: Azure.ResourceManager.Compute.dll
packagesWithMoniker:
- value: Azure.ResourceManager.Compute v1.1.0
  monikers:
  - azure-dotnet
- value: Azure.ResourceManager.Compute v1.2.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PrioritizeUnhealthyInstances
  - Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.get_PrioritizeUnhealthyInstances
  - Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.set_PrioritizeUnhealthyInstances
  api_location:
  - Azure.ResourceManager.Compute.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PrioritizeUnhealthyInstances
  - Azure::ResourceManager::Compute::Models::RollingUpgradePolicy::PrioritizeUnhealthyInstances
  - PrioritizeUnhealthyInstances
  - RollingUpgradePolicy.PrioritizeUnhealthyInstances
  - RollingUpgradePolicy::PrioritizeUnhealthyInstances
  helpviewer_keywords:
  - RollingUpgradePolicy.PrioritizeUnhealthyInstances property [.NET]
  - PrioritizeUnhealthyInstances property [.NET], class RollingUpgradePolicy
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
