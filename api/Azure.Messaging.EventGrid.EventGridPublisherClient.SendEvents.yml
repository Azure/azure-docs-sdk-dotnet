### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: cloudEvents
    description: The set of events to be published to Event Grid.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.CloudEvent?alt=Azure.Messaging.CloudEvent&text=CloudEvent" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional cancellation token instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(System.Collections.Generic.IEnumerable{Azure.Messaging.CloudEvent},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(System.Collections.Generic.IEnumerable{Azure.Messaging.CloudEvent},System.Threading.CancellationToken)
  name: SendEvents(IEnumerable<CloudEvent>, CancellationToken)
  fullName: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(IEnumerable<CloudEvent>, CancellationToken)
  nameWithType: EventGridPublisherClient.SendEvents(IEnumerable<CloudEvent>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response SendEvents (System.Collections.Generic.IEnumerable<Azure.Messaging.CloudEvent> cloudEvents, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SendEvents : seq<Azure.Messaging.CloudEvent> * System.Threading.CancellationToken -> Azure.Response

        override this.SendEvents : seq<Azure.Messaging.CloudEvent> * System.Threading.CancellationToken -> Azure.Response
  - lang: vb
    values:
    - value: Public Overridable Function SendEvents (cloudEvents As IEnumerable(Of CloudEvent), Optional cancellationToken As CancellationToken = Nothing) As Response
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Publishes a set of CloudEvents to an Event Grid topic.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: eventGridEvents
    description: The set of events to be published to Event Grid.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.EventGrid.EventGridEvent?alt=Azure.Messaging.EventGrid.EventGridEvent&text=EventGridEvent" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional cancellation token instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(System.Collections.Generic.IEnumerable{Azure.Messaging.EventGrid.EventGridEvent},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(System.Collections.Generic.IEnumerable{Azure.Messaging.EventGrid.EventGridEvent},System.Threading.CancellationToken)
  name: SendEvents(IEnumerable<EventGridEvent>, CancellationToken)
  fullName: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(IEnumerable<EventGridEvent>, CancellationToken)
  nameWithType: EventGridPublisherClient.SendEvents(IEnumerable<EventGridEvent>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response SendEvents (System.Collections.Generic.IEnumerable<Azure.Messaging.EventGrid.EventGridEvent> eventGridEvents, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SendEvents : seq<Azure.Messaging.EventGrid.EventGridEvent> * System.Threading.CancellationToken -> Azure.Response

        override this.SendEvents : seq<Azure.Messaging.EventGrid.EventGridEvent> * System.Threading.CancellationToken -> Azure.Response
  - lang: vb
    values:
    - value: Public Overridable Function SendEvents (eventGridEvents As IEnumerable(Of EventGridEvent), Optional cancellationToken As CancellationToken = Nothing) As Response
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Publishes a set of EventGridEvents to an Event Grid topic.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: customEvents
    description: The set of custom schema events to be published to Event Grid.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional cancellation token instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(System.Collections.Generic.IEnumerable{System.BinaryData},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(System.Collections.Generic.IEnumerable{System.BinaryData},System.Threading.CancellationToken)
  name: SendEvents(IEnumerable<BinaryData>, CancellationToken)
  fullName: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(IEnumerable<BinaryData>, CancellationToken)
  nameWithType: EventGridPublisherClient.SendEvents(IEnumerable<BinaryData>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response SendEvents (System.Collections.Generic.IEnumerable<BinaryData> customEvents, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SendEvents : seq<BinaryData> * System.Threading.CancellationToken -> Azure.Response

        override this.SendEvents : seq<BinaryData> * System.Threading.CancellationToken -> Azure.Response
  - lang: vb
    values:
    - value: Public Overridable Function SendEvents (customEvents As IEnumerable(Of BinaryData), Optional cancellationToken As CancellationToken = Nothing) As Response
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Publishes a set of custom schema events to an Event Grid topic.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: cloudEvents
    description: The set of events to be published to Event Grid.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.CloudEvent?alt=Azure.Messaging.CloudEvent&text=CloudEvent" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: channelName
    description: The partner topic channel to publish the event to.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional cancellation token instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(System.Collections.Generic.IEnumerable{Azure.Messaging.CloudEvent},System.String,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(System.Collections.Generic.IEnumerable{Azure.Messaging.CloudEvent},System.String,System.Threading.CancellationToken)
  name: SendEvents(IEnumerable<CloudEvent>, String, CancellationToken)
  fullName: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(IEnumerable<CloudEvent>, String, CancellationToken)
  nameWithType: EventGridPublisherClient.SendEvents(IEnumerable<CloudEvent>, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response SendEvents (System.Collections.Generic.IEnumerable<Azure.Messaging.CloudEvent> cloudEvents, string channelName, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SendEvents : seq<Azure.Messaging.CloudEvent> * string * System.Threading.CancellationToken -> Azure.Response

        override this.SendEvents : seq<Azure.Messaging.CloudEvent> * string * System.Threading.CancellationToken -> Azure.Response
  - lang: vb
    values:
    - value: Public Overridable Function SendEvents (cloudEvents As IEnumerable(Of CloudEvent), channelName As String, Optional cancellationToken As CancellationToken = Nothing) As Response
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Publishes a set of CloudEvents to an Event Grid topic.
  metadata: {}
uid: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents*
commentId: Overload:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents
namespace: Azure.Messaging.EventGrid
name: SendEvents
fullName: Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents
nameWithType: EventGridPublisherClient.SendEvents
assembliesWithMoniker:
- value: Azure.Messaging.EventGrid.dll
packagesWithMoniker:
- value: Azure.Messaging.EventGrid v4.17.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventGrid v4.18.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents
  api_location:
  - Azure.Messaging.EventGrid.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents
  - Azure::Messaging::EventGrid::EventGridPublisherClient::SendEvents
  - SendEvents
  - EventGridPublisherClient.SendEvents
  - EventGridPublisherClient::SendEvents
  helpviewer_keywords:
  - EventGridPublisherClient.SendEvents method [.NET]
  - SendEvents method [.NET], class EventGridPublisherClient
  - EventGridPublisherClient.SendEvents(IEnumerable<CloudEvent>, CancellationToken) method [.NET]
  - SendEvents(IEnumerable<CloudEvent>, CancellationToken) method [.NET], class EventGridPublisherClient
  - EventGridPublisherClient.SendEvents(IEnumerable<EventGridEvent>, CancellationToken) method [.NET]
  - SendEvents(IEnumerable<EventGridEvent>, CancellationToken) method [.NET], class EventGridPublisherClient
  - EventGridPublisherClient.SendEvents(IEnumerable<BinaryData>, CancellationToken) method [.NET]
  - SendEvents(IEnumerable<BinaryData>, CancellationToken) method [.NET], class EventGridPublisherClient
  - EventGridPublisherClient.SendEvents(IEnumerable<CloudEvent>, String, CancellationToken) method [.NET]
  - SendEvents(IEnumerable<CloudEvent>, String, CancellationToken) method [.NET], class EventGridPublisherClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
