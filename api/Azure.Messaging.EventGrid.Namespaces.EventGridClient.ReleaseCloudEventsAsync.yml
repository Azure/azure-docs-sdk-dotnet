### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The response returned from the service.
  parameters:
  - namesWithMoniker:
    - value: topicName
    description: Topic Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventSubscriptionName
    description: Event Subscription Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">topicName</code>, <code data-dev-comment-type="paramref">eventSubscriptionName</code> or <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">topicName</code> or <code data-dev-comment-type="paramref">eventSubscriptionName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReleaseCloudEventsAsync(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)
  commentId: M:Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReleaseCloudEventsAsync(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)
  name: ReleaseCloudEventsAsync(String, String, RequestContent, RequestContext)
  fullName: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReleaseCloudEventsAsync(String, String, RequestContent, RequestContext)
  nameWithType: EventGridClient.ReleaseCloudEventsAsync(String, String, RequestContent, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> ReleaseCloudEventsAsync (string topicName, string eventSubscriptionName, Azure.Core.RequestContent content, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member ReleaseCloudEventsAsync : string * string * Azure.Core.RequestContent * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.ReleaseCloudEventsAsync : string * string * Azure.Core.RequestContent * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function ReleaseCloudEventsAsync (topicName As String, eventSubscriptionName As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: >-
    [Protocol Method] Release batch of Cloud Events. The server responds with an HTTP 200 status code if at least one event is successfully released. The response body will include the set of successfully released lockTokens, along with other failed lockTokens with their corresponding error information.

    <ul><li>

    This <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</a> allows explicit creation of the request and processing of the response for advanced scenarios.

    </li></ul>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.EventGrid.Namespaces.ReleaseResult?alt=Azure.Messaging.EventGrid.Namespaces.ReleaseResult&text=ReleaseResult" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: topicName
    description: Topic Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventSubscriptionName
    description: Event Subscription Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: lockTokens
    description: ReleaseOptions.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">topicName</code>, <code data-dev-comment-type="paramref">eventSubscriptionName</code> or <code data-dev-comment-type="paramref">lockTokens</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">topicName</code> or <code data-dev-comment-type="paramref">eventSubscriptionName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReleaseCloudEventsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReleaseCloudEventsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name: ReleaseCloudEventsAsync(String, String, IEnumerable<String>, CancellationToken)
  fullName: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReleaseCloudEventsAsync(String, String, IEnumerable<String>, CancellationToken)
  nameWithType: EventGridClient.ReleaseCloudEventsAsync(String, String, IEnumerable<String>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.Messaging.EventGrid.Namespaces.ReleaseResult>> ReleaseCloudEventsAsync (string topicName, string eventSubscriptionName, System.Collections.Generic.IEnumerable<string> lockTokens, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member ReleaseCloudEventsAsync : string * string * seq<string> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Messaging.EventGrid.Namespaces.ReleaseResult>>

        override this.ReleaseCloudEventsAsync : string * string * seq<string> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Messaging.EventGrid.Namespaces.ReleaseResult>>
  - lang: vb
    values:
    - value: Public Overridable Function ReleaseCloudEventsAsync (topicName As String, eventSubscriptionName As String, lockTokens As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReleaseResult))
  monikers:
  - azure-dotnet-preview
  summary: Release batch of Cloud Events. The server responds with an HTTP 200 status code if at least one event is successfully released. The response body will include the set of successfully released lockTokens, along with other failed lockTokens with their corresponding error information.
  metadata: {}
uid: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReleaseCloudEventsAsync*
commentId: Overload:Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReleaseCloudEventsAsync
namespace: Azure.Messaging.EventGrid.Namespaces
name: ReleaseCloudEventsAsync
fullName: Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReleaseCloudEventsAsync
nameWithType: EventGridClient.ReleaseCloudEventsAsync
assembliesWithMoniker:
- value: Azure.Messaging.EventGrid.dll
packagesWithMoniker:
- value: Azure.Messaging.EventGrid v4.18.0-beta.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReleaseCloudEventsAsync
  api_location:
  - Azure.Messaging.EventGrid.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventGrid.Namespaces.EventGridClient.ReleaseCloudEventsAsync
  - Azure::Messaging::EventGrid::Namespaces::EventGridClient::ReleaseCloudEventsAsync
  - ReleaseCloudEventsAsync
  - EventGridClient.ReleaseCloudEventsAsync
  - EventGridClient::ReleaseCloudEventsAsync
  helpviewer_keywords:
  - EventGridClient.ReleaseCloudEventsAsync method [.NET]
  - ReleaseCloudEventsAsync method [.NET], class EventGridClient
  - EventGridClient.ReleaseCloudEventsAsync(String, String, RequestContent, RequestContext) method [.NET]
  - ReleaseCloudEventsAsync(String, String, RequestContent, RequestContext) method [.NET], class EventGridClient
  - EventGridClient.ReleaseCloudEventsAsync(String, String, IEnumerable<String>, CancellationToken) method [.NET]
  - ReleaseCloudEventsAsync(String, String, IEnumerable<String>, CancellationToken) method [.NET], class EventGridClient
  monikers:
  - azure-dotnet-preview
