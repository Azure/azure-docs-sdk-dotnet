### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The raw response corresponding to the final GET blob chunk request.
  parameters:
  - namesWithMoniker:
    - value: digest
    description: The digest of the blob to download.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: destination
    description: Destination for the downloaded blob.
    type: <xref href="System.IO.Stream?alt=System.IO.Stream&text=Stream" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: If <code data-dev-comment-type="paramref">destination</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: Thrown when a failure is returned by the Container Registry service.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Containers.ContainerRegistry.ContainerRegistryContentClient.DownloadBlobToAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Azure.Containers.ContainerRegistry.ContainerRegistryContentClient.DownloadBlobToAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  name: DownloadBlobToAsync(String, Stream, CancellationToken)
  fullName: Azure.Containers.ContainerRegistry.ContainerRegistryContentClient.DownloadBlobToAsync(String, Stream, CancellationToken)
  nameWithType: ContainerRegistryContentClient.DownloadBlobToAsync(String, Stream, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> DownloadBlobToAsync (string digest, System.IO.Stream destination, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DownloadBlobToAsync : string * System.IO.Stream * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>

        override this.DownloadBlobToAsync : string * System.IO.Stream * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function DownloadBlobToAsync (digest As String, destination As Stream, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Download a blob to a passed-in destination stream.  This approach will download the blob

    to the destination stream in sequential chunks of bytes.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The raw response corresponding to the final GET blob chunk request.
  parameters:
  - namesWithMoniker:
    - value: digest
    description: The digest of the blob to download.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: path
    description: A file path to write the downloaded content to.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: If <code data-dev-comment-type="paramref">path</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: Thrown when a failure is returned by the Container Registry service.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Containers.ContainerRegistry.ContainerRegistryContentClient.DownloadBlobToAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Azure.Containers.ContainerRegistry.ContainerRegistryContentClient.DownloadBlobToAsync(System.String,System.String,System.Threading.CancellationToken)
  name: DownloadBlobToAsync(String, String, CancellationToken)
  fullName: Azure.Containers.ContainerRegistry.ContainerRegistryContentClient.DownloadBlobToAsync(String, String, CancellationToken)
  nameWithType: ContainerRegistryContentClient.DownloadBlobToAsync(String, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> DownloadBlobToAsync (string digest, string path, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DownloadBlobToAsync : string * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>

        override this.DownloadBlobToAsync : string * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function DownloadBlobToAsync (digest As String, path As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Download a blob to a file specified by the path parameter.
  metadata: {}
uid: Azure.Containers.ContainerRegistry.ContainerRegistryContentClient.DownloadBlobToAsync*
commentId: Overload:Azure.Containers.ContainerRegistry.ContainerRegistryContentClient.DownloadBlobToAsync
namespace: Azure.Containers.ContainerRegistry
name: DownloadBlobToAsync
fullName: Azure.Containers.ContainerRegistry.ContainerRegistryContentClient.DownloadBlobToAsync
nameWithType: ContainerRegistryContentClient.DownloadBlobToAsync
assembliesWithMoniker:
- value: Azure.Containers.ContainerRegistry.dll
packagesWithMoniker:
- value: Azure.Containers.ContainerRegistry v1.1.0
  monikers:
  - azure-dotnet
- value: Azure.Containers.ContainerRegistry v1.2.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Containers.ContainerRegistry.ContainerRegistryContentClient.DownloadBlobToAsync
  api_location:
  - Azure.Containers.ContainerRegistry.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Containers.ContainerRegistry.ContainerRegistryContentClient.DownloadBlobToAsync
  - Azure::Containers::ContainerRegistry::ContainerRegistryContentClient::DownloadBlobToAsync
  - DownloadBlobToAsync
  - ContainerRegistryContentClient.DownloadBlobToAsync
  - ContainerRegistryContentClient::DownloadBlobToAsync
  helpviewer_keywords:
  - ContainerRegistryContentClient.DownloadBlobToAsync method [.NET]
  - DownloadBlobToAsync method [.NET], class ContainerRegistryContentClient
  - ContainerRegistryContentClient.DownloadBlobToAsync(String, Stream, CancellationToken) method [.NET]
  - DownloadBlobToAsync(String, Stream, CancellationToken) method [.NET], class ContainerRegistryContentClient
  - ContainerRegistryContentClient.DownloadBlobToAsync(String, String, CancellationToken) method [.NET]
  - DownloadBlobToAsync(String, String, CancellationToken) method [.NET], class ContainerRegistryContentClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
