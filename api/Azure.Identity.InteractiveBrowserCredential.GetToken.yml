### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Core.AccessToken?alt=Azure.Core.AccessToken&text=AccessToken" data-throw-if-not-resolved="True"/>
    description: An <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref> which can be used to authenticate service client calls.
  parameters:
  - namesWithMoniker:
    - value: requestContext
    description: The details of the authentication request.
    type: <xref href="Azure.Core.TokenRequestContext?alt=Azure.Core.TokenRequestContext&text=TokenRequestContext" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> controlling the request lifetime.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Identity.InteractiveBrowserCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)
  commentId: M:Azure.Identity.InteractiveBrowserCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)
  name: GetToken(TokenRequestContext, CancellationToken)
  fullName: Azure.Identity.InteractiveBrowserCredential.GetToken(TokenRequestContext, CancellationToken)
  nameWithType: InteractiveBrowserCredential.GetToken(TokenRequestContext, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public override Azure.Core.AccessToken GetToken (Azure.Core.TokenRequestContext requestContext, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'override this.GetToken : Azure.Core.TokenRequestContext * System.Threading.CancellationToken -> Azure.Core.AccessToken'
  - lang: vb
    values:
    - value: Public Overrides Function GetToken (requestContext As TokenRequestContext, Optional cancellationToken As CancellationToken = Nothing) As AccessToken
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Obtains an <xref data-throw-if-not-resolved="true" uid="Azure.Core.AccessToken"></xref> token for a user account silently if the user has already authenticated, otherwise the

    default browser is launched to authenticate the user. Acquired tokens are cached by the credential instance. Token lifetime and

    refreshing is handled automatically. Where possible, reuse credential instances to optimize cache effectiveness.
  metadata: {}
uid: Azure.Identity.InteractiveBrowserCredential.GetToken*
commentId: Overload:Azure.Identity.InteractiveBrowserCredential.GetToken
namespace: Azure.Identity
name: GetToken
fullName: Azure.Identity.InteractiveBrowserCredential.GetToken
nameWithType: InteractiveBrowserCredential.GetToken
assembliesWithMoniker:
- value: Azure.Identity.dll
packagesWithMoniker:
- value: Azure.Identity v1.9.0
  monikers:
  - azure-dotnet
- value: Azure.Identity v1.10.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Identity.InteractiveBrowserCredential.GetToken
  api_location:
  - Azure.Identity.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Identity.InteractiveBrowserCredential.GetToken
  - Azure::Identity::InteractiveBrowserCredential::GetToken
  - GetToken
  - InteractiveBrowserCredential.GetToken
  - InteractiveBrowserCredential::GetToken
  helpviewer_keywords:
  - InteractiveBrowserCredential.GetToken method [.NET]
  - GetToken method [.NET], class InteractiveBrowserCredential
  - InteractiveBrowserCredential.GetToken(TokenRequestContext, CancellationToken) method [.NET]
  - GetToken(TokenRequestContext, CancellationToken) method [.NET], class InteractiveBrowserCredential
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
