### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Messaging.EventHubs.Consumer.EventPosition?alt=Azure.Messaging.EventHubs.Consumer.EventPosition&text=EventPosition" data-throw-if-not-resolved="True"/>
    description: The specified position of an event in the partition.
  parameters:
  - namesWithMoniker:
    - value: offset
    description: The offset of an event with respect to its relative position in the partition.
    type: <xref href="System.Int64?alt=System.Int64&text=Int64" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isInclusive
    description: When <code data-dev-comment-type="c">true</code>, the event with the <code data-dev-comment-type="paramref">offset</code> is included; otherwise the next event in sequence will be read.
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventHubs.Consumer.EventPosition.FromOffset(System.Int64,System.Boolean)
  commentId: M:Azure.Messaging.EventHubs.Consumer.EventPosition.FromOffset(System.Int64,System.Boolean)
  name: FromOffset(Int64, Boolean)
  fullName: Azure.Messaging.EventHubs.Consumer.EventPosition.FromOffset(Int64, Boolean)
  nameWithType: EventPosition.FromOffset(Int64, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Azure.Messaging.EventHubs.Consumer.EventPosition FromOffset (long offset, bool isInclusive = true);
  - lang: fsharp
    values:
    - value: 'static member FromOffset : int64 * bool -> Azure.Messaging.EventHubs.Consumer.EventPosition'
  - lang: vb
    values:
    - value: Public Shared Function FromOffset (offset As Long, Optional isInclusive As Boolean = true) As EventPosition
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Corresponds to a specific offset in the partition event stream.  By default, if an event is located

    at that offset, it will be read.  Setting <code data-dev-comment-type="paramref">isInclusive</code> to <code data-dev-comment-type="c">false</code> will skip the

    event at that offset and begin reading at the next available event.
  metadata: {}
uid: Azure.Messaging.EventHubs.Consumer.EventPosition.FromOffset*
commentId: Overload:Azure.Messaging.EventHubs.Consumer.EventPosition.FromOffset
namespace: Azure.Messaging.EventHubs.Consumer
name: FromOffset
fullName: Azure.Messaging.EventHubs.Consumer.EventPosition.FromOffset
nameWithType: EventPosition.FromOffset
assembliesWithMoniker:
- value: Azure.Messaging.EventHubs.dll
packagesWithMoniker:
- value: Azure.Messaging.EventHubs v5.9.2
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventHubs v5.7.0-beta.5
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventHubs.Consumer.EventPosition.FromOffset
  api_location:
  - Azure.Messaging.EventHubs.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventHubs.Consumer.EventPosition.FromOffset
  - Azure::Messaging::EventHubs::Consumer::EventPosition::FromOffset
  - FromOffset
  - EventPosition.FromOffset
  - EventPosition::FromOffset
  helpviewer_keywords:
  - EventPosition.FromOffset method [.NET]
  - FromOffset method [.NET], struct EventPosition
  - EventPosition.FromOffset(Int64, Boolean) method [.NET]
  - FromOffset(Int64, Boolean) method [.NET], struct EventPosition
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
