### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.Language.QuestionAnswering.AnswersFromTextResult?alt=Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&text=AnswersFromTextResult" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.AnswersFromTextResult"></xref> containing answers to the <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions.Question"></xref>.
  parameters:
  - namesWithMoniker:
    - value: options
    description: The question to answer.
    type: <xref href="Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions?alt=Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions&text=AnswersFromTextOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to cancel the request.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">options</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: The service returned an error. The exception contains details of the service error.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions,System.Threading.CancellationToken)
  commentId: M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions,System.Threading.CancellationToken)
  name: GetAnswersFromTextAsync(AnswersFromTextOptions, CancellationToken)
  fullName: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(AnswersFromTextOptions, CancellationToken)
  nameWithType: QuestionAnsweringClient.GetAnswersFromTextAsync(AnswersFromTextOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersFromTextResult>> GetAnswersFromTextAsync (Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions options, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetAnswersFromTextAsync : Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersFromTextResult>>

        override this.GetAnswersFromTextAsync : Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersFromTextResult>>
  - lang: vb
    values:
    - value: Public Overridable Function GetAnswersFromTextAsync (options As AnswersFromTextOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnswersFromTextResult))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Answers the specified question using the provided text in the body.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.Language.QuestionAnswering.AnswersFromTextResult?alt=Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&text=AnswersFromTextResult" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.AnswersFromTextResult"></xref> containing answers to the <code data-dev-comment-type="paramref">question</code>.
  parameters:
  - namesWithMoniker:
    - value: question
    description: The question to answer.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: textDocuments
    description: A collection of <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.TextDocument"></xref> to query.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.Language.QuestionAnswering.TextDocument?alt=Azure.AI.Language.QuestionAnswering.TextDocument&text=TextDocument" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: language
    description: >-
      The language of the text documents.

      This is the <a href="https://tools.ietf.org/rfc/bcp/bcp47.txt">BCP-47</a> representation of a language. For example, use "en" for English, "es" for Spanish, etc.

      If not set, uses <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage"></xref> as the default.

      If <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage"></xref> is not set, the service default, "en" for English, is used.

      See <a href="https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/language-support">https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/language-support</a> for list of currently supported languages.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to cancel the request.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">question</code> or <code data-dev-comment-type="paramref">textDocuments</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: The service returned an error. The exception contains details of the service error.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.QuestionAnswering.TextDocument},System.String,System.Threading.CancellationToken)
  commentId: M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.QuestionAnswering.TextDocument},System.String,System.Threading.CancellationToken)
  name: GetAnswersFromTextAsync(String, IEnumerable<TextDocument>, String, CancellationToken)
  fullName: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(String, IEnumerable<TextDocument>, String, CancellationToken)
  nameWithType: QuestionAnsweringClient.GetAnswersFromTextAsync(String, IEnumerable<TextDocument>, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersFromTextResult>> GetAnswersFromTextAsync (string question, System.Collections.Generic.IEnumerable<Azure.AI.Language.QuestionAnswering.TextDocument> textDocuments, string language = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetAnswersFromTextAsync : string * seq<Azure.AI.Language.QuestionAnswering.TextDocument> * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersFromTextResult>>

        override this.GetAnswersFromTextAsync : string * seq<Azure.AI.Language.QuestionAnswering.TextDocument> * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersFromTextResult>>
  - lang: vb
    values:
    - value: Public Overridable Function GetAnswersFromTextAsync (question As String, textDocuments As IEnumerable(Of TextDocument), Optional language As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnswersFromTextResult))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Answers the specified question using the text <code data-dev-comment-type="paramref">textDocuments</code>.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.Language.QuestionAnswering.AnswersFromTextResult?alt=Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&text=AnswersFromTextResult" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.AnswersFromTextResult"></xref> containing answers to the <code data-dev-comment-type="paramref">question</code>.
  parameters:
  - namesWithMoniker:
    - value: question
    description: The question to answer.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: textDocuments
    description: The text documents to query.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: language
    description: >-
      The language of the text documents.

      This is the <a href="https://tools.ietf.org/rfc/bcp/bcp47.txt">BCP-47</a> representation of a language. For example, use "en" for English, "es" for Spanish, etc.

      If not set, uses <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage"></xref> as the default.

      If <xref data-throw-if-not-resolved="true" uid="Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage"></xref> is not set, the service default, "en" for English, is used.

      See <a href="https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/language-support">https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/language-support</a> for list of currently supported languages.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to cancel the request.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">question</code> or <code data-dev-comment-type="paramref">textDocuments</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: The service returned an error. The exception contains details of the service error.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)
  commentId: M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)
  name: GetAnswersFromTextAsync(String, IEnumerable<String>, String, CancellationToken)
  fullName: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(String, IEnumerable<String>, String, CancellationToken)
  nameWithType: QuestionAnsweringClient.GetAnswersFromTextAsync(String, IEnumerable<String>, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersFromTextResult>> GetAnswersFromTextAsync (string question, System.Collections.Generic.IEnumerable<string> textDocuments, string language = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetAnswersFromTextAsync : string * seq<string> * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersFromTextResult>>

        override this.GetAnswersFromTextAsync : string * seq<string> * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.Language.QuestionAnswering.AnswersFromTextResult>>
  - lang: vb
    values:
    - value: Public Overridable Function GetAnswersFromTextAsync (question As String, textDocuments As IEnumerable(Of String), Optional language As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnswersFromTextResult))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Answers the specified question using the text <code data-dev-comment-type="paramref">textDocuments</code>.
  metadata: {}
uid: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync*
commentId: Overload:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync
namespace: Azure.AI.Language.QuestionAnswering
name: GetAnswersFromTextAsync
fullName: Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync
nameWithType: QuestionAnsweringClient.GetAnswersFromTextAsync
assembliesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering.dll
packagesWithMoniker:
- value: Azure.AI.Language.QuestionAnswering v1.1.0
  monikers:
  - azure-dotnet
- value: Azure.AI.Language.QuestionAnswering v1.1.0-beta.2
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync
  api_location:
  - Azure.AI.Language.QuestionAnswering.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync
  - Azure::AI::Language::QuestionAnswering::QuestionAnsweringClient::GetAnswersFromTextAsync
  - GetAnswersFromTextAsync
  - QuestionAnsweringClient.GetAnswersFromTextAsync
  - QuestionAnsweringClient::GetAnswersFromTextAsync
  helpviewer_keywords:
  - QuestionAnsweringClient.GetAnswersFromTextAsync method [.NET]
  - GetAnswersFromTextAsync method [.NET], class QuestionAnsweringClient
  - QuestionAnsweringClient.GetAnswersFromTextAsync(AnswersFromTextOptions, CancellationToken) method [.NET]
  - GetAnswersFromTextAsync(AnswersFromTextOptions, CancellationToken) method [.NET], class QuestionAnsweringClient
  - QuestionAnsweringClient.GetAnswersFromTextAsync(String, IEnumerable<TextDocument>, String, CancellationToken) method [.NET]
  - GetAnswersFromTextAsync(String, IEnumerable<TextDocument>, String, CancellationToken) method [.NET], class QuestionAnsweringClient
  - QuestionAnsweringClient.GetAnswersFromTextAsync(String, IEnumerable<String>, String, CancellationToken) method [.NET]
  - GetAnswersFromTextAsync(String, IEnumerable<String>, String, CancellationToken) method [.NET], class QuestionAnsweringClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
