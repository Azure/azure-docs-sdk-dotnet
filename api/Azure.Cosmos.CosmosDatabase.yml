### YamlMime:NetType
type: class
inheritancesWithMoniker:
- values:
  - <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
constructors:
- uid: Azure.Cosmos.CosmosDatabase.#ctor
  monikers:
  - azure-dotnet-preview
methods:
- uid: Azure.Cosmos.CosmosDatabase.CreateContainerAsync(Azure.Cosmos.ContainerProperties,System.Nullable{System.Int32},Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.CreateContainerAsync(System.String,System.String,System.Nullable{System.Int32},Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.CreateContainerIfNotExistsAsync(Azure.Cosmos.ContainerProperties,System.Nullable{System.Int32},Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.CreateContainerIfNotExistsAsync(System.String,System.String,System.Nullable{System.Int32},Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.CreateContainerStreamAsync(Azure.Cosmos.ContainerProperties,System.Nullable{System.Int32},Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.CreateUserAsync(System.String,Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.DefineContainer(System.String,System.String)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.DeleteAsync(Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.DeleteStreamAsync(Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.GetContainer(System.String)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.GetContainerQueryIterator``1(Azure.Cosmos.QueryDefinition,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.GetContainerQueryIterator``1(System.String,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator(Azure.Cosmos.QueryDefinition,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.GetContainerQueryStreamIterator(System.String,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.GetUser(System.String)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.GetUserQueryIterator``1(Azure.Cosmos.QueryDefinition,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.GetUserQueryIterator``1(System.String,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.ReadAsync(Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.ReadStreamAsync(Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.ReadThroughputAsync(System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.ReadThroughputAsync(Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.ReplaceThroughputAsync(System.Int32,Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosDatabase.UpsertUserAsync(System.String,Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
properties:
- uid: Azure.Cosmos.CosmosDatabase.Id
  monikers:
  - azure-dotnet-preview
uid: Azure.Cosmos.CosmosDatabase
commentId: T:Azure.Cosmos.CosmosDatabase
namespace: Azure.Cosmos
name: CosmosDatabase
fullName: Azure.Cosmos.CosmosDatabase
nameWithType: Azure.Cosmos.CosmosDatabase
assembliesWithMoniker:
- value: Azure.Cosmos.dll
packagesWithMoniker:
- value: Azure.Cosmos v4.0.0-preview3
syntaxWithMoniker:
- lang: csharp
  values:
  - value: public abstract class CosmosDatabase
- lang: fsharp
  values:
  - value: type CosmosDatabase = class
- lang: vb
  values:
  - value: Public MustInherit Class CosmosDatabase
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
summary: >-
  Operations for reading or deleting an existing database.


  <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.CosmosClient"></xref> for or creating new databases, and reading/querying all databases; use `client.Databases`.
remarks: '<p>Note: all these operations make calls against a fixed budget. You should design your system such that these calls scale sub-linearly with your application. For instance, do not call `database.ReadAsync()` before every single `item.ReadAsync()` call, to ensure the database exists; do this once on application start up.</p>'
metadata:
  api_name:
  - Azure.Cosmos.CosmosDatabase
  api_location:
  - Azure.Cosmos.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Cosmos.CosmosDatabase
  - Azure::Cosmos::CosmosDatabase
  - CosmosDatabase
  helpviewer_keywords:
  - Azure.Cosmos.CosmosDatabase class [.NET]
  monikers:
  - azure-dotnet-preview
