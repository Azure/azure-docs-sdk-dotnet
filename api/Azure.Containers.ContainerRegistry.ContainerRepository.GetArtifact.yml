### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Containers.ContainerRegistry.RegistryArtifact?alt=Azure.Containers.ContainerRegistry.RegistryArtifact&text=RegistryArtifact" data-throw-if-not-resolved="True"/>
    description: A new <xref data-throw-if-not-resolved="true" uid="Azure.Containers.ContainerRegistry.RegistryArtifact"></xref> for the desired repository.
  parameters:
  - namesWithMoniker:
    - value: tagOrDigest
    description: Either a tag or a digest that uniquely identifies the artifact.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: Thrown when <code data-dev-comment-type="paramref">tagOrDigest</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: Thrown when <code data-dev-comment-type="paramref">tagOrDigest</code> is empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Containers.ContainerRegistry.ContainerRepository.GetArtifact(System.String)
  commentId: M:Azure.Containers.ContainerRegistry.ContainerRepository.GetArtifact(System.String)
  name: GetArtifact(String)
  fullName: Azure.Containers.ContainerRegistry.ContainerRepository.GetArtifact(String)
  nameWithType: ContainerRepository.GetArtifact(String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Containers.ContainerRegistry.RegistryArtifact GetArtifact (string tagOrDigest);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetArtifact : string -> Azure.Containers.ContainerRegistry.RegistryArtifact

        override this.GetArtifact : string -> Azure.Containers.ContainerRegistry.RegistryArtifact
  - lang: vb
    values:
    - value: Public Overridable Function GetArtifact (tagOrDigest As String) As RegistryArtifact
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Create a new <xref data-throw-if-not-resolved="true" uid="Azure.Containers.ContainerRegistry.RegistryArtifact"></xref> helper object for the artifact identified by <code data-dev-comment-type="paramref">tagOrDigest</code>.
  metadata: {}
uid: Azure.Containers.ContainerRegistry.ContainerRepository.GetArtifact*
commentId: Overload:Azure.Containers.ContainerRegistry.ContainerRepository.GetArtifact
namespace: Azure.Containers.ContainerRegistry
name: GetArtifact
fullName: Azure.Containers.ContainerRegistry.ContainerRepository.GetArtifact
nameWithType: ContainerRepository.GetArtifact
assembliesWithMoniker:
- value: Azure.Containers.ContainerRegistry.dll
packagesWithMoniker:
- value: Azure.Containers.ContainerRegistry v1.1.0
  monikers:
  - azure-dotnet
- value: Azure.Containers.ContainerRegistry v1.2.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Containers.ContainerRegistry.ContainerRepository.GetArtifact
  api_location:
  - Azure.Containers.ContainerRegistry.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Containers.ContainerRegistry.ContainerRepository.GetArtifact
  - Azure::Containers::ContainerRegistry::ContainerRepository::GetArtifact
  - GetArtifact
  - ContainerRepository.GetArtifact
  - ContainerRepository::GetArtifact
  helpviewer_keywords:
  - ContainerRepository.GetArtifact method [.NET]
  - GetArtifact method [.NET], class ContainerRepository
  - ContainerRepository.GetArtifact(String) method [.NET]
  - GetArtifact(String) method [.NET], class ContainerRepository
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
