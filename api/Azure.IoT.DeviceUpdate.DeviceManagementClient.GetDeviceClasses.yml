### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Pageable`1?alt=Azure.Pageable&text=Pageable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Pageable`1"></xref> from the service containing a list of <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> objects. Details of the body schema for each item in the collection are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClasses(Azure.RequestContext)
  commentId: M:Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClasses(Azure.RequestContext)
  name: GetDeviceClasses(RequestContext)
  fullName: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClasses(RequestContext)
  nameWithType: DeviceManagementClient.GetDeviceClasses(RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Pageable<BinaryData> GetDeviceClasses (Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetDeviceClasses : Azure.RequestContext -> Azure.Pageable<BinaryData>

        override this.GetDeviceClasses : Azure.RequestContext -> Azure.Pageable<BinaryData>
  - lang: vb
    values:
    - value: Public Overridable Function GetDeviceClasses (Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)
  monikers:
  - azure-dotnet-preview
  summary: Gets a list of all device classes (unique combinations of device manufacturer and model) for all devices connected to Device Update for IoT Hub.
  remarks: >-
    <p>Below is the JSON schema for one item in the pageable response.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">DeviceClassesListValue</code>: 


    ```

    {
                  deviceClassId: string, # Required. The device class identifier.
                  friendlyName: string, # Optional. The device class friendly name. This can be updated by callers after the device class has been automatically created.
                  deviceClassProperties: {
                    contractModel: {
                      id: string, # Required. The Device Update agent contract model Id of the device class. This is also used to calculate the device class Id.
                      name: string, # Required. The Device Update agent contract model name of the device class. Intended to be a more readable form of the contract model Id.
                    }, # Optional. The Device Update agent contract model.
                    compatProperties: Dictionary<string, string>, # Required. The compat properties of the device class. This object can be thought of as a set of key-value pairs where the key is the name of the compatibility property and the value is the value of the compatibility property. There will always be at least 1 compat property
                  }, # Required. The device class properties that are used to calculate the device class Id
                  bestCompatibleUpdate: {
                    updateId: {
                      provider: string, # Required. Update provider.
                      name: string, # Required. Update name.
                      version: string, # Required. Update version.
                    }, # Required. Update identifier.
                    description: string, # Optional. Update description.
                    friendlyName: string, # Optional. Friendly update name.
                  }, # Optional. Update that is best compatible with this device class.
                }
    ```

    </p>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Pageable`1?alt=Azure.Pageable&text=Pageable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Pageable`1"></xref> from the service containing a list of <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> objects. Details of the body schema for each item in the collection are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: filter
    description: Restricts the set of device classes returned. You can filter on friendly name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClasses(System.String,Azure.RequestContext)
  commentId: M:Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClasses(System.String,Azure.RequestContext)
  name: GetDeviceClasses(String, RequestContext)
  fullName: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClasses(String, RequestContext)
  nameWithType: DeviceManagementClient.GetDeviceClasses(String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Pageable<BinaryData> GetDeviceClasses (string filter = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetDeviceClasses : string * Azure.RequestContext -> Azure.Pageable<BinaryData>

        override this.GetDeviceClasses : string * Azure.RequestContext -> Azure.Pageable<BinaryData>
  - lang: vb
    values:
    - value: Public Overridable Function GetDeviceClasses (Optional filter As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)
  monikers:
  - azure-dotnet
  summary: Gets a list of all device classes (sets of devices compatible with the same updates based on the model Id and compat properties reported in the Device Update PnP interface in IoT Hub) for all devices connected to Device Update for IoT Hub.
  remarks: >-
    <p>Below is the JSON schema for one item in the pageable response.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">DeviceClassesListValue</code>: 


    ```

    {
                  deviceClassId: string, # Required. The device class identifier. This is generated from the model Id and the compat properties reported by the device update agent in the Device Update PnP interface in IoT Hub. It is a hex-encoded SHA1 hash.
                  friendlyName: string, # Optional. The device class friendly name. This can be updated by callers after the device class has been automatically created.
                  deviceClassProperties: {
                    contractModel: {
                      id: string, # Required. The Device Update agent contract model Id of the device class. This is also used to calculate the device class Id.
                      name: string, # Required. The Device Update agent contract model name of the device class. Intended to be a more readable form of the contract model Id.
                    }, # Optional. The Device Update agent contract model.
                    compatProperties: Dictionary<string, string>, # Required. The compat properties of the device class. This object can be thought of as a set of key-value pairs where the key is the name of the compatibility property and the value is the value of the compatibility property. There will always be at least 1 compat property
                  }, # Required. The device class properties that are used to calculate the device class Id
                  bestCompatibleUpdate: {
                    updateId: {
                      provider: string, # Required. Update provider.
                      name: string, # Required. Update name.
                      version: string, # Required. Update version.
                    }, # Required. Update identifier.
                    description: string, # Optional. Update description.
                    friendlyName: string, # Optional. Friendly update name.
                  }, # Optional. Update that is the highest version compatible with this device class.
                }
    ```

    </p>
  examples: >-
    This sample shows how to call GetDeviceClasses and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DeviceManagementClient(endpoint, "<instanceId>", credential);


    foreach (var data in client.GetDeviceClasses())

    {
        JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        Console.WriteLine(result.GetProperty("deviceClassId").ToString());
        Console.WriteLine(result.GetProperty("deviceClassProperties").GetProperty("compatProperties").GetProperty("<test>").ToString());
    }

    ```

    This sample shows how to call GetDeviceClasses with all parameters, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DeviceManagementClient(endpoint, "<instanceId>", credential);


    foreach (var data in client.GetDeviceClasses("<filter>"))

    {
        JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        Console.WriteLine(result.GetProperty("deviceClassId").ToString());
        Console.WriteLine(result.GetProperty("friendlyName").ToString());
        Console.WriteLine(result.GetProperty("deviceClassProperties").GetProperty("contractModel").GetProperty("id").ToString());
        Console.WriteLine(result.GetProperty("deviceClassProperties").GetProperty("contractModel").GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("deviceClassProperties").GetProperty("compatProperties").GetProperty("<test>").ToString());
        Console.WriteLine(result.GetProperty("bestCompatibleUpdate").GetProperty("updateId").GetProperty("provider").ToString());
        Console.WriteLine(result.GetProperty("bestCompatibleUpdate").GetProperty("updateId").GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("bestCompatibleUpdate").GetProperty("updateId").GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("bestCompatibleUpdate").GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("bestCompatibleUpdate").GetProperty("friendlyName").ToString());
    }

    ```
  metadata: {}
uid: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClasses*
commentId: Overload:Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClasses
namespace: Azure.IoT.DeviceUpdate
name: GetDeviceClasses
fullName: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClasses
nameWithType: DeviceManagementClient.GetDeviceClasses
assembliesWithMoniker:
- value: Azure.IoT.DeviceUpdate.dll
packagesWithMoniker:
- value: Azure.IoT.DeviceUpdate v1.0.0-beta.4
  monikers:
  - azure-dotnet-preview
- value: Azure.IoT.DeviceUpdate v1.0.0
  monikers:
  - azure-dotnet
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
- azure-dotnet
metadata:
  api_name:
  - Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClasses
  api_location:
  - Azure.IoT.DeviceUpdate.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClasses
  - Azure::IoT::DeviceUpdate::DeviceManagementClient::GetDeviceClasses
  - GetDeviceClasses
  - DeviceManagementClient.GetDeviceClasses
  - DeviceManagementClient::GetDeviceClasses
  helpviewer_keywords:
  - DeviceManagementClient.GetDeviceClasses method [.NET]
  - GetDeviceClasses method [.NET], class DeviceManagementClient
  - DeviceManagementClient.GetDeviceClasses(RequestContext) method [.NET]
  - GetDeviceClasses(RequestContext) method [.NET], class DeviceManagementClient
  - DeviceManagementClient.GetDeviceClasses(String, RequestContext) method [.NET]
  - GetDeviceClasses(String, RequestContext) method [.NET], class DeviceManagementClient
  monikers:
  - azure-dotnet-preview
  - azure-dotnet
