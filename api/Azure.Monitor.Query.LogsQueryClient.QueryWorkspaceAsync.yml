### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Monitor.Query.Models.LogsQueryResult?alt=Azure.Monitor.Query.Models.LogsQueryResult&text=LogsQueryResult" data-throw-if-not-resolved="True"/>&gt;&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Monitor.Query.Models.LogsQueryResult"></xref> with the query results.
  parameters:
  - namesWithMoniker:
    - value: workspaceId
    description: The workspace id to include in the query (<code data-dev-comment-type="c">xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>).
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: query
    description: The Kusto query to execute.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: timeRange
    description: The timespan over which to query data. Logs will be filtered to include entries produced starting at <code data-dev-comment-type="c">Now - timeSpan</code>.
    type: <xref href="Azure.Monitor.Query.QueryTimeRange?alt=Azure.Monitor.Query.QueryTimeRange&text=QueryTimeRange" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Monitor.Query.LogsQueryOptions"></xref> to configure the query.
    type: <xref href="Azure.Monitor.Query.LogsQueryOptions?alt=Azure.Monitor.Query.LogsQueryOptions&text=LogsQueryOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync(System.String,System.String,Azure.Monitor.Query.QueryTimeRange,Azure.Monitor.Query.LogsQueryOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync(System.String,System.String,Azure.Monitor.Query.QueryTimeRange,Azure.Monitor.Query.LogsQueryOptions,System.Threading.CancellationToken)
  name: QueryWorkspaceAsync(String, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  fullName: Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync(String, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  nameWithType: LogsQueryClient.QueryWorkspaceAsync(String, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.Monitor.Query.Models.LogsQueryResult>> QueryWorkspaceAsync (string workspaceId, string query, Azure.Monitor.Query.QueryTimeRange timeRange, Azure.Monitor.Query.LogsQueryOptions options = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member QueryWorkspaceAsync : string * string * Azure.Monitor.Query.QueryTimeRange * Azure.Monitor.Query.LogsQueryOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Monitor.Query.Models.LogsQueryResult>>

        override this.QueryWorkspaceAsync : string * string * Azure.Monitor.Query.QueryTimeRange * Azure.Monitor.Query.LogsQueryOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Monitor.Query.Models.LogsQueryResult>>
  - lang: vb
    values:
    - value: Public Overridable Function QueryWorkspaceAsync (workspaceId As String, query As String, timeRange As QueryTimeRange, Optional options As LogsQueryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LogsQueryResult))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Executes the logs query.
  metadata: {}
- typeParameters:
  - name: T
  returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Collections.Generic.IReadOnlyList`1?alt=System.Collections.Generic.IReadOnlyList&text=IReadOnlyList" data-throw-if-not-resolved="True"/>&lt;T&gt;&gt;&gt;
    description: Query results mapped to a type <code data-dev-comment-type="typeparamref">T</code>.
  parameters:
  - namesWithMoniker:
    - value: workspaceId
    description: The workspace id to include in the query (<code data-dev-comment-type="c">xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>).
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: query
    description: The Kusto query to execute.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: timeRange
    description: The timespan over which to query data. Logs will be filtered to include entries produced starting at <code data-dev-comment-type="c">Now - timeSpan</code>.
    type: <xref href="Azure.Monitor.Query.QueryTimeRange?alt=Azure.Monitor.Query.QueryTimeRange&text=QueryTimeRange" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Monitor.Query.LogsQueryOptions"></xref> to configure the query.
    type: <xref href="Azure.Monitor.Query.LogsQueryOptions?alt=Azure.Monitor.Query.LogsQueryOptions&text=LogsQueryOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync``1(System.String,System.String,Azure.Monitor.Query.QueryTimeRange,Azure.Monitor.Query.LogsQueryOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync``1(System.String,System.String,Azure.Monitor.Query.QueryTimeRange,Azure.Monitor.Query.LogsQueryOptions,System.Threading.CancellationToken)
  name: QueryWorkspaceAsync<T>(String, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  fullName: Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync<T>(String, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  nameWithType: LogsQueryClient.QueryWorkspaceAsync<T>(String, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<System.Collections.Generic.IReadOnlyList<T>>> QueryWorkspaceAsync<T> (string workspaceId, string query, Azure.Monitor.Query.QueryTimeRange timeRange, Azure.Monitor.Query.LogsQueryOptions options = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member QueryWorkspaceAsync : string * string * Azure.Monitor.Query.QueryTimeRange * Azure.Monitor.Query.LogsQueryOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<System.Collections.Generic.IReadOnlyList<'T>>>

        override this.QueryWorkspaceAsync : string * string * Azure.Monitor.Query.QueryTimeRange * Azure.Monitor.Query.LogsQueryOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<System.Collections.Generic.IReadOnlyList<'T>>>
  - lang: vb
    values:
    - value: Public Overridable Function QueryWorkspaceAsync(Of T) (workspaceId As String, query As String, timeRange As QueryTimeRange, Optional options As LogsQueryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IReadOnlyList(Of T)))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Executes the logs query. Deserializes the result into a strongly typed model class or a primitive type if the query returns a single column.


    Example of querying a model:

    <example snippet="Snippet:QueryLogsAsModelCall">


    ```csharp

    Response<IReadOnlyList<MyLogEntryModel>> response = await client.QueryWorkspaceAsync<MyLogEntryModel>(
        workspaceId,
        "AzureActivity | summarize Count = count() by ResourceGroup | top 10 by Count",
        new QueryTimeRange(TimeSpan.FromDays(1)));
    ```

    </example>


    Example of querying a primitive:

    <example snippet="Snippet:QueryLogsAsPrimitiveCall">


    ```csharp

    Response<IReadOnlyList<string>> response = await client.QueryWorkspaceAsync<string>(
        workspaceId,
        "AzureActivity | summarize Count = count() by ResourceGroup | top 10 by Count | project ResourceGroup",
        new QueryTimeRange(TimeSpan.FromDays(1)));
    ```

    </example>
  metadata: {}
uid: Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync*
commentId: Overload:Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync
namespace: Azure.Monitor.Query
name: QueryWorkspaceAsync
fullName: Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync
nameWithType: LogsQueryClient.QueryWorkspaceAsync
assembliesWithMoniker:
- value: Azure.Monitor.Query.dll
packagesWithMoniker:
- value: Azure.Monitor.Query v1.2.0
  monikers:
  - azure-dotnet
- value: Azure.Monitor.Query v1.2.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync
  api_location:
  - Azure.Monitor.Query.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync
  - Azure::Monitor::Query::LogsQueryClient::QueryWorkspaceAsync
  - QueryWorkspaceAsync
  - LogsQueryClient.QueryWorkspaceAsync
  - LogsQueryClient::QueryWorkspaceAsync
  - Azure.Monitor.Query.LogsQueryClient.QueryWorkspaceAsync``1
  - Azure::Monitor::Query::LogsQueryClient::QueryWorkspaceAsync``1
  - QueryWorkspaceAsync``1
  - LogsQueryClient.QueryWorkspaceAsync``1
  - LogsQueryClient::QueryWorkspaceAsync``1
  helpviewer_keywords:
  - LogsQueryClient.QueryWorkspaceAsync method [.NET]
  - QueryWorkspaceAsync method [.NET], class LogsQueryClient
  - LogsQueryClient.QueryWorkspaceAsync(String, String, QueryTimeRange, LogsQueryOptions, CancellationToken) method [.NET]
  - QueryWorkspaceAsync(String, String, QueryTimeRange, LogsQueryOptions, CancellationToken) method [.NET], class LogsQueryClient
  - LogsQueryClient.QueryWorkspaceAsync<T>(String, String, QueryTimeRange, LogsQueryOptions, CancellationToken) method [.NET]
  - QueryWorkspaceAsync<T>(String, String, QueryTimeRange, LogsQueryOptions, CancellationToken) method [.NET], class LogsQueryClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
