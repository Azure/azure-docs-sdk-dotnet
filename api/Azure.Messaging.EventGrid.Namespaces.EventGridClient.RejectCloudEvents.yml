### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>
    description: The response returned from the service.
  parameters:
  - namesWithMoniker:
    - value: topicName
    description: Topic Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventSubscriptionName
    description: Event Subscription Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">topicName</code>, <code data-dev-comment-type="paramref">eventSubscriptionName</code> or <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">topicName</code> or <code data-dev-comment-type="paramref">eventSubscriptionName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.Namespaces.EventGridClient.RejectCloudEvents(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)
  commentId: M:Azure.Messaging.EventGrid.Namespaces.EventGridClient.RejectCloudEvents(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)
  name: RejectCloudEvents(String, String, RequestContent, RequestContext)
  fullName: Azure.Messaging.EventGrid.Namespaces.EventGridClient.RejectCloudEvents(String, String, RequestContent, RequestContext)
  nameWithType: EventGridClient.RejectCloudEvents(String, String, RequestContent, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response RejectCloudEvents (string topicName, string eventSubscriptionName, Azure.Core.RequestContent content, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member RejectCloudEvents : string * string * Azure.Core.RequestContent * Azure.RequestContext -> Azure.Response

        override this.RejectCloudEvents : string * string * Azure.Core.RequestContent * Azure.RequestContext -> Azure.Response
  - lang: vb
    values:
    - value: Public Overridable Function RejectCloudEvents (topicName As String, eventSubscriptionName As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response
  monikers:
  - azure-dotnet-preview
  summary: >-
    [Protocol Method] Reject batch of Cloud Events.

    <ul><li>

    This <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</a> allows explicit creation of the request and processing of the response for advanced scenarios.

    </li></ul>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.EventGrid.Namespaces.RejectResult?alt=Azure.Messaging.EventGrid.Namespaces.RejectResult&text=RejectResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: topicName
    description: Topic Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventSubscriptionName
    description: Event Subscription Name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: lockTokens
    description: RejectOptions.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">topicName</code>, <code data-dev-comment-type="paramref">eventSubscriptionName</code> or <code data-dev-comment-type="paramref">lockTokens</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">topicName</code> or <code data-dev-comment-type="paramref">eventSubscriptionName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventGrid.Namespaces.EventGridClient.RejectCloudEvents(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventGrid.Namespaces.EventGridClient.RejectCloudEvents(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name: RejectCloudEvents(String, String, IEnumerable<String>, CancellationToken)
  fullName: Azure.Messaging.EventGrid.Namespaces.EventGridClient.RejectCloudEvents(String, String, IEnumerable<String>, CancellationToken)
  nameWithType: EventGridClient.RejectCloudEvents(String, String, IEnumerable<String>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response<Azure.Messaging.EventGrid.Namespaces.RejectResult> RejectCloudEvents (string topicName, string eventSubscriptionName, System.Collections.Generic.IEnumerable<string> lockTokens, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member RejectCloudEvents : string * string * seq<string> * System.Threading.CancellationToken -> Azure.Response<Azure.Messaging.EventGrid.Namespaces.RejectResult>

        override this.RejectCloudEvents : string * string * seq<string> * System.Threading.CancellationToken -> Azure.Response<Azure.Messaging.EventGrid.Namespaces.RejectResult>
  - lang: vb
    values:
    - value: Public Overridable Function RejectCloudEvents (topicName As String, eventSubscriptionName As String, lockTokens As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of RejectResult)
  monikers:
  - azure-dotnet-preview
  summary: Reject batch of Cloud Events.
  metadata: {}
uid: Azure.Messaging.EventGrid.Namespaces.EventGridClient.RejectCloudEvents*
commentId: Overload:Azure.Messaging.EventGrid.Namespaces.EventGridClient.RejectCloudEvents
namespace: Azure.Messaging.EventGrid.Namespaces
name: RejectCloudEvents
fullName: Azure.Messaging.EventGrid.Namespaces.EventGridClient.RejectCloudEvents
nameWithType: EventGridClient.RejectCloudEvents
assembliesWithMoniker:
- value: Azure.Messaging.EventGrid.dll
packagesWithMoniker:
- value: Azure.Messaging.EventGrid v4.18.0-beta.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventGrid.Namespaces.EventGridClient.RejectCloudEvents
  api_location:
  - Azure.Messaging.EventGrid.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventGrid.Namespaces.EventGridClient.RejectCloudEvents
  - Azure::Messaging::EventGrid::Namespaces::EventGridClient::RejectCloudEvents
  - RejectCloudEvents
  - EventGridClient.RejectCloudEvents
  - EventGridClient::RejectCloudEvents
  helpviewer_keywords:
  - EventGridClient.RejectCloudEvents method [.NET]
  - RejectCloudEvents method [.NET], class EventGridClient
  - EventGridClient.RejectCloudEvents(String, String, RequestContent, RequestContext) method [.NET]
  - RejectCloudEvents(String, String, RequestContent, RequestContext) method [.NET], class EventGridClient
  - EventGridClient.RejectCloudEvents(String, String, IEnumerable<String>, CancellationToken) method [.NET]
  - RejectCloudEvents(String, String, IEnumerable<String>, CancellationToken) method [.NET], class EventGridClient
  monikers:
  - azure-dotnet-preview
