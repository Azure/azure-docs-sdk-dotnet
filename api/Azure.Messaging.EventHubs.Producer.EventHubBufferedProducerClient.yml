### YamlMime:NetType
type: class
implementsWithMoniker:
- value: <xref href="System.IAsyncDisposable?alt=System.IAsyncDisposable&text=IAsyncDisposable" data-throw-if-not-resolved="True"/>
inheritancesWithMoniker:
- values:
  - <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
constructors:
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(Azure.Messaging.EventHubs.EventHubConnection,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,System.String,Azure.AzureNamedKeyCredential,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,System.String,Azure.AzureSasCredential,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,System.String,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,System.String)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
methods:
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.CloseAsync(System.Boolean,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.FlushAsync(System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.GetBufferedEventCount(System.String)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.GetEventHubPropertiesAsync(System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.GetPartitionIdsAsync(System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.GetPartitionPropertiesAsync(System.String,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.ListPartitionIdsAsync(Azure.Messaging.EventHubs.Producer.EventHubProducerClient,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.OnSendFailedAsync(System.Collections.Generic.IReadOnlyList{Azure.Messaging.EventHubs.EventData},System.Exception,System.String,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.OnSendSucceededAsync(System.Collections.Generic.IReadOnlyList{Azure.Messaging.EventHubs.EventData},System.String,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
properties:
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EventHubName
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.FullyQualifiedNamespace
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.Identifier
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.IsClosed
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.IsPublishing
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.TotalBufferedEventCount
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
events:
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient
commentId: T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient
namespace: Azure.Messaging.EventHubs.Producer
name: EventHubBufferedProducerClient
fullName: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient
nameWithType: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient
assembliesWithMoniker:
- value: Azure.Messaging.EventHubs.dll
packagesWithMoniker:
- value: Azure.Messaging.EventHubs v5.9.2
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventHubs v5.7.0-beta.5
  monikers:
  - azure-dotnet-preview
syntaxWithMoniker:
- lang: csharp
  values:
  - value: 'public class EventHubBufferedProducerClient : IAsyncDisposable'
- lang: fsharp
  values:
  - value: >-
      type EventHubBufferedProducerClient = class
          interface IAsyncDisposable
- lang: vb
  values:
  - value: >-
      Public Class EventHubBufferedProducerClient

      Implements IAsyncDisposable
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
seeAlso: >+
  - <xref:Azure.Messaging.EventHubs.Producer.EventHubProducerClient>

summary: >-
  A client responsible for publishing instances of <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventData"></xref> to a specific

  Event Hub.  Depending on the options specified when events are enqueued, they may be

  automatically assigned to a partition, grouped according to the specified partition

  key, or assigned a specifically requested partition.


  The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient"></xref> does not publish immediately, instead using

  a deferred model where events are collected into a buffer so that they may be efficiently batched

  and published when the batch is full or the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions.MaximumWaitTime"></xref>

  has elapsed with no new events enqueued.


  This model is intended to shift the burden of batch management from callers, at the cost of non-deterministic

  timing, for when events will be published. There are additional trade-offs to consider, as well:

  <ul><li>If the application crashes, events in the buffer will not have been published.  To prevent data loss, callers are encouraged to track publishing progress using the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync"></xref> handlers.</li><li>Events specifying a partition key may be assigned a different partition than those using the same key with other producers.</li><li>In the unlikely event that a partition becomes temporarily unavailable, the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient"></xref> may take longer to recover than other producers.</li></ul>


  In scenarios where it is important to have events published immediately with a deterministic outcome, ensure

  that partition keys are assigned to a partition consistent with other publishers, or where maximizing availability

  is a requirement, using the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> is recommended.
remarks: <p>The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient"></xref> is safe to cache and use as a singleton for the lifetime of an application, which is the recommended approach.  The producer is responsible for ensuring efficient network, CPU, and memory use. Calling either <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.CloseAsync(System.Boolean,System.Threading.CancellationToken)"></xref> or <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync"></xref> when no more events will be enqueued or as the application is shutting down is required so that the buffer can be flushed and resources cleaned up properly.</p>
metadata:
  api_name:
  - Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient
  api_location:
  - Azure.Messaging.EventHubs.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient
  - Azure::Messaging::EventHubs::Producer::EventHubBufferedProducerClient
  - EventHubBufferedProducerClient
  helpviewer_keywords:
  - Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient class [.NET]
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
