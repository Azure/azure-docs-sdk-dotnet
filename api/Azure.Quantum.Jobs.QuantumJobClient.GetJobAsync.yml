### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Quantum.Jobs.Models.JobDetails?alt=Azure.Quantum.Jobs.Models.JobDetails&text=JobDetails" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: jobId
    description: Id of the job.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">jobId</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Quantum.Jobs.QuantumJobClient.GetJobAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Azure.Quantum.Jobs.QuantumJobClient.GetJobAsync(System.String,System.Threading.CancellationToken)
  name: GetJobAsync(String, CancellationToken)
  fullName: Azure.Quantum.Jobs.QuantumJobClient.GetJobAsync(String, CancellationToken)
  nameWithType: QuantumJobClient.GetJobAsync(String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.Quantum.Jobs.Models.JobDetails>> GetJobAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetJobAsync : string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Quantum.Jobs.Models.JobDetails>>

        override this.GetJobAsync : string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Quantum.Jobs.Models.JobDetails>>
  - lang: vb
    values:
    - value: Public Overridable Function GetJobAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobDetails))
  monikers:
  - azure-dotnet-preview
  summary: Get job by id.
  metadata: {}
uid: Azure.Quantum.Jobs.QuantumJobClient.GetJobAsync*
commentId: Overload:Azure.Quantum.Jobs.QuantumJobClient.GetJobAsync
namespace: Azure.Quantum.Jobs
name: GetJobAsync
fullName: Azure.Quantum.Jobs.QuantumJobClient.GetJobAsync
nameWithType: QuantumJobClient.GetJobAsync
assembliesWithMoniker:
- value: Azure.Quantum.Jobs.dll
packagesWithMoniker:
- value: Azure.Quantum.Jobs v1.0.0-beta.3
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Quantum.Jobs.QuantumJobClient.GetJobAsync
  api_location:
  - Azure.Quantum.Jobs.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Quantum.Jobs.QuantumJobClient.GetJobAsync
  - Azure::Quantum::Jobs::QuantumJobClient::GetJobAsync
  - GetJobAsync
  - QuantumJobClient.GetJobAsync
  - QuantumJobClient::GetJobAsync
  helpviewer_keywords:
  - QuantumJobClient.GetJobAsync method [.NET]
  - GetJobAsync method [.NET], class QuantumJobClient
  - QuantumJobClient.GetJobAsync(String, CancellationToken) method [.NET]
  - GetJobAsync(String, CancellationToken) method [.NET], class QuantumJobClient
  monikers:
  - azure-dotnet-preview
