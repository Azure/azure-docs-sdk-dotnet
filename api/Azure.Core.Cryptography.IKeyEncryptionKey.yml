### YamlMime:NetType
type: interface
derivedClassesWithMoniker:
- value: Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient
methods:
- uid: Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
- uid: Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
- uid: Azure.Core.Cryptography.IKeyEncryptionKey.WrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
- uid: Azure.Core.Cryptography.IKeyEncryptionKey.WrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
properties:
- uid: Azure.Core.Cryptography.IKeyEncryptionKey.KeyId
  monikers:
  - azure-dotnet
uid: Azure.Core.Cryptography.IKeyEncryptionKey
commentId: T:Azure.Core.Cryptography.IKeyEncryptionKey
namespace: Azure.Core.Cryptography
name: IKeyEncryptionKey
fullName: Azure.Core.Cryptography.IKeyEncryptionKey
nameWithType: Azure.Core.Cryptography.IKeyEncryptionKey
assembliesWithMoniker:
- value: Azure.Core.dll
packagesWithMoniker:
- value: Azure.Core v1.34.0
syntaxWithMoniker:
- lang: csharp
  values:
  - value: public interface IKeyEncryptionKey
- lang: fsharp
  values:
  - value: type IKeyEncryptionKey = interface
- lang: vb
  values:
  - value: Public Interface IKeyEncryptionKey
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
summary: A key which is used to encrypt, or wrap, another key.
metadata:
  api_name:
  - Azure.Core.Cryptography.IKeyEncryptionKey
  api_location:
  - Azure.Core.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Core.Cryptography.IKeyEncryptionKey
  - Azure::Core::Cryptography::IKeyEncryptionKey
  - IKeyEncryptionKey
  helpviewer_keywords:
  - Azure.Core.Cryptography.IKeyEncryptionKey interface [.NET]
  monikers:
  - azure-dotnet
