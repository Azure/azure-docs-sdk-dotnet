### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: typeName
    description: The name of the type.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: minExtInfo
    description: Whether to return minimal information for referred entities.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: ignoreRelationships
    description: Whether to ignore relationship attributes.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: attrNQualifiedName
    description: Qualified name of an entity. E.g. to find 2 entities you can set attrs_0:qualifiedName=db1@cl1&amp;attrs_2:qualifiedName=db2@cl1.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors on the request on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">typeName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">typeName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Analytics.Purview.Catalog.PurviewEntities.GetEntitiesByUniqueAttributesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetEntitiesByUniqueAttributesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Azure.RequestContext)
  name: GetEntitiesByUniqueAttributesAsync(String, Nullable<Boolean>, Nullable<Boolean>, String, RequestContext)
  fullName: Azure.Analytics.Purview.Catalog.PurviewEntities.GetEntitiesByUniqueAttributesAsync(String, Nullable<Boolean>, Nullable<Boolean>, String, RequestContext)
  nameWithType: PurviewEntities.GetEntitiesByUniqueAttributesAsync(String, Nullable<Boolean>, Nullable<Boolean>, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> GetEntitiesByUniqueAttributesAsync (string typeName, bool? minExtInfo = default, bool? ignoreRelationships = default, string attrNQualifiedName = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetEntitiesByUniqueAttributesAsync : string * Nullable<bool> * Nullable<bool> * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.GetEntitiesByUniqueAttributesAsync : string * Nullable<bool> * Nullable<bool> * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function GetEntitiesByUniqueAttributesAsync (typeName As String, Optional minExtInfo As Nullable(Of Boolean) = Nothing, Optional ignoreRelationships As Nullable(Of Boolean) = Nothing, Optional attrNQualifiedName As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet-preview
  summary: >-
    Bulk API to retrieve list of entities identified by its unique attributes.


    In addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format


    typeName=\&lt;typeName&gt;&amp;attr_1:\&lt;attrName&gt;=\&lt;attrValue&gt;&amp;attr_2:\&lt;attrName&gt;=\&lt;attrValue&gt;&amp;attr_3:\&lt;attrName&gt;=\&lt;attrValue&gt;


    NOTE: The attrName should be an unique attribute for the given entity-type


    The REST request would look something like this


    GET /v2/entity/bulk/uniqueAttribute/type/hive_db?attr_0:qualifiedName=db1@cl1&amp;attr_2:qualifiedName=db2@cl1
  remarks: >-
    <p>Schema for <code data-dev-comment-type="c">Response Body</code>: 


    ```

    {
                  referredEntities: Dictionary<string, AtlasEntity>,
                  entities: [
                    {
                      attributes: Dictionary<string, AnyObject>,
                      typeName: string,
                      lastModifiedTS: string,
                      businessAttributes: Dictionary<string, AnyObject>,
                      classifications: [
                        {
                          attributes: Dictionary<string, AnyObject>,
                          typeName: string,
                          lastModifiedTS: string,
                          entityGuid: string,
                          entityStatus: "ACTIVE" | "DELETED",
                          removePropagationsOnEntityDelete: boolean,
                          validityPeriods: [
                            {
                              endTime: string,
                              startTime: string,
                              timeZone: string
                            }
                          ],
                          source: string,
                          sourceDetails: Dictionary<string, AnyObject>
                        }
                      ],
                      createTime: number,
                      createdBy: string,
                      customAttributes: Dictionary<string, string>,
                      guid: string,
                      homeId: string,
                      isIncomplete: boolean,
                      labels: [string],
                      meanings: [
                        {
                          confidence: number,
                          createdBy: string,
                          description: string,
                          displayText: string,
                          expression: string,
                          relationGuid: string,
                          source: string,
                          status: "DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER",
                          steward: string,
                          termGuid: string
                        }
                      ],
                      provenanceType: number,
                      proxy: boolean,
                      relationshipAttributes: Dictionary<string, AnyObject>,
                      status: "ACTIVE" | "DELETED",
                      updateTime: number,
                      updatedBy: string,
                      version: number,
                      source: string,
                      sourceDetails: Dictionary<string, AnyObject>,
                      contacts: Dictionary<string, ContactBasic[]>
                    }
                  ]
                }
    ```

     Schema for <code data-dev-comment-type="c">Response Error</code>: 


    ```

    {
                  requestId: string,
                  errorCode: string,
                  errorMessage: string
                }
    ```

    </p>
  metadata: {}
uid: Azure.Analytics.Purview.Catalog.PurviewEntities.GetEntitiesByUniqueAttributesAsync*
commentId: Overload:Azure.Analytics.Purview.Catalog.PurviewEntities.GetEntitiesByUniqueAttributesAsync
namespace: Azure.Analytics.Purview.Catalog
name: GetEntitiesByUniqueAttributesAsync
fullName: Azure.Analytics.Purview.Catalog.PurviewEntities.GetEntitiesByUniqueAttributesAsync
nameWithType: PurviewEntities.GetEntitiesByUniqueAttributesAsync
assembliesWithMoniker:
- value: Azure.Analytics.Purview.Catalog.dll
packagesWithMoniker:
- value: Azure.Analytics.Purview.Catalog v1.0.0-beta.4
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Analytics.Purview.Catalog.PurviewEntities.GetEntitiesByUniqueAttributesAsync
  api_location:
  - Azure.Analytics.Purview.Catalog.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Analytics.Purview.Catalog.PurviewEntities.GetEntitiesByUniqueAttributesAsync
  - Azure::Analytics::Purview::Catalog::PurviewEntities::GetEntitiesByUniqueAttributesAsync
  - GetEntitiesByUniqueAttributesAsync
  - PurviewEntities.GetEntitiesByUniqueAttributesAsync
  - PurviewEntities::GetEntitiesByUniqueAttributesAsync
  helpviewer_keywords:
  - PurviewEntities.GetEntitiesByUniqueAttributesAsync method [.NET]
  - GetEntitiesByUniqueAttributesAsync method [.NET], class PurviewEntities
  - PurviewEntities.GetEntitiesByUniqueAttributesAsync(String, Nullable<Boolean>, Nullable<Boolean>, String, RequestContext) method [.NET]
  - GetEntitiesByUniqueAttributesAsync(String, Nullable<Boolean>, Nullable<Boolean>, String, RequestContext) method [.NET], class PurviewEntities
  monikers:
  - azure-dotnet-preview
