### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: provider
    description: Update provider.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: name
    description: Update name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: version
    description: Update version.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fileId
    description: File identifier.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: ifNoneMatch
    description: Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ETag?alt=Azure.ETag&text=ETag" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">provider</code>, <code data-dev-comment-type="paramref">name</code>, <code data-dev-comment-type="paramref">version</code> or <code data-dev-comment-type="paramref">fileId</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">provider</code>, <code data-dev-comment-type="paramref">name</code>, <code data-dev-comment-type="paramref">version</code> or <code data-dev-comment-type="paramref">fileId</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetFileAsync(System.String,System.String,System.String,System.String,System.Nullable{Azure.ETag},Azure.RequestContext)
  commentId: M:Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetFileAsync(System.String,System.String,System.String,System.String,System.Nullable{Azure.ETag},Azure.RequestContext)
  name: GetFileAsync(String, String, String, String, Nullable<ETag>, RequestContext)
  fullName: Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetFileAsync(String, String, String, String, Nullable<ETag>, RequestContext)
  nameWithType: DeviceUpdateClient.GetFileAsync(String, String, String, String, Nullable<ETag>, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> GetFileAsync (string provider, string name, string version, string fileId, Azure.ETag? ifNoneMatch = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetFileAsync : string * string * string * string * Nullable<Azure.ETag> * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.GetFileAsync : string * string * string * string * Nullable<Azure.ETag> * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function GetFileAsync (provider As String, name As String, version As String, fileId As String, Optional ifNoneMatch As Nullable(Of ETag) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Get a specific update file from the version.
  remarks: >-
    <p>Below is the JSON schema for the response payload.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">UpdateFile</code>: 


    ```

    {
                  fileId: string, # Required. File identity, generated by server at import time.
                  relatedFiles: [
                    {
                      fileName: string, # Required. File name.
                      sizeInBytes: number, # Required. File size in number of bytes.
                      hashes: Dictionary<string, string>, # Required. Mapping of hashing algorithm to base64 encoded hash values.
                      mimeType: string, # Optional. File MIME type.
                      scanResult: string, # Optional. Anti-malware scan result.
                      scanDetails: string, # Optional. Anti-malware scan details.
                      properties: Dictionary<string, string>, # Optional. Optional file properties (not consumed by service but pass-through to device).
                    }
                  ], # Optional. Optional related files metadata used together DownloadHandler metadata to download payload file.
                  downloadHandler: {
                    id: string, # Required. Download handler identifier.
                  }, # Optional. Optional download handler for utilizing related files to download payload file.
                  etag: string, # Optional. File ETag.
                  fileName: string, # Required. File name.
                  sizeInBytes: number, # Required. File size in number of bytes.
                  hashes: Dictionary<string, string>, # Required. Mapping of hashing algorithm to base64 encoded hash values.
                  mimeType: string, # Optional. File MIME type.
                  scanResult: string, # Optional. Anti-malware scan result.
                  scanDetails: string, # Optional. Anti-malware scan details.
                  properties: Dictionary<string, string>, # Optional. Optional file properties (not consumed by service but pass-through to device).
                }
    ```

    </p>
  examples: >-
    This sample shows how to call GetFileAsync with required parameters and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DeviceUpdateClient(endpoint, "<instanceId>", credential);


    Response response = await client.GetFileAsync("<provider>", "<name>", "<version>", "<fileId>");


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("fileId").ToString());

    Console.WriteLine(result.GetProperty("fileName").ToString());

    Console.WriteLine(result.GetProperty("sizeInBytes").ToString());

    Console.WriteLine(result.GetProperty("hashes").GetProperty("<test>").ToString());

    ```

    This sample shows how to call GetFileAsync with all parameters, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DeviceUpdateClient(endpoint, "<instanceId>", credential);


    Response response = await client.GetFileAsync("<provider>", "<name>", "<version>", "<fileId>", null);


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("fileId").ToString());

    Console.WriteLine(result.GetProperty("relatedFiles")[0].GetProperty("fileName").ToString());

    Console.WriteLine(result.GetProperty("relatedFiles")[0].GetProperty("sizeInBytes").ToString());

    Console.WriteLine(result.GetProperty("relatedFiles")[0].GetProperty("hashes").GetProperty("<test>").ToString());

    Console.WriteLine(result.GetProperty("relatedFiles")[0].GetProperty("mimeType").ToString());

    Console.WriteLine(result.GetProperty("relatedFiles")[0].GetProperty("scanResult").ToString());

    Console.WriteLine(result.GetProperty("relatedFiles")[0].GetProperty("scanDetails").ToString());

    Console.WriteLine(result.GetProperty("relatedFiles")[0].GetProperty("properties").GetProperty("<test>").ToString());

    Console.WriteLine(result.GetProperty("downloadHandler").GetProperty("id").ToString());

    Console.WriteLine(result.GetProperty("etag").ToString());

    Console.WriteLine(result.GetProperty("fileName").ToString());

    Console.WriteLine(result.GetProperty("sizeInBytes").ToString());

    Console.WriteLine(result.GetProperty("hashes").GetProperty("<test>").ToString());

    Console.WriteLine(result.GetProperty("mimeType").ToString());

    Console.WriteLine(result.GetProperty("scanResult").ToString());

    Console.WriteLine(result.GetProperty("scanDetails").ToString());

    Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());

    ```
  metadata: {}
uid: Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetFileAsync*
commentId: Overload:Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetFileAsync
namespace: Azure.IoT.DeviceUpdate
name: GetFileAsync
fullName: Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetFileAsync
nameWithType: DeviceUpdateClient.GetFileAsync
assembliesWithMoniker:
- value: Azure.IoT.DeviceUpdate.dll
packagesWithMoniker:
- value: Azure.IoT.DeviceUpdate v1.0.0
  monikers:
  - azure-dotnet
- value: Azure.IoT.DeviceUpdate v1.0.0-beta.4
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetFileAsync
  api_location:
  - Azure.IoT.DeviceUpdate.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.IoT.DeviceUpdate.DeviceUpdateClient.GetFileAsync
  - Azure::IoT::DeviceUpdate::DeviceUpdateClient::GetFileAsync
  - GetFileAsync
  - DeviceUpdateClient.GetFileAsync
  - DeviceUpdateClient::GetFileAsync
  helpviewer_keywords:
  - DeviceUpdateClient.GetFileAsync method [.NET]
  - GetFileAsync method [.NET], class DeviceUpdateClient
  - DeviceUpdateClient.GetFileAsync(String, String, String, String, Nullable<ETag>, RequestContext) method [.NET]
  - GetFileAsync(String, String, String, String, Nullable<ETag>, RequestContext) method [.NET], class DeviceUpdateClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
