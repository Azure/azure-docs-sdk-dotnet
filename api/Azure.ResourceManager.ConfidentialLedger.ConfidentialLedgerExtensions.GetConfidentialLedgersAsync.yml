### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.AsyncPageable`1?alt=Azure.AsyncPageable&text=AsyncPageable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerResource?alt=Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerResource&text=ConfidentialLedgerResource" data-throw-if-not-resolved="True"/>&gt;
    description: An async collection of <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerResource"></xref> that may take multiple service requests to iterate over.
  parameters:
  - namesWithMoniker:
    - value: subscriptionResource
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Resources.SubscriptionResource"></xref> instance the method will execute against.
    type: <xref href="Azure.ResourceManager.Resources.SubscriptionResource?alt=Azure.ResourceManager.Resources.SubscriptionResource&text=SubscriptionResource" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: filter
    description: The filter to apply on the list operation. eg. $filter=ledgerType eq 'Public'.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)
  name: GetConfidentialLedgersAsync(SubscriptionResource, String, CancellationToken)
  fullName: Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgersAsync(SubscriptionResource, String, CancellationToken)
  nameWithType: ConfidentialLedgerExtensions.GetConfidentialLedgersAsync(SubscriptionResource, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Azure.AsyncPageable<Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerResource> GetConfidentialLedgersAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetConfidentialLedgersAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -> Azure.AsyncPageable<Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerResource>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetConfidentialLedgersAsync (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ConfidentialLedgerResource)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Retrieves the properties of all Confidential Ledgers.

    <ul><li>Request Path/subscriptions/{subscriptionId}/providers/Microsoft.ConfidentialLedger/ledgers</li><li>Operation IdLedger_ListBySubscription</li></ul>
  metadata: {}
uid: Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgersAsync*
commentId: Overload:Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgersAsync
namespace: Azure.ResourceManager.ConfidentialLedger
name: GetConfidentialLedgersAsync
fullName: Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgersAsync
nameWithType: ConfidentialLedgerExtensions.GetConfidentialLedgersAsync
assembliesWithMoniker:
- value: Azure.ResourceManager.ConfidentialLedger.dll
packagesWithMoniker:
- value: Azure.ResourceManager.ConfidentialLedger v1.0.1
  monikers:
  - azure-dotnet
- value: Azure.ResourceManager.ConfidentialLedger v1.1.0-beta.2
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgersAsync
  api_location:
  - Azure.ResourceManager.ConfidentialLedger.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgersAsync
  - Azure::ResourceManager::ConfidentialLedger::ConfidentialLedgerExtensions::GetConfidentialLedgersAsync
  - GetConfidentialLedgersAsync
  - ConfidentialLedgerExtensions.GetConfidentialLedgersAsync
  - ConfidentialLedgerExtensions::GetConfidentialLedgersAsync
  helpviewer_keywords:
  - ConfidentialLedgerExtensions.GetConfidentialLedgersAsync method [.NET]
  - GetConfidentialLedgersAsync method [.NET], class ConfidentialLedgerExtensions
  - ConfidentialLedgerExtensions.GetConfidentialLedgersAsync(SubscriptionResource, String, CancellationToken) extension method [.NET]
  - GetConfidentialLedgersAsync(SubscriptionResource, String, CancellationToken) extension method [.NET], class ConfidentialLedgerExtensions
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
