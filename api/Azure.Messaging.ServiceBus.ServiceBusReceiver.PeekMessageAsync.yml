### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage?alt=Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage"></xref> that represents the next message to be read. Returns null when nothing to peek.
  parameters:
  - namesWithMoniker:
    - value: fromSequenceNumber
    description: >-
      An optional sequence number from where to peek the
                   message. This corresponds to the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.SequenceNumber"></xref>.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int64?alt=System.Int64&text=Int64" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: >-
      An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the
                   operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessageAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessageAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)
  name: PeekMessageAsync(Nullable<Int64>, CancellationToken)
  fullName: Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessageAsync(Nullable<Int64>, CancellationToken)
  nameWithType: ServiceBusReceiver.PeekMessageAsync(Nullable<Int64>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Messaging.ServiceBus.ServiceBusReceivedMessage> PeekMessageAsync (long? fromSequenceNumber = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member PeekMessageAsync : Nullable<int64> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Messaging.ServiceBus.ServiceBusReceivedMessage>

        override this.PeekMessageAsync : Nullable<int64> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Messaging.ServiceBus.ServiceBusReceivedMessage>
  - lang: vb
    values:
    - value: Public Overridable Function PeekMessageAsync (Optional fromSequenceNumber As Nullable(Of Long) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ServiceBusReceivedMessage)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Fetches the next active <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage"></xref> without changing the state of the receiver or the message source.
  remarks: <p>The first call to <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessageAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)"></xref> fetches the first active message for this receiver. Each subsequent call fetches the subsequent message in the entity. Unlike a received message, a peeked message will not have a lock token associated with it, and hence it cannot be Completed/Abandoned/Deferred/Deadlettered/Renewed. Also, unlike <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMessageAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)"></xref>, this method will fetch even Deferred messages (but not Deadlettered message).</p>
  metadata: {}
uid: Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessageAsync*
commentId: Overload:Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessageAsync
namespace: Azure.Messaging.ServiceBus
name: PeekMessageAsync
fullName: Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessageAsync
nameWithType: ServiceBusReceiver.PeekMessageAsync
assembliesWithMoniker:
- value: Azure.Messaging.ServiceBus.dll
packagesWithMoniker:
- value: Azure.Messaging.ServiceBus v7.15.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.ServiceBus v7.11.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessageAsync
  api_location:
  - Azure.Messaging.ServiceBus.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessageAsync
  - Azure::Messaging::ServiceBus::ServiceBusReceiver::PeekMessageAsync
  - PeekMessageAsync
  - ServiceBusReceiver.PeekMessageAsync
  - ServiceBusReceiver::PeekMessageAsync
  helpviewer_keywords:
  - ServiceBusReceiver.PeekMessageAsync method [.NET]
  - PeekMessageAsync method [.NET], class ServiceBusReceiver
  - ServiceBusReceiver.PeekMessageAsync(Nullable<Int64>, CancellationToken) method [.NET]
  - PeekMessageAsync(Nullable<Int64>, CancellationToken) method [.NET], class ServiceBusReceiver
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
