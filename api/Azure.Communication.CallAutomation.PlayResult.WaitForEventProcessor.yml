### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Communication.CallAutomation.PlayEventResult?alt=Azure.Communication.CallAutomation.PlayEventResult&text=PlayEventResult" data-throw-if-not-resolved="True"/>
    description: Returns <xref data-throw-if-not-resolved="true" uid="Azure.Communication.CallAutomation.PlayEventResult"></xref> which contains either <xref data-throw-if-not-resolved="true" uid="Azure.Communication.CallAutomation.PlayCompleted"></xref> event or <xref data-throw-if-not-resolved="true" uid="Azure.Communication.CallAutomation.PlayFailed"></xref> event.
  parameters:
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Communication.CallAutomation.PlayResult.WaitForEventProcessor(System.Threading.CancellationToken)
  commentId: M:Azure.Communication.CallAutomation.PlayResult.WaitForEventProcessor(System.Threading.CancellationToken)
  name: WaitForEventProcessor(CancellationToken)
  fullName: Azure.Communication.CallAutomation.PlayResult.WaitForEventProcessor(CancellationToken)
  nameWithType: PlayResult.WaitForEventProcessor(CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public Azure.Communication.CallAutomation.PlayEventResult WaitForEventProcessor (System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'member this.WaitForEventProcessor : System.Threading.CancellationToken -> Azure.Communication.CallAutomation.PlayEventResult'
  - lang: vb
    values:
    - value: Public Function WaitForEventProcessor (Optional cancellationToken As CancellationToken = Nothing) As PlayEventResult
  monikers:
  - azure-dotnet
  summary: This is blocking call. Wait for <xref data-throw-if-not-resolved="true" uid="Azure.Communication.CallAutomation.PlayEventResult"></xref> using <xref data-throw-if-not-resolved="true" uid="Azure.Communication.CallAutomation.CallAutomationEventProcessor"></xref>.
  metadata: {}
uid: Azure.Communication.CallAutomation.PlayResult.WaitForEventProcessor*
commentId: Overload:Azure.Communication.CallAutomation.PlayResult.WaitForEventProcessor
namespace: Azure.Communication.CallAutomation
name: WaitForEventProcessor
fullName: Azure.Communication.CallAutomation.PlayResult.WaitForEventProcessor
nameWithType: PlayResult.WaitForEventProcessor
assembliesWithMoniker:
- value: Azure.Communication.CallAutomation.dll
packagesWithMoniker:
- value: Azure.Communication.CallAutomation v1.0.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.Communication.CallAutomation.PlayResult.WaitForEventProcessor
  api_location:
  - Azure.Communication.CallAutomation.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Communication.CallAutomation.PlayResult.WaitForEventProcessor
  - Azure::Communication::CallAutomation::PlayResult::WaitForEventProcessor
  - WaitForEventProcessor
  - PlayResult.WaitForEventProcessor
  - PlayResult::WaitForEventProcessor
  helpviewer_keywords:
  - PlayResult.WaitForEventProcessor method [.NET]
  - WaitForEventProcessor method [.NET], class PlayResult
  - PlayResult.WaitForEventProcessor(CancellationToken) method [.NET]
  - WaitForEventProcessor(CancellationToken) method [.NET], class PlayResult
  monikers:
  - azure-dotnet
