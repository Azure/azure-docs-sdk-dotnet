### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>
    description: A <xref data-throw-if-not-resolved="true" uid="Azure.Response"></xref> describing the operation.
  parameters:
  - namesWithMoniker:
    - value: sourceEndpoint
    description: A <xref data-throw-if-not-resolved="true" uid="System.Uri"></xref> with the Recording's content's url location.
    type: <xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: destinationStream
    description: A <xref data-throw-if-not-resolved="true" uid="System.IO.Stream"></xref> to write the downloaded content to.
    type: <xref href="System.IO.Stream?alt=System.IO.Stream&text=Stream" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: transferOptions
    description: >-
      Optional <xref data-throw-if-not-resolved="true" uid="Azure.Communication.CallingServer.ContentTransferOptions"></xref> to configure

      parallel transfer behavior.
    type: <xref href="Azure.Communication.CallingServer.ContentTransferOptions?alt=Azure.Communication.CallingServer.ContentTransferOptions&text=ContentTransferOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: >-
      Optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to propagate

      notifications that the operation should be canceled.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Communication.CallingServer.CallingServerClient.DownloadTo(System.Uri,System.IO.Stream,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Communication.CallingServer.CallingServerClient.DownloadTo(System.Uri,System.IO.Stream,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)
  name: DownloadTo(Uri, Stream, ContentTransferOptions, CancellationToken)
  fullName: Azure.Communication.CallingServer.CallingServerClient.DownloadTo(Uri, Stream, ContentTransferOptions, CancellationToken)
  nameWithType: CallingServerClient.DownloadTo(Uri, Stream, ContentTransferOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response DownloadTo (Uri sourceEndpoint, System.IO.Stream destinationStream, Azure.Communication.CallingServer.ContentTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DownloadTo : Uri * System.IO.Stream * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -> Azure.Response

        override this.DownloadTo : Uri * System.IO.Stream * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -> Azure.Response
  - lang: vb
    values:
    - value: Public Overridable Function DownloadTo (sourceEndpoint As Uri, destinationStream As Stream, Optional transferOptions As ContentTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response
  monikers:
  - azure-dotnet-preview
  summary: >-
    The <xref data-throw-if-not-resolved="true" uid="Azure.Communication.CallingServer.CallingServerClient.DownloadTo(System.Uri,System.IO.Stream,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)"></xref>

    operation downloads the specified content using parallel requests,

    and writes the content to <code data-dev-comment-type="paramref">destinationStream</code>.
  remarks: <p>A <xref data-throw-if-not-resolved="true" uid="Azure.RequestFailedException"></xref> will be thrown if a failure occurs.</p>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>
    description: A <xref data-throw-if-not-resolved="true" uid="Azure.Response"></xref> describing the operation.
  parameters:
  - namesWithMoniker:
    - value: sourceEndpoint
    description: A <xref data-throw-if-not-resolved="true" uid="System.Uri"></xref> with the Recording's content's url location.
    type: <xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: destinationPath
    description: A file path to write the downloaded content to.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: transferOptions
    description: >-
      Optional <xref data-throw-if-not-resolved="true" uid="Azure.Communication.CallingServer.ContentTransferOptions"></xref> to configure

      parallel transfer behavior.
    type: <xref href="Azure.Communication.CallingServer.ContentTransferOptions?alt=Azure.Communication.CallingServer.ContentTransferOptions&text=ContentTransferOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: >-
      Optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to propagate

      notifications that the operation should be canceled.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Communication.CallingServer.CallingServerClient.DownloadTo(System.Uri,System.String,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Communication.CallingServer.CallingServerClient.DownloadTo(System.Uri,System.String,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)
  name: DownloadTo(Uri, String, ContentTransferOptions, CancellationToken)
  fullName: Azure.Communication.CallingServer.CallingServerClient.DownloadTo(Uri, String, ContentTransferOptions, CancellationToken)
  nameWithType: CallingServerClient.DownloadTo(Uri, String, ContentTransferOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response DownloadTo (Uri sourceEndpoint, string destinationPath, Azure.Communication.CallingServer.ContentTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DownloadTo : Uri * string * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -> Azure.Response

        override this.DownloadTo : Uri * string * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -> Azure.Response
  - lang: vb
    values:
    - value: Public Overridable Function DownloadTo (sourceEndpoint As Uri, destinationPath As String, Optional transferOptions As ContentTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response
  monikers:
  - azure-dotnet-preview
  summary: >-
    The <xref data-throw-if-not-resolved="true" uid="Azure.Communication.CallingServer.CallingServerClient.DownloadTo(System.Uri,System.String,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)"></xref>

    operation downloads the specified content using parallel requests,

    and writes the content to <code data-dev-comment-type="paramref">destinationPath</code>.
  remarks: <p>A <xref data-throw-if-not-resolved="true" uid="Azure.RequestFailedException"></xref> will be thrown if a failure occurs.</p>
  metadata: {}
uid: Azure.Communication.CallingServer.CallingServerClient.DownloadTo*
commentId: Overload:Azure.Communication.CallingServer.CallingServerClient.DownloadTo
namespace: Azure.Communication.CallingServer
name: DownloadTo
fullName: Azure.Communication.CallingServer.CallingServerClient.DownloadTo
nameWithType: CallingServerClient.DownloadTo
assembliesWithMoniker:
- value: Azure.Communication.CallingServer.dll
packagesWithMoniker:
- value: Azure.Communication.CallingServer v1.0.0-beta.3
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Communication.CallingServer.CallingServerClient.DownloadTo
  api_location:
  - Azure.Communication.CallingServer.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Communication.CallingServer.CallingServerClient.DownloadTo
  - Azure::Communication::CallingServer::CallingServerClient::DownloadTo
  - DownloadTo
  - CallingServerClient.DownloadTo
  - CallingServerClient::DownloadTo
  helpviewer_keywords:
  - CallingServerClient.DownloadTo method [.NET]
  - DownloadTo method [.NET], class CallingServerClient
  - CallingServerClient.DownloadTo(Uri, Stream, ContentTransferOptions, CancellationToken) method [.NET]
  - DownloadTo(Uri, Stream, ContentTransferOptions, CancellationToken) method [.NET], class CallingServerClient
  - CallingServerClient.DownloadTo(Uri, String, ContentTransferOptions, CancellationToken) method [.NET]
  - DownloadTo(Uri, String, ContentTransferOptions, CancellationToken) method [.NET], class CallingServerClient
  monikers:
  - azure-dotnet-preview
