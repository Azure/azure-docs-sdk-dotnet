### YamlMime:NetMember
type: constructor
members:
- type: constructor
  uid: Azure.Messaging.EventHubs.EventProcessorClient.#ctor
  commentId: M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor
  name: EventProcessorClient()
  fullName: Azure.Messaging.EventHubs.EventProcessorClient.EventProcessorClient()
  nameWithType: EventProcessorClient.EventProcessorClient()
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: protected EventProcessorClient ();
  - lang: vb
    values:
    - value: Protected Sub New ()
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> class.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: checkpointStore
    description: The client responsible for persisting checkpoints and processor state to durable storage.  Processor instances sharing this storage will attempt to coordinate and share work.  The associated container is expected to exist.
    type: <xref href="Azure.Storage.Blobs.BlobContainerClient?alt=Azure.Storage.Blobs.BlobContainerClient&text=BlobContainerClient" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: consumerGroup
    description: The name of the consumer group this processor is associated with.  The processor will assert exclusive read access to partitions for this group.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: connectionString
    description: The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String)
  commentId: M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String)
  name: EventProcessorClient(BlobContainerClient, String, String)
  fullName: Azure.Messaging.EventHubs.EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String)
  nameWithType: EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string -> Azure.Messaging.EventHubs.EventProcessorClient'
  - lang: vb
    values:
    - value: Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, connectionString As String)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> class.
  remarks: <p>The container associated with the <code data-dev-comment-type="paramref">checkpointStore</code> is expected to exist; the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> does not assume the ability to manage the storage account and is safe to run with only read/write permission for blobs in the container.</p><p>If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub, which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the connection string.  For example, ";EntityPath=telemetry-hub".</p><p>If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that Event Hub will result in a connection string that contains the name.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: checkpointStore
    description: The client responsible for persisting checkpoints and processor state to durable storage.  Processor instances sharing this storage will attempt to coordinate and share work.  The associated container is expected to exist.
    type: <xref href="Azure.Storage.Blobs.BlobContainerClient?alt=Azure.Storage.Blobs.BlobContainerClient&text=BlobContainerClient" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: consumerGroup
    description: The name of the consumer group this processor is associated with.  The processor will assert exclusive read access to partitions for this group.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: connectionString
    description: The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: The set of options to use for this processor.
    type: <xref href="Azure.Messaging.EventHubs.EventProcessorClientOptions?alt=Azure.Messaging.EventHubs.EventProcessorClientOptions&text=EventProcessorClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,Azure.Messaging.EventHubs.EventProcessorClientOptions)
  commentId: M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,Azure.Messaging.EventHubs.EventProcessorClientOptions)
  name: EventProcessorClient(BlobContainerClient, String, String, EventProcessorClientOptions)
  fullName: Azure.Messaging.EventHubs.EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, EventProcessorClientOptions)
  nameWithType: EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, EventProcessorClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString, Azure.Messaging.EventHubs.EventProcessorClientOptions clientOptions);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string * Azure.Messaging.EventHubs.EventProcessorClientOptions -> Azure.Messaging.EventHubs.EventProcessorClient'
  - lang: vb
    values:
    - value: Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, connectionString As String, clientOptions As EventProcessorClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> class.
  remarks: <p>The container associated with the <code data-dev-comment-type="paramref">checkpointStore</code> is expected to exist; the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> does not assume the ability to manage the storage account and is safe to run with only read/write permission for blobs in the container.</p><p>If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub, which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the connection string.  For example, ";EntityPath=telemetry-hub".</p><p>If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that Event Hub will result in a connection string that contains the name.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: checkpointStore
    description: The client responsible for persisting checkpoints and processor state to durable storage.  Processor instances sharing this storage will attempt to coordinate and share work.  The associated container is expected to exist.
    type: <xref href="Azure.Storage.Blobs.BlobContainerClient?alt=Azure.Storage.Blobs.BlobContainerClient&text=BlobContainerClient" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: consumerGroup
    description: The name of the consumer group this processor is associated with.  The processor will assert exclusive read access to partitions for this group.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: connectionString
    description: The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventHubName
    description: The name of the specific Event Hub to associate the processor with.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String)
  commentId: M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String)
  name: EventProcessorClient(BlobContainerClient, String, String, String)
  fullName: Azure.Messaging.EventHubs.EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, String)
  nameWithType: EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString, string eventHubName);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string * string -> Azure.Messaging.EventHubs.EventProcessorClient'
  - lang: vb
    values:
    - value: Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, connectionString As String, eventHubName As String)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> class.
  remarks: <p>The container associated with the <code data-dev-comment-type="paramref">checkpointStore</code> is expected to exist; the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> does not assume the ability to manage the storage account and is safe to run with only read/write permission for blobs in the container.</p><p>If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub, and can be used directly without passing the <code data-dev-comment-type="paramref">eventHubName</code>.  The name of the Event Hub should be passed only once, either as part of the connection string or separately.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: checkpointStore
    description: The client responsible for persisting checkpoints and processor state to durable storage.  Processor instances sharing this storage will attempt to coordinate and share work.  The associated container is expected to exist.
    type: <xref href="Azure.Storage.Blobs.BlobContainerClient?alt=Azure.Storage.Blobs.BlobContainerClient&text=BlobContainerClient" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: consumerGroup
    description: The name of the consumer group this processor is associated with.  The processor will assert exclusive read access to partitions for this group.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: connectionString
    description: The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventHubName
    description: The name of the specific Event Hub to associate the processor with.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: The set of options to use for this processor.
    type: <xref href="Azure.Messaging.EventHubs.EventProcessorClientOptions?alt=Azure.Messaging.EventHubs.EventProcessorClientOptions&text=EventProcessorClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String,Azure.Messaging.EventHubs.EventProcessorClientOptions)
  commentId: M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String,Azure.Messaging.EventHubs.EventProcessorClientOptions)
  name: EventProcessorClient(BlobContainerClient, String, String, String, EventProcessorClientOptions)
  fullName: Azure.Messaging.EventHubs.EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, String, EventProcessorClientOptions)
  nameWithType: EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, String, EventProcessorClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString, string eventHubName, Azure.Messaging.EventHubs.EventProcessorClientOptions clientOptions);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string * string * Azure.Messaging.EventHubs.EventProcessorClientOptions -> Azure.Messaging.EventHubs.EventProcessorClient'
  - lang: vb
    values:
    - value: Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, connectionString As String, eventHubName As String, clientOptions As EventProcessorClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> class.
  remarks: <p>The container associated with the <code data-dev-comment-type="paramref">checkpointStore</code> is expected to exist; the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> does not assume the ability to manage the storage account and is safe to run with only read/write permission for blobs in the container.</p><p>If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub, and can be used directly without passing the <code data-dev-comment-type="paramref">eventHubName</code>.  The name of the Event Hub should be passed only once, either as part of the connection string or separately.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: checkpointStore
    description: The client responsible for persisting checkpoints and processor state to durable storage.  Processor instances sharing this storage will attempt to coordinate and share work.  The associated container is expected to exist.
    type: <xref href="Azure.Storage.Blobs.BlobContainerClient?alt=Azure.Storage.Blobs.BlobContainerClient&text=BlobContainerClient" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: consumerGroup
    description: The name of the consumer group this processor is associated with.  The processor will assert exclusive read access to partitions for this group.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fullyQualifiedNamespace
    description: The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <code data-dev-comment-type="c">{yournamespace}.servicebus.windows.net</code>.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventHubName
    description: The name of the specific Event Hub to associate the processor with.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: credential
    description: The shared access key credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.
    type: <xref href="Azure.AzureNamedKeyCredential?alt=Azure.AzureNamedKeyCredential&text=AzureNamedKeyCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: The set of options to use for this processor.
    type: <xref href="Azure.Messaging.EventHubs.EventProcessorClientOptions?alt=Azure.Messaging.EventHubs.EventProcessorClientOptions&text=EventProcessorClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String,Azure.AzureNamedKeyCredential,Azure.Messaging.EventHubs.EventProcessorClientOptions)
  commentId: M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String,Azure.AzureNamedKeyCredential,Azure.Messaging.EventHubs.EventProcessorClientOptions)
  name: EventProcessorClient(BlobContainerClient, String, String, String, AzureNamedKeyCredential, EventProcessorClientOptions)
  fullName: Azure.Messaging.EventHubs.EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, String, AzureNamedKeyCredential, EventProcessorClientOptions)
  nameWithType: EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, String, AzureNamedKeyCredential, EventProcessorClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string fullyQualifiedNamespace, string eventHubName, Azure.AzureNamedKeyCredential credential, Azure.Messaging.EventHubs.EventProcessorClientOptions clientOptions = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string * string * Azure.AzureNamedKeyCredential * Azure.Messaging.EventHubs.EventProcessorClientOptions -> Azure.Messaging.EventHubs.EventProcessorClient'
  - lang: vb
    values:
    - value: Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, fullyQualifiedNamespace As String, eventHubName As String, credential As AzureNamedKeyCredential, Optional clientOptions As EventProcessorClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> class.
  remarks: <p>The container associated with the <code data-dev-comment-type="paramref">checkpointStore</code> is expected to exist; the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> does not assume the ability to manage the storage account and is safe to run with only read/write permission for blobs in the container.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: checkpointStore
    description: The client responsible for persisting checkpoints and processor state to durable storage.  Processor instances sharing this storage will attempt to coordinate and share work.  The associated container is expected to exist.
    type: <xref href="Azure.Storage.Blobs.BlobContainerClient?alt=Azure.Storage.Blobs.BlobContainerClient&text=BlobContainerClient" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: consumerGroup
    description: The name of the consumer group this processor is associated with.  The processor will assert exclusive read access to partitions for this group.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fullyQualifiedNamespace
    description: The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <code data-dev-comment-type="c">{yournamespace}.servicebus.windows.net</code>.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventHubName
    description: The name of the specific Event Hub to associate the processor with.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: credential
    description: The shared access signature credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.
    type: <xref href="Azure.AzureSasCredential?alt=Azure.AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: The set of options to use for this processor.
    type: <xref href="Azure.Messaging.EventHubs.EventProcessorClientOptions?alt=Azure.Messaging.EventHubs.EventProcessorClientOptions&text=EventProcessorClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String,Azure.AzureSasCredential,Azure.Messaging.EventHubs.EventProcessorClientOptions)
  commentId: M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String,Azure.AzureSasCredential,Azure.Messaging.EventHubs.EventProcessorClientOptions)
  name: EventProcessorClient(BlobContainerClient, String, String, String, AzureSasCredential, EventProcessorClientOptions)
  fullName: Azure.Messaging.EventHubs.EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, String, AzureSasCredential, EventProcessorClientOptions)
  nameWithType: EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, String, AzureSasCredential, EventProcessorClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string fullyQualifiedNamespace, string eventHubName, Azure.AzureSasCredential credential, Azure.Messaging.EventHubs.EventProcessorClientOptions clientOptions = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string * string * Azure.AzureSasCredential * Azure.Messaging.EventHubs.EventProcessorClientOptions -> Azure.Messaging.EventHubs.EventProcessorClient'
  - lang: vb
    values:
    - value: Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, fullyQualifiedNamespace As String, eventHubName As String, credential As AzureSasCredential, Optional clientOptions As EventProcessorClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> class.
  remarks: <p>The container associated with the <code data-dev-comment-type="paramref">checkpointStore</code> is expected to exist; the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> does not assume the ability to manage the storage account and is safe to run with only read/write permission for blobs in the container.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: checkpointStore
    description: The client responsible for persisting checkpoints and processor state to durable storage.  Processor instances sharing this storage will attempt to coordinate and share work.  The associated container is expected to exist.
    type: <xref href="Azure.Storage.Blobs.BlobContainerClient?alt=Azure.Storage.Blobs.BlobContainerClient&text=BlobContainerClient" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: consumerGroup
    description: The name of the consumer group this processor is associated with.  The processor will assert exclusive read access to partitions for this group.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fullyQualifiedNamespace
    description: The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <code data-dev-comment-type="c">{yournamespace}.servicebus.windows.net</code>.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventHubName
    description: The name of the specific Event Hub to associate the processor with.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: credential
    description: The Azure identity credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.
    type: <xref href="Azure.Core.TokenCredential?alt=Azure.Core.TokenCredential&text=TokenCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: The set of options to use for this processor.
    type: <xref href="Azure.Messaging.EventHubs.EventProcessorClientOptions?alt=Azure.Messaging.EventHubs.EventProcessorClientOptions&text=EventProcessorClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.EventProcessorClientOptions)
  commentId: M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.EventProcessorClientOptions)
  name: EventProcessorClient(BlobContainerClient, String, String, String, TokenCredential, EventProcessorClientOptions)
  fullName: Azure.Messaging.EventHubs.EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, String, TokenCredential, EventProcessorClientOptions)
  nameWithType: EventProcessorClient.EventProcessorClient(BlobContainerClient, String, String, String, TokenCredential, EventProcessorClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string fullyQualifiedNamespace, string eventHubName, Azure.Core.TokenCredential credential, Azure.Messaging.EventHubs.EventProcessorClientOptions clientOptions = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string * string * Azure.Core.TokenCredential * Azure.Messaging.EventHubs.EventProcessorClientOptions -> Azure.Messaging.EventHubs.EventProcessorClient'
  - lang: vb
    values:
    - value: Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, fullyQualifiedNamespace As String, eventHubName As String, credential As TokenCredential, Optional clientOptions As EventProcessorClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> class.
  remarks: <p>The container associated with the <code data-dev-comment-type="paramref">checkpointStore</code> is expected to exist; the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventProcessorClient"></xref> does not assume the ability to manage the storage account and is safe to run with only read/write permission for blobs in the container.</p>
  metadata: {}
uid: Azure.Messaging.EventHubs.EventProcessorClient.#ctor*
commentId: Overload:Azure.Messaging.EventHubs.EventProcessorClient.#ctor
namespace: Azure.Messaging.EventHubs
name: EventProcessorClient
fullName: Azure.Messaging.EventHubs.EventProcessorClient.EventProcessorClient
nameWithType: EventProcessorClient.EventProcessorClient
assembliesWithMoniker:
- value: Azure.Messaging.EventHubs.Processor.dll
packagesWithMoniker:
- value: Azure.Messaging.EventHubs.Processor v5.9.2
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventHubs.Processor v5.7.0-beta.5
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventHubs.EventProcessorClient..ctor
  api_location:
  - Azure.Messaging.EventHubs.Processor.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventHubs.EventProcessorClient.#ctor
  - Azure::Messaging::EventHubs::EventProcessorClient::#ctor
  - '#ctor'
  - EventProcessorClient.#ctor
  - EventProcessorClient::#ctor
  helpviewer_keywords:
  - EventProcessorClient class [.NET], constructors
  - EventProcessorClient() class [.NET], constructors
  - EventProcessorClient(BlobContainerClient, String, String) class [.NET], constructors
  - EventProcessorClient(BlobContainerClient, String, String, EventProcessorClientOptions) class [.NET], constructors
  - EventProcessorClient(BlobContainerClient, String, String, String) class [.NET], constructors
  - EventProcessorClient(BlobContainerClient, String, String, String, EventProcessorClientOptions) class [.NET], constructors
  - EventProcessorClient(BlobContainerClient, String, String, String, AzureNamedKeyCredential, EventProcessorClientOptions) class [.NET], constructors
  - EventProcessorClient(BlobContainerClient, String, String, String, AzureSasCredential, EventProcessorClientOptions) class [.NET], constructors
  - EventProcessorClient(BlobContainerClient, String, String, String, TokenCredential, EventProcessorClientOptions) class [.NET], constructors
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
