### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: expiresAt
    description: UTC time when the token expires.
    type: <xref href="System.DateTimeOffset?alt=System.DateTimeOffset&text=DateTimeOffset" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: userId
    description: User Id.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: roles
    description: Roles that the connection with the generated token will have.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(System.DateTimeOffset,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(System.DateTimeOffset,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name: GetClientAccessUriAsync(DateTimeOffset, String, IEnumerable<String>, CancellationToken)
  fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(DateTimeOffset, String, IEnumerable<String>, CancellationToken)
  nameWithType: WebPubSubServiceClient.GetClientAccessUriAsync(DateTimeOffset, String, IEnumerable<String>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Uri> GetClientAccessUriAsync (DateTimeOffset expiresAt, string userId, System.Collections.Generic.IEnumerable<string> roles, System.Threading.CancellationToken cancellationToken);
      monikers:
      - azure-dotnet
    - value: public virtual System.Threading.Tasks.Task<Uri> GetClientAccessUriAsync (DateTimeOffset expiresAt, string userId = default, System.Collections.Generic.IEnumerable<string> roles = default, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - azure-dotnet-preview
  - lang: fsharp
    values:
    - value: >-
        abstract member GetClientAccessUriAsync : DateTimeOffset * string * seq<string> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Uri>

        override this.GetClientAccessUriAsync : DateTimeOffset * string * seq<string> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Uri>
  - lang: vb
    values:
    - value: Public Overridable Function GetClientAccessUriAsync (expiresAt As DateTimeOffset, userId As String, roles As IEnumerable(Of String), cancellationToken As CancellationToken) As Task(Of Uri)
      monikers:
      - azure-dotnet
    - value: Public Overridable Function GetClientAccessUriAsync (expiresAt As DateTimeOffset, Optional userId As String = Nothing, Optional roles As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Uri)
      monikers:
      - azure-dotnet-preview
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Creates a URI with authentication token.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: expiresAfter
    description: Defaults to one hour, if not specified. Must be greater or equal zero.
    type: <xref href="System.TimeSpan?alt=System.TimeSpan&text=TimeSpan" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: userId
    description: User Id.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: roles
    description: Roles that the connection with the generated token will have.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name: GetClientAccessUriAsync(TimeSpan, String, IEnumerable<String>, CancellationToken)
  fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(TimeSpan, String, IEnumerable<String>, CancellationToken)
  nameWithType: WebPubSubServiceClient.GetClientAccessUriAsync(TimeSpan, String, IEnumerable<String>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Uri> GetClientAccessUriAsync (TimeSpan expiresAfter, string userId, System.Collections.Generic.IEnumerable<string> roles, System.Threading.CancellationToken cancellationToken);
      monikers:
      - azure-dotnet
    - value: public virtual System.Threading.Tasks.Task<Uri> GetClientAccessUriAsync (TimeSpan expiresAfter = default, string userId = default, System.Collections.Generic.IEnumerable<string> roles = default, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - azure-dotnet-preview
  - lang: fsharp
    values:
    - value: >-
        abstract member GetClientAccessUriAsync : TimeSpan * string * seq<string> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Uri>

        override this.GetClientAccessUriAsync : TimeSpan * string * seq<string> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Uri>
  - lang: vb
    values:
    - value: Public Overridable Function GetClientAccessUriAsync (expiresAfter As TimeSpan, userId As String, roles As IEnumerable(Of String), cancellationToken As CancellationToken) As Task(Of Uri)
      monikers:
      - azure-dotnet
    - value: Public Overridable Function GetClientAccessUriAsync (Optional expiresAfter As TimeSpan = Nothing, Optional userId As String = Nothing, Optional roles As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Uri)
      monikers:
      - azure-dotnet-preview
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Creates a URI with authentication token.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: expiresAt
    description: UTC time when the token expires.
    type: <xref href="System.DateTimeOffset?alt=System.DateTimeOffset&text=DateTimeOffset" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: userId
    description: User Id.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: roles
    description: Roles that the connection with the generated token will have.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: groups
    description: Groups that the connection with the generated token will join when it connects.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(System.DateTimeOffset,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(System.DateTimeOffset,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name: GetClientAccessUriAsync(DateTimeOffset, String, IEnumerable<String>, IEnumerable<String>, CancellationToken)
  fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(DateTimeOffset, String, IEnumerable<String>, IEnumerable<String>, CancellationToken)
  nameWithType: WebPubSubServiceClient.GetClientAccessUriAsync(DateTimeOffset, String, IEnumerable<String>, IEnumerable<String>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Uri> GetClientAccessUriAsync (DateTimeOffset expiresAt, string userId = default, System.Collections.Generic.IEnumerable<string> roles = default, System.Collections.Generic.IEnumerable<string> groups = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetClientAccessUriAsync : DateTimeOffset * string * seq<string> * seq<string> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Uri>

        override this.GetClientAccessUriAsync : DateTimeOffset * string * seq<string> * seq<string> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Uri>
  - lang: vb
    values:
    - value: Public Overridable Function GetClientAccessUriAsync (expiresAt As DateTimeOffset, Optional userId As String = Nothing, Optional roles As IEnumerable(Of String) = Nothing, Optional groups As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Uri)
  monikers:
  - azure-dotnet
  summary: Creates a URI with authentication token.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Uri?alt=System.Uri&text=Uri" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: expiresAfter
    description: Defaults to one hour, if not specified. Must be greater or equal zero.
    type: <xref href="System.TimeSpan?alt=System.TimeSpan&text=TimeSpan" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: userId
    description: User Id.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: roles
    description: Roles that the connection with the generated token will have.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: groups
    description: Groups that the connection with the generated token will join when it connects.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name: GetClientAccessUriAsync(TimeSpan, String, IEnumerable<String>, IEnumerable<String>, CancellationToken)
  fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(TimeSpan, String, IEnumerable<String>, IEnumerable<String>, CancellationToken)
  nameWithType: WebPubSubServiceClient.GetClientAccessUriAsync(TimeSpan, String, IEnumerable<String>, IEnumerable<String>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Uri> GetClientAccessUriAsync (TimeSpan expiresAfter = default, string userId = default, System.Collections.Generic.IEnumerable<string> roles = default, System.Collections.Generic.IEnumerable<string> groups = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetClientAccessUriAsync : TimeSpan * string * seq<string> * seq<string> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Uri>

        override this.GetClientAccessUriAsync : TimeSpan * string * seq<string> * seq<string> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Uri>
  - lang: vb
    values:
    - value: Public Overridable Function GetClientAccessUriAsync (Optional expiresAfter As TimeSpan = Nothing, Optional userId As String = Nothing, Optional roles As IEnumerable(Of String) = Nothing, Optional groups As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Uri)
  monikers:
  - azure-dotnet
  summary: Creates a URI with authentication token.
  metadata: {}
uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync*
commentId: Overload:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync
namespace: Azure.Messaging.WebPubSub
name: GetClientAccessUriAsync
fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync
nameWithType: WebPubSubServiceClient.GetClientAccessUriAsync
assembliesWithMoniker:
- value: Azure.Messaging.WebPubSub.dll
packagesWithMoniker:
- value: Azure.Messaging.WebPubSub v1.3.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.WebPubSub v1.1.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync
  api_location:
  - Azure.Messaging.WebPubSub.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync
  - Azure::Messaging::WebPubSub::WebPubSubServiceClient::GetClientAccessUriAsync
  - GetClientAccessUriAsync
  - WebPubSubServiceClient.GetClientAccessUriAsync
  - WebPubSubServiceClient::GetClientAccessUriAsync
  helpviewer_keywords:
  - WebPubSubServiceClient.GetClientAccessUriAsync method [.NET]
  - GetClientAccessUriAsync method [.NET], class WebPubSubServiceClient
  - WebPubSubServiceClient.GetClientAccessUriAsync(DateTimeOffset, String, IEnumerable<String>, CancellationToken) method [.NET]
  - GetClientAccessUriAsync(DateTimeOffset, String, IEnumerable<String>, CancellationToken) method [.NET], class WebPubSubServiceClient
  - WebPubSubServiceClient.GetClientAccessUriAsync(TimeSpan, String, IEnumerable<String>, CancellationToken) method [.NET]
  - GetClientAccessUriAsync(TimeSpan, String, IEnumerable<String>, CancellationToken) method [.NET], class WebPubSubServiceClient
  - WebPubSubServiceClient.GetClientAccessUriAsync(DateTimeOffset, String, IEnumerable<String>, IEnumerable<String>, CancellationToken) method [.NET]
  - GetClientAccessUriAsync(DateTimeOffset, String, IEnumerable<String>, IEnumerable<String>, CancellationToken) method [.NET], class WebPubSubServiceClient
  - WebPubSubServiceClient.GetClientAccessUriAsync(TimeSpan, String, IEnumerable<String>, IEnumerable<String>, CancellationToken) method [.NET]
  - GetClientAccessUriAsync(TimeSpan, String, IEnumerable<String>, IEnumerable<String>, CancellationToken) method [.NET], class WebPubSubServiceClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
