### YamlMime:NetMember
type: constructor
members:
- type: constructor
  uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor
  name: EventHubProducerClient()
  fullName: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubProducerClient()
  nameWithType: EventHubProducerClient.EventHubProducerClient()
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: protected EventHubProducerClient ();
  - lang: vb
    values:
    - value: Protected Sub New ()
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> class.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: connectionString
    description: The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String)
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String)
  name: EventHubProducerClient(String)
  fullName: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubProducerClient(String)
  nameWithType: EventHubProducerClient.EventHubProducerClient(String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventHubProducerClient (string connectionString);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.Producer.EventHubProducerClient : string -> Azure.Messaging.EventHubs.Producer.EventHubProducerClient'
  - lang: vb
    values:
    - value: Public Sub New (connectionString As String)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> class.
  remarks: <p>If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub, which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the connection string.  For example, ";EntityPath=telemetry-hub".</p><p>If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that Event Hub will result in a connection string that contains the name.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: connection
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventHubConnection"></xref> connection to use for communication with the Event Hubs service.
    type: <xref href="Azure.Messaging.EventHubs.EventHubConnection?alt=Azure.Messaging.EventHubs.EventHubConnection&text=EventHubConnection" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: A set of options to apply when configuring the producer.
    type: <xref href="Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions?alt=Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions&text=EventHubProducerClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(Azure.Messaging.EventHubs.EventHubConnection,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(Azure.Messaging.EventHubs.EventHubConnection,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  name: EventHubProducerClient(EventHubConnection, EventHubProducerClientOptions)
  fullName: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubProducerClient(EventHubConnection, EventHubProducerClientOptions)
  nameWithType: EventHubProducerClient.EventHubProducerClient(EventHubConnection, EventHubProducerClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventHubProducerClient (Azure.Messaging.EventHubs.EventHubConnection connection, Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions clientOptions = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.Producer.EventHubProducerClient : Azure.Messaging.EventHubs.EventHubConnection * Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions -> Azure.Messaging.EventHubs.Producer.EventHubProducerClient'
  - lang: vb
    values:
    - value: Public Sub New (connection As EventHubConnection, Optional clientOptions As EventHubProducerClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> class.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: connectionString
    description: The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: The set of options to use for this consumer.
    type: <xref href="Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions?alt=Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions&text=EventHubProducerClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  name: EventHubProducerClient(String, EventHubProducerClientOptions)
  fullName: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubProducerClient(String, EventHubProducerClientOptions)
  nameWithType: EventHubProducerClient.EventHubProducerClient(String, EventHubProducerClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventHubProducerClient (string connectionString, Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions clientOptions);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.Producer.EventHubProducerClient : string * Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions -> Azure.Messaging.EventHubs.Producer.EventHubProducerClient'
  - lang: vb
    values:
    - value: Public Sub New (connectionString As String, clientOptions As EventHubProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> class.
  remarks: <p>If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub, which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the connection string.  For example, ";EntityPath=telemetry-hub".</p><p>If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that Event Hub will result in a connection string that contains the name.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: connectionString
    description: The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventHubName
    description: The name of the specific Event Hub to associate the producer with.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String)
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String)
  name: EventHubProducerClient(String, String)
  fullName: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubProducerClient(String, String)
  nameWithType: EventHubProducerClient.EventHubProducerClient(String, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventHubProducerClient (string connectionString, string eventHubName);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.Producer.EventHubProducerClient : string * string -> Azure.Messaging.EventHubs.Producer.EventHubProducerClient'
  - lang: vb
    values:
    - value: Public Sub New (connectionString As String, eventHubName As String)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> class.
  remarks: <p>If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub, and can be used directly without passing the <code data-dev-comment-type="paramref">eventHubName</code>.  The name of the Event Hub should be passed only once, either as part of the connection string or separately.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: connectionString
    description: The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventHubName
    description: The name of the specific Event Hub to associate the producer with.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: A set of options to apply when configuring the producer.
    type: <xref href="Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions?alt=Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions&text=EventHubProducerClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  name: EventHubProducerClient(String, String, EventHubProducerClientOptions)
  fullName: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubProducerClient(String, String, EventHubProducerClientOptions)
  nameWithType: EventHubProducerClient.EventHubProducerClient(String, String, EventHubProducerClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventHubProducerClient (string connectionString, string eventHubName, Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions clientOptions);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.Producer.EventHubProducerClient : string * string * Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions -> Azure.Messaging.EventHubs.Producer.EventHubProducerClient'
  - lang: vb
    values:
    - value: Public Sub New (connectionString As String, eventHubName As String, clientOptions As EventHubProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> class.
  remarks: <p>If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub, and can be used directly without passing the <code data-dev-comment-type="paramref">eventHubName</code>.  The name of the Event Hub should be passed only once, either as part of the connection string or separately.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: fullyQualifiedNamespace
    description: The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <code data-dev-comment-type="c">{yournamespace}.servicebus.windows.net</code>.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventHubName
    description: The name of the specific Event Hub to associate the producer with.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: credential
    description: The shared access key credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.
    type: <xref href="Azure.AzureNamedKeyCredential?alt=Azure.AzureNamedKeyCredential&text=AzureNamedKeyCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: A set of options to apply when configuring the producer.
    type: <xref href="Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions?alt=Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions&text=EventHubProducerClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.AzureNamedKeyCredential,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.AzureNamedKeyCredential,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  name: EventHubProducerClient(String, String, AzureNamedKeyCredential, EventHubProducerClientOptions)
  fullName: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubProducerClient(String, String, AzureNamedKeyCredential, EventHubProducerClientOptions)
  nameWithType: EventHubProducerClient.EventHubProducerClient(String, String, AzureNamedKeyCredential, EventHubProducerClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventHubProducerClient (string fullyQualifiedNamespace, string eventHubName, Azure.AzureNamedKeyCredential credential, Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions clientOptions = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.Producer.EventHubProducerClient : string * string * Azure.AzureNamedKeyCredential * Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions -> Azure.Messaging.EventHubs.Producer.EventHubProducerClient'
  - lang: vb
    values:
    - value: Public Sub New (fullyQualifiedNamespace As String, eventHubName As String, credential As AzureNamedKeyCredential, Optional clientOptions As EventHubProducerClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> class.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: fullyQualifiedNamespace
    description: The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <code data-dev-comment-type="c">{yournamespace}.servicebus.windows.net</code>.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventHubName
    description: The name of the specific Event Hub to associate the producer with.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: credential
    description: The shared access signature credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.
    type: <xref href="Azure.AzureSasCredential?alt=Azure.AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: A set of options to apply when configuring the producer.
    type: <xref href="Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions?alt=Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions&text=EventHubProducerClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.AzureSasCredential,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.AzureSasCredential,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  name: EventHubProducerClient(String, String, AzureSasCredential, EventHubProducerClientOptions)
  fullName: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubProducerClient(String, String, AzureSasCredential, EventHubProducerClientOptions)
  nameWithType: EventHubProducerClient.EventHubProducerClient(String, String, AzureSasCredential, EventHubProducerClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventHubProducerClient (string fullyQualifiedNamespace, string eventHubName, Azure.AzureSasCredential credential, Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions clientOptions = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.Producer.EventHubProducerClient : string * string * Azure.AzureSasCredential * Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions -> Azure.Messaging.EventHubs.Producer.EventHubProducerClient'
  - lang: vb
    values:
    - value: Public Sub New (fullyQualifiedNamespace As String, eventHubName As String, credential As AzureSasCredential, Optional clientOptions As EventHubProducerClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> class.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: fullyQualifiedNamespace
    description: The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <code data-dev-comment-type="c">{yournamespace}.servicebus.windows.net</code>.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: eventHubName
    description: The name of the specific Event Hub to associate the producer with.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: credential
    description: The Azure managed identity credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.
    type: <xref href="Azure.Core.TokenCredential?alt=Azure.Core.TokenCredential&text=TokenCredential" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: A set of options to apply when configuring the producer.
    type: <xref href="Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions?alt=Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions&text=EventHubProducerClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  name: EventHubProducerClient(String, String, TokenCredential, EventHubProducerClientOptions)
  fullName: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubProducerClient(String, String, TokenCredential, EventHubProducerClientOptions)
  nameWithType: EventHubProducerClient.EventHubProducerClient(String, String, TokenCredential, EventHubProducerClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public EventHubProducerClient (string fullyQualifiedNamespace, string eventHubName, Azure.Core.TokenCredential credential, Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions clientOptions = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Messaging.EventHubs.Producer.EventHubProducerClient : string * string * Azure.Core.TokenCredential * Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions -> Azure.Messaging.EventHubs.Producer.EventHubProducerClient'
  - lang: vb
    values:
    - value: Public Sub New (fullyQualifiedNamespace As String, eventHubName As String, credential As TokenCredential, Optional clientOptions As EventHubProducerClientOptions = Nothing)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> class.
  metadata: {}
uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor*
commentId: Overload:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor
namespace: Azure.Messaging.EventHubs.Producer
name: EventHubProducerClient
fullName: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubProducerClient
nameWithType: EventHubProducerClient.EventHubProducerClient
assembliesWithMoniker:
- value: Azure.Messaging.EventHubs.dll
packagesWithMoniker:
- value: Azure.Messaging.EventHubs v5.9.2
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventHubs v5.7.0-beta.5
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventHubs.Producer.EventHubProducerClient..ctor
  api_location:
  - Azure.Messaging.EventHubs.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor
  - Azure::Messaging::EventHubs::Producer::EventHubProducerClient::#ctor
  - '#ctor'
  - EventHubProducerClient.#ctor
  - EventHubProducerClient::#ctor
  helpviewer_keywords:
  - EventHubProducerClient class [.NET], constructors
  - EventHubProducerClient() class [.NET], constructors
  - EventHubProducerClient(String) class [.NET], constructors
  - EventHubProducerClient(EventHubConnection, EventHubProducerClientOptions) class [.NET], constructors
  - EventHubProducerClient(String, EventHubProducerClientOptions) class [.NET], constructors
  - EventHubProducerClient(String, String) class [.NET], constructors
  - EventHubProducerClient(String, String, EventHubProducerClientOptions) class [.NET], constructors
  - EventHubProducerClient(String, String, AzureNamedKeyCredential, EventHubProducerClientOptions) class [.NET], constructors
  - EventHubProducerClient(String, String, AzureSasCredential, EventHubProducerClientOptions) class [.NET], constructors
  - EventHubProducerClient(String, String, TokenCredential, EventHubProducerClientOptions) class [.NET], constructors
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
