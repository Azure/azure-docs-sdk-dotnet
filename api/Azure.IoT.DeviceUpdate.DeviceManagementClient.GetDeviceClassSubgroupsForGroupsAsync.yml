### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.AsyncPageable`1?alt=Azure.AsyncPageable&text=AsyncPageable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.BinaryData?alt=System.BinaryData&text=BinaryData" data-throw-if-not-resolved="True"/>&gt;
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.AsyncPageable`1"></xref> from the service containing a list of <xref data-throw-if-not-resolved="true" uid="System.BinaryData"></xref> objects. Details of the body schema for each item in the collection are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: groupId
    description: Group identifier.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: filter
    description: Restricts the set of device class subgroups returned. You can filter on compat properties by name and value. (i.e. filter=compatProperties/propertyName1 eq 'value1' and compatProperties/propertyName2 eq 'value2').
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">groupId</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">groupId</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync(System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync(System.String,System.String,Azure.RequestContext)
  name: GetDeviceClassSubgroupsForGroupsAsync(String, String, RequestContext)
  fullName: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync(String, String, RequestContext)
  nameWithType: DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync(String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.AsyncPageable<BinaryData> GetDeviceClassSubgroupsForGroupsAsync (string groupId, string filter = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetDeviceClassSubgroupsForGroupsAsync : string * string * Azure.RequestContext -> Azure.AsyncPageable<BinaryData>

        override this.GetDeviceClassSubgroupsForGroupsAsync : string * string * Azure.RequestContext -> Azure.AsyncPageable<BinaryData>
  - lang: vb
    values:
    - value: Public Overridable Function GetDeviceClassSubgroupsForGroupsAsync (groupId As String, Optional filter As String = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Get the device class subgroups for the group. A device class subgroup is the set of devices within the group that share the same device class. All devices within the same device class are compatible with the same updates.
  remarks: >-
    <p>Below is the JSON schema for one item in the pageable response.</p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">DeviceClassSubgroupsListValue</code>: 


    ```

    {
                  deviceClassId: string, # Required. Device class subgroup identity. This is generated from the model Id and the compat properties reported by the device update agent in the Device Update PnP interface in IoT Hub. It is a hex-encoded SHA1 hash.
                  groupId: string, # Required. Group identity.
                  createdDateTime: string, # Required. Date and time when the device class subgroup was created.
                  deviceCount: number, # Optional. The number of devices in the device class subgroup.
                  deploymentId: string, # Optional. The active deployment Id for the device class subgroup.
                }
    ```

    </p>
  examples: >-
    This sample shows how to call GetDeviceClassSubgroupsForGroupsAsync with required parameters and parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DeviceManagementClient(endpoint, "<instanceId>", credential);


    await foreach (var data in client.GetDeviceClassSubgroupsForGroupsAsync("<groupId>"))

    {
        JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        Console.WriteLine(result.GetProperty("deviceClassId").ToString());
        Console.WriteLine(result.GetProperty("groupId").ToString());
        Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    }

    ```

    This sample shows how to call GetDeviceClassSubgroupsForGroupsAsync with all parameters, and how to parse the result.


    ```

    var credential = new DefaultAzureCredential();

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new DeviceManagementClient(endpoint, "<instanceId>", credential);


    await foreach (var data in client.GetDeviceClassSubgroupsForGroupsAsync("<groupId>", "<filter>"))

    {
        JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        Console.WriteLine(result.GetProperty("deviceClassId").ToString());
        Console.WriteLine(result.GetProperty("groupId").ToString());
        Console.WriteLine(result.GetProperty("createdDateTime").ToString());
        Console.WriteLine(result.GetProperty("deviceCount").ToString());
        Console.WriteLine(result.GetProperty("deploymentId").ToString());
    }

    ```
  metadata: {}
uid: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync*
commentId: Overload:Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync
namespace: Azure.IoT.DeviceUpdate
name: GetDeviceClassSubgroupsForGroupsAsync
fullName: Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync
nameWithType: DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync
assembliesWithMoniker:
- value: Azure.IoT.DeviceUpdate.dll
packagesWithMoniker:
- value: Azure.IoT.DeviceUpdate v1.0.0
  monikers:
  - azure-dotnet
- value: Azure.IoT.DeviceUpdate v1.0.0-beta.4
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync
  api_location:
  - Azure.IoT.DeviceUpdate.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.IoT.DeviceUpdate.DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync
  - Azure::IoT::DeviceUpdate::DeviceManagementClient::GetDeviceClassSubgroupsForGroupsAsync
  - GetDeviceClassSubgroupsForGroupsAsync
  - DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync
  - DeviceManagementClient::GetDeviceClassSubgroupsForGroupsAsync
  helpviewer_keywords:
  - DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync method [.NET]
  - GetDeviceClassSubgroupsForGroupsAsync method [.NET], class DeviceManagementClient
  - DeviceManagementClient.GetDeviceClassSubgroupsForGroupsAsync(String, String, RequestContext) method [.NET]
  - GetDeviceClassSubgroupsForGroupsAsync(String, String, RequestContext) method [.NET], class DeviceManagementClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
