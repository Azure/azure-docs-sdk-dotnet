### YamlMime:NetType
type: class
implementsWithMoniker:
- value: <xref href="System.IAsyncDisposable?alt=System.IAsyncDisposable&text=IAsyncDisposable" data-throw-if-not-resolved="True"/>
inheritancesWithMoniker:
- values:
  - <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
constructors:
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(Azure.Messaging.EventHubs.EventHubConnection,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.AzureNamedKeyCredential,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.AzureSasCredential,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
methods:
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CloseAsync(System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CreateBatchAsync(System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CreateBatchAsync(Azure.Messaging.EventHubs.Producer.CreateBatchOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.DisposeAsync
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.GetEventHubPropertiesAsync(System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.GetPartitionIdsAsync(System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.GetPartitionPropertiesAsync(System.String,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.Producer.EventDataBatch,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
properties:
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubName
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.FullyQualifiedNamespace
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.Identifier
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient.IsClosed
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
uid: Azure.Messaging.EventHubs.Producer.EventHubProducerClient
commentId: T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient
namespace: Azure.Messaging.EventHubs.Producer
name: EventHubProducerClient
fullName: Azure.Messaging.EventHubs.Producer.EventHubProducerClient
nameWithType: Azure.Messaging.EventHubs.Producer.EventHubProducerClient
assembliesWithMoniker:
- value: Azure.Messaging.EventHubs.dll
packagesWithMoniker:
- value: Azure.Messaging.EventHubs v5.9.2
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventHubs v5.7.0-beta.5
  monikers:
  - azure-dotnet-preview
syntaxWithMoniker:
- lang: csharp
  values:
  - value: 'public class EventHubProducerClient : IAsyncDisposable'
- lang: fsharp
  values:
  - value: >-
      type EventHubProducerClient = class
          interface IAsyncDisposable
- lang: vb
  values:
  - value: >-
      Public Class EventHubProducerClient

      Implements IAsyncDisposable
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
seeAlso: >+
  - <xref:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient>

summary: >-
  A client responsible for publishing <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventData"></xref> to a specific Event Hub,

  grouped together in batches.  Depending on the options specified when sending, events may

  be automatically assigned an available partition or may request a specific partition.


  The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> publishes immediately, ensuring a deterministic

  outcome for each send operation, though requires that callers own the responsibility of

  building and managing batches.


  In scenarios where it is not important to have events published immediately and where

  maximizing partition availability is not a requirement, it is recommended to consider

  using the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient"></xref>, which takes responsibility for

  building and managing batches to reduce the complexity of doing so in application code.
remarks: <p><strong>Allowing partition assignment is recommended when:</strong></p><p><ul><li>The sending of events needs to be highly available.</li><li>The event data should be evenly distributed among all available partitions.</li></ul></p><p><strong>If no partition is specified, the following rules are used for automatically selecting one:</strong></p><p><ol><li>Distribute the events equally amongst all available partitions using a round-robin approach.</li><li>If a partition becomes unavailable, the Event Hubs service will automatically detect it and forward the message to another available partition.</li></ol></p><p>The <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient"></xref> is safe to cache and use for the lifetime of an application, which is the best practice when the application publishes events regularly or semi-regularly.  The producer is responsible for ensuring efficient network, CPU, and memory use.  Calling either <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CloseAsync(System.Threading.CancellationToken)"></xref> or <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubProducerClient.DisposeAsync"></xref> as the application is shutting down will ensure that network resources and other unmanaged objects are properly cleaned up.</p>
metadata:
  api_name:
  - Azure.Messaging.EventHubs.Producer.EventHubProducerClient
  api_location:
  - Azure.Messaging.EventHubs.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventHubs.Producer.EventHubProducerClient
  - Azure::Messaging::EventHubs::Producer::EventHubProducerClient
  - EventHubProducerClient
  helpviewer_keywords:
  - Azure.Messaging.EventHubs.Producer.EventHubProducerClient class [.NET]
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
