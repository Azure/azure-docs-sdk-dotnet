### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Communication.Chat.CreateChatThreadResult?alt=Azure.Communication.Chat.CreateChatThreadResult&text=CreateChatThreadResult" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: topic
    description: Topic for the chat thread
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: participants
    description: Participants to be included in the chat thread
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Communication.Chat.ChatParticipant?alt=Azure.Communication.Chat.ChatParticipant&text=ChatParticipant" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: idempotencyToken
    description: If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-ID and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-ID is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token for the task.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: The server returned an error. See <xref data-throw-if-not-resolved="true" uid="System.Exception.Message"></xref> for details returned from the server.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Communication.Chat.ChatClient.CreateChatThreadAsync(System.String,System.Collections.Generic.IEnumerable{Azure.Communication.Chat.ChatParticipant},System.String,System.Threading.CancellationToken)
  commentId: M:Azure.Communication.Chat.ChatClient.CreateChatThreadAsync(System.String,System.Collections.Generic.IEnumerable{Azure.Communication.Chat.ChatParticipant},System.String,System.Threading.CancellationToken)
  name: CreateChatThreadAsync(String, IEnumerable<ChatParticipant>, String, CancellationToken)
  fullName: Azure.Communication.Chat.ChatClient.CreateChatThreadAsync(String, IEnumerable<ChatParticipant>, String, CancellationToken)
  nameWithType: ChatClient.CreateChatThreadAsync(String, IEnumerable<ChatParticipant>, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.Communication.Chat.CreateChatThreadResult>> CreateChatThreadAsync (string topic, System.Collections.Generic.IEnumerable<Azure.Communication.Chat.ChatParticipant> participants = default, string idempotencyToken = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member CreateChatThreadAsync : string * seq<Azure.Communication.Chat.ChatParticipant> * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Communication.Chat.CreateChatThreadResult>>

        override this.CreateChatThreadAsync : string * seq<Azure.Communication.Chat.ChatParticipant> * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Communication.Chat.CreateChatThreadResult>>
  - lang: vb
    values:
    - value: Public Overridable Function CreateChatThreadAsync (topic As String, Optional participants As IEnumerable(Of ChatParticipant) = Nothing, Optional idempotencyToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CreateChatThreadResult))
  monikers:
  - azure-dotnet
  summary: Creates a ChatThreadClient asynchronously. <xref data-throw-if-not-resolved="true" uid="Azure.Communication.Chat.ChatThreadClient"></xref>.
  metadata: {}
uid: Azure.Communication.Chat.ChatClient.CreateChatThreadAsync*
commentId: Overload:Azure.Communication.Chat.ChatClient.CreateChatThreadAsync
namespace: Azure.Communication.Chat
name: CreateChatThreadAsync
fullName: Azure.Communication.Chat.ChatClient.CreateChatThreadAsync
nameWithType: ChatClient.CreateChatThreadAsync
assembliesWithMoniker:
- value: Azure.Communication.Chat.dll
packagesWithMoniker:
- value: Azure.Communication.Chat v1.1.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.Communication.Chat.ChatClient.CreateChatThreadAsync
  api_location:
  - Azure.Communication.Chat.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Communication.Chat.ChatClient.CreateChatThreadAsync
  - Azure::Communication::Chat::ChatClient::CreateChatThreadAsync
  - CreateChatThreadAsync
  - ChatClient.CreateChatThreadAsync
  - ChatClient::CreateChatThreadAsync
  helpviewer_keywords:
  - ChatClient.CreateChatThreadAsync method [.NET]
  - CreateChatThreadAsync method [.NET], class ChatClient
  - ChatClient.CreateChatThreadAsync(String, IEnumerable<ChatParticipant>, String, CancellationToken) method [.NET]
  - CreateChatThreadAsync(String, IEnumerable<ChatParticipant>, String, CancellationToken) method [.NET], class ChatClient
  monikers:
  - azure-dotnet
