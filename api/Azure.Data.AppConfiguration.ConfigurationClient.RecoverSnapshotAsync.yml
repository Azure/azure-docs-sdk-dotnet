### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot?alt=Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot&text=ConfigurationSettingsSnapshot" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: name
    description: The name of the configuration setting snapshot to recover.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Data.AppConfiguration.ConfigurationClient.RecoverSnapshotAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Azure.Data.AppConfiguration.ConfigurationClient.RecoverSnapshotAsync(System.String,System.Threading.CancellationToken)
  name: RecoverSnapshotAsync(String, CancellationToken)
  fullName: Azure.Data.AppConfiguration.ConfigurationClient.RecoverSnapshotAsync(String, CancellationToken)
  nameWithType: ConfigurationClient.RecoverSnapshotAsync(String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot>> RecoverSnapshotAsync (string name, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member RecoverSnapshotAsync : string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot>>

        override this.RecoverSnapshotAsync : string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot>>
  - lang: vb
    values:
    - value: Public Overridable Function RecoverSnapshotAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSettingsSnapshot))
  monikers:
  - azure-dotnet-preview
  summary: Updates the state of a configuration setting snapshot to ready.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot?alt=Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot&text=ConfigurationSettingsSnapshot" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: snapshot
    description: The name of the configuration setting snapshot to recover.
    type: <xref href="Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot?alt=Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot&text=ConfigurationSettingsSnapshot" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: onlyIfUnchanged
    description: >-
      If set to true and the configuration settings snapshot exists in the configuration store, update the snapshot
                  status if the passed-in <xref data-throw-if-not-resolved="true" uid="Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot"></xref> has the same status as the one in the configuration store. The status
                  is the same if their ETag fields match.  If the two snapshots have a different status, this method will throw an exception to indicate
                  that the snapshot in the configuration store was modified since it was last obtained by the client.
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Data.AppConfiguration.ConfigurationClient.RecoverSnapshotAsync(Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Azure.Data.AppConfiguration.ConfigurationClient.RecoverSnapshotAsync(Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot,System.Boolean,System.Threading.CancellationToken)
  name: RecoverSnapshotAsync(ConfigurationSettingsSnapshot, Boolean, CancellationToken)
  fullName: Azure.Data.AppConfiguration.ConfigurationClient.RecoverSnapshotAsync(ConfigurationSettingsSnapshot, Boolean, CancellationToken)
  nameWithType: ConfigurationClient.RecoverSnapshotAsync(ConfigurationSettingsSnapshot, Boolean, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot>> RecoverSnapshotAsync (Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot snapshot, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member RecoverSnapshotAsync : Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot * bool * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot>>

        override this.RecoverSnapshotAsync : Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot * bool * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.Data.AppConfiguration.ConfigurationSettingsSnapshot>>
  - lang: vb
    values:
    - value: Public Overridable Function RecoverSnapshotAsync (snapshot As ConfigurationSettingsSnapshot, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSettingsSnapshot))
  monikers:
  - azure-dotnet-preview
  summary: Updates the state of a configuration setting snapshot to ready.
  metadata: {}
uid: Azure.Data.AppConfiguration.ConfigurationClient.RecoverSnapshotAsync*
commentId: Overload:Azure.Data.AppConfiguration.ConfigurationClient.RecoverSnapshotAsync
namespace: Azure.Data.AppConfiguration
name: RecoverSnapshotAsync
fullName: Azure.Data.AppConfiguration.ConfigurationClient.RecoverSnapshotAsync
nameWithType: ConfigurationClient.RecoverSnapshotAsync
assembliesWithMoniker:
- value: Azure.Data.AppConfiguration.dll
packagesWithMoniker:
- value: Azure.Data.AppConfiguration v1.3.0-beta.2
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Data.AppConfiguration.ConfigurationClient.RecoverSnapshotAsync
  api_location:
  - Azure.Data.AppConfiguration.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Data.AppConfiguration.ConfigurationClient.RecoverSnapshotAsync
  - Azure::Data::AppConfiguration::ConfigurationClient::RecoverSnapshotAsync
  - RecoverSnapshotAsync
  - ConfigurationClient.RecoverSnapshotAsync
  - ConfigurationClient::RecoverSnapshotAsync
  helpviewer_keywords:
  - ConfigurationClient.RecoverSnapshotAsync method [.NET]
  - RecoverSnapshotAsync method [.NET], class ConfigurationClient
  - ConfigurationClient.RecoverSnapshotAsync(String, CancellationToken) method [.NET]
  - RecoverSnapshotAsync(String, CancellationToken) method [.NET], class ConfigurationClient
  - ConfigurationClient.RecoverSnapshotAsync(ConfigurationSettingsSnapshot, Boolean, CancellationToken) method [.NET]
  - RecoverSnapshotAsync(ConfigurationSettingsSnapshot, Boolean, CancellationToken) method [.NET], class ConfigurationClient
  monikers:
  - azure-dotnet-preview
