### YamlMime:NetType
type: class
inheritancesWithMoniker:
- values:
  - <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
  - <xref href="Azure.Core.TokenCredential?alt=Azure.Core.TokenCredential&text=TokenCredential" data-throw-if-not-resolved="True"/>
constructors:
- uid: Azure.Identity.EnvironmentCredential.#ctor
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Identity.EnvironmentCredential.#ctor(Azure.Identity.EnvironmentCredentialOptions)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
methods:
- uid: Azure.Identity.EnvironmentCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
- uid: Azure.Identity.EnvironmentCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
uid: Azure.Identity.EnvironmentCredential
commentId: T:Azure.Identity.EnvironmentCredential
namespace: Azure.Identity
name: EnvironmentCredential
fullName: Azure.Identity.EnvironmentCredential
nameWithType: Azure.Identity.EnvironmentCredential
assembliesWithMoniker:
- value: Azure.Identity.dll
packagesWithMoniker:
- value: Azure.Identity v1.9.0
  monikers:
  - azure-dotnet
- value: Azure.Identity v1.10.0-beta.1
  monikers:
  - azure-dotnet-preview
syntaxWithMoniker:
- lang: csharp
  values:
  - value: 'public class EnvironmentCredential : Azure.Core.TokenCredential'
- lang: fsharp
  values:
  - value: >-
      type EnvironmentCredential = class
          inherit TokenCredential
- lang: vb
  values:
  - value: >-
      Public Class EnvironmentCredential

      Inherits TokenCredential
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
summary: >-
  Enables authentication to Azure Active Directory using a client secret or certificate, or as a user

  with a username and password.

  <p>

  Configuration is attempted in this order, using these environment variables:

  </p><strong>Service principal with secret:</strong><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td>AZURE_TENANT_ID</td><td>The Azure Active Directory tenant (directory) ID.</td></tr><tr><td>AZURE_CLIENT_ID</td><td>The client (application) ID of an App Registration in the tenant.</td></tr><tr><td>AZURE_CLIENT_SECRET</td><td>A client secret that was generated for the App Registration.</td></tr></tbody></table><strong>Service principal with certificate:</strong><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td>AZURE_TENANT_ID</td><td>The Azure Active Directory tenant (directory) ID.</td></tr><tr><td>AZURE_CLIENT_ID</td><td>The client (application) ID of an App Registration in the tenant.</td></tr><tr><td>AZURE_CLIENT_CERTIFICATE_PATH</td><td>A path to certificate and private key pair in PEM or PFX format, which can authenticate the App Registration.</td></tr><tr><td>AZURE_CLIENT_CERTIFICATE_PASSWORD</td><td>(Optional) The password protecting the certificate file (currently only supported for PFX (PKCS12) certificates).</td></tr><tr><td>AZURE_CLIENT_SEND_CERTIFICATE_CHAIN</td><td>(Optional) Specifies whether an authentication request will include an x5c header to support subject name / issuer based authentication. When set to `true` or `1`, authentication requests include the x5c header.</td></tr></tbody></table><strong>Username and password:</strong><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td>AZURE_TENANT_ID</td><td>The Azure Active Directory tenant (directory) ID.</td></tr><tr><td>AZURE_CLIENT_ID</td><td>The client (application) ID of an App Registration in the tenant.</td></tr><tr><td>AZURE_USERNAME</td><td>The username, also known as upn, of an Azure Active Directory user account.</td></tr><tr><td>AZURE_PASSWORD</td><td>The password of the Azure Active Directory user account. Note this does not support accounts with MFA enabled.</td></tr></tbody></table>


  This credential ultimately uses a <xref data-throw-if-not-resolved="true" uid="Azure.Identity.ClientSecretCredential"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.Identity.ClientCertificateCredential"></xref>, or <xref data-throw-if-not-resolved="true" uid="Azure.Identity.UsernamePasswordCredential"></xref> to

  perform the authentication using these details. Please consult the

  documentation of that class for more details.
metadata:
  api_name:
  - Azure.Identity.EnvironmentCredential
  api_location:
  - Azure.Identity.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Identity.EnvironmentCredential
  - Azure::Identity::EnvironmentCredential
  - EnvironmentCredential
  helpviewer_keywords:
  - Azure.Identity.EnvironmentCredential class [.NET]
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
