### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&gt;
    description: The response returned from the service.
  parameters:
  - namesWithMoniker:
    - value: connectionId
    description: Target connection Id.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: reason
    description: The reason closing the client connection.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">connectionId</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">connectionId</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseConnectionAsync(System.String,System.String,Azure.RequestContext)
  commentId: M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseConnectionAsync(System.String,System.String,Azure.RequestContext)
  name: CloseConnectionAsync(String, String, RequestContext)
  fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseConnectionAsync(String, String, RequestContext)
  nameWithType: WebPubSubServiceClient.CloseConnectionAsync(String, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response> CloseConnectionAsync (string connectionId, string reason = default, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member CloseConnectionAsync : string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

        override this.CloseConnectionAsync : string * string * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
  - lang: vb
    values:
    - value: Public Overridable Function CloseConnectionAsync (connectionId As String, Optional reason As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Close the client connection.
  remarks: >-
    <p>Schema for <code data-dev-comment-type="c">Response Error</code>: 


    ```

    {
                  code: string,
                  message: string,
                  target: string,
                  details: [ErrorDetail],
                  inner: {
                    code: string,
                    inner: InnerError
                  }
                }
    ```

    </p>
  examples: >-
    This sample shows how to call CloseConnectionAsync with required parameters.


    ```

    var client = new WebPubSubServiceClient("<https://my-service.azure.com>", "<hub>");


    Response response = await client.CloseConnectionAsync("<connectionId>");

    Console.WriteLine(response.Status);

    ```

    This sample shows how to call CloseConnectionAsync with all parameters.


    ```

    var client = new WebPubSubServiceClient("<https://my-service.azure.com>", "<hub>");


    Response response = await client.CloseConnectionAsync("<connectionId>", "<reason>");

    Console.WriteLine(response.Status);

    ```
  metadata: {}
uid: Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseConnectionAsync*
commentId: Overload:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseConnectionAsync
namespace: Azure.Messaging.WebPubSub
name: CloseConnectionAsync
fullName: Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseConnectionAsync
nameWithType: WebPubSubServiceClient.CloseConnectionAsync
assembliesWithMoniker:
- value: Azure.Messaging.WebPubSub.dll
packagesWithMoniker:
- value: Azure.Messaging.WebPubSub v1.3.0
  monikers:
  - azure-dotnet
- value: Azure.Messaging.WebPubSub v1.1.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseConnectionAsync
  api_location:
  - Azure.Messaging.WebPubSub.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseConnectionAsync
  - Azure::Messaging::WebPubSub::WebPubSubServiceClient::CloseConnectionAsync
  - CloseConnectionAsync
  - WebPubSubServiceClient.CloseConnectionAsync
  - WebPubSubServiceClient::CloseConnectionAsync
  helpviewer_keywords:
  - WebPubSubServiceClient.CloseConnectionAsync method [.NET]
  - CloseConnectionAsync method [.NET], class WebPubSubServiceClient
  - WebPubSubServiceClient.CloseConnectionAsync(String, String, RequestContext) method [.NET]
  - CloseConnectionAsync(String, String, RequestContext) method [.NET], class WebPubSubServiceClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
