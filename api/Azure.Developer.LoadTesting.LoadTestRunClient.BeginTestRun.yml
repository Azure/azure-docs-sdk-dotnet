### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Developer.LoadTesting.TestRunResultOperation?alt=Azure.Developer.LoadTesting.TestRunResultOperation&text=TestRunResultOperation" data-throw-if-not-resolved="True"/>
      monikers:
      - azure-dotnet
    - value: <xref href="Azure.Developer.LoadTesting.TestRunOperation?alt=Azure.Developer.LoadTesting.TestRunOperation&text=TestRunOperation" data-throw-if-not-resolved="True"/>
      monikers:
      - azure-dotnet-preview
    description: The response returned from the service. Details of the response body schema are in the Remarks section below.
  parameters:
  - namesWithMoniker:
    - value: waitUntil
    description: Defines how to use the LRO, if passed WaitUntil.Completed then waits for test run to get completed
    type: <xref href="Azure.WaitUntil?alt=Azure.WaitUntil&text=WaitUntil" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: testRunId
    description: Unique name for the load test run, must contain only lower-case alphabetic, numeric, underscore or hyphen characters.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request. Details of the request body schema are in the Remarks section below.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: timeSpan
    description: pollingInterval for poller class, default value or null value is treated as 5 secs
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.TimeSpan?alt=System.TimeSpan&text=TimeSpan" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: oldTestRunId
    description: Existing test run identifier that should be rerun, if this is provided, the test will run with the JMX file, configuration and app components from the existing test run. You can override the configuration values for new test run in the request body.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">testRunId</code> or <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">testRunId</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Developer.LoadTesting.LoadTestRunClient.BeginTestRun(Azure.WaitUntil,System.String,Azure.Core.RequestContent,System.Nullable{System.TimeSpan},System.String,Azure.RequestContext)
  commentId: M:Azure.Developer.LoadTesting.LoadTestRunClient.BeginTestRun(Azure.WaitUntil,System.String,Azure.Core.RequestContent,System.Nullable{System.TimeSpan},System.String,Azure.RequestContext)
  name: BeginTestRun(WaitUntil, String, RequestContent, Nullable<TimeSpan>, String, RequestContext)
  fullName: Azure.Developer.LoadTesting.LoadTestRunClient.BeginTestRun(WaitUntil, String, RequestContent, Nullable<TimeSpan>, String, RequestContext)
  nameWithType: LoadTestRunClient.BeginTestRun(WaitUntil, String, RequestContent, Nullable<TimeSpan>, String, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Developer.LoadTesting.TestRunResultOperation BeginTestRun (Azure.WaitUntil waitUntil, string testRunId, Azure.Core.RequestContent content, TimeSpan? timeSpan = default, string oldTestRunId = default, Azure.RequestContext context = default);
      monikers:
      - azure-dotnet
    - value: public virtual Azure.Developer.LoadTesting.TestRunOperation BeginTestRun (Azure.WaitUntil waitUntil, string testRunId, Azure.Core.RequestContent content, TimeSpan? timeSpan = default, string oldTestRunId = default, Azure.RequestContext context = default);
      monikers:
      - azure-dotnet-preview
  - lang: fsharp
    values:
    - value: >-
        abstract member BeginTestRun : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable<TimeSpan> * string * Azure.RequestContext -> Azure.Developer.LoadTesting.TestRunResultOperation

        override this.BeginTestRun : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable<TimeSpan> * string * Azure.RequestContext -> Azure.Developer.LoadTesting.TestRunResultOperation
      monikers:
      - azure-dotnet
    - value: >-
        abstract member BeginTestRun : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable<TimeSpan> * string * Azure.RequestContext -> Azure.Developer.LoadTesting.TestRunOperation

        override this.BeginTestRun : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable<TimeSpan> * string * Azure.RequestContext -> Azure.Developer.LoadTesting.TestRunOperation
      monikers:
      - azure-dotnet-preview
  - lang: vb
    values:
    - value: Public Overridable Function BeginTestRun (waitUntil As WaitUntil, testRunId As String, content As RequestContent, Optional timeSpan As Nullable(Of TimeSpan) = Nothing, Optional oldTestRunId As String = Nothing, Optional context As RequestContext = Nothing) As TestRunResultOperation
      monikers:
      - azure-dotnet
    - value: Public Overridable Function BeginTestRun (waitUntil As WaitUntil, testRunId As String, content As RequestContent, Optional timeSpan As Nullable(Of TimeSpan) = Nothing, Optional oldTestRunId As String = Nothing, Optional context As RequestContext = Nothing) As TestRunOperation
      monikers:
      - azure-dotnet-preview
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: Create and start a new test run with the given name.
  metadata: {}
uid: Azure.Developer.LoadTesting.LoadTestRunClient.BeginTestRun*
commentId: Overload:Azure.Developer.LoadTesting.LoadTestRunClient.BeginTestRun
namespace: Azure.Developer.LoadTesting
name: BeginTestRun
fullName: Azure.Developer.LoadTesting.LoadTestRunClient.BeginTestRun
nameWithType: LoadTestRunClient.BeginTestRun
assembliesWithMoniker:
- value: Azure.Developer.LoadTesting.dll
packagesWithMoniker:
- value: Azure.Developer.LoadTesting v1.0.1
  monikers:
  - azure-dotnet
- value: Azure.Developer.LoadTesting v1.0.0-beta.2
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Developer.LoadTesting.LoadTestRunClient.BeginTestRun
  api_location:
  - Azure.Developer.LoadTesting.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Developer.LoadTesting.LoadTestRunClient.BeginTestRun
  - Azure::Developer::LoadTesting::LoadTestRunClient::BeginTestRun
  - BeginTestRun
  - LoadTestRunClient.BeginTestRun
  - LoadTestRunClient::BeginTestRun
  helpviewer_keywords:
  - LoadTestRunClient.BeginTestRun method [.NET]
  - BeginTestRun method [.NET], class LoadTestRunClient
  - LoadTestRunClient.BeginTestRun(WaitUntil, String, RequestContent, Nullable<TimeSpan>, String, RequestContext) method [.NET]
  - BeginTestRun(WaitUntil, String, RequestContent, Nullable<TimeSpan>, String, RequestContext) method [.NET], class LoadTestRunClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
