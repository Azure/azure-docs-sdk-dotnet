### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.AnomalyDetector.UnivariateChangePointDetectionResult?alt=Azure.AI.AnomalyDetector.UnivariateChangePointDetectionResult&text=UnivariateChangePointDetectionResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: options
    description: Method of univariate anomaly detection.
    type: <xref href="Azure.AI.AnomalyDetector.UnivariateChangePointDetectionOptions?alt=Azure.AI.AnomalyDetector.UnivariateChangePointDetectionOptions&text=UnivariateChangePointDetectionOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">options</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint(Azure.AI.AnomalyDetector.UnivariateChangePointDetectionOptions,System.Threading.CancellationToken)
  commentId: M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint(Azure.AI.AnomalyDetector.UnivariateChangePointDetectionOptions,System.Threading.CancellationToken)
  name: DetectUnivariateChangePoint(UnivariateChangePointDetectionOptions, CancellationToken)
  fullName: Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint(UnivariateChangePointDetectionOptions, CancellationToken)
  nameWithType: AnomalyDetectorClient.DetectUnivariateChangePoint(UnivariateChangePointDetectionOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response<Azure.AI.AnomalyDetector.UnivariateChangePointDetectionResult> DetectUnivariateChangePoint (Azure.AI.AnomalyDetector.UnivariateChangePointDetectionOptions options, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DetectUnivariateChangePoint : Azure.AI.AnomalyDetector.UnivariateChangePointDetectionOptions * System.Threading.CancellationToken -> Azure.Response<Azure.AI.AnomalyDetector.UnivariateChangePointDetectionResult>

        override this.DetectUnivariateChangePoint : Azure.AI.AnomalyDetector.UnivariateChangePointDetectionOptions * System.Threading.CancellationToken -> Azure.Response<Azure.AI.AnomalyDetector.UnivariateChangePointDetectionResult>
  - lang: vb
    values:
    - value: Public Overridable Function DetectUnivariateChangePoint (options As UnivariateChangePointDetectionOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of UnivariateChangePointDetectionResult)
  monikers:
  - azure-dotnet-preview
  summary: Detect change point for the entire series.
  remarks: Evaluate the change point score of every series point.
  examples: >-
    This sample shows how to call DetectUnivariateChangePoint with required parameters.


    ```

    var credential = new AzureKeyCredential("<key>");

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new AnomalyDetectorClient(endpoint, credential);


    var options = new UnivariateChangePointDetectionOptions(new TimeSeriesPoint[] 

    {
        new TimeSeriesPoint(3.14f)
    {
            Timestamp = DateTimeOffset.UtcNow,
        }
    }, TimeGranularity.Yearly)

    {
        CustomInterval = 1234,
        Period = 1234,
        StableTrendWindow = 1234,
        Threshold = 3.14f,
    };

    var result = client.DetectUnivariateChangePoint(options);

    ```
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>
    description: The response returned from the service.
  parameters:
  - namesWithMoniker:
    - value: content
    description: The content to send as the body of the request.
    type: <xref href="Azure.Core.RequestContent?alt=Azure.Core.RequestContent&text=RequestContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: context
    description: The request context, which can override default behaviors of the client pipeline on a per-call basis.
    type: <xref href="Azure.RequestContext?alt=Azure.RequestContext&text=RequestContext" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">content</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: Service returned a non-success status code.
    type: <xref href="Azure.RequestFailedException?alt=Azure.RequestFailedException&text=RequestFailedException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint(Azure.Core.RequestContent,Azure.RequestContext)
  commentId: M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint(Azure.Core.RequestContent,Azure.RequestContext)
  name: DetectUnivariateChangePoint(RequestContent, RequestContext)
  fullName: Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint(RequestContent, RequestContext)
  nameWithType: AnomalyDetectorClient.DetectUnivariateChangePoint(RequestContent, RequestContext)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response DetectUnivariateChangePoint (Azure.Core.RequestContent content, Azure.RequestContext context = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member DetectUnivariateChangePoint : Azure.Core.RequestContent * Azure.RequestContext -> Azure.Response

        override this.DetectUnivariateChangePoint : Azure.Core.RequestContent * Azure.RequestContext -> Azure.Response
  - lang: vb
    values:
    - value: Public Overridable Function DetectUnivariateChangePoint (content As RequestContent, Optional context As RequestContext = Nothing) As Response
  monikers:
  - azure-dotnet-preview
  summary: >-
    [Protocol Method] Detect change point for the entire series

    <ul><li>

    This <a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</a> allows explicit creation of the request and processing of the response for advanced scenarios.

    </li><li>

    Please try the simpler <xref data-throw-if-not-resolved="true" uid="Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint(Azure.AI.AnomalyDetector.UnivariateChangePointDetectionOptions,System.Threading.CancellationToken)"></xref> convenience overload with strongly typed models first.

    </li></ul>
  remarks: >-
    <p>Evaluate change point score of every series point</p><p>Below is the JSON schema for the request and response payloads.</p><p>Request Body:</p><p>Schema for <code data-dev-comment-type="c">UnivariateChangePointDetectionOptions</code>: 


    ```

    {
      series: [
        {
          timestamp: string (date & time), # Optional.
          value: number, # Required.
        }
      ], # Required.
      granularity: "yearly" | "monthly" | "weekly" | "daily" | "hourly" | "minutely" | "secondly" | "microsecond" | "none", # Required.
      customInterval: number, # Optional.
      period: number, # Optional.
      stableTrendWindow: number, # Optional.
      threshold: number, # Optional.
    }

    ```

    </p><p>Response Body:</p><p>Schema for <code data-dev-comment-type="c">UnivariateChangePointDetectionResult</code>: 


    ```

    {
      period: number, # Optional.
      isChangePoint: [boolean], # Optional.
      confidenceScores: [number], # Optional.
    }

    ```

    </p>
  examples: >-
    This sample shows how to call DetectUnivariateChangePoint with required request content, and how to parse the result.


    ```

    var credential = new AzureKeyCredential("<key>");

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new AnomalyDetectorClient(endpoint, credential);


    var data = new {
        series = new[] {
            new {
                value = 123.45f,
            }
        },
        granularity = "yearly",
    };


    Response response = client.DetectUnivariateChangePoint(RequestContent.Create(data));


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.ToString());

    ```

    This sample shows how to call DetectUnivariateChangePoint with all request content, and how to parse the result.


    ```

    var credential = new AzureKeyCredential("<key>");

    var endpoint = new Uri("<https://my-service.azure.com>");

    var client = new AnomalyDetectorClient(endpoint, credential);


    var data = new {
        series = new[] {
            new {
                timestamp = "2022-05-10T14:57:31.2311892-04:00",
                value = 123.45f,
            }
        },
        granularity = "yearly",
        customInterval = 1234,
        period = 1234,
        stableTrendWindow = 1234,
        threshold = 123.45f,
    };


    Response response = client.DetectUnivariateChangePoint(RequestContent.Create(data), new RequestContext());


    JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;

    Console.WriteLine(result.GetProperty("period").ToString());

    Console.WriteLine(result.GetProperty("isChangePoint")[0].ToString());

    Console.WriteLine(result.GetProperty("confidenceScores")[0].ToString());

    ```
  metadata: {}
uid: Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint*
commentId: Overload:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint
namespace: Azure.AI.AnomalyDetector
name: DetectUnivariateChangePoint
fullName: Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint
nameWithType: AnomalyDetectorClient.DetectUnivariateChangePoint
assembliesWithMoniker:
- value: Azure.AI.AnomalyDetector.dll
packagesWithMoniker:
- value: Azure.AI.AnomalyDetector v3.0.0-preview.7
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint
  api_location:
  - Azure.AI.AnomalyDetector.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectUnivariateChangePoint
  - Azure::AI::AnomalyDetector::AnomalyDetectorClient::DetectUnivariateChangePoint
  - DetectUnivariateChangePoint
  - AnomalyDetectorClient.DetectUnivariateChangePoint
  - AnomalyDetectorClient::DetectUnivariateChangePoint
  helpviewer_keywords:
  - AnomalyDetectorClient.DetectUnivariateChangePoint method [.NET]
  - DetectUnivariateChangePoint method [.NET], class AnomalyDetectorClient
  - AnomalyDetectorClient.DetectUnivariateChangePoint(UnivariateChangePointDetectionOptions, CancellationToken) method [.NET]
  - DetectUnivariateChangePoint(UnivariateChangePointDetectionOptions, CancellationToken) method [.NET], class AnomalyDetectorClient
  - AnomalyDetectorClient.DetectUnivariateChangePoint(RequestContent, RequestContext) method [.NET]
  - DetectUnivariateChangePoint(RequestContent, RequestContext) method [.NET], class AnomalyDetectorClient
  monikers:
  - azure-dotnet-preview
