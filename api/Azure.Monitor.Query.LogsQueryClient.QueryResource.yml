### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Monitor.Query.Models.LogsQueryResult?alt=Azure.Monitor.Query.Models.LogsQueryResult&text=LogsQueryResult" data-throw-if-not-resolved="True"/>&gt;
    description: The logs matching the query.
  parameters:
  - namesWithMoniker:
    - value: resourceId
    description: The resourceId where the query should be executed.
    type: <xref href="Azure.Core.ResourceIdentifier?alt=Azure.Core.ResourceIdentifier&text=ResourceIdentifier" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: query
    description: The Kusto query to fetch the logs.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: timeRange
    description: The time period for which the logs should be looked up.
    type: <xref href="Azure.Monitor.Query.QueryTimeRange?alt=Azure.Monitor.Query.QueryTimeRange&text=QueryTimeRange" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Monitor.Query.LogsQueryOptions"></xref> to configure the query.
    type: <xref href="Azure.Monitor.Query.LogsQueryOptions?alt=Azure.Monitor.Query.LogsQueryOptions&text=LogsQueryOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Monitor.Query.LogsQueryClient.QueryResource(Azure.Core.ResourceIdentifier,System.String,Azure.Monitor.Query.QueryTimeRange,Azure.Monitor.Query.LogsQueryOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Monitor.Query.LogsQueryClient.QueryResource(Azure.Core.ResourceIdentifier,System.String,Azure.Monitor.Query.QueryTimeRange,Azure.Monitor.Query.LogsQueryOptions,System.Threading.CancellationToken)
  name: QueryResource(ResourceIdentifier, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  fullName: Azure.Monitor.Query.LogsQueryClient.QueryResource(ResourceIdentifier, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  nameWithType: LogsQueryClient.QueryResource(ResourceIdentifier, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response<Azure.Monitor.Query.Models.LogsQueryResult> QueryResource (Azure.Core.ResourceIdentifier resourceId, string query, Azure.Monitor.Query.QueryTimeRange timeRange, Azure.Monitor.Query.LogsQueryOptions options = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member QueryResource : Azure.Core.ResourceIdentifier * string * Azure.Monitor.Query.QueryTimeRange * Azure.Monitor.Query.LogsQueryOptions * System.Threading.CancellationToken -> Azure.Response<Azure.Monitor.Query.Models.LogsQueryResult>

        override this.QueryResource : Azure.Core.ResourceIdentifier * string * Azure.Monitor.Query.QueryTimeRange * Azure.Monitor.Query.LogsQueryOptions * System.Threading.CancellationToken -> Azure.Response<Azure.Monitor.Query.Models.LogsQueryResult>
  - lang: vb
    values:
    - value: Public Overridable Function QueryResource (resourceId As ResourceIdentifier, query As String, timeRange As QueryTimeRange, Optional options As LogsQueryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LogsQueryResult)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Returns all the Azure Monitor logs matching the given query for an Azure resource.

    <example snippet="Snippet:QueryResource">


    ```csharp

    var client = new LogsQueryClient(new DefaultAzureCredential());


    string resourceId = "/subscriptions/<subscription_id>/resourceGroups/<resource_group_name>/providers/<resource_provider>/<resource>";

    string tableName = "<table_name>";

    Response<LogsQueryResult> results = await client.QueryResourceAsync(
        new ResourceIdentifier(resourceId),
        $"{tableName} | distinct * | project TimeGenerated",
        new QueryTimeRange(TimeSpan.FromDays(7)));

    LogsTable resultTable = results.Value.Table;

    foreach (LogsTableRow row in resultTable.Rows)

    {
        Console.WriteLine($"{row["OperationName"]} {row["ResourceGroup"]}");
    }


    foreach (LogsTableColumn columns in resultTable.Columns)

    {
        Console.WriteLine("Name: " + columns.Name + " Type: " + columns.Type);
    }

    ```

    </example>
  metadata: {}
- typeParameters:
  - name: T
  returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Collections.Generic.IReadOnlyList`1?alt=System.Collections.Generic.IReadOnlyList&text=IReadOnlyList" data-throw-if-not-resolved="True"/>&lt;T&gt;&gt;
    description: The logs matching the query.
  parameters:
  - namesWithMoniker:
    - value: resourceId
    description: The resourceId where the query should be executed.
    type: <xref href="Azure.Core.ResourceIdentifier?alt=Azure.Core.ResourceIdentifier&text=ResourceIdentifier" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: query
    description: The Kusto query to fetch the logs.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: timeRange
    description: The time period for which the logs should be looked up.
    type: <xref href="Azure.Monitor.Query.QueryTimeRange?alt=Azure.Monitor.Query.QueryTimeRange&text=QueryTimeRange" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.Monitor.Query.LogsQueryOptions"></xref> to configure the query.
    type: <xref href="Azure.Monitor.Query.LogsQueryOptions?alt=Azure.Monitor.Query.LogsQueryOptions&text=LogsQueryOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Monitor.Query.LogsQueryClient.QueryResource``1(Azure.Core.ResourceIdentifier,System.String,Azure.Monitor.Query.QueryTimeRange,Azure.Monitor.Query.LogsQueryOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Monitor.Query.LogsQueryClient.QueryResource``1(Azure.Core.ResourceIdentifier,System.String,Azure.Monitor.Query.QueryTimeRange,Azure.Monitor.Query.LogsQueryOptions,System.Threading.CancellationToken)
  name: QueryResource<T>(ResourceIdentifier, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  fullName: Azure.Monitor.Query.LogsQueryClient.QueryResource<T>(ResourceIdentifier, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  nameWithType: LogsQueryClient.QueryResource<T>(ResourceIdentifier, String, QueryTimeRange, LogsQueryOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response<System.Collections.Generic.IReadOnlyList<T>> QueryResource<T> (Azure.Core.ResourceIdentifier resourceId, string query, Azure.Monitor.Query.QueryTimeRange timeRange, Azure.Monitor.Query.LogsQueryOptions options = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member QueryResource : Azure.Core.ResourceIdentifier * string * Azure.Monitor.Query.QueryTimeRange * Azure.Monitor.Query.LogsQueryOptions * System.Threading.CancellationToken -> Azure.Response<System.Collections.Generic.IReadOnlyList<'T>>

        override this.QueryResource : Azure.Core.ResourceIdentifier * string * Azure.Monitor.Query.QueryTimeRange * Azure.Monitor.Query.LogsQueryOptions * System.Threading.CancellationToken -> Azure.Response<System.Collections.Generic.IReadOnlyList<'T>>
  - lang: vb
    values:
    - value: Public Overridable Function QueryResource(Of T) (resourceId As ResourceIdentifier, query As String, timeRange As QueryTimeRange, Optional options As LogsQueryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IReadOnlyList(Of T))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Returns all the Azure Monitor logs matching the given query for an Azure resource.

    <example snippet="Snippet:QueryResource">


    ```csharp

    var client = new LogsQueryClient(new DefaultAzureCredential());


    string resourceId = "/subscriptions/<subscription_id>/resourceGroups/<resource_group_name>/providers/<resource_provider>/<resource>";

    string tableName = "<table_name>";

    Response<LogsQueryResult> results = await client.QueryResourceAsync(
        new ResourceIdentifier(resourceId),
        $"{tableName} | distinct * | project TimeGenerated",
        new QueryTimeRange(TimeSpan.FromDays(7)));

    LogsTable resultTable = results.Value.Table;

    foreach (LogsTableRow row in resultTable.Rows)

    {
        Console.WriteLine($"{row["OperationName"]} {row["ResourceGroup"]}");
    }


    foreach (LogsTableColumn columns in resultTable.Columns)

    {
        Console.WriteLine("Name: " + columns.Name + " Type: " + columns.Type);
    }

    ```

    </example>
  metadata: {}
uid: Azure.Monitor.Query.LogsQueryClient.QueryResource*
commentId: Overload:Azure.Monitor.Query.LogsQueryClient.QueryResource
namespace: Azure.Monitor.Query
name: QueryResource
fullName: Azure.Monitor.Query.LogsQueryClient.QueryResource
nameWithType: LogsQueryClient.QueryResource
assembliesWithMoniker:
- value: Azure.Monitor.Query.dll
packagesWithMoniker:
- value: Azure.Monitor.Query v1.2.0
  monikers:
  - azure-dotnet
- value: Azure.Monitor.Query v1.2.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Monitor.Query.LogsQueryClient.QueryResource
  api_location:
  - Azure.Monitor.Query.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Monitor.Query.LogsQueryClient.QueryResource
  - Azure::Monitor::Query::LogsQueryClient::QueryResource
  - QueryResource
  - LogsQueryClient.QueryResource
  - LogsQueryClient::QueryResource
  - Azure.Monitor.Query.LogsQueryClient.QueryResource``1
  - Azure::Monitor::Query::LogsQueryClient::QueryResource``1
  - QueryResource``1
  - LogsQueryClient.QueryResource``1
  - LogsQueryClient::QueryResource``1
  helpviewer_keywords:
  - LogsQueryClient.QueryResource method [.NET]
  - QueryResource method [.NET], class LogsQueryClient
  - LogsQueryClient.QueryResource(ResourceIdentifier, String, QueryTimeRange, LogsQueryOptions, CancellationToken) method [.NET]
  - QueryResource(ResourceIdentifier, String, QueryTimeRange, LogsQueryOptions, CancellationToken) method [.NET], class LogsQueryClient
  - LogsQueryClient.QueryResource<T>(ResourceIdentifier, String, QueryTimeRange, LogsQueryOptions, CancellationToken) method [.NET]
  - QueryResource<T>(ResourceIdentifier, String, QueryTimeRange, LogsQueryOptions, CancellationToken) method [.NET], class LogsQueryClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
