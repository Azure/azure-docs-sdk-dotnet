### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerResource?alt=Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerResource&text=ConfidentialLedgerResource" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: resourceGroupResource
    description: The <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.Resources.ResourceGroupResource"></xref> instance the method will execute against.
    type: <xref href="Azure.ResourceManager.Resources.ResourceGroupResource?alt=Azure.ResourceManager.Resources.ResourceGroupResource&text=ResourceGroupResource" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: ledgerName
    description: Name of the Confidential Ledger.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">ledgerName</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">ledgerName</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgerAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgerAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)
  name: GetConfidentialLedgerAsync(ResourceGroupResource, String, CancellationToken)
  fullName: Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgerAsync(ResourceGroupResource, String, CancellationToken)
  nameWithType: ConfidentialLedgerExtensions.GetConfidentialLedgerAsync(ResourceGroupResource, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerResource>> GetConfidentialLedgerAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ledgerName, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetConfidentialLedgerAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerResource>>'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetConfidentialLedgerAsync (resourceGroupResource As ResourceGroupResource, ledgerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfidentialLedgerResource))
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Retrieves the properties of a Confidential Ledger.

    <ul><li>Request Path/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConfidentialLedger/ledgers/{ledgerName}</li><li>Operation IdLedger_Get</li></ul>
  metadata: {}
uid: Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgerAsync*
commentId: Overload:Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgerAsync
namespace: Azure.ResourceManager.ConfidentialLedger
name: GetConfidentialLedgerAsync
fullName: Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgerAsync
nameWithType: ConfidentialLedgerExtensions.GetConfidentialLedgerAsync
assembliesWithMoniker:
- value: Azure.ResourceManager.ConfidentialLedger.dll
packagesWithMoniker:
- value: Azure.ResourceManager.ConfidentialLedger v1.0.1
  monikers:
  - azure-dotnet
- value: Azure.ResourceManager.ConfidentialLedger v1.1.0-beta.2
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgerAsync
  api_location:
  - Azure.ResourceManager.ConfidentialLedger.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.ConfidentialLedger.ConfidentialLedgerExtensions.GetConfidentialLedgerAsync
  - Azure::ResourceManager::ConfidentialLedger::ConfidentialLedgerExtensions::GetConfidentialLedgerAsync
  - GetConfidentialLedgerAsync
  - ConfidentialLedgerExtensions.GetConfidentialLedgerAsync
  - ConfidentialLedgerExtensions::GetConfidentialLedgerAsync
  helpviewer_keywords:
  - ConfidentialLedgerExtensions.GetConfidentialLedgerAsync method [.NET]
  - GetConfidentialLedgerAsync method [.NET], class ConfidentialLedgerExtensions
  - ConfidentialLedgerExtensions.GetConfidentialLedgerAsync(ResourceGroupResource, String, CancellationToken) extension method [.NET]
  - GetConfidentialLedgerAsync(ResourceGroupResource, String, CancellationToken) extension method [.NET], class ConfidentialLedgerExtensions
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
