### YamlMime:NetType
type: class
inheritancesWithMoniker:
- values:
  - <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
constructors:
- uid: Azure.Cosmos.CosmosContainer.#ctor
  monikers:
  - azure-dotnet-preview
methods:
- uid: Azure.Cosmos.CosmosContainer.CreateItemAsync``1(``0,System.Nullable{Azure.Cosmos.PartitionKey},Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.CreateItemStreamAsync(System.IO.Stream,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.DeleteContainerAsync(Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.DeleteContainerStreamAsync(Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.DeleteItemAsync``1(System.String,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.DeleteItemStreamAsync(System.String,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.GetItemQueryIterator``1(Azure.Cosmos.QueryDefinition,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.GetItemQueryIterator``1(System.String,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.GetItemQueryStreamIterator(Azure.Cosmos.QueryDefinition,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.GetItemQueryStreamIterator(System.String,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.ReadContainerAsync(Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.ReadContainerStreamAsync(Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.ReadItemAsync``1(System.String,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.ReadItemStreamAsync(System.String,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.ReadThroughputAsync(System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.ReadThroughputAsync(Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.ReplaceContainerAsync(Azure.Cosmos.ContainerProperties,Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.ReplaceContainerStreamAsync(Azure.Cosmos.ContainerProperties,Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.ReplaceItemAsync``1(``0,System.String,System.Nullable{Azure.Cosmos.PartitionKey},Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.ReplaceItemStreamAsync(System.IO.Stream,System.String,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.ReplaceThroughputAsync(System.Int32,Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.UpsertItemAsync``1(``0,System.Nullable{Azure.Cosmos.PartitionKey},Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.UpsertItemStreamAsync(System.IO.Stream,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)
  monikers:
  - azure-dotnet-preview
properties:
- uid: Azure.Cosmos.CosmosContainer.Conflicts
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.Id
  monikers:
  - azure-dotnet-preview
- uid: Azure.Cosmos.CosmosContainer.Scripts
  monikers:
  - azure-dotnet-preview
uid: Azure.Cosmos.CosmosContainer
commentId: T:Azure.Cosmos.CosmosContainer
namespace: Azure.Cosmos
name: CosmosContainer
fullName: Azure.Cosmos.CosmosContainer
nameWithType: Azure.Cosmos.CosmosContainer
assembliesWithMoniker:
- value: Azure.Cosmos.dll
packagesWithMoniker:
- value: Azure.Cosmos v4.0.0-preview3
syntaxWithMoniker:
- lang: csharp
  values:
  - value: public abstract class CosmosContainer
- lang: fsharp
  values:
  - value: type CosmosContainer = class
- lang: vb
  values:
  - value: Public MustInherit Class CosmosContainer
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
summary: >-
  Operations for reading, replacing, or deleting a specific, existing container or item in a container by id.

  There are two different types of operations.

  1. The object operations where it serializes and deserializes the item on request/response

  2. The stream response which takes a Stream containing a JSON serialized object and returns a response containing a Stream

  <xref data-throw-if-not-resolved="true" uid="Azure.Cosmos.CosmosDatabase"></xref> for creating new containers, and reading/querying all containers;
remarks: '<p>Note: all these operations make calls against a fixed budget. You should design your system such that these calls scale sub linearly with your application. For instance, do not call `container.readAsync()` before every single `item.read()` call, to ensure the cosmosContainer exists; do this once on application start up.</p>'
metadata:
  api_name:
  - Azure.Cosmos.CosmosContainer
  api_location:
  - Azure.Cosmos.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Cosmos.CosmosContainer
  - Azure::Cosmos::CosmosContainer
  - CosmosContainer
  helpviewer_keywords:
  - Azure.Cosmos.CosmosContainer class [.NET]
  monikers:
  - azure-dotnet-preview
