### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Collections.Generic.IAsyncEnumerator`1?alt=System.Collections.Generic.IAsyncEnumerator&text=IAsyncEnumerator" data-throw-if-not-resolved="True"/>&lt;T&gt;
    description: An async sequence of values.
  parameters:
  - namesWithMoniker:
    - value: cancellationToken
    description: >-
      The <xref data-throw-if-not-resolved="true" uid="Azure.AsyncPageable`1.CancellationToken"></xref> used for requests made while

      enumerating asynchronously.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  implementsWithMoniker:
  - value: <xref href="System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AsyncPageable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:Azure.AsyncPageable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  name: GetAsyncEnumerator(CancellationToken)
  fullName: Azure.AsyncPageable<T>.GetAsyncEnumerator(CancellationToken)
  nameWithType: AsyncPageable<T>.GetAsyncEnumerator(CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Collections.Generic.IAsyncEnumerator<T> GetAsyncEnumerator (System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetAsyncEnumerator : System.Threading.CancellationToken -> System.Collections.Generic.IAsyncEnumerator<'T>

        override this.GetAsyncEnumerator : System.Threading.CancellationToken -> System.Collections.Generic.IAsyncEnumerator<'T>
  - lang: vb
    values:
    - value: Public Overridable Function GetAsyncEnumerator (Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerator(Of T)
  monikers:
  - azure-dotnet
  summary: >-
    Enumerate the values in the collection asynchronously.  This may

    make multiple service requests.
  metadata: {}
uid: Azure.AsyncPageable`1.GetAsyncEnumerator*
commentId: Overload:Azure.AsyncPageable`1.GetAsyncEnumerator
namespace: Azure
name: GetAsyncEnumerator
fullName: Azure.AsyncPageable<T>.GetAsyncEnumerator
nameWithType: AsyncPageable<T>.GetAsyncEnumerator
assembliesWithMoniker:
- value: Azure.Core.dll
packagesWithMoniker:
- value: Azure.Core v1.34.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
metadata:
  api_name:
  - Azure.AsyncPageable`1.GetAsyncEnumerator
  api_location:
  - Azure.Core.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AsyncPageable`1.GetAsyncEnumerator
  - Azure::AsyncPageable`1::GetAsyncEnumerator
  - Azure.AsyncPageable.GetAsyncEnumerator
  - GetAsyncEnumerator
  - AsyncPageable`1.GetAsyncEnumerator
  - AsyncPageable`1::GetAsyncEnumerator
  helpviewer_keywords:
  - AsyncPageable<T>.GetAsyncEnumerator method [.NET]
  - GetAsyncEnumerator method [.NET], class AsyncPageable<T>
  - AsyncPageable<T>.GetAsyncEnumerator(CancellationToken) method [.NET]
  - GetAsyncEnumerator(CancellationToken) method [.NET], class AsyncPageable<T>
  monikers:
  - azure-dotnet
