### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.AsyncPageable`1?alt=Azure.AsyncPageable&text=AsyncPageable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.AlertsManagement.SmartGroupResource?alt=Azure.ResourceManager.AlertsManagement.SmartGroupResource&text=SmartGroupResource" data-throw-if-not-resolved="True"/>&gt;
    description: An async collection of <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.AlertsManagement.SmartGroupResource"></xref> that may take multiple service requests to iterate over.
  parameters:
  - namesWithMoniker:
    - value: options
    description: A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter.
    type: <xref href="Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions?alt=Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions&text=SmartGroupCollectionGetAllOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync(Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions,System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync(Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions,System.Threading.CancellationToken)
  name: GetAllAsync(SmartGroupCollectionGetAllOptions, CancellationToken)
  fullName: Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync(SmartGroupCollectionGetAllOptions, CancellationToken)
  nameWithType: SmartGroupCollection.GetAllAsync(SmartGroupCollectionGetAllOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.AsyncPageable<Azure.ResourceManager.AlertsManagement.SmartGroupResource> GetAllAsync (Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions options, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetAllAsync : Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions * System.Threading.CancellationToken -> Azure.AsyncPageable<Azure.ResourceManager.AlertsManagement.SmartGroupResource>

        override this.GetAllAsync : Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions * System.Threading.CancellationToken -> Azure.AsyncPageable<Azure.ResourceManager.AlertsManagement.SmartGroupResource>
  - lang: vb
    values:
    - value: Public Overridable Function GetAllAsync (options As SmartGroupCollectionGetAllOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SmartGroupResource)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    List all the Smart Groups within a specified subscription. 

    <ul><li>Request Path/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups</li><li>Operation IdSmartGroups_GetAll</li></ul>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.AsyncPageable`1?alt=Azure.AsyncPageable&text=AsyncPageable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.AlertsManagement.SmartGroupResource?alt=Azure.ResourceManager.AlertsManagement.SmartGroupResource&text=SmartGroupResource" data-throw-if-not-resolved="True"/>&gt;
    description: An async collection of <xref data-throw-if-not-resolved="true" uid="Azure.ResourceManager.AlertsManagement.SmartGroupResource"></xref> that may take multiple service requests to iterate over.
  parameters:
  - namesWithMoniker:
    - value: targetResource
    description: Filter by target resource( which is full ARM ID) Default value is select all.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: targetResourceGroup
    description: Filter by target resource group name. Default value is select all.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: targetResourceType
    description: Filter by target resource type. Default value is select all.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: monitorService
    description: Filter by monitor service which generates the alert instance. Default value is select all.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert?alt=Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&text=MonitorServiceSourceForAlert" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: monitorCondition
    description: Filter by monitor condition which is either 'Fired' or 'Resolved'. Default value is to select all.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.AlertsManagement.Models.MonitorCondition?alt=Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&text=MonitorCondition" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: severity
    description: Filter by severity.  Default value is select all.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity?alt=Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&text=ServiceAlertSeverity" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: smartGroupState
    description: Filter by state of the smart group. Default value is to select all.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState?alt=Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&text=ServiceAlertState" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: timeRange
    description: Filter by time range by below listed values. Default value is 1 day.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter?alt=Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&text=TimeRangeFilter" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: pageCount
    description: Determines number of alerts returned per page in response. Permissible value is between 1 to 250. When the "includeContent"  filter is selected, maximum value allowed is 25. Default value is 25.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int64?alt=System.Int64&text=Int64" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: sortBy
    description: Sort the query results by input field. Default value is sort by 'lastModifiedDateTime'.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField?alt=Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField&text=SmartGroupsSortByField" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: sortOrder
    description: Sort the query results order in either ascending or descending.  Default value is 'desc' for time fields and 'asc' for others.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder?alt=Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder&text=AlertsManagementQuerySortOrder" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorCondition},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter},System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder},System.Threading.CancellationToken)
  commentId: M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorCondition},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter},System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder},System.Threading.CancellationToken)
  name: >-
    GetAllAsync(String, String, String, Nullable<MonitorServiceSourceForAlert>,

     Nullable<MonitorCondition>, Nullable<ServiceAlertSeverity>, Nullable<ServiceAlertState>,

     Nullable<TimeRangeFilter>, Nullable<Int64>, Nullable<SmartGroupsSortByField>,

     Nullable<AlertsManagementQuerySortOrder>, CancellationToken)
  fullName: Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync(String, String, String, Nullable<MonitorServiceSourceForAlert>, Nullable<MonitorCondition>, Nullable<ServiceAlertSeverity>, Nullable<ServiceAlertState>, Nullable<TimeRangeFilter>, Nullable<Int64>, Nullable<SmartGroupsSortByField>, Nullable<AlertsManagementQuerySortOrder>, CancellationToken)
  nameWithType: SmartGroupCollection.GetAllAsync(String, String, String, Nullable<MonitorServiceSourceForAlert>, Nullable<MonitorCondition>, Nullable<ServiceAlertSeverity>, Nullable<ServiceAlertState>, Nullable<TimeRangeFilter>, Nullable<Int64>, Nullable<SmartGroupsSortByField>, Nullable<AlertsManagementQuerySortOrder>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.AsyncPageable<Azure.ResourceManager.AlertsManagement.SmartGroupResource> GetAllAsync (string targetResource = default, string targetResourceGroup = default, string targetResourceType = default, Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert? monitorService = default, Azure.ResourceManager.AlertsManagement.Models.MonitorCondition? monitorCondition = default, Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity? severity = default, Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState? smartGroupState = default, Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter? timeRange = default, long? pageCount = default, Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField? sortBy = default, Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder? sortOrder = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetAllAsync : string * string * string * Nullable<Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert> * Nullable<Azure.ResourceManager.AlertsManagement.Models.MonitorCondition> * Nullable<Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity> * Nullable<Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState> * Nullable<Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter> * Nullable<int64> * Nullable<Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField> * Nullable<Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder> * System.Threading.CancellationToken -> Azure.AsyncPageable<Azure.ResourceManager.AlertsManagement.SmartGroupResource>

        override this.GetAllAsync : string * string * string * Nullable<Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert> * Nullable<Azure.ResourceManager.AlertsManagement.Models.MonitorCondition> * Nullable<Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity> * Nullable<Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState> * Nullable<Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter> * Nullable<int64> * Nullable<Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField> * Nullable<Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder> * System.Threading.CancellationToken -> Azure.AsyncPageable<Azure.ResourceManager.AlertsManagement.SmartGroupResource>
  - lang: vb
    values:
    - value: Public Overridable Function GetAllAsync (Optional targetResource As String = Nothing, Optional targetResourceGroup As String = Nothing, Optional targetResourceType As String = Nothing, Optional monitorService As Nullable(Of MonitorServiceSourceForAlert) = Nothing, Optional monitorCondition As Nullable(Of MonitorCondition) = Nothing, Optional severity As Nullable(Of ServiceAlertSeverity) = Nothing, Optional smartGroupState As Nullable(Of ServiceAlertState) = Nothing, Optional timeRange As Nullable(Of TimeRangeFilter) = Nothing, Optional pageCount As Nullable(Of Long) = Nothing, Optional sortBy As Nullable(Of SmartGroupsSortByField) = Nothing, Optional sortOrder As Nullable(Of AlertsManagementQuerySortOrder) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SmartGroupResource)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    List all the Smart Groups within a specified subscription.

    <ul><li>Request Path/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups</li><li>Operation IdSmartGroups_GetAll</li></ul>
  metadata: {}
uid: Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync*
commentId: Overload:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync
namespace: Azure.ResourceManager.AlertsManagement
name: GetAllAsync
fullName: Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync
nameWithType: SmartGroupCollection.GetAllAsync
assembliesWithMoniker:
- value: Azure.ResourceManager.AlertsManagement.dll
packagesWithMoniker:
- value: Azure.ResourceManager.AlertsManagement v1.0.1
  monikers:
  - azure-dotnet
- value: Azure.ResourceManager.AlertsManagement v1.1.0-beta.1
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync
  api_location:
  - Azure.ResourceManager.AlertsManagement.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync
  - Azure::ResourceManager::AlertsManagement::SmartGroupCollection::GetAllAsync
  - GetAllAsync
  - SmartGroupCollection.GetAllAsync
  - SmartGroupCollection::GetAllAsync
  helpviewer_keywords:
  - SmartGroupCollection.GetAllAsync method [.NET]
  - GetAllAsync method [.NET], class SmartGroupCollection
  - SmartGroupCollection.GetAllAsync(SmartGroupCollectionGetAllOptions, CancellationToken) method [.NET]
  - GetAllAsync(SmartGroupCollectionGetAllOptions, CancellationToken) method [.NET], class SmartGroupCollection
  - SmartGroupCollection.GetAllAsync(String, String, String, Nullable<MonitorServiceSourceForAlert>, Nullable<MonitorCondition>, Nullable<ServiceAlertSeverity>, Nullable<ServiceAlertState>, Nullable<TimeRangeFilter>, Nullable<Int64>, Nullable<SmartGroupsSortByField>, Nullable<AlertsManagementQuerySortOrder>, CancellationToken) method [.NET]
  - GetAllAsync(String, String, String, Nullable<MonitorServiceSourceForAlert>, Nullable<MonitorCondition>, Nullable<ServiceAlertSeverity>, Nullable<ServiceAlertState>, Nullable<TimeRangeFilter>, Nullable<Int64>, Nullable<SmartGroupsSortByField>, Nullable<AlertsManagementQuerySortOrder>, CancellationToken) method [.NET], class SmartGroupCollection
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
