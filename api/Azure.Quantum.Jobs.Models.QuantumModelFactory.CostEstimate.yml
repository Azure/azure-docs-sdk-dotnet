### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Quantum.Jobs.Models.CostEstimate?alt=Azure.Quantum.Jobs.Models.CostEstimate&text=CostEstimate" data-throw-if-not-resolved="True"/>
    description: A new <xref data-throw-if-not-resolved="true" uid="Azure.Quantum.Jobs.Models.CostEstimate"></xref> instance for mocking.
  parameters:
  - namesWithMoniker:
    - value: currencyCode
    description: The currency code.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: events
    description: List of usage events.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Quantum.Jobs.Models.UsageEvent?alt=Azure.Quantum.Jobs.Models.UsageEvent&text=UsageEvent" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: estimatedTotal
    description: The estimated total.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Single?alt=System.Single&text=Single" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Azure.Quantum.Jobs.Models.QuantumModelFactory.CostEstimate(System.String,System.Collections.Generic.IEnumerable{Azure.Quantum.Jobs.Models.UsageEvent},System.Nullable{System.Single})
  commentId: M:Azure.Quantum.Jobs.Models.QuantumModelFactory.CostEstimate(System.String,System.Collections.Generic.IEnumerable{Azure.Quantum.Jobs.Models.UsageEvent},System.Nullable{System.Single})
  name: CostEstimate(String, IEnumerable<UsageEvent>, Nullable<Single>)
  fullName: Azure.Quantum.Jobs.Models.QuantumModelFactory.CostEstimate(String, IEnumerable<UsageEvent>, Nullable<Single>)
  nameWithType: QuantumModelFactory.CostEstimate(String, IEnumerable<UsageEvent>, Nullable<Single>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Azure.Quantum.Jobs.Models.CostEstimate CostEstimate (string currencyCode = default, System.Collections.Generic.IEnumerable<Azure.Quantum.Jobs.Models.UsageEvent> events = default, float? estimatedTotal = default);
  - lang: fsharp
    values:
    - value: 'static member CostEstimate : string * seq<Azure.Quantum.Jobs.Models.UsageEvent> * Nullable<single> -> Azure.Quantum.Jobs.Models.CostEstimate'
  - lang: vb
    values:
    - value: Public Shared Function CostEstimate (Optional currencyCode As String = Nothing, Optional events As IEnumerable(Of UsageEvent) = Nothing, Optional estimatedTotal As Nullable(Of Single) = Nothing) As CostEstimate
  monikers:
  - azure-dotnet-preview
  summary: Initializes a new instance of CostEstimate.
  metadata: {}
uid: Azure.Quantum.Jobs.Models.QuantumModelFactory.CostEstimate*
commentId: Overload:Azure.Quantum.Jobs.Models.QuantumModelFactory.CostEstimate
namespace: Azure.Quantum.Jobs.Models
name: CostEstimate
fullName: Azure.Quantum.Jobs.Models.QuantumModelFactory.CostEstimate
nameWithType: QuantumModelFactory.CostEstimate
assembliesWithMoniker:
- value: Azure.Quantum.Jobs.dll
packagesWithMoniker:
- value: Azure.Quantum.Jobs v1.0.0-beta.3
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Quantum.Jobs.Models.QuantumModelFactory.CostEstimate
  api_location:
  - Azure.Quantum.Jobs.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Quantum.Jobs.Models.QuantumModelFactory.CostEstimate
  - Azure::Quantum::Jobs::Models::QuantumModelFactory::CostEstimate
  - CostEstimate
  - QuantumModelFactory.CostEstimate
  - QuantumModelFactory::CostEstimate
  helpviewer_keywords:
  - QuantumModelFactory.CostEstimate method [.NET]
  - CostEstimate method [.NET], class QuantumModelFactory
  - QuantumModelFactory.CostEstimate(String, IEnumerable<UsageEvent>, Nullable<Single>) method [.NET]
  - CostEstimate(String, IEnumerable<UsageEvent>, Nullable<Single>) method [.NET], class QuantumModelFactory
  monikers:
  - azure-dotnet-preview
