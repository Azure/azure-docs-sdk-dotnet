### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
    description: The total number of events that are currently buffered and waiting to be published, across all partitions.
  parameters:
  - namesWithMoniker:
    - value: events
    description: The set of events to be enqueued into the buffer and, later, published.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.EventHubs.EventData?alt=Azure.Messaging.EventHubs.EventData&text=EventData" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: Occurs when no <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync"></xref> handler is currently registered.
    type: <xref href="System.InvalidOperationException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)
  name: EnqueueEventsAsync(IEnumerable<EventData>, CancellationToken)
  fullName: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync(IEnumerable<EventData>, CancellationToken)
  nameWithType: EventHubBufferedProducerClient.EnqueueEventsAsync(IEnumerable<EventData>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<int> EnqueueEventsAsync (System.Collections.Generic.IEnumerable<Azure.Messaging.EventHubs.EventData> events, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member EnqueueEventsAsync : seq<Azure.Messaging.EventHubs.EventData> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<int>

        override this.EnqueueEventsAsync : seq<Azure.Messaging.EventHubs.EventData> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<int>
  - lang: vb
    values:
    - value: Public Overridable Function EnqueueEventsAsync (events As IEnumerable(Of EventData), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Enqueues a set of <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventData"></xref> into the buffer to be published to the Event Hub.  If there is insufficient capacity in

    the buffer when this method is invoked, it will wait for space to become available and ensure that all <code data-dev-comment-type="paramref">events</code>

    in the <code data-dev-comment-type="paramref">events</code> set have been enqueued.


    When this call returns, the <code data-dev-comment-type="paramref">events</code> have been accepted into the buffer, but it may not have been published yet.

    Publishing will take place at a nondeterministic point in the future as the buffer is processed.
  remarks: <p>Should cancellation or an unexpected exception occur, it is possible for calls to this method to result in a partial failure where some, but not all, of the <code data-dev-comment-type="paramref">events</code> have enqueued.  For scenarios where it is important to understand whether each individual event has been enqueued, it is recommended to call the see <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)"></xref> or <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)"></xref> overloads instead of this method.</p><p>Upon the first attempt to enqueue events, the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync"></xref> handlers can no longer be changed.</p>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>&gt;
    description: The total number of events that are currently buffered and waiting to be published, across all partitions.
  parameters:
  - namesWithMoniker:
    - value: events
    description: The set of events to be enqueued into the buffer and, later, published.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Messaging.EventHubs.EventData?alt=Azure.Messaging.EventHubs.EventData&text=EventData" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: options
    description: The set of options to apply when publishing these events.
    type: <xref href="Azure.Messaging.EventHubs.Producer.EnqueueEventOptions?alt=Azure.Messaging.EventHubs.Producer.EnqueueEventOptions&text=EnqueueEventOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: An optional <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> instance to signal the request to cancel the operation.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: Occurs when an invalid partition identifier has been specified in the <code data-dev-comment-type="paramref">options</code>.
    type: <xref href="System.InvalidOperationException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)
  name: EnqueueEventsAsync(IEnumerable<EventData>, EnqueueEventOptions, CancellationToken)
  fullName: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync(IEnumerable<EventData>, EnqueueEventOptions, CancellationToken)
  nameWithType: EventHubBufferedProducerClient.EnqueueEventsAsync(IEnumerable<EventData>, EnqueueEventOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<int> EnqueueEventsAsync (System.Collections.Generic.IEnumerable<Azure.Messaging.EventHubs.EventData> events, Azure.Messaging.EventHubs.Producer.EnqueueEventOptions options, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member EnqueueEventsAsync : seq<Azure.Messaging.EventHubs.EventData> * Azure.Messaging.EventHubs.Producer.EnqueueEventOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<int>

        override this.EnqueueEventsAsync : seq<Azure.Messaging.EventHubs.EventData> * Azure.Messaging.EventHubs.Producer.EnqueueEventOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<int>
  - lang: vb
    values:
    - value: Public Overridable Function EnqueueEventsAsync (events As IEnumerable(Of EventData), options As EnqueueEventOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
  summary: >-
    Enqueues a set of <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.EventData"></xref> into the buffer to be published to the Event Hub.  If there is insufficient capacity in

    the buffer when this method is invoked, it will wait for space to become available and ensure that all <code data-dev-comment-type="paramref">events</code>

    in the <code data-dev-comment-type="paramref">events</code> set have been enqueued.


    When this call returns, the <code data-dev-comment-type="paramref">events</code> have been accepted into the buffer, but it may not have been published yet.

    Publishing will take place at a nondeterministic point in the future as the buffer is processed.
  remarks: <p>Should cancellation or an unexpected exception occur, it is possible for calls to this method to result in a partial failure where some, but not all, of the <code data-dev-comment-type="paramref">events</code> have enqueued.  For scenarios where it is important to understand whether each individual event has been enqueued, it is recommended to call the see <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)"></xref> or <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)"></xref> overloads instead of this method.</p><p>Upon the first attempt to enqueue events, the <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync"></xref> and <xref data-throw-if-not-resolved="true" uid="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync"></xref> handlers can no longer be changed.</p>
  metadata: {}
uid: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync*
commentId: Overload:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync
namespace: Azure.Messaging.EventHubs.Producer
name: EnqueueEventsAsync
fullName: Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync
nameWithType: EventHubBufferedProducerClient.EnqueueEventsAsync
assembliesWithMoniker:
- value: Azure.Messaging.EventHubs.dll
packagesWithMoniker:
- value: Azure.Messaging.EventHubs v5.9.2
  monikers:
  - azure-dotnet
- value: Azure.Messaging.EventHubs v5.7.0-beta.5
  monikers:
  - azure-dotnet-preview
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync
  api_location:
  - Azure.Messaging.EventHubs.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync
  - Azure::Messaging::EventHubs::Producer::EventHubBufferedProducerClient::EnqueueEventsAsync
  - EnqueueEventsAsync
  - EventHubBufferedProducerClient.EnqueueEventsAsync
  - EventHubBufferedProducerClient::EnqueueEventsAsync
  helpviewer_keywords:
  - EventHubBufferedProducerClient.EnqueueEventsAsync method [.NET]
  - EnqueueEventsAsync method [.NET], class EventHubBufferedProducerClient
  - EventHubBufferedProducerClient.EnqueueEventsAsync(IEnumerable<EventData>, CancellationToken) method [.NET]
  - EnqueueEventsAsync(IEnumerable<EventData>, CancellationToken) method [.NET], class EventHubBufferedProducerClient
  - EventHubBufferedProducerClient.EnqueueEventsAsync(IEnumerable<EventData>, EnqueueEventOptions, CancellationToken) method [.NET]
  - EnqueueEventsAsync(IEnumerable<EventData>, EnqueueEventOptions, CancellationToken) method [.NET], class EventHubBufferedProducerClient
  monikers:
  - azure-dotnet
  - azure-dotnet-preview
