### YamlMime:NetType
type: class
inheritancesWithMoniker:
- values:
  - <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
constructors:
- uid: Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration.#ctor
  monikers:
  - azure-dotnet
properties:
- uid: Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration.Description
  monikers:
  - azure-dotnet
- uid: Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration.Id
  monikers:
  - azure-dotnet
- uid: Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration.MetricId
  monikers:
  - azure-dotnet
- uid: Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration.Name
  monikers:
  - azure-dotnet
- uid: Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration.SeriesDetectionConditions
  monikers:
  - azure-dotnet
- uid: Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration.SeriesGroupDetectionConditions
  monikers:
  - azure-dotnet
- uid: Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration.WholeSeriesDetectionConditions
  monikers:
  - azure-dotnet
uid: Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration
commentId: T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration
namespace: Azure.AI.MetricsAdvisor.Models
name: AnomalyDetectionConfiguration
fullName: Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration
nameWithType: Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration
assembliesWithMoniker:
- value: Azure.AI.MetricsAdvisor.dll
packagesWithMoniker:
- value: Azure.AI.MetricsAdvisor v1.1.0
syntaxWithMoniker:
- lang: csharp
  values:
  - value: public class AnomalyDetectionConfiguration
- lang: fsharp
  values:
  - value: type AnomalyDetectionConfiguration = class
- lang: vb
  values:
  - value: Public Class AnomalyDetectionConfiguration
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet
summary: The AnomalyDetectionConfiguration.
remarks: <p>In order to create an anomaly detection configuration, you must set up at least the properties <xref data-throw-if-not-resolved="true" uid="Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration.Name"></xref>, <xref data-throw-if-not-resolved="true" uid="Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration.MetricId"></xref>, and <xref data-throw-if-not-resolved="true" uid="Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration.WholeSeriesDetectionConditions"></xref>, and pass this instance to the method <xref data-throw-if-not-resolved="true" uid="Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.CreateDetectionConfigurationAsync(Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration,System.Threading.CancellationToken)"></xref>. Note that a detection configuration only detects anomalies, and is not responsible for triggering alerts. If you want alerts to be triggered, you need to create an <xref data-throw-if-not-resolved="true" uid="Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration"></xref>.</p>
metadata:
  api_name:
  - Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration
  api_location:
  - Azure.AI.MetricsAdvisor.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration
  - Azure::AI::MetricsAdvisor::Models::AnomalyDetectionConfiguration
  - AnomalyDetectionConfiguration
  helpviewer_keywords:
  - Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration class [.NET]
  monikers:
  - azure-dotnet
