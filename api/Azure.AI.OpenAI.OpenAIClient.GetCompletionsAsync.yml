### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.OpenAI.Completions?alt=Azure.AI.OpenAI.Completions&text=Completions" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: deploymentOrModelName
    description: >-
      Specifies either the model deployment name (when using Azure OpenAI) or model name (when using

      non-Azure OpenAI) to use for this request.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: completionsOptions
    description: The options for this completions request.
    type: <xref href="Azure.AI.OpenAI.CompletionsOptions?alt=Azure.AI.OpenAI.CompletionsOptions&text=CompletionsOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">deploymentId</code> is an empty string, and was expected to be non-empty.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <code data-dev-comment-type="paramref">deploymentOrModelName</code> or <code data-dev-comment-type="paramref">completionsOptions</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync(System.String,Azure.AI.OpenAI.CompletionsOptions,System.Threading.CancellationToken)
  commentId: M:Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync(System.String,Azure.AI.OpenAI.CompletionsOptions,System.Threading.CancellationToken)
  name: GetCompletionsAsync(String, CompletionsOptions, CancellationToken)
  fullName: Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync(String, CompletionsOptions, CancellationToken)
  nameWithType: OpenAIClient.GetCompletionsAsync(String, CompletionsOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.AI.OpenAI.Completions>> GetCompletionsAsync (string deploymentOrModelName, Azure.AI.OpenAI.CompletionsOptions completionsOptions, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetCompletionsAsync : string * Azure.AI.OpenAI.CompletionsOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.OpenAI.Completions>>

        override this.GetCompletionsAsync : string * Azure.AI.OpenAI.CompletionsOptions * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.OpenAI.Completions>>
  - lang: vb
    values:
    - value: Public Overridable Function GetCompletionsAsync (deploymentOrModelName As String, completionsOptions As CompletionsOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Completions))
  monikers:
  - azure-dotnet-preview
  summary: Return textual completions as configured for a given prompt.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.AI.OpenAI.Completions?alt=Azure.AI.OpenAI.Completions&text=Completions" data-throw-if-not-resolved="True"/>&gt;&gt;
  parameters:
  - namesWithMoniker:
    - value: deploymentOrModelName
    description: >-
      Specifies either the model deployment name (when using Azure OpenAI) or model name (when using

      non-Azure OpenAI) to use for this request.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: prompt
    description: Input string prompt to create a prompt completion from a deployment.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: <code data-dev-comment-type="paramref">deploymentOrModelName</code> or <code data-dev-comment-type="paramref">completionsOptions</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync(System.String,System.String,System.Threading.CancellationToken)
  name: GetCompletionsAsync(String, String, CancellationToken)
  fullName: Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync(String, String, CancellationToken)
  nameWithType: OpenAIClient.GetCompletionsAsync(String, String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual System.Threading.Tasks.Task<Azure.Response<Azure.AI.OpenAI.Completions>> GetCompletionsAsync (string deploymentOrModelName, string prompt, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetCompletionsAsync : string * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.OpenAI.Completions>>

        override this.GetCompletionsAsync : string * string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Azure.Response<Azure.AI.OpenAI.Completions>>
  - lang: vb
    values:
    - value: Public Overridable Function GetCompletionsAsync (deploymentOrModelName As String, prompt As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Completions))
  monikers:
  - azure-dotnet-preview
  summary: Return textual completions as configured for a given prompt.
  metadata: {}
uid: Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync*
commentId: Overload:Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync
namespace: Azure.AI.OpenAI
name: GetCompletionsAsync
fullName: Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync
nameWithType: OpenAIClient.GetCompletionsAsync
assembliesWithMoniker:
- value: Azure.AI.OpenAI.dll
packagesWithMoniker:
- value: Azure.AI.OpenAI v1.0.0-beta.6
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync
  api_location:
  - Azure.AI.OpenAI.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync
  - Azure::AI::OpenAI::OpenAIClient::GetCompletionsAsync
  - GetCompletionsAsync
  - OpenAIClient.GetCompletionsAsync
  - OpenAIClient::GetCompletionsAsync
  helpviewer_keywords:
  - OpenAIClient.GetCompletionsAsync method [.NET]
  - GetCompletionsAsync method [.NET], class OpenAIClient
  - OpenAIClient.GetCompletionsAsync(String, CompletionsOptions, CancellationToken) method [.NET]
  - GetCompletionsAsync(String, CompletionsOptions, CancellationToken) method [.NET], class OpenAIClient
  - OpenAIClient.GetCompletionsAsync(String, String, CancellationToken) method [.NET]
  - GetCompletionsAsync(String, String, CancellationToken) method [.NET], class OpenAIClient
  monikers:
  - azure-dotnet-preview
