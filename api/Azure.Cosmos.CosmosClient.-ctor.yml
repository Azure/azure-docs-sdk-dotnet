### YamlMime:NetMember
type: constructor
members:
- type: constructor
  uid: Azure.Cosmos.CosmosClient.#ctor
  commentId: M:Azure.Cosmos.CosmosClient.#ctor
  name: CosmosClient()
  fullName: Azure.Cosmos.CosmosClient.CosmosClient()
  nameWithType: CosmosClient.CosmosClient()
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: protected CosmosClient ();
  - lang: vb
    values:
    - value: Protected Sub New ()
  monikers:
  - azure-dotnet-preview
  summary: Create a new CosmosClient used for mock testing
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: connectionString
    description: 'The connection string to the cosmos account. ex: https://mycosmosaccount.documents.azure.com:443/;AccountKey=SuperSecretKey;'
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: (Optional) client options
    type: <xref href="Azure.Cosmos.CosmosClientOptions?alt=Azure.Cosmos.CosmosClientOptions&text=CosmosClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Cosmos.CosmosClient.#ctor(System.String,Azure.Cosmos.CosmosClientOptions)
  commentId: M:Azure.Cosmos.CosmosClient.#ctor(System.String,Azure.Cosmos.CosmosClientOptions)
  name: CosmosClient(String, CosmosClientOptions)
  fullName: Azure.Cosmos.CosmosClient.CosmosClient(String, CosmosClientOptions)
  nameWithType: CosmosClient.CosmosClient(String, CosmosClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public CosmosClient (string connectionString, Azure.Cosmos.CosmosClientOptions clientOptions = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Cosmos.CosmosClient : string * Azure.Cosmos.CosmosClientOptions -> Azure.Cosmos.CosmosClient'
  - lang: vb
    values:
    - value: Public Sub New (connectionString As String, Optional clientOptions As CosmosClientOptions = Nothing)
  monikers:
  - azure-dotnet-preview
  summary: >-
    Create a new CosmosClient with the connection string


    CosmosClient is thread-safe. Its recommended to maintain a single instance of CosmosClient per lifetime 

    of the application which enables efficient connection management and performance. Please refer to 

    performance guide at <a href="https://docs.microsoft.com/azure/cosmos-db/performance-tips">https://docs.microsoft.com/azure/cosmos-db/performance-tips</a>.
  remarks: <p><seealso cref="T:Azure.Cosmos.CosmosClientOptions"></seealso> <seealso cref="T:Azure.Cosmos.Fluent.CosmosClientBuilder"></seealso> <a href="https://docs.microsoft.com/azure/cosmos-db/performance-tips">https://docs.microsoft.com/azure/cosmos-db/performance-tips</a> <a href="https://docs.microsoft.com/azure/cosmos-db/troubleshoot-dot-net-sdk">https://docs.microsoft.com/azure/cosmos-db/troubleshoot-dot-net-sdk</a></p>
  examples: >-
    The CosmosClient is created with the connection string and configured to use "East US 2" region.


    ```csharp

    using Microsoft.Azure.Cosmos;


    CosmosClient cosmosClient = new CosmosClient(
                "account-endpoint-from-portal", 
                "account-key-from-portal", 
                new CosmosClientOptions()
                {
                    ApplicationRegion = Regions.EastUS2,
                });

    // Dispose cosmosClient at application exit

    ```
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: accountEndpoint
    description: The cosmos service endpoint to use
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: authKeyOrResourceToken
    description: The cosmos account key or resource token to use to create the client.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientOptions
    description: (Optional) client options
    type: <xref href="Azure.Cosmos.CosmosClientOptions?alt=Azure.Cosmos.CosmosClientOptions&text=CosmosClientOptions" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Azure.Cosmos.CosmosClient.#ctor(System.String,System.String,Azure.Cosmos.CosmosClientOptions)
  commentId: M:Azure.Cosmos.CosmosClient.#ctor(System.String,System.String,Azure.Cosmos.CosmosClientOptions)
  name: CosmosClient(String, String, CosmosClientOptions)
  fullName: Azure.Cosmos.CosmosClient.CosmosClient(String, String, CosmosClientOptions)
  nameWithType: CosmosClient.CosmosClient(String, String, CosmosClientOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public CosmosClient (string accountEndpoint, string authKeyOrResourceToken, Azure.Cosmos.CosmosClientOptions clientOptions = default);
  - lang: fsharp
    values:
    - value: 'new Azure.Cosmos.CosmosClient : string * string * Azure.Cosmos.CosmosClientOptions -> Azure.Cosmos.CosmosClient'
  - lang: vb
    values:
    - value: Public Sub New (accountEndpoint As String, authKeyOrResourceToken As String, Optional clientOptions As CosmosClientOptions = Nothing)
  monikers:
  - azure-dotnet-preview
  summary: >-
    Create a new CosmosClient with the account endpoint URI string and account key


    CosmosClient is thread-safe. Its recommended to maintain a single instance of CosmosClient per lifetime 

    of the application which enables efficient connection management and performance. Please refer to 

    performance guide at <a href="https://docs.microsoft.com/azure/cosmos-db/performance-tips">https://docs.microsoft.com/azure/cosmos-db/performance-tips</a>.
  remarks: <p><seealso cref="T:Azure.Cosmos.CosmosClientOptions"></seealso> <seealso cref="T:Azure.Cosmos.Fluent.CosmosClientBuilder"></seealso> <a href="https://docs.microsoft.com/azure/cosmos-db/performance-tips">https://docs.microsoft.com/azure/cosmos-db/performance-tips</a> <a href="https://docs.microsoft.com/azure/cosmos-db/troubleshoot-dot-net-sdk">https://docs.microsoft.com/azure/cosmos-db/troubleshoot-dot-net-sdk</a></p>
  examples: >-
    The CosmosClient is created with the AccountEndpoint, AccountKey or ResourceToken and configured to use "East US 2" region.


    ```csharp

    using Microsoft.Azure.Cosmos;


    CosmosClient cosmosClient = new CosmosClient(
                "account-endpoint-from-portal", 
                "account-key-from-portal", 
                new CosmosClientOptions()
                {
                    ApplicationRegion = Regions.EastUS2,
                });

    // Dispose cosmosClient at application exit

    ```
  metadata: {}
uid: Azure.Cosmos.CosmosClient.#ctor*
commentId: Overload:Azure.Cosmos.CosmosClient.#ctor
namespace: Azure.Cosmos
name: CosmosClient
fullName: Azure.Cosmos.CosmosClient.CosmosClient
nameWithType: CosmosClient.CosmosClient
assembliesWithMoniker:
- value: Azure.Cosmos.dll
packagesWithMoniker:
- value: Azure.Cosmos v4.0.0-preview3
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Cosmos.CosmosClient..ctor
  api_location:
  - Azure.Cosmos.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Cosmos.CosmosClient.#ctor
  - Azure::Cosmos::CosmosClient::#ctor
  - '#ctor'
  - CosmosClient.#ctor
  - CosmosClient::#ctor
  helpviewer_keywords:
  - CosmosClient class [.NET], constructors
  - CosmosClient() class [.NET], constructors
  - CosmosClient(String, CosmosClientOptions) class [.NET], constructors
  - CosmosClient(String, String, CosmosClientOptions) class [.NET], constructors
  monikers:
  - azure-dotnet-preview
