### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Maps.Search.Models.SearchAddressResult?alt=Azure.Maps.Search.Models.SearchAddressResult&text=SearchAddressResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: query
    description: The POI name to search for (e.g., "statue of liberty", "starbucks"), must be properly URL encoded.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: geometryCollection
    description: This represents the geometry for one or more geographical features (parks, state boundary etc.) to search in and should be a GeoJSON compliant type. Please refer to <a href="https://tools.ietf.org/html/rfc7946">RFC 7946</a> for details.
    type: <xref href="Azure.Core.GeoJson.GeoCollection?alt=Azure.Core.GeoJson.GeoCollection&text=GeoCollection" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: additional options
    type: <xref href="Azure.Maps.Search.SearchInsideGeometryOptions?alt=Azure.Maps.Search.SearchInsideGeometryOptions&text=SearchInsideGeometryOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Maps.Search.MapsSearchClient.SearchInsideGeometry(System.String,Azure.Core.GeoJson.GeoCollection,Azure.Maps.Search.SearchInsideGeometryOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Maps.Search.MapsSearchClient.SearchInsideGeometry(System.String,Azure.Core.GeoJson.GeoCollection,Azure.Maps.Search.SearchInsideGeometryOptions,System.Threading.CancellationToken)
  name: SearchInsideGeometry(String, GeoCollection, SearchInsideGeometryOptions, CancellationToken)
  fullName: Azure.Maps.Search.MapsSearchClient.SearchInsideGeometry(String, GeoCollection, SearchInsideGeometryOptions, CancellationToken)
  nameWithType: MapsSearchClient.SearchInsideGeometry(String, GeoCollection, SearchInsideGeometryOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response<Azure.Maps.Search.Models.SearchAddressResult> SearchInsideGeometry (string query, Azure.Core.GeoJson.GeoCollection geometryCollection, Azure.Maps.Search.SearchInsideGeometryOptions options = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SearchInsideGeometry : string * Azure.Core.GeoJson.GeoCollection * Azure.Maps.Search.SearchInsideGeometryOptions * System.Threading.CancellationToken -> Azure.Response<Azure.Maps.Search.Models.SearchAddressResult>

        override this.SearchInsideGeometry : string * Azure.Core.GeoJson.GeoCollection * Azure.Maps.Search.SearchInsideGeometryOptions * System.Threading.CancellationToken -> Azure.Response<Azure.Maps.Search.Models.SearchAddressResult>
  - lang: vb
    values:
    - value: Public Overridable Function SearchInsideGeometry (query As String, geometryCollection As GeoCollection, Optional options As SearchInsideGeometryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SearchAddressResult)
  monikers:
  - azure-dotnet-preview
  summary: Search inside geometry. The Search Geometry endpoint allows you to perform a free form search inside a single geometry or many of them. The search results that fall inside the geometry/geometries will be returned.&lt;br&gt;&lt;br&gt;To send the geometry you will use a `POST` request where the request body will contain the `geometry` object represented as a `GeoJSON` type and the `Content-Type` header will be set to `application/json`. The geographical features to be searched can be modeled as Polygon and/or Circle geometries represented using any one of the following `GeoJSON` types:&lt;ul&gt;&lt;li&gt;**GeoJSON FeatureCollection** &lt;br&gt;The `geometry` can be represented as a `GeoJSON FeatureCollection` object. This is the recommended option if the geometry contains both Polygons and Circles. The `FeatureCollection` can contain a max of 50 `GeoJSON Feature` objects. Each `Feature` object should represent either a Polygon or a Circle with the following conditions:&lt;ul style="list-style-type:none"&gt;&lt;li&gt;A `Feature` object for the Polygon geometry can have a max of 50 coordinates and it's properties must be empty.&lt;/li&gt;&lt;li&gt;A `Feature` object for the Circle geometry is composed of a _center_ represented using a `GeoJSON Point` type and a _radius_ value (in meters) which must be specified in the object's properties along with the _subType_ property whose value should be 'Circle'.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt; Please see the Examples section below for a sample `FeatureCollection` representation.&lt;br&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;**GeoJSON GeometryCollection**&lt;br&gt;The `geometry` can be represented as a `GeoJSON GeometryCollection` object. This is the recommended option if the geometry contains a list of Polygons only. The `GeometryCollection` can contain a max of 50 `GeoJSON Polygon` objects. Each `Polygon` object can have a max of 50 coordinates. Please see the Examples section below for a sample `GeometryCollection` representation.&lt;br&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;**GeoJSON Polygon**&lt;br&gt;The `geometry` can be represented as a `GeoJSON Polygon` object. This is the recommended option if the geometry contains a single Polygon. The `Polygon` object can have a max of 50 coordinates. Please see the Examples section below for a sample `Polygon` representation.&lt;br&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;.&lt;br&gt;&lt;br&gt;
  remarks: '**Search Inside Geometry**'
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Azure.Response`1?alt=Azure.Response&text=Response" data-throw-if-not-resolved="True"/>&lt;<xref href="Azure.Maps.Search.Models.SearchAddressResult?alt=Azure.Maps.Search.Models.SearchAddressResult&text=SearchAddressResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: query
    description: The POI name to search for (e.g., "statue of liberty", "starbucks"), must be properly URL encoded.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: geometry
    description: This represents the geometry for one or more geographical features (parks, state boundary etc.) to search in and should be a GeoJSON compliant type. Please refer to <a href="https://tools.ietf.org/html/rfc7946">RFC 7946</a> for details.
    type: <xref href="Azure.Core.GeoJson.GeoObject?alt=Azure.Core.GeoJson.GeoObject&text=GeoObject" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: additional options
    type: <xref href="Azure.Maps.Search.SearchInsideGeometryOptions?alt=Azure.Maps.Search.SearchInsideGeometryOptions&text=SearchInsideGeometryOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: The cancellation token to use.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Azure.Maps.Search.MapsSearchClient.SearchInsideGeometry(System.String,Azure.Core.GeoJson.GeoObject,Azure.Maps.Search.SearchInsideGeometryOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Maps.Search.MapsSearchClient.SearchInsideGeometry(System.String,Azure.Core.GeoJson.GeoObject,Azure.Maps.Search.SearchInsideGeometryOptions,System.Threading.CancellationToken)
  name: SearchInsideGeometry(String, GeoObject, SearchInsideGeometryOptions, CancellationToken)
  fullName: Azure.Maps.Search.MapsSearchClient.SearchInsideGeometry(String, GeoObject, SearchInsideGeometryOptions, CancellationToken)
  nameWithType: MapsSearchClient.SearchInsideGeometry(String, GeoObject, SearchInsideGeometryOptions, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Azure.Response<Azure.Maps.Search.Models.SearchAddressResult> SearchInsideGeometry (string query, Azure.Core.GeoJson.GeoObject geometry, Azure.Maps.Search.SearchInsideGeometryOptions options = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member SearchInsideGeometry : string * Azure.Core.GeoJson.GeoObject * Azure.Maps.Search.SearchInsideGeometryOptions * System.Threading.CancellationToken -> Azure.Response<Azure.Maps.Search.Models.SearchAddressResult>

        override this.SearchInsideGeometry : string * Azure.Core.GeoJson.GeoObject * Azure.Maps.Search.SearchInsideGeometryOptions * System.Threading.CancellationToken -> Azure.Response<Azure.Maps.Search.Models.SearchAddressResult>
  - lang: vb
    values:
    - value: Public Overridable Function SearchInsideGeometry (query As String, geometry As GeoObject, Optional options As SearchInsideGeometryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SearchAddressResult)
  monikers:
  - azure-dotnet-preview
  summary: Search inside geometry. The Search Geometry endpoint allows you to perform a free form search inside a single geometry or many of them. The search results that fall inside the geometry/geometries will be returned.&lt;br&gt;&lt;br&gt;To send the geometry you will use a `POST` request where the request body will contain the `geometry` object represented as a `GeoJSON` type and the `Content-Type` header will be set to `application/json`. The geographical features to be searched can be modeled as Polygon and/or Circle geometries represented using any one of the following `GeoJSON` types:&lt;ul&gt;&lt;li&gt;**GeoJSON FeatureCollection** &lt;br&gt;The `geometry` can be represented as a `GeoJSON FeatureCollection` object. This is the recommended option if the geometry contains both Polygons and Circles. The `FeatureCollection` can contain a max of 50 `GeoJSON Feature` objects. Each `Feature` object should represent either a Polygon or a Circle with the following conditions:&lt;ul style="list-style-type:none"&gt;&lt;li&gt;A `Feature` object for the Polygon geometry can have a max of 50 coordinates and it's properties must be empty.&lt;/li&gt;&lt;li&gt;A `Feature` object for the Circle geometry is composed of a _center_ represented using a `GeoJSON Point` type and a _radius_ value (in meters) which must be specified in the object's properties along with the _subType_ property whose value should be 'Circle'.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt; Please see the Examples section below for a sample `FeatureCollection` representation.&lt;br&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;**GeoJSON GeometryCollection**&lt;br&gt;The `geometry` can be represented as a `GeoJSON GeometryCollection` object. This is the recommended option if the geometry contains a list of Polygons only. The `GeometryCollection` can contain a max of 50 `GeoJSON Polygon` objects. Each `Polygon` object can have a max of 50 coordinates. Please see the Examples section below for a sample `GeometryCollection` representation.&lt;br&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;**GeoJSON Polygon**&lt;br&gt;The `geometry` can be represented as a `GeoJSON Polygon` object. This is the recommended option if the geometry contains a single Polygon. The `Polygon` object can have a max of 50 coordinates. Please see the Examples section below for a sample `Polygon` representation.&lt;br&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;.&lt;br&gt;&lt;br&gt;
  remarks: '**Search Inside Geometry**'
  metadata: {}
uid: Azure.Maps.Search.MapsSearchClient.SearchInsideGeometry*
commentId: Overload:Azure.Maps.Search.MapsSearchClient.SearchInsideGeometry
namespace: Azure.Maps.Search
name: SearchInsideGeometry
fullName: Azure.Maps.Search.MapsSearchClient.SearchInsideGeometry
nameWithType: MapsSearchClient.SearchInsideGeometry
assembliesWithMoniker:
- value: Azure.Maps.Search.dll
packagesWithMoniker:
- value: Azure.Maps.Search v1.0.0-beta.4
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Maps.Search.MapsSearchClient.SearchInsideGeometry
  api_location:
  - Azure.Maps.Search.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Maps.Search.MapsSearchClient.SearchInsideGeometry
  - Azure::Maps::Search::MapsSearchClient::SearchInsideGeometry
  - SearchInsideGeometry
  - MapsSearchClient.SearchInsideGeometry
  - MapsSearchClient::SearchInsideGeometry
  helpviewer_keywords:
  - MapsSearchClient.SearchInsideGeometry method [.NET]
  - SearchInsideGeometry method [.NET], class MapsSearchClient
  - MapsSearchClient.SearchInsideGeometry(String, GeoCollection, SearchInsideGeometryOptions, CancellationToken) method [.NET]
  - SearchInsideGeometry(String, GeoCollection, SearchInsideGeometryOptions, CancellationToken) method [.NET], class MapsSearchClient
  - MapsSearchClient.SearchInsideGeometry(String, GeoObject, SearchInsideGeometryOptions, CancellationToken) method [.NET]
  - SearchInsideGeometry(String, GeoObject, SearchInsideGeometryOptions, CancellationToken) method [.NET], class MapsSearchClient
  monikers:
  - azure-dotnet-preview
