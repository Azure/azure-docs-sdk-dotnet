### YamlMime:NetMember
type: operator
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: left
    type: <xref href="Azure.Maps.Search.Models.SearchAddressResultType?alt=Azure.Maps.Search.Models.SearchAddressResultType&text=SearchAddressResultType" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: right
    type: <xref href="Azure.Maps.Search.Models.SearchAddressResultType?alt=Azure.Maps.Search.Models.SearchAddressResultType&text=SearchAddressResultType" data-throw-if-not-resolved="True"/>
  type: operator
  uid: Azure.Maps.Search.Models.SearchAddressResultType.op_Inequality(Azure.Maps.Search.Models.SearchAddressResultType,Azure.Maps.Search.Models.SearchAddressResultType)
  commentId: M:Azure.Maps.Search.Models.SearchAddressResultType.op_Inequality(Azure.Maps.Search.Models.SearchAddressResultType,Azure.Maps.Search.Models.SearchAddressResultType)
  name: Inequality(SearchAddressResultType, SearchAddressResultType)
  fullName: Azure.Maps.Search.Models.SearchAddressResultType.Inequality(SearchAddressResultType, SearchAddressResultType)
  nameWithType: SearchAddressResultType.Inequality(SearchAddressResultType, SearchAddressResultType)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static bool operator != (Azure.Maps.Search.Models.SearchAddressResultType left, Azure.Maps.Search.Models.SearchAddressResultType right);
  - lang: fsharp
    values:
    - value: 'static member op_Inequality : Azure.Maps.Search.Models.SearchAddressResultType * Azure.Maps.Search.Models.SearchAddressResultType -> bool'
  - lang: vb
    values:
    - value: Public Shared Operator != (left As SearchAddressResultType, right As SearchAddressResultType) As Boolean
  monikers:
  - azure-dotnet-preview
  summary: Determines if two <xref data-throw-if-not-resolved="true" uid="Azure.Maps.Search.Models.SearchAddressResultType"></xref> values are not the same.
  metadata: {}
uid: Azure.Maps.Search.Models.SearchAddressResultType.op_Inequality*
commentId: Overload:Azure.Maps.Search.Models.SearchAddressResultType.op_Inequality
namespace: Azure.Maps.Search.Models
name: Inequality
fullName: Azure.Maps.Search.Models.SearchAddressResultType.Inequality
nameWithType: SearchAddressResultType.Inequality
assembliesWithMoniker:
- value: Azure.Maps.Search.dll
packagesWithMoniker:
- value: Azure.Maps.Search v1.0.0-beta.4
devLangs:
- csharp
- vb
- fsharp
monikers:
- azure-dotnet-preview
metadata:
  api_name:
  - Azure.Maps.Search.Models.SearchAddressResultType.Inequality
  - Azure.Maps.Search.Models.SearchAddressResultType.op_Inequality
  api_location:
  - Azure.Maps.Search.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Azure.Maps.Search.Models.SearchAddressResultType.op_Inequality
  - Azure::Maps::Search::Models::SearchAddressResultType::op_Inequality
  - op_Inequality
  - SearchAddressResultType.op_Inequality
  - SearchAddressResultType::op_Inequality
  helpviewer_keywords:
  - SearchAddressResultType.Inequality operator [.NET]
  - Inequality operator [.NET], struct SearchAddressResultType
  - SearchAddressResultType.Inequality(SearchAddressResultType, SearchAddressResultType) operator [.NET]
  - Inequality(SearchAddressResultType, SearchAddressResultType) operator [.NET], struct SearchAddressResultType
  monikers:
  - azure-dotnet-preview
